var CLOSURE_NO_DEPS = true;
var COMPILED = false;
var goog = goog || {};
goog.global = this;
goog.DEBUG = true;
goog.LOCALE = "en";
goog.TRUSTED_SITE = true;
goog.provide = function(name) {
  if(!COMPILED) {
    if(goog.isProvided_(name)) {
      throw Error('Namespace "' + name + '" already declared.');
    }
    delete goog.implicitNamespaces_[name];
    var namespace = name;
    while(namespace = namespace.substring(0, namespace.lastIndexOf("."))) {
      if(goog.getObjectByName(namespace)) {
        break
      }
      goog.implicitNamespaces_[namespace] = true
    }
  }
  goog.exportPath_(name)
};
goog.setTestOnly = function(opt_message) {
  if(COMPILED && !goog.DEBUG) {
    opt_message = opt_message || "";
    throw Error("Importing test-only code into non-debug environment" + opt_message ? ": " + opt_message : ".");
  }
};
if(!COMPILED) {
  goog.isProvided_ = function(name) {
    return!goog.implicitNamespaces_[name] && !!goog.getObjectByName(name)
  };
  goog.implicitNamespaces_ = {}
}
goog.exportPath_ = function(name, opt_object, opt_objectToExportTo) {
  var parts = name.split(".");
  var cur = opt_objectToExportTo || goog.global;
  if(!(parts[0] in cur) && cur.execScript) {
    cur.execScript("var " + parts[0])
  }
  for(var part;parts.length && (part = parts.shift());) {
    if(!parts.length && goog.isDef(opt_object)) {
      cur[part] = opt_object
    }else {
      if(cur[part]) {
        cur = cur[part]
      }else {
        cur = cur[part] = {}
      }
    }
  }
};
goog.getObjectByName = function(name, opt_obj) {
  var parts = name.split(".");
  var cur = opt_obj || goog.global;
  for(var part;part = parts.shift();) {
    if(goog.isDefAndNotNull(cur[part])) {
      cur = cur[part]
    }else {
      return null
    }
  }
  return cur
};
goog.globalize = function(obj, opt_global) {
  var global = opt_global || goog.global;
  for(var x in obj) {
    global[x] = obj[x]
  }
};
goog.addDependency = function(relPath, provides, requires) {
  if(!COMPILED) {
    var provide, require;
    var path = relPath.replace(/\\/g, "/");
    var deps = goog.dependencies_;
    for(var i = 0;provide = provides[i];i++) {
      deps.nameToPath[provide] = path;
      if(!(path in deps.pathToNames)) {
        deps.pathToNames[path] = {}
      }
      deps.pathToNames[path][provide] = true
    }
    for(var j = 0;require = requires[j];j++) {
      if(!(path in deps.requires)) {
        deps.requires[path] = {}
      }
      deps.requires[path][require] = true
    }
  }
};
goog.ENABLE_DEBUG_LOADER = true;
goog.require = function(name) {
  if(!COMPILED) {
    if(goog.isProvided_(name)) {
      return
    }
    if(goog.ENABLE_DEBUG_LOADER) {
      var path = goog.getPathFromDeps_(name);
      if(path) {
        goog.included_[path] = true;
        goog.writeScripts_();
        return
      }
    }
    var errorMessage = "goog.require could not find: " + name;
    if(goog.global.console) {
      goog.global.console["error"](errorMessage)
    }
    throw Error(errorMessage);
  }
};
goog.basePath = "";
goog.global.CLOSURE_BASE_PATH;
goog.global.CLOSURE_NO_DEPS;
goog.global.CLOSURE_IMPORT_SCRIPT;
goog.nullFunction = function() {
};
goog.identityFunction = function(opt_returnValue, var_args) {
  return opt_returnValue
};
goog.abstractMethod = function() {
  throw Error("unimplemented abstract method");
};
goog.addSingletonGetter = function(ctor) {
  ctor.getInstance = function() {
    if(ctor.instance_) {
      return ctor.instance_
    }
    if(goog.DEBUG) {
      goog.instantiatedSingletons_[goog.instantiatedSingletons_.length] = ctor
    }
    return ctor.instance_ = new ctor
  }
};
goog.instantiatedSingletons_ = [];
if(!COMPILED && goog.ENABLE_DEBUG_LOADER) {
  goog.included_ = {};
  goog.dependencies_ = {pathToNames:{}, nameToPath:{}, requires:{}, visited:{}, written:{}};
  goog.inHtmlDocument_ = function() {
    var doc = goog.global.document;
    return typeof doc != "undefined" && "write" in doc
  };
  goog.findBasePath_ = function() {
    if(goog.global.CLOSURE_BASE_PATH) {
      goog.basePath = goog.global.CLOSURE_BASE_PATH;
      return
    }else {
      if(!goog.inHtmlDocument_()) {
        return
      }
    }
    var doc = goog.global.document;
    var scripts = doc.getElementsByTagName("script");
    for(var i = scripts.length - 1;i >= 0;--i) {
      var src = scripts[i].src;
      var qmark = src.lastIndexOf("?");
      var l = qmark == -1 ? src.length : qmark;
      if(src.substr(l - 7, 7) == "base.js") {
        goog.basePath = src.substr(0, l - 7);
        return
      }
    }
  };
  goog.importScript_ = function(src) {
    var importScript = goog.global.CLOSURE_IMPORT_SCRIPT || goog.writeScriptTag_;
    if(!goog.dependencies_.written[src] && importScript(src)) {
      goog.dependencies_.written[src] = true
    }
  };
  goog.writeScriptTag_ = function(src) {
    if(goog.inHtmlDocument_()) {
      var doc = goog.global.document;
      if(doc.readyState == "complete") {
        var isDeps = /\bdeps.js$/.test(src);
        if(isDeps) {
          return false
        }else {
          throw Error('Cannot write "' + src + '" after document load');
        }
      }
      doc.write('<script type="text/javascript" src="' + src + '"></' + "script>");
      return true
    }else {
      return false
    }
  };
  goog.writeScripts_ = function() {
    var scripts = [];
    var seenScript = {};
    var deps = goog.dependencies_;
    function visitNode(path) {
      if(path in deps.written) {
        return
      }
      if(path in deps.visited) {
        if(!(path in seenScript)) {
          seenScript[path] = true;
          scripts.push(path)
        }
        return
      }
      deps.visited[path] = true;
      if(path in deps.requires) {
        for(var requireName in deps.requires[path]) {
          if(!goog.isProvided_(requireName)) {
            if(requireName in deps.nameToPath) {
              visitNode(deps.nameToPath[requireName])
            }else {
              throw Error("Undefined nameToPath for " + requireName);
            }
          }
        }
      }
      if(!(path in seenScript)) {
        seenScript[path] = true;
        scripts.push(path)
      }
    }
    for(var path in goog.included_) {
      if(!deps.written[path]) {
        visitNode(path)
      }
    }
    for(var i = 0;i < scripts.length;i++) {
      if(scripts[i]) {
        goog.importScript_(goog.basePath + scripts[i])
      }else {
        throw Error("Undefined script input");
      }
    }
  };
  goog.getPathFromDeps_ = function(rule) {
    if(rule in goog.dependencies_.nameToPath) {
      return goog.dependencies_.nameToPath[rule]
    }else {
      return null
    }
  };
  goog.findBasePath_();
  if(!goog.global.CLOSURE_NO_DEPS) {
    goog.importScript_(goog.basePath + "deps.js")
  }
}
goog.typeOf = function(value) {
  var s = typeof value;
  if(s == "object") {
    if(value) {
      if(value instanceof Array) {
        return"array"
      }else {
        if(value instanceof Object) {
          return s
        }
      }
      var className = Object.prototype.toString.call(value);
      if(className == "[object Window]") {
        return"object"
      }
      if(className == "[object Array]" || typeof value.length == "number" && typeof value.splice != "undefined" && typeof value.propertyIsEnumerable != "undefined" && !value.propertyIsEnumerable("splice")) {
        return"array"
      }
      if(className == "[object Function]" || typeof value.call != "undefined" && typeof value.propertyIsEnumerable != "undefined" && !value.propertyIsEnumerable("call")) {
        return"function"
      }
    }else {
      return"null"
    }
  }else {
    if(s == "function" && typeof value.call == "undefined") {
      return"object"
    }
  }
  return s
};
goog.isDef = function(val) {
  return val !== undefined
};
goog.isNull = function(val) {
  return val === null
};
goog.isDefAndNotNull = function(val) {
  return val != null
};
goog.isArray = function(val) {
  return goog.typeOf(val) == "array"
};
goog.isArrayLike = function(val) {
  var type = goog.typeOf(val);
  return type == "array" || type == "object" && typeof val.length == "number"
};
goog.isDateLike = function(val) {
  return goog.isObject(val) && typeof val.getFullYear == "function"
};
goog.isString = function(val) {
  return typeof val == "string"
};
goog.isBoolean = function(val) {
  return typeof val == "boolean"
};
goog.isNumber = function(val) {
  return typeof val == "number"
};
goog.isFunction = function(val) {
  return goog.typeOf(val) == "function"
};
goog.isObject = function(val) {
  var type = typeof val;
  return type == "object" && val != null || type == "function"
};
goog.getUid = function(obj) {
  return obj[goog.UID_PROPERTY_] || (obj[goog.UID_PROPERTY_] = ++goog.uidCounter_)
};
goog.removeUid = function(obj) {
  if("removeAttribute" in obj) {
    obj.removeAttribute(goog.UID_PROPERTY_)
  }
  try {
    delete obj[goog.UID_PROPERTY_]
  }catch(ex) {
  }
};
goog.UID_PROPERTY_ = "closure_uid_" + (Math.random() * 1E9 >>> 0);
goog.uidCounter_ = 0;
goog.getHashCode = goog.getUid;
goog.removeHashCode = goog.removeUid;
goog.cloneObject = function(obj) {
  var type = goog.typeOf(obj);
  if(type == "object" || type == "array") {
    if(obj.clone) {
      return obj.clone()
    }
    var clone = type == "array" ? [] : {};
    for(var key in obj) {
      clone[key] = goog.cloneObject(obj[key])
    }
    return clone
  }
  return obj
};
goog.bindNative_ = function(fn, selfObj, var_args) {
  return fn.call.apply(fn.bind, arguments)
};
goog.bindJs_ = function(fn, selfObj, var_args) {
  if(!fn) {
    throw new Error;
  }
  if(arguments.length > 2) {
    var boundArgs = Array.prototype.slice.call(arguments, 2);
    return function() {
      var newArgs = Array.prototype.slice.call(arguments);
      Array.prototype.unshift.apply(newArgs, boundArgs);
      return fn.apply(selfObj, newArgs)
    }
  }else {
    return function() {
      return fn.apply(selfObj, arguments)
    }
  }
};
goog.bind = function(fn, selfObj, var_args) {
  if(Function.prototype.bind && Function.prototype.bind.toString().indexOf("native code") != -1) {
    goog.bind = goog.bindNative_
  }else {
    goog.bind = goog.bindJs_
  }
  return goog.bind.apply(null, arguments)
};
goog.partial = function(fn, var_args) {
  var args = Array.prototype.slice.call(arguments, 1);
  return function() {
    var newArgs = Array.prototype.slice.call(arguments);
    newArgs.unshift.apply(newArgs, args);
    return fn.apply(this, newArgs)
  }
};
goog.mixin = function(target, source) {
  for(var x in source) {
    target[x] = source[x]
  }
};
goog.now = goog.TRUSTED_SITE && Date.now || function() {
  return+new Date
};
goog.globalEval = function(script) {
  if(goog.global.execScript) {
    goog.global.execScript(script, "JavaScript")
  }else {
    if(goog.global.eval) {
      if(goog.evalWorksForGlobals_ == null) {
        goog.global.eval("var _et_ = 1;");
        if(typeof goog.global["_et_"] != "undefined") {
          delete goog.global["_et_"];
          goog.evalWorksForGlobals_ = true
        }else {
          goog.evalWorksForGlobals_ = false
        }
      }
      if(goog.evalWorksForGlobals_) {
        goog.global.eval(script)
      }else {
        var doc = goog.global.document;
        var scriptElt = doc.createElement("script");
        scriptElt.type = "text/javascript";
        scriptElt.defer = false;
        scriptElt.appendChild(doc.createTextNode(script));
        doc.body.appendChild(scriptElt);
        doc.body.removeChild(scriptElt)
      }
    }else {
      throw Error("goog.globalEval not available");
    }
  }
};
goog.evalWorksForGlobals_ = null;
goog.cssNameMapping_;
goog.cssNameMappingStyle_;
goog.getCssName = function(className, opt_modifier) {
  var getMapping = function(cssName) {
    return goog.cssNameMapping_[cssName] || cssName
  };
  var renameByParts = function(cssName) {
    var parts = cssName.split("-");
    var mapped = [];
    for(var i = 0;i < parts.length;i++) {
      mapped.push(getMapping(parts[i]))
    }
    return mapped.join("-")
  };
  var rename;
  if(goog.cssNameMapping_) {
    rename = goog.cssNameMappingStyle_ == "BY_WHOLE" ? getMapping : renameByParts
  }else {
    rename = function(a) {
      return a
    }
  }
  if(opt_modifier) {
    return className + "-" + rename(opt_modifier)
  }else {
    return rename(className)
  }
};
goog.setCssNameMapping = function(mapping, opt_style) {
  goog.cssNameMapping_ = mapping;
  goog.cssNameMappingStyle_ = opt_style
};
goog.global.CLOSURE_CSS_NAME_MAPPING;
if(!COMPILED && goog.global.CLOSURE_CSS_NAME_MAPPING) {
  goog.cssNameMapping_ = goog.global.CLOSURE_CSS_NAME_MAPPING
}
goog.getMsg = function(str, opt_values) {
  var values = opt_values || {};
  for(var key in values) {
    var value = ("" + values[key]).replace(/\$/g, "$$$$");
    str = str.replace(new RegExp("\\{\\$" + key + "\\}", "gi"), value)
  }
  return str
};
goog.getMsgWithFallback = function(a, b) {
  return a
};
goog.exportSymbol = function(publicPath, object, opt_objectToExportTo) {
  goog.exportPath_(publicPath, object, opt_objectToExportTo)
};
goog.exportProperty = function(object, publicName, symbol) {
  object[publicName] = symbol
};
goog.inherits = function(childCtor, parentCtor) {
  function tempCtor() {
  }
  tempCtor.prototype = parentCtor.prototype;
  childCtor.superClass_ = parentCtor.prototype;
  childCtor.prototype = new tempCtor;
  childCtor.prototype.constructor = childCtor
};
goog.base = function(me, opt_methodName, var_args) {
  var caller = arguments.callee.caller;
  if(caller.superClass_) {
    return caller.superClass_.constructor.apply(me, Array.prototype.slice.call(arguments, 1))
  }
  var args = Array.prototype.slice.call(arguments, 2);
  var foundCaller = false;
  for(var ctor = me.constructor;ctor;ctor = ctor.superClass_ && ctor.superClass_.constructor) {
    if(ctor.prototype[opt_methodName] === caller) {
      foundCaller = true
    }else {
      if(foundCaller) {
        return ctor.prototype[opt_methodName].apply(me, args)
      }
    }
  }
  if(me[opt_methodName] === caller) {
    return me.constructor.prototype[opt_methodName].apply(me, args)
  }else {
    throw Error("goog.base called from a method of one name " + "to a method of a different name");
  }
};
goog.scope = function(fn) {
  fn.call(goog.global)
};
goog.provide("goog.string");
goog.provide("goog.string.Unicode");
goog.string.Unicode = {NBSP:"\u00a0"};
goog.string.startsWith = function(str, prefix) {
  return str.lastIndexOf(prefix, 0) == 0
};
goog.string.endsWith = function(str, suffix) {
  var l = str.length - suffix.length;
  return l >= 0 && str.indexOf(suffix, l) == l
};
goog.string.caseInsensitiveStartsWith = function(str, prefix) {
  return goog.string.caseInsensitiveCompare(prefix, str.substr(0, prefix.length)) == 0
};
goog.string.caseInsensitiveEndsWith = function(str, suffix) {
  return goog.string.caseInsensitiveCompare(suffix, str.substr(str.length - suffix.length, suffix.length)) == 0
};
goog.string.subs = function(str, var_args) {
  for(var i = 1;i < arguments.length;i++) {
    var replacement = String(arguments[i]).replace(/\$/g, "$$$$");
    str = str.replace(/\%s/, replacement)
  }
  return str
};
goog.string.collapseWhitespace = function(str) {
  return str.replace(/[\s\xa0]+/g, " ").replace(/^\s+|\s+$/g, "")
};
goog.string.isEmpty = function(str) {
  return/^[\s\xa0]*$/.test(str)
};
goog.string.isEmptySafe = function(str) {
  return goog.string.isEmpty(goog.string.makeSafe(str))
};
goog.string.isBreakingWhitespace = function(str) {
  return!/[^\t\n\r ]/.test(str)
};
goog.string.isAlpha = function(str) {
  return!/[^a-zA-Z]/.test(str)
};
goog.string.isNumeric = function(str) {
  return!/[^0-9]/.test(str)
};
goog.string.isAlphaNumeric = function(str) {
  return!/[^a-zA-Z0-9]/.test(str)
};
goog.string.isSpace = function(ch) {
  return ch == " "
};
goog.string.isUnicodeChar = function(ch) {
  return ch.length == 1 && ch >= " " && ch <= "~" || ch >= "\u0080" && ch <= "\ufffd"
};
goog.string.stripNewlines = function(str) {
  return str.replace(/(\r\n|\r|\n)+/g, " ")
};
goog.string.canonicalizeNewlines = function(str) {
  return str.replace(/(\r\n|\r|\n)/g, "\n")
};
goog.string.normalizeWhitespace = function(str) {
  return str.replace(/\xa0|\s/g, " ")
};
goog.string.normalizeSpaces = function(str) {
  return str.replace(/\xa0|[ \t]+/g, " ")
};
goog.string.collapseBreakingSpaces = function(str) {
  return str.replace(/[\t\r\n ]+/g, " ").replace(/^[\t\r\n ]+|[\t\r\n ]+$/g, "")
};
goog.string.trim = function(str) {
  return str.replace(/^[\s\xa0]+|[\s\xa0]+$/g, "")
};
goog.string.trimLeft = function(str) {
  return str.replace(/^[\s\xa0]+/, "")
};
goog.string.trimRight = function(str) {
  return str.replace(/[\s\xa0]+$/, "")
};
goog.string.caseInsensitiveCompare = function(str1, str2) {
  var test1 = String(str1).toLowerCase();
  var test2 = String(str2).toLowerCase();
  if(test1 < test2) {
    return-1
  }else {
    if(test1 == test2) {
      return 0
    }else {
      return 1
    }
  }
};
goog.string.numerateCompareRegExp_ = /(\.\d+)|(\d+)|(\D+)/g;
goog.string.numerateCompare = function(str1, str2) {
  if(str1 == str2) {
    return 0
  }
  if(!str1) {
    return-1
  }
  if(!str2) {
    return 1
  }
  var tokens1 = str1.toLowerCase().match(goog.string.numerateCompareRegExp_);
  var tokens2 = str2.toLowerCase().match(goog.string.numerateCompareRegExp_);
  var count = Math.min(tokens1.length, tokens2.length);
  for(var i = 0;i < count;i++) {
    var a = tokens1[i];
    var b = tokens2[i];
    if(a != b) {
      var num1 = parseInt(a, 10);
      if(!isNaN(num1)) {
        var num2 = parseInt(b, 10);
        if(!isNaN(num2) && num1 - num2) {
          return num1 - num2
        }
      }
      return a < b ? -1 : 1
    }
  }
  if(tokens1.length != tokens2.length) {
    return tokens1.length - tokens2.length
  }
  return str1 < str2 ? -1 : 1
};
goog.string.urlEncode = function(str) {
  return encodeURIComponent(String(str))
};
goog.string.urlDecode = function(str) {
  return decodeURIComponent(str.replace(/\+/g, " "))
};
goog.string.newLineToBr = function(str, opt_xml) {
  return str.replace(/(\r\n|\r|\n)/g, opt_xml ? "<br />" : "<br>")
};
goog.string.htmlEscape = function(str, opt_isLikelyToContainHtmlChars) {
  if(opt_isLikelyToContainHtmlChars) {
    return str.replace(goog.string.amperRe_, "&amp;").replace(goog.string.ltRe_, "&lt;").replace(goog.string.gtRe_, "&gt;").replace(goog.string.quotRe_, "&quot;")
  }else {
    if(!goog.string.allRe_.test(str)) {
      return str
    }
    if(str.indexOf("&") != -1) {
      str = str.replace(goog.string.amperRe_, "&amp;")
    }
    if(str.indexOf("<") != -1) {
      str = str.replace(goog.string.ltRe_, "&lt;")
    }
    if(str.indexOf(">") != -1) {
      str = str.replace(goog.string.gtRe_, "&gt;")
    }
    if(str.indexOf('"') != -1) {
      str = str.replace(goog.string.quotRe_, "&quot;")
    }
    return str
  }
};
goog.string.amperRe_ = /&/g;
goog.string.ltRe_ = /</g;
goog.string.gtRe_ = />/g;
goog.string.quotRe_ = /\"/g;
goog.string.allRe_ = /[&<>\"]/;
goog.string.unescapeEntities = function(str) {
  if(goog.string.contains(str, "&")) {
    if("document" in goog.global) {
      return goog.string.unescapeEntitiesUsingDom_(str)
    }else {
      return goog.string.unescapePureXmlEntities_(str)
    }
  }
  return str
};
goog.string.unescapeEntitiesUsingDom_ = function(str) {
  var seen = {"&amp;":"&", "&lt;":"<", "&gt;":">", "&quot;":'"'};
  var div = document.createElement("div");
  return str.replace(goog.string.HTML_ENTITY_PATTERN_, function(s, entity) {
    var value = seen[s];
    if(value) {
      return value
    }
    if(entity.charAt(0) == "#") {
      var n = Number("0" + entity.substr(1));
      if(!isNaN(n)) {
        value = String.fromCharCode(n)
      }
    }
    if(!value) {
      div.innerHTML = s + " ";
      value = div.firstChild.nodeValue.slice(0, -1)
    }
    return seen[s] = value
  })
};
goog.string.unescapePureXmlEntities_ = function(str) {
  return str.replace(/&([^;]+);/g, function(s, entity) {
    switch(entity) {
      case "amp":
        return"&";
      case "lt":
        return"<";
      case "gt":
        return">";
      case "quot":
        return'"';
      default:
        if(entity.charAt(0) == "#") {
          var n = Number("0" + entity.substr(1));
          if(!isNaN(n)) {
            return String.fromCharCode(n)
          }
        }
        return s
    }
  })
};
goog.string.HTML_ENTITY_PATTERN_ = /&([^;\s<&]+);?/g;
goog.string.whitespaceEscape = function(str, opt_xml) {
  return goog.string.newLineToBr(str.replace(/  /g, " &#160;"), opt_xml)
};
goog.string.stripQuotes = function(str, quoteChars) {
  var length = quoteChars.length;
  for(var i = 0;i < length;i++) {
    var quoteChar = length == 1 ? quoteChars : quoteChars.charAt(i);
    if(str.charAt(0) == quoteChar && str.charAt(str.length - 1) == quoteChar) {
      return str.substring(1, str.length - 1)
    }
  }
  return str
};
goog.string.truncate = function(str, chars, opt_protectEscapedCharacters) {
  if(opt_protectEscapedCharacters) {
    str = goog.string.unescapeEntities(str)
  }
  if(str.length > chars) {
    str = str.substring(0, chars - 3) + "..."
  }
  if(opt_protectEscapedCharacters) {
    str = goog.string.htmlEscape(str)
  }
  return str
};
goog.string.truncateMiddle = function(str, chars, opt_protectEscapedCharacters, opt_trailingChars) {
  if(opt_protectEscapedCharacters) {
    str = goog.string.unescapeEntities(str)
  }
  if(opt_trailingChars && str.length > chars) {
    if(opt_trailingChars > chars) {
      opt_trailingChars = chars
    }
    var endPoint = str.length - opt_trailingChars;
    var startPoint = chars - opt_trailingChars;
    str = str.substring(0, startPoint) + "..." + str.substring(endPoint)
  }else {
    if(str.length > chars) {
      var half = Math.floor(chars / 2);
      var endPos = str.length - half;
      half += chars % 2;
      str = str.substring(0, half) + "..." + str.substring(endPos)
    }
  }
  if(opt_protectEscapedCharacters) {
    str = goog.string.htmlEscape(str)
  }
  return str
};
goog.string.specialEscapeChars_ = {"\x00":"\\0", "\u0008":"\\b", "\u000c":"\\f", "\n":"\\n", "\r":"\\r", "\t":"\\t", "\u000b":"\\x0B", '"':'\\"', "\\":"\\\\"};
goog.string.jsEscapeCache_ = {"'":"\\'"};
goog.string.quote = function(s) {
  s = String(s);
  if(s.quote) {
    return s.quote()
  }else {
    var sb = ['"'];
    for(var i = 0;i < s.length;i++) {
      var ch = s.charAt(i);
      var cc = ch.charCodeAt(0);
      sb[i + 1] = goog.string.specialEscapeChars_[ch] || (cc > 31 && cc < 127 ? ch : goog.string.escapeChar(ch))
    }
    sb.push('"');
    return sb.join("")
  }
};
goog.string.escapeString = function(str) {
  var sb = [];
  for(var i = 0;i < str.length;i++) {
    sb[i] = goog.string.escapeChar(str.charAt(i))
  }
  return sb.join("")
};
goog.string.escapeChar = function(c) {
  if(c in goog.string.jsEscapeCache_) {
    return goog.string.jsEscapeCache_[c]
  }
  if(c in goog.string.specialEscapeChars_) {
    return goog.string.jsEscapeCache_[c] = goog.string.specialEscapeChars_[c]
  }
  var rv = c;
  var cc = c.charCodeAt(0);
  if(cc > 31 && cc < 127) {
    rv = c
  }else {
    if(cc < 256) {
      rv = "\\x";
      if(cc < 16 || cc > 256) {
        rv += "0"
      }
    }else {
      rv = "\\u";
      if(cc < 4096) {
        rv += "0"
      }
    }
    rv += cc.toString(16).toUpperCase()
  }
  return goog.string.jsEscapeCache_[c] = rv
};
goog.string.toMap = function(s) {
  var rv = {};
  for(var i = 0;i < s.length;i++) {
    rv[s.charAt(i)] = true
  }
  return rv
};
goog.string.contains = function(s, ss) {
  return s.indexOf(ss) != -1
};
goog.string.countOf = function(s, ss) {
  return s && ss ? s.split(ss).length - 1 : 0
};
goog.string.removeAt = function(s, index, stringLength) {
  var resultStr = s;
  if(index >= 0 && index < s.length && stringLength > 0) {
    resultStr = s.substr(0, index) + s.substr(index + stringLength, s.length - index - stringLength)
  }
  return resultStr
};
goog.string.remove = function(s, ss) {
  var re = new RegExp(goog.string.regExpEscape(ss), "");
  return s.replace(re, "")
};
goog.string.removeAll = function(s, ss) {
  var re = new RegExp(goog.string.regExpEscape(ss), "g");
  return s.replace(re, "")
};
goog.string.regExpEscape = function(s) {
  return String(s).replace(/([-()\[\]{}+?*.$\^|,:#<!\\])/g, "\\$1").replace(/\x08/g, "\\x08")
};
goog.string.repeat = function(string, length) {
  return(new Array(length + 1)).join(string)
};
goog.string.padNumber = function(num, length, opt_precision) {
  var s = goog.isDef(opt_precision) ? num.toFixed(opt_precision) : String(num);
  var index = s.indexOf(".");
  if(index == -1) {
    index = s.length
  }
  return goog.string.repeat("0", Math.max(0, length - index)) + s
};
goog.string.makeSafe = function(obj) {
  return obj == null ? "" : String(obj)
};
goog.string.buildString = function(var_args) {
  return Array.prototype.join.call(arguments, "")
};
goog.string.getRandomString = function() {
  var x = 2147483648;
  return Math.floor(Math.random() * x).toString(36) + Math.abs(Math.floor(Math.random() * x) ^ goog.now()).toString(36)
};
goog.string.compareVersions = function(version1, version2) {
  var order = 0;
  var v1Subs = goog.string.trim(String(version1)).split(".");
  var v2Subs = goog.string.trim(String(version2)).split(".");
  var subCount = Math.max(v1Subs.length, v2Subs.length);
  for(var subIdx = 0;order == 0 && subIdx < subCount;subIdx++) {
    var v1Sub = v1Subs[subIdx] || "";
    var v2Sub = v2Subs[subIdx] || "";
    var v1CompParser = new RegExp("(\\d*)(\\D*)", "g");
    var v2CompParser = new RegExp("(\\d*)(\\D*)", "g");
    do {
      var v1Comp = v1CompParser.exec(v1Sub) || ["", "", ""];
      var v2Comp = v2CompParser.exec(v2Sub) || ["", "", ""];
      if(v1Comp[0].length == 0 && v2Comp[0].length == 0) {
        break
      }
      var v1CompNum = v1Comp[1].length == 0 ? 0 : parseInt(v1Comp[1], 10);
      var v2CompNum = v2Comp[1].length == 0 ? 0 : parseInt(v2Comp[1], 10);
      order = goog.string.compareElements_(v1CompNum, v2CompNum) || goog.string.compareElements_(v1Comp[2].length == 0, v2Comp[2].length == 0) || goog.string.compareElements_(v1Comp[2], v2Comp[2])
    }while(order == 0)
  }
  return order
};
goog.string.compareElements_ = function(left, right) {
  if(left < right) {
    return-1
  }else {
    if(left > right) {
      return 1
    }
  }
  return 0
};
goog.string.HASHCODE_MAX_ = 4294967296;
goog.string.hashCode = function(str) {
  var result = 0;
  for(var i = 0;i < str.length;++i) {
    result = 31 * result + str.charCodeAt(i);
    result %= goog.string.HASHCODE_MAX_
  }
  return result
};
goog.string.uniqueStringCounter_ = Math.random() * 2147483648 | 0;
goog.string.createUniqueString = function() {
  return"goog_" + goog.string.uniqueStringCounter_++
};
goog.string.toNumber = function(str) {
  var num = Number(str);
  if(num == 0 && goog.string.isEmpty(str)) {
    return NaN
  }
  return num
};
goog.string.toCamelCase = function(str) {
  return String(str).replace(/\-([a-z])/g, function(all, match) {
    return match.toUpperCase()
  })
};
goog.string.toSelectorCase = function(str) {
  return String(str).replace(/([A-Z])/g, "-$1").toLowerCase()
};
goog.string.toTitleCase = function(str, opt_delimiters) {
  var delimiters = goog.isString(opt_delimiters) ? goog.string.regExpEscape(opt_delimiters) : "\\s";
  delimiters = delimiters ? "|[" + delimiters + "]+" : "";
  var regexp = new RegExp("(^" + delimiters + ")([a-z])", "g");
  return str.replace(regexp, function(all, p1, p2) {
    return p1 + p2.toUpperCase()
  })
};
goog.string.parseInt = function(value) {
  if(isFinite(value)) {
    value = String(value)
  }
  if(goog.isString(value)) {
    return/^\s*-?0x/i.test(value) ? parseInt(value, 16) : parseInt(value, 10)
  }
  return NaN
};
goog.provide("goog.debug.Error");
goog.debug.Error = function(opt_msg) {
  if(Error.captureStackTrace) {
    Error.captureStackTrace(this, goog.debug.Error)
  }else {
    this.stack = (new Error).stack || ""
  }
  if(opt_msg) {
    this.message = String(opt_msg)
  }
};
goog.inherits(goog.debug.Error, Error);
goog.debug.Error.prototype.name = "CustomError";
goog.provide("goog.asserts");
goog.provide("goog.asserts.AssertionError");
goog.require("goog.debug.Error");
goog.require("goog.string");
goog.asserts.ENABLE_ASSERTS = goog.DEBUG;
goog.asserts.AssertionError = function(messagePattern, messageArgs) {
  messageArgs.unshift(messagePattern);
  goog.debug.Error.call(this, goog.string.subs.apply(null, messageArgs));
  messageArgs.shift();
  this.messagePattern = messagePattern
};
goog.inherits(goog.asserts.AssertionError, goog.debug.Error);
goog.asserts.AssertionError.prototype.name = "AssertionError";
goog.asserts.doAssertFailure_ = function(defaultMessage, defaultArgs, givenMessage, givenArgs) {
  var message = "Assertion failed";
  if(givenMessage) {
    message += ": " + givenMessage;
    var args = givenArgs
  }else {
    if(defaultMessage) {
      message += ": " + defaultMessage;
      args = defaultArgs
    }
  }
  throw new goog.asserts.AssertionError("" + message, args || []);
};
goog.asserts.assert = function(condition, opt_message, var_args) {
  if(goog.asserts.ENABLE_ASSERTS && !condition) {
    goog.asserts.doAssertFailure_("", null, opt_message, Array.prototype.slice.call(arguments, 2))
  }
  return condition
};
goog.asserts.fail = function(opt_message, var_args) {
  if(goog.asserts.ENABLE_ASSERTS) {
    throw new goog.asserts.AssertionError("Failure" + (opt_message ? ": " + opt_message : ""), Array.prototype.slice.call(arguments, 1));
  }
};
goog.asserts.assertNumber = function(value, opt_message, var_args) {
  if(goog.asserts.ENABLE_ASSERTS && !goog.isNumber(value)) {
    goog.asserts.doAssertFailure_("Expected number but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2))
  }
  return value
};
goog.asserts.assertString = function(value, opt_message, var_args) {
  if(goog.asserts.ENABLE_ASSERTS && !goog.isString(value)) {
    goog.asserts.doAssertFailure_("Expected string but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2))
  }
  return value
};
goog.asserts.assertFunction = function(value, opt_message, var_args) {
  if(goog.asserts.ENABLE_ASSERTS && !goog.isFunction(value)) {
    goog.asserts.doAssertFailure_("Expected function but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2))
  }
  return value
};
goog.asserts.assertObject = function(value, opt_message, var_args) {
  if(goog.asserts.ENABLE_ASSERTS && !goog.isObject(value)) {
    goog.asserts.doAssertFailure_("Expected object but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2))
  }
  return value
};
goog.asserts.assertArray = function(value, opt_message, var_args) {
  if(goog.asserts.ENABLE_ASSERTS && !goog.isArray(value)) {
    goog.asserts.doAssertFailure_("Expected array but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2))
  }
  return value
};
goog.asserts.assertBoolean = function(value, opt_message, var_args) {
  if(goog.asserts.ENABLE_ASSERTS && !goog.isBoolean(value)) {
    goog.asserts.doAssertFailure_("Expected boolean but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2))
  }
  return value
};
goog.asserts.assertInstanceof = function(value, type, opt_message, var_args) {
  if(goog.asserts.ENABLE_ASSERTS && !(value instanceof type)) {
    goog.asserts.doAssertFailure_("instanceof check failed.", null, opt_message, Array.prototype.slice.call(arguments, 3))
  }
  return value
};
goog.provide("goog.array");
goog.provide("goog.array.ArrayLike");
goog.require("goog.asserts");
goog.NATIVE_ARRAY_PROTOTYPES = goog.TRUSTED_SITE;
goog.array.ArrayLike;
goog.array.peek = function(array) {
  return array[array.length - 1]
};
goog.array.ARRAY_PROTOTYPE_ = Array.prototype;
goog.array.indexOf = goog.NATIVE_ARRAY_PROTOTYPES && goog.array.ARRAY_PROTOTYPE_.indexOf ? function(arr, obj, opt_fromIndex) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.indexOf.call(arr, obj, opt_fromIndex)
} : function(arr, obj, opt_fromIndex) {
  var fromIndex = opt_fromIndex == null ? 0 : opt_fromIndex < 0 ? Math.max(0, arr.length + opt_fromIndex) : opt_fromIndex;
  if(goog.isString(arr)) {
    if(!goog.isString(obj) || obj.length != 1) {
      return-1
    }
    return arr.indexOf(obj, fromIndex)
  }
  for(var i = fromIndex;i < arr.length;i++) {
    if(i in arr && arr[i] === obj) {
      return i
    }
  }
  return-1
};
goog.array.lastIndexOf = goog.NATIVE_ARRAY_PROTOTYPES && goog.array.ARRAY_PROTOTYPE_.lastIndexOf ? function(arr, obj, opt_fromIndex) {
  goog.asserts.assert(arr.length != null);
  var fromIndex = opt_fromIndex == null ? arr.length - 1 : opt_fromIndex;
  return goog.array.ARRAY_PROTOTYPE_.lastIndexOf.call(arr, obj, fromIndex)
} : function(arr, obj, opt_fromIndex) {
  var fromIndex = opt_fromIndex == null ? arr.length - 1 : opt_fromIndex;
  if(fromIndex < 0) {
    fromIndex = Math.max(0, arr.length + fromIndex)
  }
  if(goog.isString(arr)) {
    if(!goog.isString(obj) || obj.length != 1) {
      return-1
    }
    return arr.lastIndexOf(obj, fromIndex)
  }
  for(var i = fromIndex;i >= 0;i--) {
    if(i in arr && arr[i] === obj) {
      return i
    }
  }
  return-1
};
goog.array.forEach = goog.NATIVE_ARRAY_PROTOTYPES && goog.array.ARRAY_PROTOTYPE_.forEach ? function(arr, f, opt_obj) {
  goog.asserts.assert(arr.length != null);
  goog.array.ARRAY_PROTOTYPE_.forEach.call(arr, f, opt_obj)
} : function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for(var i = 0;i < l;i++) {
    if(i in arr2) {
      f.call(opt_obj, arr2[i], i, arr)
    }
  }
};
goog.array.forEachRight = function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for(var i = l - 1;i >= 0;--i) {
    if(i in arr2) {
      f.call(opt_obj, arr2[i], i, arr)
    }
  }
};
goog.array.filter = goog.NATIVE_ARRAY_PROTOTYPES && goog.array.ARRAY_PROTOTYPE_.filter ? function(arr, f, opt_obj) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.filter.call(arr, f, opt_obj)
} : function(arr, f, opt_obj) {
  var l = arr.length;
  var res = [];
  var resLength = 0;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for(var i = 0;i < l;i++) {
    if(i in arr2) {
      var val = arr2[i];
      if(f.call(opt_obj, val, i, arr)) {
        res[resLength++] = val
      }
    }
  }
  return res
};
goog.array.map = goog.NATIVE_ARRAY_PROTOTYPES && goog.array.ARRAY_PROTOTYPE_.map ? function(arr, f, opt_obj) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.map.call(arr, f, opt_obj)
} : function(arr, f, opt_obj) {
  var l = arr.length;
  var res = new Array(l);
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for(var i = 0;i < l;i++) {
    if(i in arr2) {
      res[i] = f.call(opt_obj, arr2[i], i, arr)
    }
  }
  return res
};
goog.array.reduce = function(arr, f, val, opt_obj) {
  if(arr.reduce) {
    if(opt_obj) {
      return arr.reduce(goog.bind(f, opt_obj), val)
    }else {
      return arr.reduce(f, val)
    }
  }
  var rval = val;
  goog.array.forEach(arr, function(val, index) {
    rval = f.call(opt_obj, rval, val, index, arr)
  });
  return rval
};
goog.array.reduceRight = function(arr, f, val, opt_obj) {
  if(arr.reduceRight) {
    if(opt_obj) {
      return arr.reduceRight(goog.bind(f, opt_obj), val)
    }else {
      return arr.reduceRight(f, val)
    }
  }
  var rval = val;
  goog.array.forEachRight(arr, function(val, index) {
    rval = f.call(opt_obj, rval, val, index, arr)
  });
  return rval
};
goog.array.some = goog.NATIVE_ARRAY_PROTOTYPES && goog.array.ARRAY_PROTOTYPE_.some ? function(arr, f, opt_obj) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.some.call(arr, f, opt_obj)
} : function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for(var i = 0;i < l;i++) {
    if(i in arr2 && f.call(opt_obj, arr2[i], i, arr)) {
      return true
    }
  }
  return false
};
goog.array.every = goog.NATIVE_ARRAY_PROTOTYPES && goog.array.ARRAY_PROTOTYPE_.every ? function(arr, f, opt_obj) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.every.call(arr, f, opt_obj)
} : function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for(var i = 0;i < l;i++) {
    if(i in arr2 && !f.call(opt_obj, arr2[i], i, arr)) {
      return false
    }
  }
  return true
};
goog.array.count = function(arr, f, opt_obj) {
  var count = 0;
  goog.array.forEach(arr, function(element, index, arr) {
    if(f.call(opt_obj, element, index, arr)) {
      ++count
    }
  }, opt_obj);
  return count
};
goog.array.find = function(arr, f, opt_obj) {
  var i = goog.array.findIndex(arr, f, opt_obj);
  return i < 0 ? null : goog.isString(arr) ? arr.charAt(i) : arr[i]
};
goog.array.findIndex = function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for(var i = 0;i < l;i++) {
    if(i in arr2 && f.call(opt_obj, arr2[i], i, arr)) {
      return i
    }
  }
  return-1
};
goog.array.findRight = function(arr, f, opt_obj) {
  var i = goog.array.findIndexRight(arr, f, opt_obj);
  return i < 0 ? null : goog.isString(arr) ? arr.charAt(i) : arr[i]
};
goog.array.findIndexRight = function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for(var i = l - 1;i >= 0;i--) {
    if(i in arr2 && f.call(opt_obj, arr2[i], i, arr)) {
      return i
    }
  }
  return-1
};
goog.array.contains = function(arr, obj) {
  return goog.array.indexOf(arr, obj) >= 0
};
goog.array.isEmpty = function(arr) {
  return arr.length == 0
};
goog.array.clear = function(arr) {
  if(!goog.isArray(arr)) {
    for(var i = arr.length - 1;i >= 0;i--) {
      delete arr[i]
    }
  }
  arr.length = 0
};
goog.array.insert = function(arr, obj) {
  if(!goog.array.contains(arr, obj)) {
    arr.push(obj)
  }
};
goog.array.insertAt = function(arr, obj, opt_i) {
  goog.array.splice(arr, opt_i, 0, obj)
};
goog.array.insertArrayAt = function(arr, elementsToAdd, opt_i) {
  goog.partial(goog.array.splice, arr, opt_i, 0).apply(null, elementsToAdd)
};
goog.array.insertBefore = function(arr, obj, opt_obj2) {
  var i;
  if(arguments.length == 2 || (i = goog.array.indexOf(arr, opt_obj2)) < 0) {
    arr.push(obj)
  }else {
    goog.array.insertAt(arr, obj, i)
  }
};
goog.array.remove = function(arr, obj) {
  var i = goog.array.indexOf(arr, obj);
  var rv;
  if(rv = i >= 0) {
    goog.array.removeAt(arr, i)
  }
  return rv
};
goog.array.removeAt = function(arr, i) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.splice.call(arr, i, 1).length == 1
};
goog.array.removeIf = function(arr, f, opt_obj) {
  var i = goog.array.findIndex(arr, f, opt_obj);
  if(i >= 0) {
    goog.array.removeAt(arr, i);
    return true
  }
  return false
};
goog.array.concat = function(var_args) {
  return goog.array.ARRAY_PROTOTYPE_.concat.apply(goog.array.ARRAY_PROTOTYPE_, arguments)
};
goog.array.toArray = function(object) {
  var length = object.length;
  if(length > 0) {
    var rv = new Array(length);
    for(var i = 0;i < length;i++) {
      rv[i] = object[i]
    }
    return rv
  }
  return[]
};
goog.array.clone = goog.array.toArray;
goog.array.extend = function(arr1, var_args) {
  for(var i = 1;i < arguments.length;i++) {
    var arr2 = arguments[i];
    var isArrayLike;
    if(goog.isArray(arr2) || (isArrayLike = goog.isArrayLike(arr2)) && Object.prototype.hasOwnProperty.call(arr2, "callee")) {
      arr1.push.apply(arr1, arr2)
    }else {
      if(isArrayLike) {
        var len1 = arr1.length;
        var len2 = arr2.length;
        for(var j = 0;j < len2;j++) {
          arr1[len1 + j] = arr2[j]
        }
      }else {
        arr1.push(arr2)
      }
    }
  }
};
goog.array.splice = function(arr, index, howMany, var_args) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.splice.apply(arr, goog.array.slice(arguments, 1))
};
goog.array.slice = function(arr, start, opt_end) {
  goog.asserts.assert(arr.length != null);
  if(arguments.length <= 2) {
    return goog.array.ARRAY_PROTOTYPE_.slice.call(arr, start)
  }else {
    return goog.array.ARRAY_PROTOTYPE_.slice.call(arr, start, opt_end)
  }
};
goog.array.removeDuplicates = function(arr, opt_rv) {
  var returnArray = opt_rv || arr;
  var seen = {}, cursorInsert = 0, cursorRead = 0;
  while(cursorRead < arr.length) {
    var current = arr[cursorRead++];
    var key = goog.isObject(current) ? "o" + goog.getUid(current) : (typeof current).charAt(0) + current;
    if(!Object.prototype.hasOwnProperty.call(seen, key)) {
      seen[key] = true;
      returnArray[cursorInsert++] = current
    }
  }
  returnArray.length = cursorInsert
};
goog.array.binarySearch = function(arr, target, opt_compareFn) {
  return goog.array.binarySearch_(arr, opt_compareFn || goog.array.defaultCompare, false, target)
};
goog.array.binarySelect = function(arr, evaluator, opt_obj) {
  return goog.array.binarySearch_(arr, evaluator, true, undefined, opt_obj)
};
goog.array.binarySearch_ = function(arr, compareFn, isEvaluator, opt_target, opt_selfObj) {
  var left = 0;
  var right = arr.length;
  var found;
  while(left < right) {
    var middle = left + right >> 1;
    var compareResult;
    if(isEvaluator) {
      compareResult = compareFn.call(opt_selfObj, arr[middle], middle, arr)
    }else {
      compareResult = compareFn(opt_target, arr[middle])
    }
    if(compareResult > 0) {
      left = middle + 1
    }else {
      right = middle;
      found = !compareResult
    }
  }
  return found ? left : ~left
};
goog.array.sort = function(arr, opt_compareFn) {
  goog.asserts.assert(arr.length != null);
  goog.array.ARRAY_PROTOTYPE_.sort.call(arr, opt_compareFn || goog.array.defaultCompare)
};
goog.array.stableSort = function(arr, opt_compareFn) {
  for(var i = 0;i < arr.length;i++) {
    arr[i] = {index:i, value:arr[i]}
  }
  var valueCompareFn = opt_compareFn || goog.array.defaultCompare;
  function stableCompareFn(obj1, obj2) {
    return valueCompareFn(obj1.value, obj2.value) || obj1.index - obj2.index
  }
  goog.array.sort(arr, stableCompareFn);
  for(var i = 0;i < arr.length;i++) {
    arr[i] = arr[i].value
  }
};
goog.array.sortObjectsByKey = function(arr, key, opt_compareFn) {
  var compare = opt_compareFn || goog.array.defaultCompare;
  goog.array.sort(arr, function(a, b) {
    return compare(a[key], b[key])
  })
};
goog.array.isSorted = function(arr, opt_compareFn, opt_strict) {
  var compare = opt_compareFn || goog.array.defaultCompare;
  for(var i = 1;i < arr.length;i++) {
    var compareResult = compare(arr[i - 1], arr[i]);
    if(compareResult > 0 || compareResult == 0 && opt_strict) {
      return false
    }
  }
  return true
};
goog.array.equals = function(arr1, arr2, opt_equalsFn) {
  if(!goog.isArrayLike(arr1) || !goog.isArrayLike(arr2) || arr1.length != arr2.length) {
    return false
  }
  var l = arr1.length;
  var equalsFn = opt_equalsFn || goog.array.defaultCompareEquality;
  for(var i = 0;i < l;i++) {
    if(!equalsFn(arr1[i], arr2[i])) {
      return false
    }
  }
  return true
};
goog.array.compare = function(arr1, arr2, opt_equalsFn) {
  return goog.array.equals(arr1, arr2, opt_equalsFn)
};
goog.array.compare3 = function(arr1, arr2, opt_compareFn) {
  var compare = opt_compareFn || goog.array.defaultCompare;
  var l = Math.min(arr1.length, arr2.length);
  for(var i = 0;i < l;i++) {
    var result = compare(arr1[i], arr2[i]);
    if(result != 0) {
      return result
    }
  }
  return goog.array.defaultCompare(arr1.length, arr2.length)
};
goog.array.defaultCompare = function(a, b) {
  return a > b ? 1 : a < b ? -1 : 0
};
goog.array.defaultCompareEquality = function(a, b) {
  return a === b
};
goog.array.binaryInsert = function(array, value, opt_compareFn) {
  var index = goog.array.binarySearch(array, value, opt_compareFn);
  if(index < 0) {
    goog.array.insertAt(array, value, -(index + 1));
    return true
  }
  return false
};
goog.array.binaryRemove = function(array, value, opt_compareFn) {
  var index = goog.array.binarySearch(array, value, opt_compareFn);
  return index >= 0 ? goog.array.removeAt(array, index) : false
};
goog.array.bucket = function(array, sorter) {
  var buckets = {};
  for(var i = 0;i < array.length;i++) {
    var value = array[i];
    var key = sorter(value, i, array);
    if(goog.isDef(key)) {
      var bucket = buckets[key] || (buckets[key] = []);
      bucket.push(value)
    }
  }
  return buckets
};
goog.array.toObject = function(arr, keyFunc, opt_obj) {
  var ret = {};
  goog.array.forEach(arr, function(element, index) {
    ret[keyFunc.call(opt_obj, element, index, arr)] = element
  });
  return ret
};
goog.array.range = function(startOrEnd, opt_end, opt_step) {
  var array = [];
  var start = 0;
  var end = startOrEnd;
  var step = opt_step || 1;
  if(opt_end !== undefined) {
    start = startOrEnd;
    end = opt_end
  }
  if(step * (end - start) < 0) {
    return[]
  }
  if(step > 0) {
    for(var i = start;i < end;i += step) {
      array.push(i)
    }
  }else {
    for(var i = start;i > end;i += step) {
      array.push(i)
    }
  }
  return array
};
goog.array.repeat = function(value, n) {
  var array = [];
  for(var i = 0;i < n;i++) {
    array[i] = value
  }
  return array
};
goog.array.flatten = function(var_args) {
  var result = [];
  for(var i = 0;i < arguments.length;i++) {
    var element = arguments[i];
    if(goog.isArray(element)) {
      result.push.apply(result, goog.array.flatten.apply(null, element))
    }else {
      result.push(element)
    }
  }
  return result
};
goog.array.rotate = function(array, n) {
  goog.asserts.assert(array.length != null);
  if(array.length) {
    n %= array.length;
    if(n > 0) {
      goog.array.ARRAY_PROTOTYPE_.unshift.apply(array, array.splice(-n, n))
    }else {
      if(n < 0) {
        goog.array.ARRAY_PROTOTYPE_.push.apply(array, array.splice(0, -n))
      }
    }
  }
  return array
};
goog.array.zip = function(var_args) {
  if(!arguments.length) {
    return[]
  }
  var result = [];
  for(var i = 0;true;i++) {
    var value = [];
    for(var j = 0;j < arguments.length;j++) {
      var arr = arguments[j];
      if(i >= arr.length) {
        return result
      }
      value.push(arr[i])
    }
    result.push(value)
  }
};
goog.array.shuffle = function(arr, opt_randFn) {
  var randFn = opt_randFn || Math.random;
  for(var i = arr.length - 1;i > 0;i--) {
    var j = Math.floor(randFn() * (i + 1));
    var tmp = arr[i];
    arr[i] = arr[j];
    arr[j] = tmp
  }
};
goog.provide("goog.object");
goog.object.forEach = function(obj, f, opt_obj) {
  for(var key in obj) {
    f.call(opt_obj, obj[key], key, obj)
  }
};
goog.object.filter = function(obj, f, opt_obj) {
  var res = {};
  for(var key in obj) {
    if(f.call(opt_obj, obj[key], key, obj)) {
      res[key] = obj[key]
    }
  }
  return res
};
goog.object.map = function(obj, f, opt_obj) {
  var res = {};
  for(var key in obj) {
    res[key] = f.call(opt_obj, obj[key], key, obj)
  }
  return res
};
goog.object.some = function(obj, f, opt_obj) {
  for(var key in obj) {
    if(f.call(opt_obj, obj[key], key, obj)) {
      return true
    }
  }
  return false
};
goog.object.every = function(obj, f, opt_obj) {
  for(var key in obj) {
    if(!f.call(opt_obj, obj[key], key, obj)) {
      return false
    }
  }
  return true
};
goog.object.getCount = function(obj) {
  var rv = 0;
  for(var key in obj) {
    rv++
  }
  return rv
};
goog.object.getAnyKey = function(obj) {
  for(var key in obj) {
    return key
  }
};
goog.object.getAnyValue = function(obj) {
  for(var key in obj) {
    return obj[key]
  }
};
goog.object.contains = function(obj, val) {
  return goog.object.containsValue(obj, val)
};
goog.object.getValues = function(obj) {
  var res = [];
  var i = 0;
  for(var key in obj) {
    res[i++] = obj[key]
  }
  return res
};
goog.object.getKeys = function(obj) {
  var res = [];
  var i = 0;
  for(var key in obj) {
    res[i++] = key
  }
  return res
};
goog.object.getValueByKeys = function(obj, var_args) {
  var isArrayLike = goog.isArrayLike(var_args);
  var keys = isArrayLike ? var_args : arguments;
  for(var i = isArrayLike ? 0 : 1;i < keys.length;i++) {
    obj = obj[keys[i]];
    if(!goog.isDef(obj)) {
      break
    }
  }
  return obj
};
goog.object.containsKey = function(obj, key) {
  return key in obj
};
goog.object.containsValue = function(obj, val) {
  for(var key in obj) {
    if(obj[key] == val) {
      return true
    }
  }
  return false
};
goog.object.findKey = function(obj, f, opt_this) {
  for(var key in obj) {
    if(f.call(opt_this, obj[key], key, obj)) {
      return key
    }
  }
  return undefined
};
goog.object.findValue = function(obj, f, opt_this) {
  var key = goog.object.findKey(obj, f, opt_this);
  return key && obj[key]
};
goog.object.isEmpty = function(obj) {
  for(var key in obj) {
    return false
  }
  return true
};
goog.object.clear = function(obj) {
  for(var i in obj) {
    delete obj[i]
  }
};
goog.object.remove = function(obj, key) {
  var rv;
  if(rv = key in obj) {
    delete obj[key]
  }
  return rv
};
goog.object.add = function(obj, key, val) {
  if(key in obj) {
    throw Error('The object already contains the key "' + key + '"');
  }
  goog.object.set(obj, key, val)
};
goog.object.get = function(obj, key, opt_val) {
  if(key in obj) {
    return obj[key]
  }
  return opt_val
};
goog.object.set = function(obj, key, value) {
  obj[key] = value
};
goog.object.setIfUndefined = function(obj, key, value) {
  return key in obj ? obj[key] : obj[key] = value
};
goog.object.clone = function(obj) {
  var res = {};
  for(var key in obj) {
    res[key] = obj[key]
  }
  return res
};
goog.object.unsafeClone = function(obj) {
  var type = goog.typeOf(obj);
  if(type == "object" || type == "array") {
    if(obj.clone) {
      return obj.clone()
    }
    var clone = type == "array" ? [] : {};
    for(var key in obj) {
      clone[key] = goog.object.unsafeClone(obj[key])
    }
    return clone
  }
  return obj
};
goog.object.transpose = function(obj) {
  var transposed = {};
  for(var key in obj) {
    transposed[obj[key]] = key
  }
  return transposed
};
goog.object.PROTOTYPE_FIELDS_ = ["constructor", "hasOwnProperty", "isPrototypeOf", "propertyIsEnumerable", "toLocaleString", "toString", "valueOf"];
goog.object.extend = function(target, var_args) {
  var key, source;
  for(var i = 1;i < arguments.length;i++) {
    source = arguments[i];
    for(key in source) {
      target[key] = source[key]
    }
    for(var j = 0;j < goog.object.PROTOTYPE_FIELDS_.length;j++) {
      key = goog.object.PROTOTYPE_FIELDS_[j];
      if(Object.prototype.hasOwnProperty.call(source, key)) {
        target[key] = source[key]
      }
    }
  }
};
goog.object.create = function(var_args) {
  var argLength = arguments.length;
  if(argLength == 1 && goog.isArray(arguments[0])) {
    return goog.object.create.apply(null, arguments[0])
  }
  if(argLength % 2) {
    throw Error("Uneven number of arguments");
  }
  var rv = {};
  for(var i = 0;i < argLength;i += 2) {
    rv[arguments[i]] = arguments[i + 1]
  }
  return rv
};
goog.object.createSet = function(var_args) {
  var argLength = arguments.length;
  if(argLength == 1 && goog.isArray(arguments[0])) {
    return goog.object.createSet.apply(null, arguments[0])
  }
  var rv = {};
  for(var i = 0;i < argLength;i++) {
    rv[arguments[i]] = true
  }
  return rv
};
goog.object.createImmutableView = function(obj) {
  var result = obj;
  if(Object.isFrozen && !Object.isFrozen(obj)) {
    result = Object.create(obj);
    Object.freeze(result)
  }
  return result
};
goog.object.isImmutableView = function(obj) {
  return!!Object.isFrozen && Object.isFrozen(obj)
};
goog.provide("goog.string.StringBuffer");
goog.string.StringBuffer = function(opt_a1, var_args) {
  if(opt_a1 != null) {
    this.append.apply(this, arguments)
  }
};
goog.string.StringBuffer.prototype.buffer_ = "";
goog.string.StringBuffer.prototype.set = function(s) {
  this.buffer_ = "" + s
};
goog.string.StringBuffer.prototype.append = function(a1, opt_a2, var_args) {
  this.buffer_ += a1;
  if(opt_a2 != null) {
    for(var i = 1;i < arguments.length;i++) {
      this.buffer_ += arguments[i]
    }
  }
  return this
};
goog.string.StringBuffer.prototype.clear = function() {
  this.buffer_ = ""
};
goog.string.StringBuffer.prototype.getLength = function() {
  return this.buffer_.length
};
goog.string.StringBuffer.prototype.toString = function() {
  return this.buffer_
};
goog.provide("cljs.core");
goog.require("goog.array");
goog.require("goog.array");
goog.require("goog.object");
goog.require("goog.object");
goog.require("goog.string.StringBuffer");
goog.require("goog.string.StringBuffer");
goog.require("goog.string");
goog.require("goog.string");
cljs.core._STAR_clojurescript_version_STAR_ = "0.0-2080";
cljs.core._STAR_unchecked_if_STAR_ = false;
cljs.core._STAR_print_fn_STAR_ = function _STAR_print_fn_STAR_(_) {
  throw new Error("No *print-fn* fn set for evaluation environment");
};
cljs.core.set_print_fn_BANG_ = function set_print_fn_BANG_(f) {
  return cljs.core._STAR_print_fn_STAR_ = f
};
cljs.core._STAR_flush_on_newline_STAR_ = true;
cljs.core._STAR_print_newline_STAR_ = true;
cljs.core._STAR_print_readably_STAR_ = true;
cljs.core._STAR_print_meta_STAR_ = false;
cljs.core._STAR_print_dup_STAR_ = false;
cljs.core._STAR_print_length_STAR_ = null;
cljs.core.pr_opts = function pr_opts() {
  return new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "flush-on-newline", "flush-on-newline", 4338025857), cljs.core._STAR_flush_on_newline_STAR_, new cljs.core.Keyword(null, "readably", "readably", 4441712502), cljs.core._STAR_print_readably_STAR_, new cljs.core.Keyword(null, "meta", "meta", 1017252215), cljs.core._STAR_print_meta_STAR_, new cljs.core.Keyword(null, "dup", "dup", 1014004081), cljs.core._STAR_print_dup_STAR_, new cljs.core.Keyword(null, "print-length", "print-length", 
  3960797560), cljs.core._STAR_print_length_STAR_], null)
};
cljs.core.enable_console_print_BANG_ = function enable_console_print_BANG_() {
  cljs.core._STAR_print_newline_STAR_ = false;
  return cljs.core._STAR_print_fn_STAR_ = function() {
    var G__528849__delegate = function(args) {
      return console.log.apply(console, cljs.core.into_array.call(null, args))
    };
    var G__528849 = function(var_args) {
      var args = null;
      if(arguments.length > 0) {
        args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
      }
      return G__528849__delegate.call(this, args)
    };
    G__528849.cljs$lang$maxFixedArity = 0;
    G__528849.cljs$lang$applyTo = function(arglist__528850) {
      var args = cljs.core.seq(arglist__528850);
      return G__528849__delegate(args)
    };
    G__528849.cljs$core$IFn$_invoke$arity$variadic = G__528849__delegate;
    return G__528849
  }()
};
cljs.core.truth_ = function truth_(x) {
  return x != null && x !== false
};
cljs.core.not_native = null;
cljs.core.identical_QMARK_ = function identical_QMARK_(x, y) {
  return x === y
};
cljs.core.nil_QMARK_ = function nil_QMARK_(x) {
  return x == null
};
cljs.core.array_QMARK_ = function array_QMARK_(x) {
  return x instanceof Array
};
cljs.core.number_QMARK_ = function number_QMARK_(n) {
  return typeof n === "number"
};
cljs.core.not = function not(x) {
  if(cljs.core.truth_(x)) {
    return false
  }else {
    return true
  }
};
cljs.core.string_QMARK_ = function string_QMARK_(x) {
  return goog.isString(x)
};
cljs.core.native_satisfies_QMARK_ = function native_satisfies_QMARK_(p, x) {
  var x__$1 = x == null ? null : x;
  if(p[goog.typeOf(x__$1)]) {
    return true
  }else {
    if(p["_"]) {
      return true
    }else {
      if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        return false
      }else {
        return null
      }
    }
  }
};
cljs.core.is_proto_ = function is_proto_(x) {
  return x.constructor.prototype === x
};
cljs.core._STAR_main_cli_fn_STAR_ = null;
cljs.core.type = function type(x) {
  if(x == null) {
    return null
  }else {
    return x.constructor
  }
};
cljs.core.missing_protocol = function missing_protocol(proto, obj) {
  var ty = cljs.core.type.call(null, obj);
  var ty__$1 = cljs.core.truth_(function() {
    var and__3273__auto__ = ty;
    if(cljs.core.truth_(and__3273__auto__)) {
      return ty.cljs$lang$type
    }else {
      return and__3273__auto__
    }
  }()) ? ty.cljs$lang$ctorStr : goog.typeOf(obj);
  return new Error(["No protocol method ", proto, " defined for type ", ty__$1, ": ", obj].join(""))
};
cljs.core.type__GT_str = function type__GT_str(ty) {
  var temp__4090__auto__ = ty.cljs$lang$ctorStr;
  if(cljs.core.truth_(temp__4090__auto__)) {
    var s = temp__4090__auto__;
    return s
  }else {
    return[cljs.core.str(ty)].join("")
  }
};
cljs.core.make_array = function() {
  var make_array = null;
  var make_array__1 = function(size) {
    return new Array(size)
  };
  var make_array__2 = function(type, size) {
    return make_array.call(null, size)
  };
  make_array = function(type, size) {
    switch(arguments.length) {
      case 1:
        return make_array__1.call(this, type);
      case 2:
        return make_array__2.call(this, type, size)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  make_array.cljs$core$IFn$_invoke$arity$1 = make_array__1;
  make_array.cljs$core$IFn$_invoke$arity$2 = make_array__2;
  return make_array
}();
cljs.core.aclone = function aclone(arr) {
  var len = arr.length;
  var new_arr = new Array(len);
  var n__4108__auto___528851 = len;
  var i_528852 = 0;
  while(true) {
    if(i_528852 < n__4108__auto___528851) {
      new_arr[i_528852] = arr[i_528852];
      var G__528853 = i_528852 + 1;
      i_528852 = G__528853;
      continue
    }else {
    }
    break
  }
  return new_arr
};
cljs.core.array = function array(var_args) {
  return Array.prototype.slice.call(arguments)
};
cljs.core.aget = function() {
  var aget = null;
  var aget__2 = function(array, i) {
    return array[i]
  };
  var aget__3 = function() {
    var G__528854__delegate = function(array, i, idxs) {
      return cljs.core.apply.call(null, aget, aget.call(null, array, i), idxs)
    };
    var G__528854 = function(array, i, var_args) {
      var idxs = null;
      if(arguments.length > 2) {
        idxs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__528854__delegate.call(this, array, i, idxs)
    };
    G__528854.cljs$lang$maxFixedArity = 2;
    G__528854.cljs$lang$applyTo = function(arglist__528855) {
      var array = cljs.core.first(arglist__528855);
      arglist__528855 = cljs.core.next(arglist__528855);
      var i = cljs.core.first(arglist__528855);
      var idxs = cljs.core.rest(arglist__528855);
      return G__528854__delegate(array, i, idxs)
    };
    G__528854.cljs$core$IFn$_invoke$arity$variadic = G__528854__delegate;
    return G__528854
  }();
  aget = function(array, i, var_args) {
    var idxs = var_args;
    switch(arguments.length) {
      case 2:
        return aget__2.call(this, array, i);
      default:
        return aget__3.cljs$core$IFn$_invoke$arity$variadic(array, i, cljs.core.array_seq(arguments, 2))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  aget.cljs$lang$maxFixedArity = 2;
  aget.cljs$lang$applyTo = aget__3.cljs$lang$applyTo;
  aget.cljs$core$IFn$_invoke$arity$2 = aget__2;
  aget.cljs$core$IFn$_invoke$arity$variadic = aget__3.cljs$core$IFn$_invoke$arity$variadic;
  return aget
}();
cljs.core.aset = function() {
  var aset = null;
  var aset__3 = function(array, i, val) {
    return array[i] = val
  };
  var aset__4 = function() {
    var G__528856__delegate = function(array, idx, idx2, idxv) {
      return cljs.core.apply.call(null, aset, array[idx], idx2, idxv)
    };
    var G__528856 = function(array, idx, idx2, var_args) {
      var idxv = null;
      if(arguments.length > 3) {
        idxv = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
      }
      return G__528856__delegate.call(this, array, idx, idx2, idxv)
    };
    G__528856.cljs$lang$maxFixedArity = 3;
    G__528856.cljs$lang$applyTo = function(arglist__528857) {
      var array = cljs.core.first(arglist__528857);
      arglist__528857 = cljs.core.next(arglist__528857);
      var idx = cljs.core.first(arglist__528857);
      arglist__528857 = cljs.core.next(arglist__528857);
      var idx2 = cljs.core.first(arglist__528857);
      var idxv = cljs.core.rest(arglist__528857);
      return G__528856__delegate(array, idx, idx2, idxv)
    };
    G__528856.cljs$core$IFn$_invoke$arity$variadic = G__528856__delegate;
    return G__528856
  }();
  aset = function(array, idx, idx2, var_args) {
    var idxv = var_args;
    switch(arguments.length) {
      case 3:
        return aset__3.call(this, array, idx, idx2);
      default:
        return aset__4.cljs$core$IFn$_invoke$arity$variadic(array, idx, idx2, cljs.core.array_seq(arguments, 3))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  aset.cljs$lang$maxFixedArity = 3;
  aset.cljs$lang$applyTo = aset__4.cljs$lang$applyTo;
  aset.cljs$core$IFn$_invoke$arity$3 = aset__3;
  aset.cljs$core$IFn$_invoke$arity$variadic = aset__4.cljs$core$IFn$_invoke$arity$variadic;
  return aset
}();
cljs.core.alength = function alength(array) {
  return array.length
};
cljs.core.into_array = function() {
  var into_array = null;
  var into_array__1 = function(aseq) {
    return into_array.call(null, null, aseq)
  };
  var into_array__2 = function(type, aseq) {
    return cljs.core.reduce.call(null, function(a, x) {
      a.push(x);
      return a
    }, [], aseq)
  };
  into_array = function(type, aseq) {
    switch(arguments.length) {
      case 1:
        return into_array__1.call(this, type);
      case 2:
        return into_array__2.call(this, type, aseq)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  into_array.cljs$core$IFn$_invoke$arity$1 = into_array__1;
  into_array.cljs$core$IFn$_invoke$arity$2 = into_array__2;
  return into_array
}();
cljs.core.Fn = function() {
  var obj528859 = {};
  return obj528859
}();
cljs.core.IFn = function() {
  var obj528861 = {};
  return obj528861
}();
cljs.core._invoke = function() {
  var _invoke = null;
  var _invoke__1 = function(this$) {
    if(function() {
      var and__3273__auto__ = this$;
      if(and__3273__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$1
      }else {
        return and__3273__auto__
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$1(this$)
    }else {
      var x__3888__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3285__auto__ = cljs.core._invoke[goog.typeOf(x__3888__auto__)];
        if(or__3285__auto__) {
          return or__3285__auto__
        }else {
          var or__3285__auto____$1 = cljs.core._invoke["_"];
          if(or__3285__auto____$1) {
            return or__3285__auto____$1
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$)
    }
  };
  var _invoke__2 = function(this$, a) {
    if(function() {
      var and__3273__auto__ = this$;
      if(and__3273__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$2
      }else {
        return and__3273__auto__
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$2(this$, a)
    }else {
      var x__3888__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3285__auto__ = cljs.core._invoke[goog.typeOf(x__3888__auto__)];
        if(or__3285__auto__) {
          return or__3285__auto__
        }else {
          var or__3285__auto____$1 = cljs.core._invoke["_"];
          if(or__3285__auto____$1) {
            return or__3285__auto____$1
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a)
    }
  };
  var _invoke__3 = function(this$, a, b) {
    if(function() {
      var and__3273__auto__ = this$;
      if(and__3273__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$3
      }else {
        return and__3273__auto__
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$3(this$, a, b)
    }else {
      var x__3888__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3285__auto__ = cljs.core._invoke[goog.typeOf(x__3888__auto__)];
        if(or__3285__auto__) {
          return or__3285__auto__
        }else {
          var or__3285__auto____$1 = cljs.core._invoke["_"];
          if(or__3285__auto____$1) {
            return or__3285__auto____$1
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b)
    }
  };
  var _invoke__4 = function(this$, a, b, c) {
    if(function() {
      var and__3273__auto__ = this$;
      if(and__3273__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$4
      }else {
        return and__3273__auto__
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$4(this$, a, b, c)
    }else {
      var x__3888__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3285__auto__ = cljs.core._invoke[goog.typeOf(x__3888__auto__)];
        if(or__3285__auto__) {
          return or__3285__auto__
        }else {
          var or__3285__auto____$1 = cljs.core._invoke["_"];
          if(or__3285__auto____$1) {
            return or__3285__auto____$1
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c)
    }
  };
  var _invoke__5 = function(this$, a, b, c, d) {
    if(function() {
      var and__3273__auto__ = this$;
      if(and__3273__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$5
      }else {
        return and__3273__auto__
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$5(this$, a, b, c, d)
    }else {
      var x__3888__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3285__auto__ = cljs.core._invoke[goog.typeOf(x__3888__auto__)];
        if(or__3285__auto__) {
          return or__3285__auto__
        }else {
          var or__3285__auto____$1 = cljs.core._invoke["_"];
          if(or__3285__auto____$1) {
            return or__3285__auto____$1
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d)
    }
  };
  var _invoke__6 = function(this$, a, b, c, d, e) {
    if(function() {
      var and__3273__auto__ = this$;
      if(and__3273__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$6
      }else {
        return and__3273__auto__
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$6(this$, a, b, c, d, e)
    }else {
      var x__3888__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3285__auto__ = cljs.core._invoke[goog.typeOf(x__3888__auto__)];
        if(or__3285__auto__) {
          return or__3285__auto__
        }else {
          var or__3285__auto____$1 = cljs.core._invoke["_"];
          if(or__3285__auto____$1) {
            return or__3285__auto____$1
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e)
    }
  };
  var _invoke__7 = function(this$, a, b, c, d, e, f) {
    if(function() {
      var and__3273__auto__ = this$;
      if(and__3273__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$7
      }else {
        return and__3273__auto__
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$7(this$, a, b, c, d, e, f)
    }else {
      var x__3888__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3285__auto__ = cljs.core._invoke[goog.typeOf(x__3888__auto__)];
        if(or__3285__auto__) {
          return or__3285__auto__
        }else {
          var or__3285__auto____$1 = cljs.core._invoke["_"];
          if(or__3285__auto____$1) {
            return or__3285__auto____$1
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f)
    }
  };
  var _invoke__8 = function(this$, a, b, c, d, e, f, g) {
    if(function() {
      var and__3273__auto__ = this$;
      if(and__3273__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$8
      }else {
        return and__3273__auto__
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$8(this$, a, b, c, d, e, f, g)
    }else {
      var x__3888__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3285__auto__ = cljs.core._invoke[goog.typeOf(x__3888__auto__)];
        if(or__3285__auto__) {
          return or__3285__auto__
        }else {
          var or__3285__auto____$1 = cljs.core._invoke["_"];
          if(or__3285__auto____$1) {
            return or__3285__auto____$1
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g)
    }
  };
  var _invoke__9 = function(this$, a, b, c, d, e, f, g, h) {
    if(function() {
      var and__3273__auto__ = this$;
      if(and__3273__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$9
      }else {
        return and__3273__auto__
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$9(this$, a, b, c, d, e, f, g, h)
    }else {
      var x__3888__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3285__auto__ = cljs.core._invoke[goog.typeOf(x__3888__auto__)];
        if(or__3285__auto__) {
          return or__3285__auto__
        }else {
          var or__3285__auto____$1 = cljs.core._invoke["_"];
          if(or__3285__auto____$1) {
            return or__3285__auto____$1
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h)
    }
  };
  var _invoke__10 = function(this$, a, b, c, d, e, f, g, h, i) {
    if(function() {
      var and__3273__auto__ = this$;
      if(and__3273__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$10
      }else {
        return and__3273__auto__
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$10(this$, a, b, c, d, e, f, g, h, i)
    }else {
      var x__3888__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3285__auto__ = cljs.core._invoke[goog.typeOf(x__3888__auto__)];
        if(or__3285__auto__) {
          return or__3285__auto__
        }else {
          var or__3285__auto____$1 = cljs.core._invoke["_"];
          if(or__3285__auto____$1) {
            return or__3285__auto____$1
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i)
    }
  };
  var _invoke__11 = function(this$, a, b, c, d, e, f, g, h, i, j) {
    if(function() {
      var and__3273__auto__ = this$;
      if(and__3273__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$11
      }else {
        return and__3273__auto__
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$11(this$, a, b, c, d, e, f, g, h, i, j)
    }else {
      var x__3888__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3285__auto__ = cljs.core._invoke[goog.typeOf(x__3888__auto__)];
        if(or__3285__auto__) {
          return or__3285__auto__
        }else {
          var or__3285__auto____$1 = cljs.core._invoke["_"];
          if(or__3285__auto____$1) {
            return or__3285__auto____$1
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j)
    }
  };
  var _invoke__12 = function(this$, a, b, c, d, e, f, g, h, i, j, k) {
    if(function() {
      var and__3273__auto__ = this$;
      if(and__3273__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$12
      }else {
        return and__3273__auto__
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$12(this$, a, b, c, d, e, f, g, h, i, j, k)
    }else {
      var x__3888__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3285__auto__ = cljs.core._invoke[goog.typeOf(x__3888__auto__)];
        if(or__3285__auto__) {
          return or__3285__auto__
        }else {
          var or__3285__auto____$1 = cljs.core._invoke["_"];
          if(or__3285__auto____$1) {
            return or__3285__auto____$1
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k)
    }
  };
  var _invoke__13 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l) {
    if(function() {
      var and__3273__auto__ = this$;
      if(and__3273__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$13
      }else {
        return and__3273__auto__
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$13(this$, a, b, c, d, e, f, g, h, i, j, k, l)
    }else {
      var x__3888__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3285__auto__ = cljs.core._invoke[goog.typeOf(x__3888__auto__)];
        if(or__3285__auto__) {
          return or__3285__auto__
        }else {
          var or__3285__auto____$1 = cljs.core._invoke["_"];
          if(or__3285__auto____$1) {
            return or__3285__auto____$1
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l)
    }
  };
  var _invoke__14 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m) {
    if(function() {
      var and__3273__auto__ = this$;
      if(and__3273__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$14
      }else {
        return and__3273__auto__
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$14(this$, a, b, c, d, e, f, g, h, i, j, k, l, m)
    }else {
      var x__3888__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3285__auto__ = cljs.core._invoke[goog.typeOf(x__3888__auto__)];
        if(or__3285__auto__) {
          return or__3285__auto__
        }else {
          var or__3285__auto____$1 = cljs.core._invoke["_"];
          if(or__3285__auto____$1) {
            return or__3285__auto____$1
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m)
    }
  };
  var _invoke__15 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n) {
    if(function() {
      var and__3273__auto__ = this$;
      if(and__3273__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$15
      }else {
        return and__3273__auto__
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$15(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n)
    }else {
      var x__3888__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3285__auto__ = cljs.core._invoke[goog.typeOf(x__3888__auto__)];
        if(or__3285__auto__) {
          return or__3285__auto__
        }else {
          var or__3285__auto____$1 = cljs.core._invoke["_"];
          if(or__3285__auto____$1) {
            return or__3285__auto____$1
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n)
    }
  };
  var _invoke__16 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) {
    if(function() {
      var and__3273__auto__ = this$;
      if(and__3273__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$16
      }else {
        return and__3273__auto__
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$16(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o)
    }else {
      var x__3888__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3285__auto__ = cljs.core._invoke[goog.typeOf(x__3888__auto__)];
        if(or__3285__auto__) {
          return or__3285__auto__
        }else {
          var or__3285__auto____$1 = cljs.core._invoke["_"];
          if(or__3285__auto____$1) {
            return or__3285__auto____$1
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o)
    }
  };
  var _invoke__17 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) {
    if(function() {
      var and__3273__auto__ = this$;
      if(and__3273__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$17
      }else {
        return and__3273__auto__
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$17(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p)
    }else {
      var x__3888__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3285__auto__ = cljs.core._invoke[goog.typeOf(x__3888__auto__)];
        if(or__3285__auto__) {
          return or__3285__auto__
        }else {
          var or__3285__auto____$1 = cljs.core._invoke["_"];
          if(or__3285__auto____$1) {
            return or__3285__auto____$1
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p)
    }
  };
  var _invoke__18 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) {
    if(function() {
      var and__3273__auto__ = this$;
      if(and__3273__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$18
      }else {
        return and__3273__auto__
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$18(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q)
    }else {
      var x__3888__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3285__auto__ = cljs.core._invoke[goog.typeOf(x__3888__auto__)];
        if(or__3285__auto__) {
          return or__3285__auto__
        }else {
          var or__3285__auto____$1 = cljs.core._invoke["_"];
          if(or__3285__auto____$1) {
            return or__3285__auto____$1
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q)
    }
  };
  var _invoke__19 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s) {
    if(function() {
      var and__3273__auto__ = this$;
      if(and__3273__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$19
      }else {
        return and__3273__auto__
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$19(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s)
    }else {
      var x__3888__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3285__auto__ = cljs.core._invoke[goog.typeOf(x__3888__auto__)];
        if(or__3285__auto__) {
          return or__3285__auto__
        }else {
          var or__3285__auto____$1 = cljs.core._invoke["_"];
          if(or__3285__auto____$1) {
            return or__3285__auto____$1
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s)
    }
  };
  var _invoke__20 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s, t) {
    if(function() {
      var and__3273__auto__ = this$;
      if(and__3273__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$20
      }else {
        return and__3273__auto__
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$20(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s, t)
    }else {
      var x__3888__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3285__auto__ = cljs.core._invoke[goog.typeOf(x__3888__auto__)];
        if(or__3285__auto__) {
          return or__3285__auto__
        }else {
          var or__3285__auto____$1 = cljs.core._invoke["_"];
          if(or__3285__auto____$1) {
            return or__3285__auto____$1
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s, t)
    }
  };
  var _invoke__21 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s, t, rest) {
    if(function() {
      var and__3273__auto__ = this$;
      if(and__3273__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$21
      }else {
        return and__3273__auto__
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$21(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s, t, rest)
    }else {
      var x__3888__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3285__auto__ = cljs.core._invoke[goog.typeOf(x__3888__auto__)];
        if(or__3285__auto__) {
          return or__3285__auto__
        }else {
          var or__3285__auto____$1 = cljs.core._invoke["_"];
          if(or__3285__auto____$1) {
            return or__3285__auto____$1
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s, t, rest)
    }
  };
  _invoke = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s, t, rest) {
    switch(arguments.length) {
      case 1:
        return _invoke__1.call(this, this$);
      case 2:
        return _invoke__2.call(this, this$, a);
      case 3:
        return _invoke__3.call(this, this$, a, b);
      case 4:
        return _invoke__4.call(this, this$, a, b, c);
      case 5:
        return _invoke__5.call(this, this$, a, b, c, d);
      case 6:
        return _invoke__6.call(this, this$, a, b, c, d, e);
      case 7:
        return _invoke__7.call(this, this$, a, b, c, d, e, f);
      case 8:
        return _invoke__8.call(this, this$, a, b, c, d, e, f, g);
      case 9:
        return _invoke__9.call(this, this$, a, b, c, d, e, f, g, h);
      case 10:
        return _invoke__10.call(this, this$, a, b, c, d, e, f, g, h, i);
      case 11:
        return _invoke__11.call(this, this$, a, b, c, d, e, f, g, h, i, j);
      case 12:
        return _invoke__12.call(this, this$, a, b, c, d, e, f, g, h, i, j, k);
      case 13:
        return _invoke__13.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l);
      case 14:
        return _invoke__14.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m);
      case 15:
        return _invoke__15.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
      case 16:
        return _invoke__16.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
      case 17:
        return _invoke__17.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
      case 18:
        return _invoke__18.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
      case 19:
        return _invoke__19.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s);
      case 20:
        return _invoke__20.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s, t);
      case 21:
        return _invoke__21.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s, t, rest)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _invoke.cljs$core$IFn$_invoke$arity$1 = _invoke__1;
  _invoke.cljs$core$IFn$_invoke$arity$2 = _invoke__2;
  _invoke.cljs$core$IFn$_invoke$arity$3 = _invoke__3;
  _invoke.cljs$core$IFn$_invoke$arity$4 = _invoke__4;
  _invoke.cljs$core$IFn$_invoke$arity$5 = _invoke__5;
  _invoke.cljs$core$IFn$_invoke$arity$6 = _invoke__6;
  _invoke.cljs$core$IFn$_invoke$arity$7 = _invoke__7;
  _invoke.cljs$core$IFn$_invoke$arity$8 = _invoke__8;
  _invoke.cljs$core$IFn$_invoke$arity$9 = _invoke__9;
  _invoke.cljs$core$IFn$_invoke$arity$10 = _invoke__10;
  _invoke.cljs$core$IFn$_invoke$arity$11 = _invoke__11;
  _invoke.cljs$core$IFn$_invoke$arity$12 = _invoke__12;
  _invoke.cljs$core$IFn$_invoke$arity$13 = _invoke__13;
  _invoke.cljs$core$IFn$_invoke$arity$14 = _invoke__14;
  _invoke.cljs$core$IFn$_invoke$arity$15 = _invoke__15;
  _invoke.cljs$core$IFn$_invoke$arity$16 = _invoke__16;
  _invoke.cljs$core$IFn$_invoke$arity$17 = _invoke__17;
  _invoke.cljs$core$IFn$_invoke$arity$18 = _invoke__18;
  _invoke.cljs$core$IFn$_invoke$arity$19 = _invoke__19;
  _invoke.cljs$core$IFn$_invoke$arity$20 = _invoke__20;
  _invoke.cljs$core$IFn$_invoke$arity$21 = _invoke__21;
  return _invoke
}();
cljs.core.ICounted = function() {
  var obj528863 = {};
  return obj528863
}();
cljs.core._count = function _count(coll) {
  if(function() {
    var and__3273__auto__ = coll;
    if(and__3273__auto__) {
      return coll.cljs$core$ICounted$_count$arity$1
    }else {
      return and__3273__auto__
    }
  }()) {
    return coll.cljs$core$ICounted$_count$arity$1(coll)
  }else {
    var x__3888__auto__ = coll == null ? null : coll;
    return function() {
      var or__3285__auto__ = cljs.core._count[goog.typeOf(x__3888__auto__)];
      if(or__3285__auto__) {
        return or__3285__auto__
      }else {
        var or__3285__auto____$1 = cljs.core._count["_"];
        if(or__3285__auto____$1) {
          return or__3285__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "ICounted.-count", coll);
        }
      }
    }().call(null, coll)
  }
};
cljs.core.IEmptyableCollection = function() {
  var obj528865 = {};
  return obj528865
}();
cljs.core._empty = function _empty(coll) {
  if(function() {
    var and__3273__auto__ = coll;
    if(and__3273__auto__) {
      return coll.cljs$core$IEmptyableCollection$_empty$arity$1
    }else {
      return and__3273__auto__
    }
  }()) {
    return coll.cljs$core$IEmptyableCollection$_empty$arity$1(coll)
  }else {
    var x__3888__auto__ = coll == null ? null : coll;
    return function() {
      var or__3285__auto__ = cljs.core._empty[goog.typeOf(x__3888__auto__)];
      if(or__3285__auto__) {
        return or__3285__auto__
      }else {
        var or__3285__auto____$1 = cljs.core._empty["_"];
        if(or__3285__auto____$1) {
          return or__3285__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "IEmptyableCollection.-empty", coll);
        }
      }
    }().call(null, coll)
  }
};
cljs.core.ICollection = function() {
  var obj528867 = {};
  return obj528867
}();
cljs.core._conj = function _conj(coll, o) {
  if(function() {
    var and__3273__auto__ = coll;
    if(and__3273__auto__) {
      return coll.cljs$core$ICollection$_conj$arity$2
    }else {
      return and__3273__auto__
    }
  }()) {
    return coll.cljs$core$ICollection$_conj$arity$2(coll, o)
  }else {
    var x__3888__auto__ = coll == null ? null : coll;
    return function() {
      var or__3285__auto__ = cljs.core._conj[goog.typeOf(x__3888__auto__)];
      if(or__3285__auto__) {
        return or__3285__auto__
      }else {
        var or__3285__auto____$1 = cljs.core._conj["_"];
        if(or__3285__auto____$1) {
          return or__3285__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "ICollection.-conj", coll);
        }
      }
    }().call(null, coll, o)
  }
};
cljs.core.IIndexed = function() {
  var obj528869 = {};
  return obj528869
}();
cljs.core._nth = function() {
  var _nth = null;
  var _nth__2 = function(coll, n) {
    if(function() {
      var and__3273__auto__ = coll;
      if(and__3273__auto__) {
        return coll.cljs$core$IIndexed$_nth$arity$2
      }else {
        return and__3273__auto__
      }
    }()) {
      return coll.cljs$core$IIndexed$_nth$arity$2(coll, n)
    }else {
      var x__3888__auto__ = coll == null ? null : coll;
      return function() {
        var or__3285__auto__ = cljs.core._nth[goog.typeOf(x__3888__auto__)];
        if(or__3285__auto__) {
          return or__3285__auto__
        }else {
          var or__3285__auto____$1 = cljs.core._nth["_"];
          if(or__3285__auto____$1) {
            return or__3285__auto____$1
          }else {
            throw cljs.core.missing_protocol.call(null, "IIndexed.-nth", coll);
          }
        }
      }().call(null, coll, n)
    }
  };
  var _nth__3 = function(coll, n, not_found) {
    if(function() {
      var and__3273__auto__ = coll;
      if(and__3273__auto__) {
        return coll.cljs$core$IIndexed$_nth$arity$3
      }else {
        return and__3273__auto__
      }
    }()) {
      return coll.cljs$core$IIndexed$_nth$arity$3(coll, n, not_found)
    }else {
      var x__3888__auto__ = coll == null ? null : coll;
      return function() {
        var or__3285__auto__ = cljs.core._nth[goog.typeOf(x__3888__auto__)];
        if(or__3285__auto__) {
          return or__3285__auto__
        }else {
          var or__3285__auto____$1 = cljs.core._nth["_"];
          if(or__3285__auto____$1) {
            return or__3285__auto____$1
          }else {
            throw cljs.core.missing_protocol.call(null, "IIndexed.-nth", coll);
          }
        }
      }().call(null, coll, n, not_found)
    }
  };
  _nth = function(coll, n, not_found) {
    switch(arguments.length) {
      case 2:
        return _nth__2.call(this, coll, n);
      case 3:
        return _nth__3.call(this, coll, n, not_found)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _nth.cljs$core$IFn$_invoke$arity$2 = _nth__2;
  _nth.cljs$core$IFn$_invoke$arity$3 = _nth__3;
  return _nth
}();
cljs.core.ASeq = function() {
  var obj528871 = {};
  return obj528871
}();
cljs.core.ISeq = function() {
  var obj528873 = {};
  return obj528873
}();
cljs.core._first = function _first(coll) {
  if(function() {
    var and__3273__auto__ = coll;
    if(and__3273__auto__) {
      return coll.cljs$core$ISeq$_first$arity$1
    }else {
      return and__3273__auto__
    }
  }()) {
    return coll.cljs$core$ISeq$_first$arity$1(coll)
  }else {
    var x__3888__auto__ = coll == null ? null : coll;
    return function() {
      var or__3285__auto__ = cljs.core._first[goog.typeOf(x__3888__auto__)];
      if(or__3285__auto__) {
        return or__3285__auto__
      }else {
        var or__3285__auto____$1 = cljs.core._first["_"];
        if(or__3285__auto____$1) {
          return or__3285__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "ISeq.-first", coll);
        }
      }
    }().call(null, coll)
  }
};
cljs.core._rest = function _rest(coll) {
  if(function() {
    var and__3273__auto__ = coll;
    if(and__3273__auto__) {
      return coll.cljs$core$ISeq$_rest$arity$1
    }else {
      return and__3273__auto__
    }
  }()) {
    return coll.cljs$core$ISeq$_rest$arity$1(coll)
  }else {
    var x__3888__auto__ = coll == null ? null : coll;
    return function() {
      var or__3285__auto__ = cljs.core._rest[goog.typeOf(x__3888__auto__)];
      if(or__3285__auto__) {
        return or__3285__auto__
      }else {
        var or__3285__auto____$1 = cljs.core._rest["_"];
        if(or__3285__auto____$1) {
          return or__3285__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "ISeq.-rest", coll);
        }
      }
    }().call(null, coll)
  }
};
cljs.core.INext = function() {
  var obj528875 = {};
  return obj528875
}();
cljs.core._next = function _next(coll) {
  if(function() {
    var and__3273__auto__ = coll;
    if(and__3273__auto__) {
      return coll.cljs$core$INext$_next$arity$1
    }else {
      return and__3273__auto__
    }
  }()) {
    return coll.cljs$core$INext$_next$arity$1(coll)
  }else {
    var x__3888__auto__ = coll == null ? null : coll;
    return function() {
      var or__3285__auto__ = cljs.core._next[goog.typeOf(x__3888__auto__)];
      if(or__3285__auto__) {
        return or__3285__auto__
      }else {
        var or__3285__auto____$1 = cljs.core._next["_"];
        if(or__3285__auto____$1) {
          return or__3285__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "INext.-next", coll);
        }
      }
    }().call(null, coll)
  }
};
cljs.core.ILookup = function() {
  var obj528877 = {};
  return obj528877
}();
cljs.core._lookup = function() {
  var _lookup = null;
  var _lookup__2 = function(o, k) {
    if(function() {
      var and__3273__auto__ = o;
      if(and__3273__auto__) {
        return o.cljs$core$ILookup$_lookup$arity$2
      }else {
        return and__3273__auto__
      }
    }()) {
      return o.cljs$core$ILookup$_lookup$arity$2(o, k)
    }else {
      var x__3888__auto__ = o == null ? null : o;
      return function() {
        var or__3285__auto__ = cljs.core._lookup[goog.typeOf(x__3888__auto__)];
        if(or__3285__auto__) {
          return or__3285__auto__
        }else {
          var or__3285__auto____$1 = cljs.core._lookup["_"];
          if(or__3285__auto____$1) {
            return or__3285__auto____$1
          }else {
            throw cljs.core.missing_protocol.call(null, "ILookup.-lookup", o);
          }
        }
      }().call(null, o, k)
    }
  };
  var _lookup__3 = function(o, k, not_found) {
    if(function() {
      var and__3273__auto__ = o;
      if(and__3273__auto__) {
        return o.cljs$core$ILookup$_lookup$arity$3
      }else {
        return and__3273__auto__
      }
    }()) {
      return o.cljs$core$ILookup$_lookup$arity$3(o, k, not_found)
    }else {
      var x__3888__auto__ = o == null ? null : o;
      return function() {
        var or__3285__auto__ = cljs.core._lookup[goog.typeOf(x__3888__auto__)];
        if(or__3285__auto__) {
          return or__3285__auto__
        }else {
          var or__3285__auto____$1 = cljs.core._lookup["_"];
          if(or__3285__auto____$1) {
            return or__3285__auto____$1
          }else {
            throw cljs.core.missing_protocol.call(null, "ILookup.-lookup", o);
          }
        }
      }().call(null, o, k, not_found)
    }
  };
  _lookup = function(o, k, not_found) {
    switch(arguments.length) {
      case 2:
        return _lookup__2.call(this, o, k);
      case 3:
        return _lookup__3.call(this, o, k, not_found)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _lookup.cljs$core$IFn$_invoke$arity$2 = _lookup__2;
  _lookup.cljs$core$IFn$_invoke$arity$3 = _lookup__3;
  return _lookup
}();
cljs.core.IAssociative = function() {
  var obj528879 = {};
  return obj528879
}();
cljs.core._contains_key_QMARK_ = function _contains_key_QMARK_(coll, k) {
  if(function() {
    var and__3273__auto__ = coll;
    if(and__3273__auto__) {
      return coll.cljs$core$IAssociative$_contains_key_QMARK_$arity$2
    }else {
      return and__3273__auto__
    }
  }()) {
    return coll.cljs$core$IAssociative$_contains_key_QMARK_$arity$2(coll, k)
  }else {
    var x__3888__auto__ = coll == null ? null : coll;
    return function() {
      var or__3285__auto__ = cljs.core._contains_key_QMARK_[goog.typeOf(x__3888__auto__)];
      if(or__3285__auto__) {
        return or__3285__auto__
      }else {
        var or__3285__auto____$1 = cljs.core._contains_key_QMARK_["_"];
        if(or__3285__auto____$1) {
          return or__3285__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "IAssociative.-contains-key?", coll);
        }
      }
    }().call(null, coll, k)
  }
};
cljs.core._assoc = function _assoc(coll, k, v) {
  if(function() {
    var and__3273__auto__ = coll;
    if(and__3273__auto__) {
      return coll.cljs$core$IAssociative$_assoc$arity$3
    }else {
      return and__3273__auto__
    }
  }()) {
    return coll.cljs$core$IAssociative$_assoc$arity$3(coll, k, v)
  }else {
    var x__3888__auto__ = coll == null ? null : coll;
    return function() {
      var or__3285__auto__ = cljs.core._assoc[goog.typeOf(x__3888__auto__)];
      if(or__3285__auto__) {
        return or__3285__auto__
      }else {
        var or__3285__auto____$1 = cljs.core._assoc["_"];
        if(or__3285__auto____$1) {
          return or__3285__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "IAssociative.-assoc", coll);
        }
      }
    }().call(null, coll, k, v)
  }
};
cljs.core.IMap = function() {
  var obj528881 = {};
  return obj528881
}();
cljs.core._dissoc = function _dissoc(coll, k) {
  if(function() {
    var and__3273__auto__ = coll;
    if(and__3273__auto__) {
      return coll.cljs$core$IMap$_dissoc$arity$2
    }else {
      return and__3273__auto__
    }
  }()) {
    return coll.cljs$core$IMap$_dissoc$arity$2(coll, k)
  }else {
    var x__3888__auto__ = coll == null ? null : coll;
    return function() {
      var or__3285__auto__ = cljs.core._dissoc[goog.typeOf(x__3888__auto__)];
      if(or__3285__auto__) {
        return or__3285__auto__
      }else {
        var or__3285__auto____$1 = cljs.core._dissoc["_"];
        if(or__3285__auto____$1) {
          return or__3285__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "IMap.-dissoc", coll);
        }
      }
    }().call(null, coll, k)
  }
};
cljs.core.IMapEntry = function() {
  var obj528883 = {};
  return obj528883
}();
cljs.core._key = function _key(coll) {
  if(function() {
    var and__3273__auto__ = coll;
    if(and__3273__auto__) {
      return coll.cljs$core$IMapEntry$_key$arity$1
    }else {
      return and__3273__auto__
    }
  }()) {
    return coll.cljs$core$IMapEntry$_key$arity$1(coll)
  }else {
    var x__3888__auto__ = coll == null ? null : coll;
    return function() {
      var or__3285__auto__ = cljs.core._key[goog.typeOf(x__3888__auto__)];
      if(or__3285__auto__) {
        return or__3285__auto__
      }else {
        var or__3285__auto____$1 = cljs.core._key["_"];
        if(or__3285__auto____$1) {
          return or__3285__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "IMapEntry.-key", coll);
        }
      }
    }().call(null, coll)
  }
};
cljs.core._val = function _val(coll) {
  if(function() {
    var and__3273__auto__ = coll;
    if(and__3273__auto__) {
      return coll.cljs$core$IMapEntry$_val$arity$1
    }else {
      return and__3273__auto__
    }
  }()) {
    return coll.cljs$core$IMapEntry$_val$arity$1(coll)
  }else {
    var x__3888__auto__ = coll == null ? null : coll;
    return function() {
      var or__3285__auto__ = cljs.core._val[goog.typeOf(x__3888__auto__)];
      if(or__3285__auto__) {
        return or__3285__auto__
      }else {
        var or__3285__auto____$1 = cljs.core._val["_"];
        if(or__3285__auto____$1) {
          return or__3285__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "IMapEntry.-val", coll);
        }
      }
    }().call(null, coll)
  }
};
cljs.core.ISet = function() {
  var obj528885 = {};
  return obj528885
}();
cljs.core._disjoin = function _disjoin(coll, v) {
  if(function() {
    var and__3273__auto__ = coll;
    if(and__3273__auto__) {
      return coll.cljs$core$ISet$_disjoin$arity$2
    }else {
      return and__3273__auto__
    }
  }()) {
    return coll.cljs$core$ISet$_disjoin$arity$2(coll, v)
  }else {
    var x__3888__auto__ = coll == null ? null : coll;
    return function() {
      var or__3285__auto__ = cljs.core._disjoin[goog.typeOf(x__3888__auto__)];
      if(or__3285__auto__) {
        return or__3285__auto__
      }else {
        var or__3285__auto____$1 = cljs.core._disjoin["_"];
        if(or__3285__auto____$1) {
          return or__3285__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "ISet.-disjoin", coll);
        }
      }
    }().call(null, coll, v)
  }
};
cljs.core.IStack = function() {
  var obj528887 = {};
  return obj528887
}();
cljs.core._peek = function _peek(coll) {
  if(function() {
    var and__3273__auto__ = coll;
    if(and__3273__auto__) {
      return coll.cljs$core$IStack$_peek$arity$1
    }else {
      return and__3273__auto__
    }
  }()) {
    return coll.cljs$core$IStack$_peek$arity$1(coll)
  }else {
    var x__3888__auto__ = coll == null ? null : coll;
    return function() {
      var or__3285__auto__ = cljs.core._peek[goog.typeOf(x__3888__auto__)];
      if(or__3285__auto__) {
        return or__3285__auto__
      }else {
        var or__3285__auto____$1 = cljs.core._peek["_"];
        if(or__3285__auto____$1) {
          return or__3285__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "IStack.-peek", coll);
        }
      }
    }().call(null, coll)
  }
};
cljs.core._pop = function _pop(coll) {
  if(function() {
    var and__3273__auto__ = coll;
    if(and__3273__auto__) {
      return coll.cljs$core$IStack$_pop$arity$1
    }else {
      return and__3273__auto__
    }
  }()) {
    return coll.cljs$core$IStack$_pop$arity$1(coll)
  }else {
    var x__3888__auto__ = coll == null ? null : coll;
    return function() {
      var or__3285__auto__ = cljs.core._pop[goog.typeOf(x__3888__auto__)];
      if(or__3285__auto__) {
        return or__3285__auto__
      }else {
        var or__3285__auto____$1 = cljs.core._pop["_"];
        if(or__3285__auto____$1) {
          return or__3285__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "IStack.-pop", coll);
        }
      }
    }().call(null, coll)
  }
};
cljs.core.IVector = function() {
  var obj528889 = {};
  return obj528889
}();
cljs.core._assoc_n = function _assoc_n(coll, n, val) {
  if(function() {
    var and__3273__auto__ = coll;
    if(and__3273__auto__) {
      return coll.cljs$core$IVector$_assoc_n$arity$3
    }else {
      return and__3273__auto__
    }
  }()) {
    return coll.cljs$core$IVector$_assoc_n$arity$3(coll, n, val)
  }else {
    var x__3888__auto__ = coll == null ? null : coll;
    return function() {
      var or__3285__auto__ = cljs.core._assoc_n[goog.typeOf(x__3888__auto__)];
      if(or__3285__auto__) {
        return or__3285__auto__
      }else {
        var or__3285__auto____$1 = cljs.core._assoc_n["_"];
        if(or__3285__auto____$1) {
          return or__3285__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "IVector.-assoc-n", coll);
        }
      }
    }().call(null, coll, n, val)
  }
};
cljs.core.IDeref = function() {
  var obj528891 = {};
  return obj528891
}();
cljs.core._deref = function _deref(o) {
  if(function() {
    var and__3273__auto__ = o;
    if(and__3273__auto__) {
      return o.cljs$core$IDeref$_deref$arity$1
    }else {
      return and__3273__auto__
    }
  }()) {
    return o.cljs$core$IDeref$_deref$arity$1(o)
  }else {
    var x__3888__auto__ = o == null ? null : o;
    return function() {
      var or__3285__auto__ = cljs.core._deref[goog.typeOf(x__3888__auto__)];
      if(or__3285__auto__) {
        return or__3285__auto__
      }else {
        var or__3285__auto____$1 = cljs.core._deref["_"];
        if(or__3285__auto____$1) {
          return or__3285__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "IDeref.-deref", o);
        }
      }
    }().call(null, o)
  }
};
cljs.core.IDerefWithTimeout = function() {
  var obj528893 = {};
  return obj528893
}();
cljs.core._deref_with_timeout = function _deref_with_timeout(o, msec, timeout_val) {
  if(function() {
    var and__3273__auto__ = o;
    if(and__3273__auto__) {
      return o.cljs$core$IDerefWithTimeout$_deref_with_timeout$arity$3
    }else {
      return and__3273__auto__
    }
  }()) {
    return o.cljs$core$IDerefWithTimeout$_deref_with_timeout$arity$3(o, msec, timeout_val)
  }else {
    var x__3888__auto__ = o == null ? null : o;
    return function() {
      var or__3285__auto__ = cljs.core._deref_with_timeout[goog.typeOf(x__3888__auto__)];
      if(or__3285__auto__) {
        return or__3285__auto__
      }else {
        var or__3285__auto____$1 = cljs.core._deref_with_timeout["_"];
        if(or__3285__auto____$1) {
          return or__3285__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "IDerefWithTimeout.-deref-with-timeout", o);
        }
      }
    }().call(null, o, msec, timeout_val)
  }
};
cljs.core.IMeta = function() {
  var obj528895 = {};
  return obj528895
}();
cljs.core._meta = function _meta(o) {
  if(function() {
    var and__3273__auto__ = o;
    if(and__3273__auto__) {
      return o.cljs$core$IMeta$_meta$arity$1
    }else {
      return and__3273__auto__
    }
  }()) {
    return o.cljs$core$IMeta$_meta$arity$1(o)
  }else {
    var x__3888__auto__ = o == null ? null : o;
    return function() {
      var or__3285__auto__ = cljs.core._meta[goog.typeOf(x__3888__auto__)];
      if(or__3285__auto__) {
        return or__3285__auto__
      }else {
        var or__3285__auto____$1 = cljs.core._meta["_"];
        if(or__3285__auto____$1) {
          return or__3285__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "IMeta.-meta", o);
        }
      }
    }().call(null, o)
  }
};
cljs.core.IWithMeta = function() {
  var obj528897 = {};
  return obj528897
}();
cljs.core._with_meta = function _with_meta(o, meta) {
  if(function() {
    var and__3273__auto__ = o;
    if(and__3273__auto__) {
      return o.cljs$core$IWithMeta$_with_meta$arity$2
    }else {
      return and__3273__auto__
    }
  }()) {
    return o.cljs$core$IWithMeta$_with_meta$arity$2(o, meta)
  }else {
    var x__3888__auto__ = o == null ? null : o;
    return function() {
      var or__3285__auto__ = cljs.core._with_meta[goog.typeOf(x__3888__auto__)];
      if(or__3285__auto__) {
        return or__3285__auto__
      }else {
        var or__3285__auto____$1 = cljs.core._with_meta["_"];
        if(or__3285__auto____$1) {
          return or__3285__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "IWithMeta.-with-meta", o);
        }
      }
    }().call(null, o, meta)
  }
};
cljs.core.IReduce = function() {
  var obj528899 = {};
  return obj528899
}();
cljs.core._reduce = function() {
  var _reduce = null;
  var _reduce__2 = function(coll, f) {
    if(function() {
      var and__3273__auto__ = coll;
      if(and__3273__auto__) {
        return coll.cljs$core$IReduce$_reduce$arity$2
      }else {
        return and__3273__auto__
      }
    }()) {
      return coll.cljs$core$IReduce$_reduce$arity$2(coll, f)
    }else {
      var x__3888__auto__ = coll == null ? null : coll;
      return function() {
        var or__3285__auto__ = cljs.core._reduce[goog.typeOf(x__3888__auto__)];
        if(or__3285__auto__) {
          return or__3285__auto__
        }else {
          var or__3285__auto____$1 = cljs.core._reduce["_"];
          if(or__3285__auto____$1) {
            return or__3285__auto____$1
          }else {
            throw cljs.core.missing_protocol.call(null, "IReduce.-reduce", coll);
          }
        }
      }().call(null, coll, f)
    }
  };
  var _reduce__3 = function(coll, f, start) {
    if(function() {
      var and__3273__auto__ = coll;
      if(and__3273__auto__) {
        return coll.cljs$core$IReduce$_reduce$arity$3
      }else {
        return and__3273__auto__
      }
    }()) {
      return coll.cljs$core$IReduce$_reduce$arity$3(coll, f, start)
    }else {
      var x__3888__auto__ = coll == null ? null : coll;
      return function() {
        var or__3285__auto__ = cljs.core._reduce[goog.typeOf(x__3888__auto__)];
        if(or__3285__auto__) {
          return or__3285__auto__
        }else {
          var or__3285__auto____$1 = cljs.core._reduce["_"];
          if(or__3285__auto____$1) {
            return or__3285__auto____$1
          }else {
            throw cljs.core.missing_protocol.call(null, "IReduce.-reduce", coll);
          }
        }
      }().call(null, coll, f, start)
    }
  };
  _reduce = function(coll, f, start) {
    switch(arguments.length) {
      case 2:
        return _reduce__2.call(this, coll, f);
      case 3:
        return _reduce__3.call(this, coll, f, start)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _reduce.cljs$core$IFn$_invoke$arity$2 = _reduce__2;
  _reduce.cljs$core$IFn$_invoke$arity$3 = _reduce__3;
  return _reduce
}();
cljs.core.IKVReduce = function() {
  var obj528901 = {};
  return obj528901
}();
cljs.core._kv_reduce = function _kv_reduce(coll, f, init) {
  if(function() {
    var and__3273__auto__ = coll;
    if(and__3273__auto__) {
      return coll.cljs$core$IKVReduce$_kv_reduce$arity$3
    }else {
      return and__3273__auto__
    }
  }()) {
    return coll.cljs$core$IKVReduce$_kv_reduce$arity$3(coll, f, init)
  }else {
    var x__3888__auto__ = coll == null ? null : coll;
    return function() {
      var or__3285__auto__ = cljs.core._kv_reduce[goog.typeOf(x__3888__auto__)];
      if(or__3285__auto__) {
        return or__3285__auto__
      }else {
        var or__3285__auto____$1 = cljs.core._kv_reduce["_"];
        if(or__3285__auto____$1) {
          return or__3285__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "IKVReduce.-kv-reduce", coll);
        }
      }
    }().call(null, coll, f, init)
  }
};
cljs.core.IEquiv = function() {
  var obj528903 = {};
  return obj528903
}();
cljs.core._equiv = function _equiv(o, other) {
  if(function() {
    var and__3273__auto__ = o;
    if(and__3273__auto__) {
      return o.cljs$core$IEquiv$_equiv$arity$2
    }else {
      return and__3273__auto__
    }
  }()) {
    return o.cljs$core$IEquiv$_equiv$arity$2(o, other)
  }else {
    var x__3888__auto__ = o == null ? null : o;
    return function() {
      var or__3285__auto__ = cljs.core._equiv[goog.typeOf(x__3888__auto__)];
      if(or__3285__auto__) {
        return or__3285__auto__
      }else {
        var or__3285__auto____$1 = cljs.core._equiv["_"];
        if(or__3285__auto____$1) {
          return or__3285__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "IEquiv.-equiv", o);
        }
      }
    }().call(null, o, other)
  }
};
cljs.core.IHash = function() {
  var obj528905 = {};
  return obj528905
}();
cljs.core._hash = function _hash(o) {
  if(function() {
    var and__3273__auto__ = o;
    if(and__3273__auto__) {
      return o.cljs$core$IHash$_hash$arity$1
    }else {
      return and__3273__auto__
    }
  }()) {
    return o.cljs$core$IHash$_hash$arity$1(o)
  }else {
    var x__3888__auto__ = o == null ? null : o;
    return function() {
      var or__3285__auto__ = cljs.core._hash[goog.typeOf(x__3888__auto__)];
      if(or__3285__auto__) {
        return or__3285__auto__
      }else {
        var or__3285__auto____$1 = cljs.core._hash["_"];
        if(or__3285__auto____$1) {
          return or__3285__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "IHash.-hash", o);
        }
      }
    }().call(null, o)
  }
};
cljs.core.ISeqable = function() {
  var obj528907 = {};
  return obj528907
}();
cljs.core._seq = function _seq(o) {
  if(function() {
    var and__3273__auto__ = o;
    if(and__3273__auto__) {
      return o.cljs$core$ISeqable$_seq$arity$1
    }else {
      return and__3273__auto__
    }
  }()) {
    return o.cljs$core$ISeqable$_seq$arity$1(o)
  }else {
    var x__3888__auto__ = o == null ? null : o;
    return function() {
      var or__3285__auto__ = cljs.core._seq[goog.typeOf(x__3888__auto__)];
      if(or__3285__auto__) {
        return or__3285__auto__
      }else {
        var or__3285__auto____$1 = cljs.core._seq["_"];
        if(or__3285__auto____$1) {
          return or__3285__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "ISeqable.-seq", o);
        }
      }
    }().call(null, o)
  }
};
cljs.core.ISequential = function() {
  var obj528909 = {};
  return obj528909
}();
cljs.core.IList = function() {
  var obj528911 = {};
  return obj528911
}();
cljs.core.IRecord = function() {
  var obj528913 = {};
  return obj528913
}();
cljs.core.IReversible = function() {
  var obj528915 = {};
  return obj528915
}();
cljs.core._rseq = function _rseq(coll) {
  if(function() {
    var and__3273__auto__ = coll;
    if(and__3273__auto__) {
      return coll.cljs$core$IReversible$_rseq$arity$1
    }else {
      return and__3273__auto__
    }
  }()) {
    return coll.cljs$core$IReversible$_rseq$arity$1(coll)
  }else {
    var x__3888__auto__ = coll == null ? null : coll;
    return function() {
      var or__3285__auto__ = cljs.core._rseq[goog.typeOf(x__3888__auto__)];
      if(or__3285__auto__) {
        return or__3285__auto__
      }else {
        var or__3285__auto____$1 = cljs.core._rseq["_"];
        if(or__3285__auto____$1) {
          return or__3285__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "IReversible.-rseq", coll);
        }
      }
    }().call(null, coll)
  }
};
cljs.core.ISorted = function() {
  var obj528917 = {};
  return obj528917
}();
cljs.core._sorted_seq = function _sorted_seq(coll, ascending_QMARK_) {
  if(function() {
    var and__3273__auto__ = coll;
    if(and__3273__auto__) {
      return coll.cljs$core$ISorted$_sorted_seq$arity$2
    }else {
      return and__3273__auto__
    }
  }()) {
    return coll.cljs$core$ISorted$_sorted_seq$arity$2(coll, ascending_QMARK_)
  }else {
    var x__3888__auto__ = coll == null ? null : coll;
    return function() {
      var or__3285__auto__ = cljs.core._sorted_seq[goog.typeOf(x__3888__auto__)];
      if(or__3285__auto__) {
        return or__3285__auto__
      }else {
        var or__3285__auto____$1 = cljs.core._sorted_seq["_"];
        if(or__3285__auto____$1) {
          return or__3285__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "ISorted.-sorted-seq", coll);
        }
      }
    }().call(null, coll, ascending_QMARK_)
  }
};
cljs.core._sorted_seq_from = function _sorted_seq_from(coll, k, ascending_QMARK_) {
  if(function() {
    var and__3273__auto__ = coll;
    if(and__3273__auto__) {
      return coll.cljs$core$ISorted$_sorted_seq_from$arity$3
    }else {
      return and__3273__auto__
    }
  }()) {
    return coll.cljs$core$ISorted$_sorted_seq_from$arity$3(coll, k, ascending_QMARK_)
  }else {
    var x__3888__auto__ = coll == null ? null : coll;
    return function() {
      var or__3285__auto__ = cljs.core._sorted_seq_from[goog.typeOf(x__3888__auto__)];
      if(or__3285__auto__) {
        return or__3285__auto__
      }else {
        var or__3285__auto____$1 = cljs.core._sorted_seq_from["_"];
        if(or__3285__auto____$1) {
          return or__3285__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "ISorted.-sorted-seq-from", coll);
        }
      }
    }().call(null, coll, k, ascending_QMARK_)
  }
};
cljs.core._entry_key = function _entry_key(coll, entry) {
  if(function() {
    var and__3273__auto__ = coll;
    if(and__3273__auto__) {
      return coll.cljs$core$ISorted$_entry_key$arity$2
    }else {
      return and__3273__auto__
    }
  }()) {
    return coll.cljs$core$ISorted$_entry_key$arity$2(coll, entry)
  }else {
    var x__3888__auto__ = coll == null ? null : coll;
    return function() {
      var or__3285__auto__ = cljs.core._entry_key[goog.typeOf(x__3888__auto__)];
      if(or__3285__auto__) {
        return or__3285__auto__
      }else {
        var or__3285__auto____$1 = cljs.core._entry_key["_"];
        if(or__3285__auto____$1) {
          return or__3285__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "ISorted.-entry-key", coll);
        }
      }
    }().call(null, coll, entry)
  }
};
cljs.core._comparator = function _comparator(coll) {
  if(function() {
    var and__3273__auto__ = coll;
    if(and__3273__auto__) {
      return coll.cljs$core$ISorted$_comparator$arity$1
    }else {
      return and__3273__auto__
    }
  }()) {
    return coll.cljs$core$ISorted$_comparator$arity$1(coll)
  }else {
    var x__3888__auto__ = coll == null ? null : coll;
    return function() {
      var or__3285__auto__ = cljs.core._comparator[goog.typeOf(x__3888__auto__)];
      if(or__3285__auto__) {
        return or__3285__auto__
      }else {
        var or__3285__auto____$1 = cljs.core._comparator["_"];
        if(or__3285__auto____$1) {
          return or__3285__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "ISorted.-comparator", coll);
        }
      }
    }().call(null, coll)
  }
};
cljs.core.IWriter = function() {
  var obj528919 = {};
  return obj528919
}();
cljs.core._write = function _write(writer, s) {
  if(function() {
    var and__3273__auto__ = writer;
    if(and__3273__auto__) {
      return writer.cljs$core$IWriter$_write$arity$2
    }else {
      return and__3273__auto__
    }
  }()) {
    return writer.cljs$core$IWriter$_write$arity$2(writer, s)
  }else {
    var x__3888__auto__ = writer == null ? null : writer;
    return function() {
      var or__3285__auto__ = cljs.core._write[goog.typeOf(x__3888__auto__)];
      if(or__3285__auto__) {
        return or__3285__auto__
      }else {
        var or__3285__auto____$1 = cljs.core._write["_"];
        if(or__3285__auto____$1) {
          return or__3285__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "IWriter.-write", writer);
        }
      }
    }().call(null, writer, s)
  }
};
cljs.core._flush = function _flush(writer) {
  if(function() {
    var and__3273__auto__ = writer;
    if(and__3273__auto__) {
      return writer.cljs$core$IWriter$_flush$arity$1
    }else {
      return and__3273__auto__
    }
  }()) {
    return writer.cljs$core$IWriter$_flush$arity$1(writer)
  }else {
    var x__3888__auto__ = writer == null ? null : writer;
    return function() {
      var or__3285__auto__ = cljs.core._flush[goog.typeOf(x__3888__auto__)];
      if(or__3285__auto__) {
        return or__3285__auto__
      }else {
        var or__3285__auto____$1 = cljs.core._flush["_"];
        if(or__3285__auto____$1) {
          return or__3285__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "IWriter.-flush", writer);
        }
      }
    }().call(null, writer)
  }
};
cljs.core.IPrintWithWriter = function() {
  var obj528921 = {};
  return obj528921
}();
cljs.core._pr_writer = function _pr_writer(o, writer, opts) {
  if(function() {
    var and__3273__auto__ = o;
    if(and__3273__auto__) {
      return o.cljs$core$IPrintWithWriter$_pr_writer$arity$3
    }else {
      return and__3273__auto__
    }
  }()) {
    return o.cljs$core$IPrintWithWriter$_pr_writer$arity$3(o, writer, opts)
  }else {
    var x__3888__auto__ = o == null ? null : o;
    return function() {
      var or__3285__auto__ = cljs.core._pr_writer[goog.typeOf(x__3888__auto__)];
      if(or__3285__auto__) {
        return or__3285__auto__
      }else {
        var or__3285__auto____$1 = cljs.core._pr_writer["_"];
        if(or__3285__auto____$1) {
          return or__3285__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "IPrintWithWriter.-pr-writer", o);
        }
      }
    }().call(null, o, writer, opts)
  }
};
cljs.core.IPending = function() {
  var obj528923 = {};
  return obj528923
}();
cljs.core._realized_QMARK_ = function _realized_QMARK_(d) {
  if(function() {
    var and__3273__auto__ = d;
    if(and__3273__auto__) {
      return d.cljs$core$IPending$_realized_QMARK_$arity$1
    }else {
      return and__3273__auto__
    }
  }()) {
    return d.cljs$core$IPending$_realized_QMARK_$arity$1(d)
  }else {
    var x__3888__auto__ = d == null ? null : d;
    return function() {
      var or__3285__auto__ = cljs.core._realized_QMARK_[goog.typeOf(x__3888__auto__)];
      if(or__3285__auto__) {
        return or__3285__auto__
      }else {
        var or__3285__auto____$1 = cljs.core._realized_QMARK_["_"];
        if(or__3285__auto____$1) {
          return or__3285__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "IPending.-realized?", d);
        }
      }
    }().call(null, d)
  }
};
cljs.core.IWatchable = function() {
  var obj528925 = {};
  return obj528925
}();
cljs.core._notify_watches = function _notify_watches(this$, oldval, newval) {
  if(function() {
    var and__3273__auto__ = this$;
    if(and__3273__auto__) {
      return this$.cljs$core$IWatchable$_notify_watches$arity$3
    }else {
      return and__3273__auto__
    }
  }()) {
    return this$.cljs$core$IWatchable$_notify_watches$arity$3(this$, oldval, newval)
  }else {
    var x__3888__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3285__auto__ = cljs.core._notify_watches[goog.typeOf(x__3888__auto__)];
      if(or__3285__auto__) {
        return or__3285__auto__
      }else {
        var or__3285__auto____$1 = cljs.core._notify_watches["_"];
        if(or__3285__auto____$1) {
          return or__3285__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "IWatchable.-notify-watches", this$);
        }
      }
    }().call(null, this$, oldval, newval)
  }
};
cljs.core._add_watch = function _add_watch(this$, key, f) {
  if(function() {
    var and__3273__auto__ = this$;
    if(and__3273__auto__) {
      return this$.cljs$core$IWatchable$_add_watch$arity$3
    }else {
      return and__3273__auto__
    }
  }()) {
    return this$.cljs$core$IWatchable$_add_watch$arity$3(this$, key, f)
  }else {
    var x__3888__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3285__auto__ = cljs.core._add_watch[goog.typeOf(x__3888__auto__)];
      if(or__3285__auto__) {
        return or__3285__auto__
      }else {
        var or__3285__auto____$1 = cljs.core._add_watch["_"];
        if(or__3285__auto____$1) {
          return or__3285__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "IWatchable.-add-watch", this$);
        }
      }
    }().call(null, this$, key, f)
  }
};
cljs.core._remove_watch = function _remove_watch(this$, key) {
  if(function() {
    var and__3273__auto__ = this$;
    if(and__3273__auto__) {
      return this$.cljs$core$IWatchable$_remove_watch$arity$2
    }else {
      return and__3273__auto__
    }
  }()) {
    return this$.cljs$core$IWatchable$_remove_watch$arity$2(this$, key)
  }else {
    var x__3888__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3285__auto__ = cljs.core._remove_watch[goog.typeOf(x__3888__auto__)];
      if(or__3285__auto__) {
        return or__3285__auto__
      }else {
        var or__3285__auto____$1 = cljs.core._remove_watch["_"];
        if(or__3285__auto____$1) {
          return or__3285__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "IWatchable.-remove-watch", this$);
        }
      }
    }().call(null, this$, key)
  }
};
cljs.core.IEditableCollection = function() {
  var obj528927 = {};
  return obj528927
}();
cljs.core._as_transient = function _as_transient(coll) {
  if(function() {
    var and__3273__auto__ = coll;
    if(and__3273__auto__) {
      return coll.cljs$core$IEditableCollection$_as_transient$arity$1
    }else {
      return and__3273__auto__
    }
  }()) {
    return coll.cljs$core$IEditableCollection$_as_transient$arity$1(coll)
  }else {
    var x__3888__auto__ = coll == null ? null : coll;
    return function() {
      var or__3285__auto__ = cljs.core._as_transient[goog.typeOf(x__3888__auto__)];
      if(or__3285__auto__) {
        return or__3285__auto__
      }else {
        var or__3285__auto____$1 = cljs.core._as_transient["_"];
        if(or__3285__auto____$1) {
          return or__3285__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "IEditableCollection.-as-transient", coll);
        }
      }
    }().call(null, coll)
  }
};
cljs.core.ITransientCollection = function() {
  var obj528929 = {};
  return obj528929
}();
cljs.core._conj_BANG_ = function _conj_BANG_(tcoll, val) {
  if(function() {
    var and__3273__auto__ = tcoll;
    if(and__3273__auto__) {
      return tcoll.cljs$core$ITransientCollection$_conj_BANG_$arity$2
    }else {
      return and__3273__auto__
    }
  }()) {
    return tcoll.cljs$core$ITransientCollection$_conj_BANG_$arity$2(tcoll, val)
  }else {
    var x__3888__auto__ = tcoll == null ? null : tcoll;
    return function() {
      var or__3285__auto__ = cljs.core._conj_BANG_[goog.typeOf(x__3888__auto__)];
      if(or__3285__auto__) {
        return or__3285__auto__
      }else {
        var or__3285__auto____$1 = cljs.core._conj_BANG_["_"];
        if(or__3285__auto____$1) {
          return or__3285__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "ITransientCollection.-conj!", tcoll);
        }
      }
    }().call(null, tcoll, val)
  }
};
cljs.core._persistent_BANG_ = function _persistent_BANG_(tcoll) {
  if(function() {
    var and__3273__auto__ = tcoll;
    if(and__3273__auto__) {
      return tcoll.cljs$core$ITransientCollection$_persistent_BANG_$arity$1
    }else {
      return and__3273__auto__
    }
  }()) {
    return tcoll.cljs$core$ITransientCollection$_persistent_BANG_$arity$1(tcoll)
  }else {
    var x__3888__auto__ = tcoll == null ? null : tcoll;
    return function() {
      var or__3285__auto__ = cljs.core._persistent_BANG_[goog.typeOf(x__3888__auto__)];
      if(or__3285__auto__) {
        return or__3285__auto__
      }else {
        var or__3285__auto____$1 = cljs.core._persistent_BANG_["_"];
        if(or__3285__auto____$1) {
          return or__3285__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "ITransientCollection.-persistent!", tcoll);
        }
      }
    }().call(null, tcoll)
  }
};
cljs.core.ITransientAssociative = function() {
  var obj528931 = {};
  return obj528931
}();
cljs.core._assoc_BANG_ = function _assoc_BANG_(tcoll, key, val) {
  if(function() {
    var and__3273__auto__ = tcoll;
    if(and__3273__auto__) {
      return tcoll.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3
    }else {
      return and__3273__auto__
    }
  }()) {
    return tcoll.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3(tcoll, key, val)
  }else {
    var x__3888__auto__ = tcoll == null ? null : tcoll;
    return function() {
      var or__3285__auto__ = cljs.core._assoc_BANG_[goog.typeOf(x__3888__auto__)];
      if(or__3285__auto__) {
        return or__3285__auto__
      }else {
        var or__3285__auto____$1 = cljs.core._assoc_BANG_["_"];
        if(or__3285__auto____$1) {
          return or__3285__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "ITransientAssociative.-assoc!", tcoll);
        }
      }
    }().call(null, tcoll, key, val)
  }
};
cljs.core.ITransientMap = function() {
  var obj528933 = {};
  return obj528933
}();
cljs.core._dissoc_BANG_ = function _dissoc_BANG_(tcoll, key) {
  if(function() {
    var and__3273__auto__ = tcoll;
    if(and__3273__auto__) {
      return tcoll.cljs$core$ITransientMap$_dissoc_BANG_$arity$2
    }else {
      return and__3273__auto__
    }
  }()) {
    return tcoll.cljs$core$ITransientMap$_dissoc_BANG_$arity$2(tcoll, key)
  }else {
    var x__3888__auto__ = tcoll == null ? null : tcoll;
    return function() {
      var or__3285__auto__ = cljs.core._dissoc_BANG_[goog.typeOf(x__3888__auto__)];
      if(or__3285__auto__) {
        return or__3285__auto__
      }else {
        var or__3285__auto____$1 = cljs.core._dissoc_BANG_["_"];
        if(or__3285__auto____$1) {
          return or__3285__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "ITransientMap.-dissoc!", tcoll);
        }
      }
    }().call(null, tcoll, key)
  }
};
cljs.core.ITransientVector = function() {
  var obj528935 = {};
  return obj528935
}();
cljs.core._assoc_n_BANG_ = function _assoc_n_BANG_(tcoll, n, val) {
  if(function() {
    var and__3273__auto__ = tcoll;
    if(and__3273__auto__) {
      return tcoll.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3
    }else {
      return and__3273__auto__
    }
  }()) {
    return tcoll.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3(tcoll, n, val)
  }else {
    var x__3888__auto__ = tcoll == null ? null : tcoll;
    return function() {
      var or__3285__auto__ = cljs.core._assoc_n_BANG_[goog.typeOf(x__3888__auto__)];
      if(or__3285__auto__) {
        return or__3285__auto__
      }else {
        var or__3285__auto____$1 = cljs.core._assoc_n_BANG_["_"];
        if(or__3285__auto____$1) {
          return or__3285__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "ITransientVector.-assoc-n!", tcoll);
        }
      }
    }().call(null, tcoll, n, val)
  }
};
cljs.core._pop_BANG_ = function _pop_BANG_(tcoll) {
  if(function() {
    var and__3273__auto__ = tcoll;
    if(and__3273__auto__) {
      return tcoll.cljs$core$ITransientVector$_pop_BANG_$arity$1
    }else {
      return and__3273__auto__
    }
  }()) {
    return tcoll.cljs$core$ITransientVector$_pop_BANG_$arity$1(tcoll)
  }else {
    var x__3888__auto__ = tcoll == null ? null : tcoll;
    return function() {
      var or__3285__auto__ = cljs.core._pop_BANG_[goog.typeOf(x__3888__auto__)];
      if(or__3285__auto__) {
        return or__3285__auto__
      }else {
        var or__3285__auto____$1 = cljs.core._pop_BANG_["_"];
        if(or__3285__auto____$1) {
          return or__3285__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "ITransientVector.-pop!", tcoll);
        }
      }
    }().call(null, tcoll)
  }
};
cljs.core.ITransientSet = function() {
  var obj528937 = {};
  return obj528937
}();
cljs.core._disjoin_BANG_ = function _disjoin_BANG_(tcoll, v) {
  if(function() {
    var and__3273__auto__ = tcoll;
    if(and__3273__auto__) {
      return tcoll.cljs$core$ITransientSet$_disjoin_BANG_$arity$2
    }else {
      return and__3273__auto__
    }
  }()) {
    return tcoll.cljs$core$ITransientSet$_disjoin_BANG_$arity$2(tcoll, v)
  }else {
    var x__3888__auto__ = tcoll == null ? null : tcoll;
    return function() {
      var or__3285__auto__ = cljs.core._disjoin_BANG_[goog.typeOf(x__3888__auto__)];
      if(or__3285__auto__) {
        return or__3285__auto__
      }else {
        var or__3285__auto____$1 = cljs.core._disjoin_BANG_["_"];
        if(or__3285__auto____$1) {
          return or__3285__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "ITransientSet.-disjoin!", tcoll);
        }
      }
    }().call(null, tcoll, v)
  }
};
cljs.core.IComparable = function() {
  var obj528939 = {};
  return obj528939
}();
cljs.core._compare = function _compare(x, y) {
  if(function() {
    var and__3273__auto__ = x;
    if(and__3273__auto__) {
      return x.cljs$core$IComparable$_compare$arity$2
    }else {
      return and__3273__auto__
    }
  }()) {
    return x.cljs$core$IComparable$_compare$arity$2(x, y)
  }else {
    var x__3888__auto__ = x == null ? null : x;
    return function() {
      var or__3285__auto__ = cljs.core._compare[goog.typeOf(x__3888__auto__)];
      if(or__3285__auto__) {
        return or__3285__auto__
      }else {
        var or__3285__auto____$1 = cljs.core._compare["_"];
        if(or__3285__auto____$1) {
          return or__3285__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "IComparable.-compare", x);
        }
      }
    }().call(null, x, y)
  }
};
cljs.core.IChunk = function() {
  var obj528941 = {};
  return obj528941
}();
cljs.core._drop_first = function _drop_first(coll) {
  if(function() {
    var and__3273__auto__ = coll;
    if(and__3273__auto__) {
      return coll.cljs$core$IChunk$_drop_first$arity$1
    }else {
      return and__3273__auto__
    }
  }()) {
    return coll.cljs$core$IChunk$_drop_first$arity$1(coll)
  }else {
    var x__3888__auto__ = coll == null ? null : coll;
    return function() {
      var or__3285__auto__ = cljs.core._drop_first[goog.typeOf(x__3888__auto__)];
      if(or__3285__auto__) {
        return or__3285__auto__
      }else {
        var or__3285__auto____$1 = cljs.core._drop_first["_"];
        if(or__3285__auto____$1) {
          return or__3285__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "IChunk.-drop-first", coll);
        }
      }
    }().call(null, coll)
  }
};
cljs.core.IChunkedSeq = function() {
  var obj528943 = {};
  return obj528943
}();
cljs.core._chunked_first = function _chunked_first(coll) {
  if(function() {
    var and__3273__auto__ = coll;
    if(and__3273__auto__) {
      return coll.cljs$core$IChunkedSeq$_chunked_first$arity$1
    }else {
      return and__3273__auto__
    }
  }()) {
    return coll.cljs$core$IChunkedSeq$_chunked_first$arity$1(coll)
  }else {
    var x__3888__auto__ = coll == null ? null : coll;
    return function() {
      var or__3285__auto__ = cljs.core._chunked_first[goog.typeOf(x__3888__auto__)];
      if(or__3285__auto__) {
        return or__3285__auto__
      }else {
        var or__3285__auto____$1 = cljs.core._chunked_first["_"];
        if(or__3285__auto____$1) {
          return or__3285__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "IChunkedSeq.-chunked-first", coll);
        }
      }
    }().call(null, coll)
  }
};
cljs.core._chunked_rest = function _chunked_rest(coll) {
  if(function() {
    var and__3273__auto__ = coll;
    if(and__3273__auto__) {
      return coll.cljs$core$IChunkedSeq$_chunked_rest$arity$1
    }else {
      return and__3273__auto__
    }
  }()) {
    return coll.cljs$core$IChunkedSeq$_chunked_rest$arity$1(coll)
  }else {
    var x__3888__auto__ = coll == null ? null : coll;
    return function() {
      var or__3285__auto__ = cljs.core._chunked_rest[goog.typeOf(x__3888__auto__)];
      if(or__3285__auto__) {
        return or__3285__auto__
      }else {
        var or__3285__auto____$1 = cljs.core._chunked_rest["_"];
        if(or__3285__auto____$1) {
          return or__3285__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "IChunkedSeq.-chunked-rest", coll);
        }
      }
    }().call(null, coll)
  }
};
cljs.core.IChunkedNext = function() {
  var obj528945 = {};
  return obj528945
}();
cljs.core._chunked_next = function _chunked_next(coll) {
  if(function() {
    var and__3273__auto__ = coll;
    if(and__3273__auto__) {
      return coll.cljs$core$IChunkedNext$_chunked_next$arity$1
    }else {
      return and__3273__auto__
    }
  }()) {
    return coll.cljs$core$IChunkedNext$_chunked_next$arity$1(coll)
  }else {
    var x__3888__auto__ = coll == null ? null : coll;
    return function() {
      var or__3285__auto__ = cljs.core._chunked_next[goog.typeOf(x__3888__auto__)];
      if(or__3285__auto__) {
        return or__3285__auto__
      }else {
        var or__3285__auto____$1 = cljs.core._chunked_next["_"];
        if(or__3285__auto____$1) {
          return or__3285__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "IChunkedNext.-chunked-next", coll);
        }
      }
    }().call(null, coll)
  }
};
cljs.core.INamed = function() {
  var obj528947 = {};
  return obj528947
}();
cljs.core._name = function _name(x) {
  if(function() {
    var and__3273__auto__ = x;
    if(and__3273__auto__) {
      return x.cljs$core$INamed$_name$arity$1
    }else {
      return and__3273__auto__
    }
  }()) {
    return x.cljs$core$INamed$_name$arity$1(x)
  }else {
    var x__3888__auto__ = x == null ? null : x;
    return function() {
      var or__3285__auto__ = cljs.core._name[goog.typeOf(x__3888__auto__)];
      if(or__3285__auto__) {
        return or__3285__auto__
      }else {
        var or__3285__auto____$1 = cljs.core._name["_"];
        if(or__3285__auto____$1) {
          return or__3285__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "INamed.-name", x);
        }
      }
    }().call(null, x)
  }
};
cljs.core._namespace = function _namespace(x) {
  if(function() {
    var and__3273__auto__ = x;
    if(and__3273__auto__) {
      return x.cljs$core$INamed$_namespace$arity$1
    }else {
      return and__3273__auto__
    }
  }()) {
    return x.cljs$core$INamed$_namespace$arity$1(x)
  }else {
    var x__3888__auto__ = x == null ? null : x;
    return function() {
      var or__3285__auto__ = cljs.core._namespace[goog.typeOf(x__3888__auto__)];
      if(or__3285__auto__) {
        return or__3285__auto__
      }else {
        var or__3285__auto____$1 = cljs.core._namespace["_"];
        if(or__3285__auto____$1) {
          return or__3285__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "INamed.-namespace", x);
        }
      }
    }().call(null, x)
  }
};
cljs.core.StringBufferWriter = function(sb) {
  this.sb = sb;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 1073741824
};
cljs.core.StringBufferWriter.cljs$lang$type = true;
cljs.core.StringBufferWriter.cljs$lang$ctorStr = "cljs.core/StringBufferWriter";
cljs.core.StringBufferWriter.cljs$lang$ctorPrWriter = function(this__3829__auto__, writer__3830__auto__, opt__3831__auto__) {
  return cljs.core._write.call(null, writer__3830__auto__, "cljs.core/StringBufferWriter")
};
cljs.core.StringBufferWriter.prototype.cljs$core$IWriter$_write$arity$2 = function(_, s) {
  var self__ = this;
  var ___$1 = this;
  return self__.sb.append(s)
};
cljs.core.StringBufferWriter.prototype.cljs$core$IWriter$_flush$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return null
};
cljs.core.__GT_StringBufferWriter = function __GT_StringBufferWriter(sb) {
  return new cljs.core.StringBufferWriter(sb)
};
cljs.core.pr_str_STAR_ = function pr_str_STAR_(obj) {
  var sb = new goog.string.StringBuffer;
  var writer = new cljs.core.StringBufferWriter(sb);
  cljs.core._pr_writer.call(null, obj, writer, cljs.core.pr_opts.call(null));
  cljs.core._flush.call(null, writer);
  return[cljs.core.str(sb)].join("")
};
cljs.core.instance_QMARK_ = function instance_QMARK_(t, o) {
  return o instanceof t
};
cljs.core.symbol_QMARK_ = function symbol_QMARK_(x) {
  return x instanceof cljs.core.Symbol
};
cljs.core.hash_symbol = function hash_symbol(sym) {
  return cljs.core.hash_combine.call(null, cljs.core.hash.call(null, sym.ns), cljs.core.hash.call(null, sym.name))
};
cljs.core.compare_symbols = function compare_symbols(a, b) {
  if(cljs.core.truth_(cljs.core._EQ_.call(null, a, b))) {
    return 0
  }else {
    if(cljs.core.truth_(function() {
      var and__3273__auto__ = cljs.core.not.call(null, a.ns);
      if(and__3273__auto__) {
        return b.ns
      }else {
        return and__3273__auto__
      }
    }())) {
      return-1
    }else {
      if(cljs.core.truth_(a.ns)) {
        if(cljs.core.not.call(null, b.ns)) {
          return 1
        }else {
          var nsc = cljs.core.compare.call(null, a.ns, b.ns);
          if(nsc === 0) {
            return cljs.core.compare.call(null, a.name, b.name)
          }else {
            return nsc
          }
        }
      }else {
        if(new cljs.core.Keyword(null, "default", "default", 2558708147)) {
          return cljs.core.compare.call(null, a.name, b.name)
        }else {
          return null
        }
      }
    }
  }
};
cljs.core.Symbol = function(ns, name, str, _hash, _meta) {
  this.ns = ns;
  this.name = name;
  this.str = str;
  this._hash = _hash;
  this._meta = _meta;
  this.cljs$lang$protocol_mask$partition0$ = 2154168321;
  this.cljs$lang$protocol_mask$partition1$ = 4096
};
cljs.core.Symbol.cljs$lang$type = true;
cljs.core.Symbol.cljs$lang$ctorStr = "cljs.core/Symbol";
cljs.core.Symbol.cljs$lang$ctorPrWriter = function(this__3829__auto__, writer__3830__auto__, opt__3831__auto__) {
  return cljs.core._write.call(null, writer__3830__auto__, "cljs.core/Symbol")
};
cljs.core.Symbol.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(o, writer, _) {
  var self__ = this;
  var o__$1 = this;
  return cljs.core._write.call(null, writer, self__.str)
};
cljs.core.Symbol.prototype.cljs$core$INamed$_name$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.name
};
cljs.core.Symbol.prototype.cljs$core$INamed$_namespace$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.ns
};
cljs.core.Symbol.prototype.cljs$core$IHash$_hash$arity$1 = function(sym) {
  var self__ = this;
  var sym__$1 = this;
  var h__3696__auto__ = self__._hash;
  if(!(h__3696__auto__ == null)) {
    return h__3696__auto__
  }else {
    var h__3696__auto____$1 = cljs.core.hash_symbol.call(null, sym__$1);
    self__._hash = h__3696__auto____$1;
    return h__3696__auto____$1
  }
};
cljs.core.Symbol.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_, new_meta) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.Symbol(self__.ns, self__.name, self__.str, self__._hash, new_meta)
};
cljs.core.Symbol.prototype.cljs$core$IMeta$_meta$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__._meta
};
cljs.core.Symbol.prototype.call = function() {
  var G__528949 = null;
  var G__528949__2 = function(self__, coll) {
    var self__ = this;
    var self____$1 = this;
    var sym = self____$1;
    return cljs.core._lookup.call(null, coll, sym, null)
  };
  var G__528949__3 = function(self__, coll, not_found) {
    var self__ = this;
    var self____$1 = this;
    var sym = self____$1;
    return cljs.core._lookup.call(null, coll, sym, not_found)
  };
  G__528949 = function(self__, coll, not_found) {
    switch(arguments.length) {
      case 2:
        return G__528949__2.call(this, self__, coll);
      case 3:
        return G__528949__3.call(this, self__, coll, not_found)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  return G__528949
}();
cljs.core.Symbol.prototype.apply = function(self__, args528948) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone.call(null, args528948)))
};
cljs.core.Symbol.prototype.cljs$core$IFn$_invoke$arity$1 = function(coll) {
  var self__ = this;
  var sym = this;
  return cljs.core._lookup.call(null, coll, sym, null)
};
cljs.core.Symbol.prototype.cljs$core$IFn$_invoke$arity$2 = function(coll, not_found) {
  var self__ = this;
  var sym = this;
  return cljs.core._lookup.call(null, coll, sym, not_found)
};
cljs.core.Symbol.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(_, other) {
  var self__ = this;
  var ___$1 = this;
  if(other instanceof cljs.core.Symbol) {
    return self__.str === other.str
  }else {
    return false
  }
};
cljs.core.Symbol.prototype.toString = function() {
  var self__ = this;
  var _ = this;
  return self__.str
};
cljs.core.__GT_Symbol = function __GT_Symbol(ns, name, str, _hash, _meta) {
  return new cljs.core.Symbol(ns, name, str, _hash, _meta)
};
cljs.core.symbol = function() {
  var symbol = null;
  var symbol__1 = function(name) {
    if(name instanceof cljs.core.Symbol) {
      return name
    }else {
      return symbol.call(null, null, name)
    }
  };
  var symbol__2 = function(ns, name) {
    var sym_str = !(ns == null) ? [cljs.core.str(ns), cljs.core.str("/"), cljs.core.str(name)].join("") : name;
    return new cljs.core.Symbol(ns, name, sym_str, null, null)
  };
  symbol = function(ns, name) {
    switch(arguments.length) {
      case 1:
        return symbol__1.call(this, ns);
      case 2:
        return symbol__2.call(this, ns, name)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  symbol.cljs$core$IFn$_invoke$arity$1 = symbol__1;
  symbol.cljs$core$IFn$_invoke$arity$2 = symbol__2;
  return symbol
}();
cljs.core.seq = function seq(coll) {
  if(coll == null) {
    return null
  }else {
    if(function() {
      var G__528951 = coll;
      if(G__528951) {
        var bit__3904__auto__ = G__528951.cljs$lang$protocol_mask$partition0$ & 8388608;
        if(bit__3904__auto__ || G__528951.cljs$core$ISeqable$) {
          return true
        }else {
          return false
        }
      }else {
        return false
      }
    }()) {
      return cljs.core._seq.call(null, coll)
    }else {
      if(coll instanceof Array) {
        if(coll.length === 0) {
          return null
        }else {
          return new cljs.core.IndexedSeq(coll, 0)
        }
      }else {
        if(typeof coll === "string") {
          if(coll.length === 0) {
            return null
          }else {
            return new cljs.core.IndexedSeq(coll, 0)
          }
        }else {
          if(cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ISeqable, coll)) {
            return cljs.core._seq.call(null, coll)
          }else {
            if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
              throw new Error([cljs.core.str(coll), cljs.core.str("is not ISeqable")].join(""));
            }else {
              return null
            }
          }
        }
      }
    }
  }
};
cljs.core.first = function first(coll) {
  if(coll == null) {
    return null
  }else {
    if(function() {
      var G__528953 = coll;
      if(G__528953) {
        var bit__3904__auto__ = G__528953.cljs$lang$protocol_mask$partition0$ & 64;
        if(bit__3904__auto__ || G__528953.cljs$core$ISeq$) {
          return true
        }else {
          return false
        }
      }else {
        return false
      }
    }()) {
      return cljs.core._first.call(null, coll)
    }else {
      var s = cljs.core.seq.call(null, coll);
      if(s == null) {
        return null
      }else {
        return cljs.core._first.call(null, s)
      }
    }
  }
};
cljs.core.rest = function rest(coll) {
  if(!(coll == null)) {
    if(function() {
      var G__528955 = coll;
      if(G__528955) {
        var bit__3904__auto__ = G__528955.cljs$lang$protocol_mask$partition0$ & 64;
        if(bit__3904__auto__ || G__528955.cljs$core$ISeq$) {
          return true
        }else {
          return false
        }
      }else {
        return false
      }
    }()) {
      return cljs.core._rest.call(null, coll)
    }else {
      var s = cljs.core.seq.call(null, coll);
      if(s) {
        return cljs.core._rest.call(null, s)
      }else {
        return cljs.core.List.EMPTY
      }
    }
  }else {
    return cljs.core.List.EMPTY
  }
};
cljs.core.next = function next(coll) {
  if(coll == null) {
    return null
  }else {
    if(function() {
      var G__528957 = coll;
      if(G__528957) {
        var bit__3904__auto__ = G__528957.cljs$lang$protocol_mask$partition0$ & 128;
        if(bit__3904__auto__ || G__528957.cljs$core$INext$) {
          return true
        }else {
          return false
        }
      }else {
        return false
      }
    }()) {
      return cljs.core._next.call(null, coll)
    }else {
      return cljs.core.seq.call(null, cljs.core.rest.call(null, coll))
    }
  }
};
cljs.core._EQ_ = function() {
  var _EQ_ = null;
  var _EQ___1 = function(x) {
    return true
  };
  var _EQ___2 = function(x, y) {
    return x === y || cljs.core._equiv.call(null, x, y)
  };
  var _EQ___3 = function() {
    var G__528958__delegate = function(x, y, more) {
      while(true) {
        if(_EQ_.call(null, x, y)) {
          if(cljs.core.next.call(null, more)) {
            var G__528959 = y;
            var G__528960 = cljs.core.first.call(null, more);
            var G__528961 = cljs.core.next.call(null, more);
            x = G__528959;
            y = G__528960;
            more = G__528961;
            continue
          }else {
            return _EQ_.call(null, y, cljs.core.first.call(null, more))
          }
        }else {
          return false
        }
        break
      }
    };
    var G__528958 = function(x, y, var_args) {
      var more = null;
      if(arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__528958__delegate.call(this, x, y, more)
    };
    G__528958.cljs$lang$maxFixedArity = 2;
    G__528958.cljs$lang$applyTo = function(arglist__528962) {
      var x = cljs.core.first(arglist__528962);
      arglist__528962 = cljs.core.next(arglist__528962);
      var y = cljs.core.first(arglist__528962);
      var more = cljs.core.rest(arglist__528962);
      return G__528958__delegate(x, y, more)
    };
    G__528958.cljs$core$IFn$_invoke$arity$variadic = G__528958__delegate;
    return G__528958
  }();
  _EQ_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return _EQ___1.call(this, x);
      case 2:
        return _EQ___2.call(this, x, y);
      default:
        return _EQ___3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _EQ_.cljs$lang$maxFixedArity = 2;
  _EQ_.cljs$lang$applyTo = _EQ___3.cljs$lang$applyTo;
  _EQ_.cljs$core$IFn$_invoke$arity$1 = _EQ___1;
  _EQ_.cljs$core$IFn$_invoke$arity$2 = _EQ___2;
  _EQ_.cljs$core$IFn$_invoke$arity$variadic = _EQ___3.cljs$core$IFn$_invoke$arity$variadic;
  return _EQ_
}();
cljs.core.IHash["null"] = true;
cljs.core._hash["null"] = function(o) {
  return 0
};
cljs.core.INext["null"] = true;
cljs.core._next["null"] = function(_) {
  return null
};
cljs.core.IKVReduce["null"] = true;
cljs.core._kv_reduce["null"] = function(_, f, init) {
  return init
};
cljs.core.ISet["null"] = true;
cljs.core._disjoin["null"] = function(_, v) {
  return null
};
cljs.core.ICounted["null"] = true;
cljs.core._count["null"] = function(_) {
  return 0
};
cljs.core.IStack["null"] = true;
cljs.core._peek["null"] = function(_) {
  return null
};
cljs.core._pop["null"] = function(_) {
  return null
};
cljs.core.IEquiv["null"] = true;
cljs.core._equiv["null"] = function(_, o) {
  return o == null
};
cljs.core.IWithMeta["null"] = true;
cljs.core._with_meta["null"] = function(_, meta) {
  return null
};
cljs.core.IMeta["null"] = true;
cljs.core._meta["null"] = function(_) {
  return null
};
cljs.core.IEmptyableCollection["null"] = true;
cljs.core._empty["null"] = function(_) {
  return null
};
cljs.core.IMap["null"] = true;
cljs.core._dissoc["null"] = function(_, k) {
  return null
};
Date.prototype.cljs$core$IEquiv$ = true;
Date.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(o, other) {
  var o__$1 = this;
  return other instanceof Date && o__$1.toString() === other.toString()
};
cljs.core.IEquiv["number"] = true;
cljs.core._equiv["number"] = function(x, o) {
  return x === o
};
cljs.core.IMeta["function"] = true;
cljs.core._meta["function"] = function(_) {
  return null
};
cljs.core.Fn["function"] = true;
cljs.core.IHash["_"] = true;
cljs.core._hash["_"] = function(o) {
  return goog.getUid(o)
};
cljs.core.inc = function inc(x) {
  return x + 1
};
cljs.core.Reduced = function(val) {
  this.val = val;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32768
};
cljs.core.Reduced.cljs$lang$type = true;
cljs.core.Reduced.cljs$lang$ctorStr = "cljs.core/Reduced";
cljs.core.Reduced.cljs$lang$ctorPrWriter = function(this__3829__auto__, writer__3830__auto__, opt__3831__auto__) {
  return cljs.core._write.call(null, writer__3830__auto__, "cljs.core/Reduced")
};
cljs.core.Reduced.prototype.cljs$core$IDeref$_deref$arity$1 = function(o) {
  var self__ = this;
  var o__$1 = this;
  return self__.val
};
cljs.core.__GT_Reduced = function __GT_Reduced(val) {
  return new cljs.core.Reduced(val)
};
cljs.core.reduced = function reduced(x) {
  return new cljs.core.Reduced(x)
};
cljs.core.reduced_QMARK_ = function reduced_QMARK_(r) {
  return r instanceof cljs.core.Reduced
};
cljs.core.ci_reduce = function() {
  var ci_reduce = null;
  var ci_reduce__2 = function(cicoll, f) {
    var cnt = cljs.core._count.call(null, cicoll);
    if(cnt === 0) {
      return f.call(null)
    }else {
      var val = cljs.core._nth.call(null, cicoll, 0);
      var n = 1;
      while(true) {
        if(n < cnt) {
          var nval = f.call(null, val, cljs.core._nth.call(null, cicoll, n));
          if(cljs.core.reduced_QMARK_.call(null, nval)) {
            return cljs.core.deref.call(null, nval)
          }else {
            var G__528963 = nval;
            var G__528964 = n + 1;
            val = G__528963;
            n = G__528964;
            continue
          }
        }else {
          return val
        }
        break
      }
    }
  };
  var ci_reduce__3 = function(cicoll, f, val) {
    var cnt = cljs.core._count.call(null, cicoll);
    var val__$1 = val;
    var n = 0;
    while(true) {
      if(n < cnt) {
        var nval = f.call(null, val__$1, cljs.core._nth.call(null, cicoll, n));
        if(cljs.core.reduced_QMARK_.call(null, nval)) {
          return cljs.core.deref.call(null, nval)
        }else {
          var G__528965 = nval;
          var G__528966 = n + 1;
          val__$1 = G__528965;
          n = G__528966;
          continue
        }
      }else {
        return val__$1
      }
      break
    }
  };
  var ci_reduce__4 = function(cicoll, f, val, idx) {
    var cnt = cljs.core._count.call(null, cicoll);
    var val__$1 = val;
    var n = idx;
    while(true) {
      if(n < cnt) {
        var nval = f.call(null, val__$1, cljs.core._nth.call(null, cicoll, n));
        if(cljs.core.reduced_QMARK_.call(null, nval)) {
          return cljs.core.deref.call(null, nval)
        }else {
          var G__528967 = nval;
          var G__528968 = n + 1;
          val__$1 = G__528967;
          n = G__528968;
          continue
        }
      }else {
        return val__$1
      }
      break
    }
  };
  ci_reduce = function(cicoll, f, val, idx) {
    switch(arguments.length) {
      case 2:
        return ci_reduce__2.call(this, cicoll, f);
      case 3:
        return ci_reduce__3.call(this, cicoll, f, val);
      case 4:
        return ci_reduce__4.call(this, cicoll, f, val, idx)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  ci_reduce.cljs$core$IFn$_invoke$arity$2 = ci_reduce__2;
  ci_reduce.cljs$core$IFn$_invoke$arity$3 = ci_reduce__3;
  ci_reduce.cljs$core$IFn$_invoke$arity$4 = ci_reduce__4;
  return ci_reduce
}();
cljs.core.array_reduce = function() {
  var array_reduce = null;
  var array_reduce__2 = function(arr, f) {
    var cnt = arr.length;
    if(arr.length === 0) {
      return f.call(null)
    }else {
      var val = arr[0];
      var n = 1;
      while(true) {
        if(n < cnt) {
          var nval = f.call(null, val, arr[n]);
          if(cljs.core.reduced_QMARK_.call(null, nval)) {
            return cljs.core.deref.call(null, nval)
          }else {
            var G__528969 = nval;
            var G__528970 = n + 1;
            val = G__528969;
            n = G__528970;
            continue
          }
        }else {
          return val
        }
        break
      }
    }
  };
  var array_reduce__3 = function(arr, f, val) {
    var cnt = arr.length;
    var val__$1 = val;
    var n = 0;
    while(true) {
      if(n < cnt) {
        var nval = f.call(null, val__$1, arr[n]);
        if(cljs.core.reduced_QMARK_.call(null, nval)) {
          return cljs.core.deref.call(null, nval)
        }else {
          var G__528971 = nval;
          var G__528972 = n + 1;
          val__$1 = G__528971;
          n = G__528972;
          continue
        }
      }else {
        return val__$1
      }
      break
    }
  };
  var array_reduce__4 = function(arr, f, val, idx) {
    var cnt = arr.length;
    var val__$1 = val;
    var n = idx;
    while(true) {
      if(n < cnt) {
        var nval = f.call(null, val__$1, arr[n]);
        if(cljs.core.reduced_QMARK_.call(null, nval)) {
          return cljs.core.deref.call(null, nval)
        }else {
          var G__528973 = nval;
          var G__528974 = n + 1;
          val__$1 = G__528973;
          n = G__528974;
          continue
        }
      }else {
        return val__$1
      }
      break
    }
  };
  array_reduce = function(arr, f, val, idx) {
    switch(arguments.length) {
      case 2:
        return array_reduce__2.call(this, arr, f);
      case 3:
        return array_reduce__3.call(this, arr, f, val);
      case 4:
        return array_reduce__4.call(this, arr, f, val, idx)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  array_reduce.cljs$core$IFn$_invoke$arity$2 = array_reduce__2;
  array_reduce.cljs$core$IFn$_invoke$arity$3 = array_reduce__3;
  array_reduce.cljs$core$IFn$_invoke$arity$4 = array_reduce__4;
  return array_reduce
}();
cljs.core.counted_QMARK_ = function counted_QMARK_(x) {
  var G__528976 = x;
  if(G__528976) {
    var bit__3911__auto__ = G__528976.cljs$lang$protocol_mask$partition0$ & 2;
    if(bit__3911__auto__ || G__528976.cljs$core$ICounted$) {
      return true
    }else {
      if(!G__528976.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ICounted, G__528976)
      }else {
        return false
      }
    }
  }else {
    return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ICounted, G__528976)
  }
};
cljs.core.indexed_QMARK_ = function indexed_QMARK_(x) {
  var G__528978 = x;
  if(G__528978) {
    var bit__3911__auto__ = G__528978.cljs$lang$protocol_mask$partition0$ & 16;
    if(bit__3911__auto__ || G__528978.cljs$core$IIndexed$) {
      return true
    }else {
      if(!G__528978.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IIndexed, G__528978)
      }else {
        return false
      }
    }
  }else {
    return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IIndexed, G__528978)
  }
};
cljs.core.IndexedSeq = function(arr, i) {
  this.arr = arr;
  this.i = i;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 166199550
};
cljs.core.IndexedSeq.cljs$lang$type = true;
cljs.core.IndexedSeq.cljs$lang$ctorStr = "cljs.core/IndexedSeq";
cljs.core.IndexedSeq.cljs$lang$ctorPrWriter = function(this__3829__auto__, writer__3830__auto__, opt__3831__auto__) {
  return cljs.core._write.call(null, writer__3830__auto__, "cljs.core/IndexedSeq")
};
cljs.core.IndexedSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.hash_coll.call(null, coll__$1)
};
cljs.core.IndexedSeq.prototype.cljs$core$INext$_next$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  if(self__.i + 1 < self__.arr.length) {
    return new cljs.core.IndexedSeq(self__.arr, self__.i + 1)
  }else {
    return null
  }
};
cljs.core.IndexedSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons.call(null, o, coll__$1)
};
cljs.core.IndexedSeq.prototype.cljs$core$IReversible$_rseq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var c = cljs.core._count.call(null, coll__$1);
  if(c > 0) {
    return new cljs.core.RSeq(coll__$1, c - 1, null)
  }else {
    return null
  }
};
cljs.core.IndexedSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll)
};
cljs.core.IndexedSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.array_reduce.call(null, self__.arr, f, self__.arr[self__.i], self__.i + 1)
};
cljs.core.IndexedSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.array_reduce.call(null, self__.arr, f, start, self__.i)
};
cljs.core.IndexedSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return this$__$1
};
cljs.core.IndexedSeq.prototype.cljs$core$ICounted$_count$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.arr.length - self__.i
};
cljs.core.IndexedSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.arr[self__.i]
};
cljs.core.IndexedSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  if(self__.i + 1 < self__.arr.length) {
    return new cljs.core.IndexedSeq(self__.arr, self__.i + 1)
  }else {
    return cljs.core.List.EMPTY
  }
};
cljs.core.IndexedSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other)
};
cljs.core.IndexedSeq.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, n) {
  var self__ = this;
  var coll__$1 = this;
  var i__$1 = n + self__.i;
  if(i__$1 < self__.arr.length) {
    return self__.arr[i__$1]
  }else {
    return null
  }
};
cljs.core.IndexedSeq.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, n, not_found) {
  var self__ = this;
  var coll__$1 = this;
  var i__$1 = n + self__.i;
  if(i__$1 < self__.arr.length) {
    return self__.arr[i__$1]
  }else {
    return not_found
  }
};
cljs.core.IndexedSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.List.EMPTY
};
cljs.core.__GT_IndexedSeq = function __GT_IndexedSeq(arr, i) {
  return new cljs.core.IndexedSeq(arr, i)
};
cljs.core.prim_seq = function() {
  var prim_seq = null;
  var prim_seq__1 = function(prim) {
    return prim_seq.call(null, prim, 0)
  };
  var prim_seq__2 = function(prim, i) {
    if(i < prim.length) {
      return new cljs.core.IndexedSeq(prim, i)
    }else {
      return null
    }
  };
  prim_seq = function(prim, i) {
    switch(arguments.length) {
      case 1:
        return prim_seq__1.call(this, prim);
      case 2:
        return prim_seq__2.call(this, prim, i)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  prim_seq.cljs$core$IFn$_invoke$arity$1 = prim_seq__1;
  prim_seq.cljs$core$IFn$_invoke$arity$2 = prim_seq__2;
  return prim_seq
}();
cljs.core.array_seq = function() {
  var array_seq = null;
  var array_seq__1 = function(array) {
    return cljs.core.prim_seq.call(null, array, 0)
  };
  var array_seq__2 = function(array, i) {
    return cljs.core.prim_seq.call(null, array, i)
  };
  array_seq = function(array, i) {
    switch(arguments.length) {
      case 1:
        return array_seq__1.call(this, array);
      case 2:
        return array_seq__2.call(this, array, i)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  array_seq.cljs$core$IFn$_invoke$arity$1 = array_seq__1;
  array_seq.cljs$core$IFn$_invoke$arity$2 = array_seq__2;
  return array_seq
}();
cljs.core.RSeq = function(ci, i, meta) {
  this.ci = ci;
  this.i = i;
  this.meta = meta;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32374862
};
cljs.core.RSeq.cljs$lang$type = true;
cljs.core.RSeq.cljs$lang$ctorStr = "cljs.core/RSeq";
cljs.core.RSeq.cljs$lang$ctorPrWriter = function(this__3829__auto__, writer__3830__auto__, opt__3831__auto__) {
  return cljs.core._write.call(null, writer__3830__auto__, "cljs.core/RSeq")
};
cljs.core.RSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.hash_coll.call(null, coll__$1)
};
cljs.core.RSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons.call(null, o, coll__$1)
};
cljs.core.RSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll)
};
cljs.core.RSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(col, f) {
  var self__ = this;
  var col__$1 = this;
  return cljs.core.seq_reduce.call(null, f, col__$1)
};
cljs.core.RSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(col, f, start) {
  var self__ = this;
  var col__$1 = this;
  return cljs.core.seq_reduce.call(null, f, start, col__$1)
};
cljs.core.RSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1
};
cljs.core.RSeq.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.i + 1
};
cljs.core.RSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._nth.call(null, self__.ci, self__.i)
};
cljs.core.RSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if(self__.i > 0) {
    return new cljs.core.RSeq(self__.ci, self__.i - 1, null)
  }else {
    return null
  }
};
cljs.core.RSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other)
};
cljs.core.RSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, new_meta) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.RSeq(self__.ci, self__.i, new_meta)
};
cljs.core.RSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta
};
cljs.core.RSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, self__.meta)
};
cljs.core.__GT_RSeq = function __GT_RSeq(ci, i, meta) {
  return new cljs.core.RSeq(ci, i, meta)
};
cljs.core.second = function second(coll) {
  return cljs.core.first.call(null, cljs.core.next.call(null, coll))
};
cljs.core.ffirst = function ffirst(coll) {
  return cljs.core.first.call(null, cljs.core.first.call(null, coll))
};
cljs.core.nfirst = function nfirst(coll) {
  return cljs.core.next.call(null, cljs.core.first.call(null, coll))
};
cljs.core.fnext = function fnext(coll) {
  return cljs.core.first.call(null, cljs.core.next.call(null, coll))
};
cljs.core.nnext = function nnext(coll) {
  return cljs.core.next.call(null, cljs.core.next.call(null, coll))
};
cljs.core.last = function last(s) {
  while(true) {
    var sn = cljs.core.next.call(null, s);
    if(!(sn == null)) {
      var G__528979 = sn;
      s = G__528979;
      continue
    }else {
      return cljs.core.first.call(null, s)
    }
    break
  }
};
cljs.core.IEquiv["_"] = true;
cljs.core._equiv["_"] = function(x, o) {
  return x === o
};
cljs.core.conj = function() {
  var conj = null;
  var conj__2 = function(coll, x) {
    if(!(coll == null)) {
      return cljs.core._conj.call(null, coll, x)
    }else {
      return cljs.core._conj.call(null, cljs.core.List.EMPTY, x)
    }
  };
  var conj__3 = function() {
    var G__528980__delegate = function(coll, x, xs) {
      while(true) {
        if(cljs.core.truth_(xs)) {
          var G__528981 = conj.call(null, coll, x);
          var G__528982 = cljs.core.first.call(null, xs);
          var G__528983 = cljs.core.next.call(null, xs);
          coll = G__528981;
          x = G__528982;
          xs = G__528983;
          continue
        }else {
          return conj.call(null, coll, x)
        }
        break
      }
    };
    var G__528980 = function(coll, x, var_args) {
      var xs = null;
      if(arguments.length > 2) {
        xs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__528980__delegate.call(this, coll, x, xs)
    };
    G__528980.cljs$lang$maxFixedArity = 2;
    G__528980.cljs$lang$applyTo = function(arglist__528984) {
      var coll = cljs.core.first(arglist__528984);
      arglist__528984 = cljs.core.next(arglist__528984);
      var x = cljs.core.first(arglist__528984);
      var xs = cljs.core.rest(arglist__528984);
      return G__528980__delegate(coll, x, xs)
    };
    G__528980.cljs$core$IFn$_invoke$arity$variadic = G__528980__delegate;
    return G__528980
  }();
  conj = function(coll, x, var_args) {
    var xs = var_args;
    switch(arguments.length) {
      case 2:
        return conj__2.call(this, coll, x);
      default:
        return conj__3.cljs$core$IFn$_invoke$arity$variadic(coll, x, cljs.core.array_seq(arguments, 2))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  conj.cljs$lang$maxFixedArity = 2;
  conj.cljs$lang$applyTo = conj__3.cljs$lang$applyTo;
  conj.cljs$core$IFn$_invoke$arity$2 = conj__2;
  conj.cljs$core$IFn$_invoke$arity$variadic = conj__3.cljs$core$IFn$_invoke$arity$variadic;
  return conj
}();
cljs.core.empty = function empty(coll) {
  return cljs.core._empty.call(null, coll)
};
cljs.core.accumulating_seq_count = function accumulating_seq_count(coll) {
  var s = cljs.core.seq.call(null, coll);
  var acc = 0;
  while(true) {
    if(cljs.core.counted_QMARK_.call(null, s)) {
      return acc + cljs.core._count.call(null, s)
    }else {
      var G__528985 = cljs.core.next.call(null, s);
      var G__528986 = acc + 1;
      s = G__528985;
      acc = G__528986;
      continue
    }
    break
  }
};
cljs.core.count = function count(coll) {
  if(!(coll == null)) {
    if(function() {
      var G__528988 = coll;
      if(G__528988) {
        var bit__3904__auto__ = G__528988.cljs$lang$protocol_mask$partition0$ & 2;
        if(bit__3904__auto__ || G__528988.cljs$core$ICounted$) {
          return true
        }else {
          return false
        }
      }else {
        return false
      }
    }()) {
      return cljs.core._count.call(null, coll)
    }else {
      if(coll instanceof Array) {
        return coll.length
      }else {
        if(typeof coll === "string") {
          return coll.length
        }else {
          if(cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ICounted, coll)) {
            return cljs.core._count.call(null, coll)
          }else {
            if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
              return cljs.core.accumulating_seq_count.call(null, coll)
            }else {
              return null
            }
          }
        }
      }
    }
  }else {
    return 0
  }
};
cljs.core.linear_traversal_nth = function() {
  var linear_traversal_nth = null;
  var linear_traversal_nth__2 = function(coll, n) {
    while(true) {
      if(coll == null) {
        throw new Error("Index out of bounds");
      }else {
        if(n === 0) {
          if(cljs.core.seq.call(null, coll)) {
            return cljs.core.first.call(null, coll)
          }else {
            throw new Error("Index out of bounds");
          }
        }else {
          if(cljs.core.indexed_QMARK_.call(null, coll)) {
            return cljs.core._nth.call(null, coll, n)
          }else {
            if(cljs.core.seq.call(null, coll)) {
              var G__528989 = cljs.core.next.call(null, coll);
              var G__528990 = n - 1;
              coll = G__528989;
              n = G__528990;
              continue
            }else {
              if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                throw new Error("Index out of bounds");
              }else {
                return null
              }
            }
          }
        }
      }
      break
    }
  };
  var linear_traversal_nth__3 = function(coll, n, not_found) {
    while(true) {
      if(coll == null) {
        return not_found
      }else {
        if(n === 0) {
          if(cljs.core.seq.call(null, coll)) {
            return cljs.core.first.call(null, coll)
          }else {
            return not_found
          }
        }else {
          if(cljs.core.indexed_QMARK_.call(null, coll)) {
            return cljs.core._nth.call(null, coll, n, not_found)
          }else {
            if(cljs.core.seq.call(null, coll)) {
              var G__528991 = cljs.core.next.call(null, coll);
              var G__528992 = n - 1;
              var G__528993 = not_found;
              coll = G__528991;
              n = G__528992;
              not_found = G__528993;
              continue
            }else {
              if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                return not_found
              }else {
                return null
              }
            }
          }
        }
      }
      break
    }
  };
  linear_traversal_nth = function(coll, n, not_found) {
    switch(arguments.length) {
      case 2:
        return linear_traversal_nth__2.call(this, coll, n);
      case 3:
        return linear_traversal_nth__3.call(this, coll, n, not_found)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  linear_traversal_nth.cljs$core$IFn$_invoke$arity$2 = linear_traversal_nth__2;
  linear_traversal_nth.cljs$core$IFn$_invoke$arity$3 = linear_traversal_nth__3;
  return linear_traversal_nth
}();
cljs.core.nth = function() {
  var nth = null;
  var nth__2 = function(coll, n) {
    if(coll == null) {
      return null
    }else {
      if(function() {
        var G__528998 = coll;
        if(G__528998) {
          var bit__3904__auto__ = G__528998.cljs$lang$protocol_mask$partition0$ & 16;
          if(bit__3904__auto__ || G__528998.cljs$core$IIndexed$) {
            return true
          }else {
            return false
          }
        }else {
          return false
        }
      }()) {
        return cljs.core._nth.call(null, coll, n)
      }else {
        if(coll instanceof Array) {
          if(n < coll.length) {
            return coll[n]
          }else {
            return null
          }
        }else {
          if(typeof coll === "string") {
            if(n < coll.length) {
              return coll[n]
            }else {
              return null
            }
          }else {
            if(cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IIndexed, coll)) {
              return cljs.core._nth.call(null, coll, n)
            }else {
              if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                if(function() {
                  var G__528999 = coll;
                  if(G__528999) {
                    var bit__3911__auto__ = G__528999.cljs$lang$protocol_mask$partition0$ & 64;
                    if(bit__3911__auto__ || G__528999.cljs$core$ISeq$) {
                      return true
                    }else {
                      if(!G__528999.cljs$lang$protocol_mask$partition0$) {
                        return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ISeq, G__528999)
                      }else {
                        return false
                      }
                    }
                  }else {
                    return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ISeq, G__528999)
                  }
                }()) {
                  return cljs.core.linear_traversal_nth.call(null, coll, n)
                }else {
                  throw new Error([cljs.core.str("nth not supported on this type "), cljs.core.str(cljs.core.type__GT_str.call(null, cljs.core.type.call(null, coll)))].join(""));
                }
              }else {
                return null
              }
            }
          }
        }
      }
    }
  };
  var nth__3 = function(coll, n, not_found) {
    if(!(coll == null)) {
      if(function() {
        var G__529000 = coll;
        if(G__529000) {
          var bit__3904__auto__ = G__529000.cljs$lang$protocol_mask$partition0$ & 16;
          if(bit__3904__auto__ || G__529000.cljs$core$IIndexed$) {
            return true
          }else {
            return false
          }
        }else {
          return false
        }
      }()) {
        return cljs.core._nth.call(null, coll, n, not_found)
      }else {
        if(coll instanceof Array) {
          if(n < coll.length) {
            return coll[n]
          }else {
            return not_found
          }
        }else {
          if(typeof coll === "string") {
            if(n < coll.length) {
              return coll[n]
            }else {
              return not_found
            }
          }else {
            if(cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IIndexed, coll)) {
              return cljs.core._nth.call(null, coll, n)
            }else {
              if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                if(function() {
                  var G__529001 = coll;
                  if(G__529001) {
                    var bit__3911__auto__ = G__529001.cljs$lang$protocol_mask$partition0$ & 64;
                    if(bit__3911__auto__ || G__529001.cljs$core$ISeq$) {
                      return true
                    }else {
                      if(!G__529001.cljs$lang$protocol_mask$partition0$) {
                        return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ISeq, G__529001)
                      }else {
                        return false
                      }
                    }
                  }else {
                    return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ISeq, G__529001)
                  }
                }()) {
                  return cljs.core.linear_traversal_nth.call(null, coll, n, not_found)
                }else {
                  throw new Error([cljs.core.str("nth not supported on this type "), cljs.core.str(cljs.core.type__GT_str.call(null, cljs.core.type.call(null, coll)))].join(""));
                }
              }else {
                return null
              }
            }
          }
        }
      }
    }else {
      return not_found
    }
  };
  nth = function(coll, n, not_found) {
    switch(arguments.length) {
      case 2:
        return nth__2.call(this, coll, n);
      case 3:
        return nth__3.call(this, coll, n, not_found)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  nth.cljs$core$IFn$_invoke$arity$2 = nth__2;
  nth.cljs$core$IFn$_invoke$arity$3 = nth__3;
  return nth
}();
cljs.core.get = function() {
  var get = null;
  var get__2 = function(o, k) {
    if(o == null) {
      return null
    }else {
      if(function() {
        var G__529004 = o;
        if(G__529004) {
          var bit__3904__auto__ = G__529004.cljs$lang$protocol_mask$partition0$ & 256;
          if(bit__3904__auto__ || G__529004.cljs$core$ILookup$) {
            return true
          }else {
            return false
          }
        }else {
          return false
        }
      }()) {
        return cljs.core._lookup.call(null, o, k)
      }else {
        if(o instanceof Array) {
          if(k < o.length) {
            return o[k]
          }else {
            return null
          }
        }else {
          if(typeof o === "string") {
            if(k < o.length) {
              return o[k]
            }else {
              return null
            }
          }else {
            if(cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ILookup, o)) {
              return cljs.core._lookup.call(null, o, k)
            }else {
              if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                return null
              }else {
                return null
              }
            }
          }
        }
      }
    }
  };
  var get__3 = function(o, k, not_found) {
    if(!(o == null)) {
      if(function() {
        var G__529005 = o;
        if(G__529005) {
          var bit__3904__auto__ = G__529005.cljs$lang$protocol_mask$partition0$ & 256;
          if(bit__3904__auto__ || G__529005.cljs$core$ILookup$) {
            return true
          }else {
            return false
          }
        }else {
          return false
        }
      }()) {
        return cljs.core._lookup.call(null, o, k, not_found)
      }else {
        if(o instanceof Array) {
          if(k < o.length) {
            return o[k]
          }else {
            return not_found
          }
        }else {
          if(typeof o === "string") {
            if(k < o.length) {
              return o[k]
            }else {
              return not_found
            }
          }else {
            if(cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ILookup, o)) {
              return cljs.core._lookup.call(null, o, k, not_found)
            }else {
              if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                return not_found
              }else {
                return null
              }
            }
          }
        }
      }
    }else {
      return not_found
    }
  };
  get = function(o, k, not_found) {
    switch(arguments.length) {
      case 2:
        return get__2.call(this, o, k);
      case 3:
        return get__3.call(this, o, k, not_found)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  get.cljs$core$IFn$_invoke$arity$2 = get__2;
  get.cljs$core$IFn$_invoke$arity$3 = get__3;
  return get
}();
cljs.core.assoc = function() {
  var assoc = null;
  var assoc__3 = function(coll, k, v) {
    if(!(coll == null)) {
      return cljs.core._assoc.call(null, coll, k, v)
    }else {
      return cljs.core.PersistentHashMap.fromArrays.call(null, [k], [v])
    }
  };
  var assoc__4 = function() {
    var G__529006__delegate = function(coll, k, v, kvs) {
      while(true) {
        var ret = assoc.call(null, coll, k, v);
        if(cljs.core.truth_(kvs)) {
          var G__529007 = ret;
          var G__529008 = cljs.core.first.call(null, kvs);
          var G__529009 = cljs.core.second.call(null, kvs);
          var G__529010 = cljs.core.nnext.call(null, kvs);
          coll = G__529007;
          k = G__529008;
          v = G__529009;
          kvs = G__529010;
          continue
        }else {
          return ret
        }
        break
      }
    };
    var G__529006 = function(coll, k, v, var_args) {
      var kvs = null;
      if(arguments.length > 3) {
        kvs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
      }
      return G__529006__delegate.call(this, coll, k, v, kvs)
    };
    G__529006.cljs$lang$maxFixedArity = 3;
    G__529006.cljs$lang$applyTo = function(arglist__529011) {
      var coll = cljs.core.first(arglist__529011);
      arglist__529011 = cljs.core.next(arglist__529011);
      var k = cljs.core.first(arglist__529011);
      arglist__529011 = cljs.core.next(arglist__529011);
      var v = cljs.core.first(arglist__529011);
      var kvs = cljs.core.rest(arglist__529011);
      return G__529006__delegate(coll, k, v, kvs)
    };
    G__529006.cljs$core$IFn$_invoke$arity$variadic = G__529006__delegate;
    return G__529006
  }();
  assoc = function(coll, k, v, var_args) {
    var kvs = var_args;
    switch(arguments.length) {
      case 3:
        return assoc__3.call(this, coll, k, v);
      default:
        return assoc__4.cljs$core$IFn$_invoke$arity$variadic(coll, k, v, cljs.core.array_seq(arguments, 3))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  assoc.cljs$lang$maxFixedArity = 3;
  assoc.cljs$lang$applyTo = assoc__4.cljs$lang$applyTo;
  assoc.cljs$core$IFn$_invoke$arity$3 = assoc__3;
  assoc.cljs$core$IFn$_invoke$arity$variadic = assoc__4.cljs$core$IFn$_invoke$arity$variadic;
  return assoc
}();
cljs.core.dissoc = function() {
  var dissoc = null;
  var dissoc__1 = function(coll) {
    return coll
  };
  var dissoc__2 = function(coll, k) {
    return cljs.core._dissoc.call(null, coll, k)
  };
  var dissoc__3 = function() {
    var G__529012__delegate = function(coll, k, ks) {
      while(true) {
        var ret = dissoc.call(null, coll, k);
        if(cljs.core.truth_(ks)) {
          var G__529013 = ret;
          var G__529014 = cljs.core.first.call(null, ks);
          var G__529015 = cljs.core.next.call(null, ks);
          coll = G__529013;
          k = G__529014;
          ks = G__529015;
          continue
        }else {
          return ret
        }
        break
      }
    };
    var G__529012 = function(coll, k, var_args) {
      var ks = null;
      if(arguments.length > 2) {
        ks = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__529012__delegate.call(this, coll, k, ks)
    };
    G__529012.cljs$lang$maxFixedArity = 2;
    G__529012.cljs$lang$applyTo = function(arglist__529016) {
      var coll = cljs.core.first(arglist__529016);
      arglist__529016 = cljs.core.next(arglist__529016);
      var k = cljs.core.first(arglist__529016);
      var ks = cljs.core.rest(arglist__529016);
      return G__529012__delegate(coll, k, ks)
    };
    G__529012.cljs$core$IFn$_invoke$arity$variadic = G__529012__delegate;
    return G__529012
  }();
  dissoc = function(coll, k, var_args) {
    var ks = var_args;
    switch(arguments.length) {
      case 1:
        return dissoc__1.call(this, coll);
      case 2:
        return dissoc__2.call(this, coll, k);
      default:
        return dissoc__3.cljs$core$IFn$_invoke$arity$variadic(coll, k, cljs.core.array_seq(arguments, 2))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  dissoc.cljs$lang$maxFixedArity = 2;
  dissoc.cljs$lang$applyTo = dissoc__3.cljs$lang$applyTo;
  dissoc.cljs$core$IFn$_invoke$arity$1 = dissoc__1;
  dissoc.cljs$core$IFn$_invoke$arity$2 = dissoc__2;
  dissoc.cljs$core$IFn$_invoke$arity$variadic = dissoc__3.cljs$core$IFn$_invoke$arity$variadic;
  return dissoc
}();
cljs.core.fn_QMARK_ = function fn_QMARK_(f) {
  var or__3285__auto__ = goog.isFunction(f);
  if(or__3285__auto__) {
    return or__3285__auto__
  }else {
    var G__529020 = f;
    if(G__529020) {
      var bit__3911__auto__ = null;
      if(cljs.core.truth_(function() {
        var or__3285__auto____$1 = bit__3911__auto__;
        if(cljs.core.truth_(or__3285__auto____$1)) {
          return or__3285__auto____$1
        }else {
          return G__529020.cljs$core$Fn$
        }
      }())) {
        return true
      }else {
        if(!G__529020.cljs$lang$protocol_mask$partition$) {
          return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.Fn, G__529020)
        }else {
          return false
        }
      }
    }else {
      return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.Fn, G__529020)
    }
  }
};
cljs.core.with_meta = function with_meta(o, meta) {
  if(cljs.core.fn_QMARK_.call(null, o) && !function() {
    var G__529028 = o;
    if(G__529028) {
      var bit__3911__auto__ = G__529028.cljs$lang$protocol_mask$partition0$ & 262144;
      if(bit__3911__auto__ || G__529028.cljs$core$IWithMeta$) {
        return true
      }else {
        if(!G__529028.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IWithMeta, G__529028)
        }else {
          return false
        }
      }
    }else {
      return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IWithMeta, G__529028)
    }
  }()) {
    return with_meta.call(null, function() {
      if(typeof cljs.core.t529029 !== "undefined") {
      }else {
        cljs.core.t529029 = function(meta, o, with_meta, meta529030) {
          this.meta = meta;
          this.o = o;
          this.with_meta = with_meta;
          this.meta529030 = meta529030;
          this.cljs$lang$protocol_mask$partition1$ = 0;
          this.cljs$lang$protocol_mask$partition0$ = 393217
        };
        cljs.core.t529029.cljs$lang$type = true;
        cljs.core.t529029.cljs$lang$ctorStr = "cljs.core/t529029";
        cljs.core.t529029.cljs$lang$ctorPrWriter = function(this__3829__auto__, writer__3830__auto__, opt__3831__auto__) {
          return cljs.core._write.call(null, writer__3830__auto__, "cljs.core/t529029")
        };
        cljs.core.t529029.prototype.call = function() {
          var G__529033__delegate = function(self__, args) {
            var self____$1 = this;
            var _ = self____$1;
            return cljs.core.apply.call(null, self__.o, args)
          };
          var G__529033 = function(self__, var_args) {
            var self__ = this;
            var args = null;
            if(arguments.length > 1) {
              args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
            }
            return G__529033__delegate.call(this, self__, args)
          };
          G__529033.cljs$lang$maxFixedArity = 1;
          G__529033.cljs$lang$applyTo = function(arglist__529034) {
            var self__ = cljs.core.first(arglist__529034);
            var args = cljs.core.rest(arglist__529034);
            return G__529033__delegate(self__, args)
          };
          G__529033.cljs$core$IFn$_invoke$arity$variadic = G__529033__delegate;
          return G__529033
        }();
        cljs.core.t529029.prototype.apply = function(self__, args529032) {
          var self__ = this;
          var self____$1 = this;
          return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone.call(null, args529032)))
        };
        cljs.core.t529029.prototype.cljs$core$IFn$_invoke$arity$2 = function() {
          var G__529035__delegate = function(args) {
            var _ = this;
            return cljs.core.apply.call(null, self__.o, args)
          };
          var G__529035 = function(var_args) {
            var self__ = this;
            var args = null;
            if(arguments.length > 0) {
              args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
            }
            return G__529035__delegate.call(this, args)
          };
          G__529035.cljs$lang$maxFixedArity = 0;
          G__529035.cljs$lang$applyTo = function(arglist__529036) {
            var args = cljs.core.seq(arglist__529036);
            return G__529035__delegate(args)
          };
          G__529035.cljs$core$IFn$_invoke$arity$variadic = G__529035__delegate;
          return G__529035
        }();
        cljs.core.t529029.prototype.cljs$core$Fn$ = true;
        cljs.core.t529029.prototype.cljs$core$IMeta$_meta$arity$1 = function(_529031) {
          var self__ = this;
          var _529031__$1 = this;
          return self__.meta529030
        };
        cljs.core.t529029.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_529031, meta529030__$1) {
          var self__ = this;
          var _529031__$1 = this;
          return new cljs.core.t529029(self__.meta, self__.o, self__.with_meta, meta529030__$1)
        };
        cljs.core.__GT_t529029 = function __GT_t529029(meta__$1, o__$1, with_meta__$1, meta529030) {
          return new cljs.core.t529029(meta__$1, o__$1, with_meta__$1, meta529030)
        }
      }
      return new cljs.core.t529029(meta, o, with_meta, null)
    }(), meta)
  }else {
    return cljs.core._with_meta.call(null, o, meta)
  }
};
cljs.core.meta = function meta(o) {
  if(function() {
    var G__529038 = o;
    if(G__529038) {
      var bit__3911__auto__ = G__529038.cljs$lang$protocol_mask$partition0$ & 131072;
      if(bit__3911__auto__ || G__529038.cljs$core$IMeta$) {
        return true
      }else {
        if(!G__529038.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IMeta, G__529038)
        }else {
          return false
        }
      }
    }else {
      return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IMeta, G__529038)
    }
  }()) {
    return cljs.core._meta.call(null, o)
  }else {
    return null
  }
};
cljs.core.peek = function peek(coll) {
  return cljs.core._peek.call(null, coll)
};
cljs.core.pop = function pop(coll) {
  return cljs.core._pop.call(null, coll)
};
cljs.core.disj = function() {
  var disj = null;
  var disj__1 = function(coll) {
    return coll
  };
  var disj__2 = function(coll, k) {
    return cljs.core._disjoin.call(null, coll, k)
  };
  var disj__3 = function() {
    var G__529039__delegate = function(coll, k, ks) {
      while(true) {
        var ret = disj.call(null, coll, k);
        if(cljs.core.truth_(ks)) {
          var G__529040 = ret;
          var G__529041 = cljs.core.first.call(null, ks);
          var G__529042 = cljs.core.next.call(null, ks);
          coll = G__529040;
          k = G__529041;
          ks = G__529042;
          continue
        }else {
          return ret
        }
        break
      }
    };
    var G__529039 = function(coll, k, var_args) {
      var ks = null;
      if(arguments.length > 2) {
        ks = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__529039__delegate.call(this, coll, k, ks)
    };
    G__529039.cljs$lang$maxFixedArity = 2;
    G__529039.cljs$lang$applyTo = function(arglist__529043) {
      var coll = cljs.core.first(arglist__529043);
      arglist__529043 = cljs.core.next(arglist__529043);
      var k = cljs.core.first(arglist__529043);
      var ks = cljs.core.rest(arglist__529043);
      return G__529039__delegate(coll, k, ks)
    };
    G__529039.cljs$core$IFn$_invoke$arity$variadic = G__529039__delegate;
    return G__529039
  }();
  disj = function(coll, k, var_args) {
    var ks = var_args;
    switch(arguments.length) {
      case 1:
        return disj__1.call(this, coll);
      case 2:
        return disj__2.call(this, coll, k);
      default:
        return disj__3.cljs$core$IFn$_invoke$arity$variadic(coll, k, cljs.core.array_seq(arguments, 2))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  disj.cljs$lang$maxFixedArity = 2;
  disj.cljs$lang$applyTo = disj__3.cljs$lang$applyTo;
  disj.cljs$core$IFn$_invoke$arity$1 = disj__1;
  disj.cljs$core$IFn$_invoke$arity$2 = disj__2;
  disj.cljs$core$IFn$_invoke$arity$variadic = disj__3.cljs$core$IFn$_invoke$arity$variadic;
  return disj
}();
cljs.core.string_hash_cache = function() {
  var obj529045 = {};
  return obj529045
}();
cljs.core.string_hash_cache_count = 0;
cljs.core.add_to_string_hash_cache = function add_to_string_hash_cache(k) {
  var h = goog.string.hashCode(k);
  cljs.core.string_hash_cache[k] = h;
  cljs.core.string_hash_cache_count = cljs.core.string_hash_cache_count + 1;
  return h
};
cljs.core.check_string_hash_cache = function check_string_hash_cache(k) {
  if(cljs.core.string_hash_cache_count > 255) {
    cljs.core.string_hash_cache = function() {
      var obj529049 = {};
      return obj529049
    }();
    cljs.core.string_hash_cache_count = 0
  }else {
  }
  var h = cljs.core.string_hash_cache[k];
  if(typeof h === "number") {
    return h
  }else {
    return cljs.core.add_to_string_hash_cache.call(null, k)
  }
};
cljs.core.hash = function hash(o) {
  if(function() {
    var G__529051 = o;
    if(G__529051) {
      var bit__3904__auto__ = G__529051.cljs$lang$protocol_mask$partition0$ & 4194304;
      if(bit__3904__auto__ || G__529051.cljs$core$IHash$) {
        return true
      }else {
        return false
      }
    }else {
      return false
    }
  }()) {
    return cljs.core._hash.call(null, o)
  }else {
    if(typeof o === "number") {
      return Math.floor(o) % 2147483647
    }else {
      if(o === true) {
        return 1
      }else {
        if(o === false) {
          return 0
        }else {
          if(typeof o === "string") {
            return cljs.core.check_string_hash_cache.call(null, o)
          }else {
            if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
              return cljs.core._hash.call(null, o)
            }else {
              return null
            }
          }
        }
      }
    }
  }
};
cljs.core.empty_QMARK_ = function empty_QMARK_(coll) {
  return coll == null || cljs.core.not.call(null, cljs.core.seq.call(null, coll))
};
cljs.core.coll_QMARK_ = function coll_QMARK_(x) {
  if(x == null) {
    return false
  }else {
    var G__529053 = x;
    if(G__529053) {
      var bit__3911__auto__ = G__529053.cljs$lang$protocol_mask$partition0$ & 8;
      if(bit__3911__auto__ || G__529053.cljs$core$ICollection$) {
        return true
      }else {
        if(!G__529053.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ICollection, G__529053)
        }else {
          return false
        }
      }
    }else {
      return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ICollection, G__529053)
    }
  }
};
cljs.core.set_QMARK_ = function set_QMARK_(x) {
  if(x == null) {
    return false
  }else {
    var G__529055 = x;
    if(G__529055) {
      var bit__3911__auto__ = G__529055.cljs$lang$protocol_mask$partition0$ & 4096;
      if(bit__3911__auto__ || G__529055.cljs$core$ISet$) {
        return true
      }else {
        if(!G__529055.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ISet, G__529055)
        }else {
          return false
        }
      }
    }else {
      return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ISet, G__529055)
    }
  }
};
cljs.core.associative_QMARK_ = function associative_QMARK_(x) {
  var G__529057 = x;
  if(G__529057) {
    var bit__3911__auto__ = G__529057.cljs$lang$protocol_mask$partition0$ & 512;
    if(bit__3911__auto__ || G__529057.cljs$core$IAssociative$) {
      return true
    }else {
      if(!G__529057.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IAssociative, G__529057)
      }else {
        return false
      }
    }
  }else {
    return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IAssociative, G__529057)
  }
};
cljs.core.sequential_QMARK_ = function sequential_QMARK_(x) {
  var G__529059 = x;
  if(G__529059) {
    var bit__3911__auto__ = G__529059.cljs$lang$protocol_mask$partition0$ & 16777216;
    if(bit__3911__auto__ || G__529059.cljs$core$ISequential$) {
      return true
    }else {
      if(!G__529059.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ISequential, G__529059)
      }else {
        return false
      }
    }
  }else {
    return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ISequential, G__529059)
  }
};
cljs.core.reduceable_QMARK_ = function reduceable_QMARK_(x) {
  var G__529061 = x;
  if(G__529061) {
    var bit__3911__auto__ = G__529061.cljs$lang$protocol_mask$partition0$ & 524288;
    if(bit__3911__auto__ || G__529061.cljs$core$IReduce$) {
      return true
    }else {
      if(!G__529061.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IReduce, G__529061)
      }else {
        return false
      }
    }
  }else {
    return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IReduce, G__529061)
  }
};
cljs.core.map_QMARK_ = function map_QMARK_(x) {
  if(x == null) {
    return false
  }else {
    var G__529063 = x;
    if(G__529063) {
      var bit__3911__auto__ = G__529063.cljs$lang$protocol_mask$partition0$ & 1024;
      if(bit__3911__auto__ || G__529063.cljs$core$IMap$) {
        return true
      }else {
        if(!G__529063.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IMap, G__529063)
        }else {
          return false
        }
      }
    }else {
      return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IMap, G__529063)
    }
  }
};
cljs.core.vector_QMARK_ = function vector_QMARK_(x) {
  var G__529065 = x;
  if(G__529065) {
    var bit__3911__auto__ = G__529065.cljs$lang$protocol_mask$partition0$ & 16384;
    if(bit__3911__auto__ || G__529065.cljs$core$IVector$) {
      return true
    }else {
      if(!G__529065.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IVector, G__529065)
      }else {
        return false
      }
    }
  }else {
    return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IVector, G__529065)
  }
};
cljs.core.chunked_seq_QMARK_ = function chunked_seq_QMARK_(x) {
  var G__529067 = x;
  if(G__529067) {
    var bit__3904__auto__ = G__529067.cljs$lang$protocol_mask$partition1$ & 512;
    if(bit__3904__auto__ || G__529067.cljs$core$IChunkedSeq$) {
      return true
    }else {
      return false
    }
  }else {
    return false
  }
};
cljs.core.js_obj = function() {
  var js_obj = null;
  var js_obj__0 = function() {
    var obj529071 = {};
    return obj529071
  };
  var js_obj__1 = function() {
    var G__529072__delegate = function(keyvals) {
      return cljs.core.apply.call(null, goog.object.create, keyvals)
    };
    var G__529072 = function(var_args) {
      var keyvals = null;
      if(arguments.length > 0) {
        keyvals = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
      }
      return G__529072__delegate.call(this, keyvals)
    };
    G__529072.cljs$lang$maxFixedArity = 0;
    G__529072.cljs$lang$applyTo = function(arglist__529073) {
      var keyvals = cljs.core.seq(arglist__529073);
      return G__529072__delegate(keyvals)
    };
    G__529072.cljs$core$IFn$_invoke$arity$variadic = G__529072__delegate;
    return G__529072
  }();
  js_obj = function(var_args) {
    var keyvals = var_args;
    switch(arguments.length) {
      case 0:
        return js_obj__0.call(this);
      default:
        return js_obj__1.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq(arguments, 0))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  js_obj.cljs$lang$maxFixedArity = 0;
  js_obj.cljs$lang$applyTo = js_obj__1.cljs$lang$applyTo;
  js_obj.cljs$core$IFn$_invoke$arity$0 = js_obj__0;
  js_obj.cljs$core$IFn$_invoke$arity$variadic = js_obj__1.cljs$core$IFn$_invoke$arity$variadic;
  return js_obj
}();
cljs.core.js_keys = function js_keys(obj) {
  var keys = [];
  goog.object.forEach(obj, function(val, key, obj__$1) {
    return keys.push(key)
  });
  return keys
};
cljs.core.js_delete = function js_delete(obj, key) {
  return delete obj[key]
};
cljs.core.array_copy = function array_copy(from, i, to, j, len) {
  var i__$1 = i;
  var j__$1 = j;
  var len__$1 = len;
  while(true) {
    if(len__$1 === 0) {
      return to
    }else {
      to[j__$1] = from[i__$1];
      var G__529074 = i__$1 + 1;
      var G__529075 = j__$1 + 1;
      var G__529076 = len__$1 - 1;
      i__$1 = G__529074;
      j__$1 = G__529075;
      len__$1 = G__529076;
      continue
    }
    break
  }
};
cljs.core.array_copy_downward = function array_copy_downward(from, i, to, j, len) {
  var i__$1 = i + (len - 1);
  var j__$1 = j + (len - 1);
  var len__$1 = len;
  while(true) {
    if(len__$1 === 0) {
      return to
    }else {
      to[j__$1] = from[i__$1];
      var G__529077 = i__$1 - 1;
      var G__529078 = j__$1 - 1;
      var G__529079 = len__$1 - 1;
      i__$1 = G__529077;
      j__$1 = G__529078;
      len__$1 = G__529079;
      continue
    }
    break
  }
};
cljs.core.lookup_sentinel = function() {
  var obj529081 = {};
  return obj529081
}();
cljs.core.false_QMARK_ = function false_QMARK_(x) {
  return x === false
};
cljs.core.true_QMARK_ = function true_QMARK_(x) {
  return x === true
};
cljs.core.undefined_QMARK_ = function undefined_QMARK_(x) {
  return void 0 === x
};
cljs.core.seq_QMARK_ = function seq_QMARK_(s) {
  if(s == null) {
    return false
  }else {
    var G__529083 = s;
    if(G__529083) {
      var bit__3911__auto__ = G__529083.cljs$lang$protocol_mask$partition0$ & 64;
      if(bit__3911__auto__ || G__529083.cljs$core$ISeq$) {
        return true
      }else {
        if(!G__529083.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ISeq, G__529083)
        }else {
          return false
        }
      }
    }else {
      return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ISeq, G__529083)
    }
  }
};
cljs.core.seqable_QMARK_ = function seqable_QMARK_(s) {
  var G__529085 = s;
  if(G__529085) {
    var bit__3911__auto__ = G__529085.cljs$lang$protocol_mask$partition0$ & 8388608;
    if(bit__3911__auto__ || G__529085.cljs$core$ISeqable$) {
      return true
    }else {
      if(!G__529085.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ISeqable, G__529085)
      }else {
        return false
      }
    }
  }else {
    return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ISeqable, G__529085)
  }
};
cljs.core.boolean$ = function boolean$(x) {
  if(cljs.core.truth_(x)) {
    return true
  }else {
    return false
  }
};
cljs.core.ifn_QMARK_ = function ifn_QMARK_(f) {
  var or__3285__auto__ = cljs.core.fn_QMARK_.call(null, f);
  if(or__3285__auto__) {
    return or__3285__auto__
  }else {
    var G__529089 = f;
    if(G__529089) {
      var bit__3911__auto__ = G__529089.cljs$lang$protocol_mask$partition0$ & 1;
      if(bit__3911__auto__ || G__529089.cljs$core$IFn$) {
        return true
      }else {
        if(!G__529089.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IFn, G__529089)
        }else {
          return false
        }
      }
    }else {
      return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IFn, G__529089)
    }
  }
};
cljs.core.integer_QMARK_ = function integer_QMARK_(n) {
  return typeof n === "number" && !isNaN(n) && !(n === Infinity) && parseFloat(n) === parseInt(n, 10)
};
cljs.core.contains_QMARK_ = function contains_QMARK_(coll, v) {
  if(cljs.core.get.call(null, coll, v, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
    return false
  }else {
    return true
  }
};
cljs.core.find = function find(coll, k) {
  if(!(coll == null) && cljs.core.associative_QMARK_.call(null, coll) && cljs.core.contains_QMARK_.call(null, coll, k)) {
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [k, cljs.core.get.call(null, coll, k)], null)
  }else {
    return null
  }
};
cljs.core.distinct_QMARK_ = function() {
  var distinct_QMARK_ = null;
  var distinct_QMARK___1 = function(x) {
    return true
  };
  var distinct_QMARK___2 = function(x, y) {
    return!cljs.core._EQ_.call(null, x, y)
  };
  var distinct_QMARK___3 = function() {
    var G__529090__delegate = function(x, y, more) {
      if(!cljs.core._EQ_.call(null, x, y)) {
        var s = cljs.core.PersistentHashSet.fromArray([y, x], true);
        var xs = more;
        while(true) {
          var x__$1 = cljs.core.first.call(null, xs);
          var etc = cljs.core.next.call(null, xs);
          if(cljs.core.truth_(xs)) {
            if(cljs.core.contains_QMARK_.call(null, s, x__$1)) {
              return false
            }else {
              var G__529091 = cljs.core.conj.call(null, s, x__$1);
              var G__529092 = etc;
              s = G__529091;
              xs = G__529092;
              continue
            }
          }else {
            return true
          }
          break
        }
      }else {
        return false
      }
    };
    var G__529090 = function(x, y, var_args) {
      var more = null;
      if(arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__529090__delegate.call(this, x, y, more)
    };
    G__529090.cljs$lang$maxFixedArity = 2;
    G__529090.cljs$lang$applyTo = function(arglist__529093) {
      var x = cljs.core.first(arglist__529093);
      arglist__529093 = cljs.core.next(arglist__529093);
      var y = cljs.core.first(arglist__529093);
      var more = cljs.core.rest(arglist__529093);
      return G__529090__delegate(x, y, more)
    };
    G__529090.cljs$core$IFn$_invoke$arity$variadic = G__529090__delegate;
    return G__529090
  }();
  distinct_QMARK_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return distinct_QMARK___1.call(this, x);
      case 2:
        return distinct_QMARK___2.call(this, x, y);
      default:
        return distinct_QMARK___3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  distinct_QMARK_.cljs$lang$maxFixedArity = 2;
  distinct_QMARK_.cljs$lang$applyTo = distinct_QMARK___3.cljs$lang$applyTo;
  distinct_QMARK_.cljs$core$IFn$_invoke$arity$1 = distinct_QMARK___1;
  distinct_QMARK_.cljs$core$IFn$_invoke$arity$2 = distinct_QMARK___2;
  distinct_QMARK_.cljs$core$IFn$_invoke$arity$variadic = distinct_QMARK___3.cljs$core$IFn$_invoke$arity$variadic;
  return distinct_QMARK_
}();
cljs.core.compare = function compare(x, y) {
  if(x === y) {
    return 0
  }else {
    if(x == null) {
      return-1
    }else {
      if(y == null) {
        return 1
      }else {
        if(cljs.core.type.call(null, x) === cljs.core.type.call(null, y)) {
          if(function() {
            var G__529095 = x;
            if(G__529095) {
              var bit__3904__auto__ = G__529095.cljs$lang$protocol_mask$partition1$ & 2048;
              if(bit__3904__auto__ || G__529095.cljs$core$IComparable$) {
                return true
              }else {
                return false
              }
            }else {
              return false
            }
          }()) {
            return cljs.core._compare.call(null, x, y)
          }else {
            return goog.array.defaultCompare(x, y)
          }
        }else {
          if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
            throw new Error("compare on non-nil objects of different types");
          }else {
            return null
          }
        }
      }
    }
  }
};
cljs.core.compare_indexed = function() {
  var compare_indexed = null;
  var compare_indexed__2 = function(xs, ys) {
    var xl = cljs.core.count.call(null, xs);
    var yl = cljs.core.count.call(null, ys);
    if(xl < yl) {
      return-1
    }else {
      if(xl > yl) {
        return 1
      }else {
        if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          return compare_indexed.call(null, xs, ys, xl, 0)
        }else {
          return null
        }
      }
    }
  };
  var compare_indexed__4 = function(xs, ys, len, n) {
    while(true) {
      var d = cljs.core.compare.call(null, cljs.core.nth.call(null, xs, n), cljs.core.nth.call(null, ys, n));
      if(d === 0 && n + 1 < len) {
        var G__529096 = xs;
        var G__529097 = ys;
        var G__529098 = len;
        var G__529099 = n + 1;
        xs = G__529096;
        ys = G__529097;
        len = G__529098;
        n = G__529099;
        continue
      }else {
        return d
      }
      break
    }
  };
  compare_indexed = function(xs, ys, len, n) {
    switch(arguments.length) {
      case 2:
        return compare_indexed__2.call(this, xs, ys);
      case 4:
        return compare_indexed__4.call(this, xs, ys, len, n)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  compare_indexed.cljs$core$IFn$_invoke$arity$2 = compare_indexed__2;
  compare_indexed.cljs$core$IFn$_invoke$arity$4 = compare_indexed__4;
  return compare_indexed
}();
cljs.core.fn__GT_comparator = function fn__GT_comparator(f) {
  if(cljs.core._EQ_.call(null, f, cljs.core.compare)) {
    return cljs.core.compare
  }else {
    return function(x, y) {
      var r = f.call(null, x, y);
      if(typeof r === "number") {
        return r
      }else {
        if(cljs.core.truth_(r)) {
          return-1
        }else {
          if(cljs.core.truth_(f.call(null, y, x))) {
            return 1
          }else {
            return 0
          }
        }
      }
    }
  }
};
cljs.core.sort = function() {
  var sort = null;
  var sort__1 = function(coll) {
    return sort.call(null, cljs.core.compare, coll)
  };
  var sort__2 = function(comp, coll) {
    if(cljs.core.seq.call(null, coll)) {
      var a = cljs.core.to_array.call(null, coll);
      goog.array.stableSort(a, cljs.core.fn__GT_comparator.call(null, comp));
      return cljs.core.seq.call(null, a)
    }else {
      return cljs.core.List.EMPTY
    }
  };
  sort = function(comp, coll) {
    switch(arguments.length) {
      case 1:
        return sort__1.call(this, comp);
      case 2:
        return sort__2.call(this, comp, coll)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  sort.cljs$core$IFn$_invoke$arity$1 = sort__1;
  sort.cljs$core$IFn$_invoke$arity$2 = sort__2;
  return sort
}();
cljs.core.sort_by = function() {
  var sort_by = null;
  var sort_by__2 = function(keyfn, coll) {
    return sort_by.call(null, keyfn, cljs.core.compare, coll)
  };
  var sort_by__3 = function(keyfn, comp, coll) {
    return cljs.core.sort.call(null, function(x, y) {
      return cljs.core.fn__GT_comparator.call(null, comp).call(null, keyfn.call(null, x), keyfn.call(null, y))
    }, coll)
  };
  sort_by = function(keyfn, comp, coll) {
    switch(arguments.length) {
      case 2:
        return sort_by__2.call(this, keyfn, comp);
      case 3:
        return sort_by__3.call(this, keyfn, comp, coll)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  sort_by.cljs$core$IFn$_invoke$arity$2 = sort_by__2;
  sort_by.cljs$core$IFn$_invoke$arity$3 = sort_by__3;
  return sort_by
}();
cljs.core.seq_reduce = function() {
  var seq_reduce = null;
  var seq_reduce__2 = function(f, coll) {
    var temp__4090__auto__ = cljs.core.seq.call(null, coll);
    if(temp__4090__auto__) {
      var s = temp__4090__auto__;
      return cljs.core.reduce.call(null, f, cljs.core.first.call(null, s), cljs.core.next.call(null, s))
    }else {
      return f.call(null)
    }
  };
  var seq_reduce__3 = function(f, val, coll) {
    var val__$1 = val;
    var coll__$1 = cljs.core.seq.call(null, coll);
    while(true) {
      if(coll__$1) {
        var nval = f.call(null, val__$1, cljs.core.first.call(null, coll__$1));
        if(cljs.core.reduced_QMARK_.call(null, nval)) {
          return cljs.core.deref.call(null, nval)
        }else {
          var G__529100 = nval;
          var G__529101 = cljs.core.next.call(null, coll__$1);
          val__$1 = G__529100;
          coll__$1 = G__529101;
          continue
        }
      }else {
        return val__$1
      }
      break
    }
  };
  seq_reduce = function(f, val, coll) {
    switch(arguments.length) {
      case 2:
        return seq_reduce__2.call(this, f, val);
      case 3:
        return seq_reduce__3.call(this, f, val, coll)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  seq_reduce.cljs$core$IFn$_invoke$arity$2 = seq_reduce__2;
  seq_reduce.cljs$core$IFn$_invoke$arity$3 = seq_reduce__3;
  return seq_reduce
}();
cljs.core.shuffle = function shuffle(coll) {
  var a = cljs.core.to_array.call(null, coll);
  goog.array.shuffle(a);
  return cljs.core.vec.call(null, a)
};
cljs.core.reduce = function() {
  var reduce = null;
  var reduce__2 = function(f, coll) {
    if(function() {
      var G__529104 = coll;
      if(G__529104) {
        var bit__3904__auto__ = G__529104.cljs$lang$protocol_mask$partition0$ & 524288;
        if(bit__3904__auto__ || G__529104.cljs$core$IReduce$) {
          return true
        }else {
          return false
        }
      }else {
        return false
      }
    }()) {
      return cljs.core._reduce.call(null, coll, f)
    }else {
      if(coll instanceof Array) {
        return cljs.core.array_reduce.call(null, coll, f)
      }else {
        if(typeof coll === "string") {
          return cljs.core.array_reduce.call(null, coll, f)
        }else {
          if(cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IReduce, coll)) {
            return cljs.core._reduce.call(null, coll, f)
          }else {
            if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
              return cljs.core.seq_reduce.call(null, f, coll)
            }else {
              return null
            }
          }
        }
      }
    }
  };
  var reduce__3 = function(f, val, coll) {
    if(function() {
      var G__529105 = coll;
      if(G__529105) {
        var bit__3904__auto__ = G__529105.cljs$lang$protocol_mask$partition0$ & 524288;
        if(bit__3904__auto__ || G__529105.cljs$core$IReduce$) {
          return true
        }else {
          return false
        }
      }else {
        return false
      }
    }()) {
      return cljs.core._reduce.call(null, coll, f, val)
    }else {
      if(coll instanceof Array) {
        return cljs.core.array_reduce.call(null, coll, f, val)
      }else {
        if(typeof coll === "string") {
          return cljs.core.array_reduce.call(null, coll, f, val)
        }else {
          if(cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IReduce, coll)) {
            return cljs.core._reduce.call(null, coll, f, val)
          }else {
            if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
              return cljs.core.seq_reduce.call(null, f, val, coll)
            }else {
              return null
            }
          }
        }
      }
    }
  };
  reduce = function(f, val, coll) {
    switch(arguments.length) {
      case 2:
        return reduce__2.call(this, f, val);
      case 3:
        return reduce__3.call(this, f, val, coll)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  reduce.cljs$core$IFn$_invoke$arity$2 = reduce__2;
  reduce.cljs$core$IFn$_invoke$arity$3 = reduce__3;
  return reduce
}();
cljs.core.reduce_kv = function reduce_kv(f, init, coll) {
  return cljs.core._kv_reduce.call(null, coll, f, init)
};
cljs.core._PLUS_ = function() {
  var _PLUS_ = null;
  var _PLUS___0 = function() {
    return 0
  };
  var _PLUS___1 = function(x) {
    return x
  };
  var _PLUS___2 = function(x, y) {
    return x + y
  };
  var _PLUS___3 = function() {
    var G__529106__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, _PLUS_, x + y, more)
    };
    var G__529106 = function(x, y, var_args) {
      var more = null;
      if(arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__529106__delegate.call(this, x, y, more)
    };
    G__529106.cljs$lang$maxFixedArity = 2;
    G__529106.cljs$lang$applyTo = function(arglist__529107) {
      var x = cljs.core.first(arglist__529107);
      arglist__529107 = cljs.core.next(arglist__529107);
      var y = cljs.core.first(arglist__529107);
      var more = cljs.core.rest(arglist__529107);
      return G__529106__delegate(x, y, more)
    };
    G__529106.cljs$core$IFn$_invoke$arity$variadic = G__529106__delegate;
    return G__529106
  }();
  _PLUS_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 0:
        return _PLUS___0.call(this);
      case 1:
        return _PLUS___1.call(this, x);
      case 2:
        return _PLUS___2.call(this, x, y);
      default:
        return _PLUS___3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _PLUS_.cljs$lang$maxFixedArity = 2;
  _PLUS_.cljs$lang$applyTo = _PLUS___3.cljs$lang$applyTo;
  _PLUS_.cljs$core$IFn$_invoke$arity$0 = _PLUS___0;
  _PLUS_.cljs$core$IFn$_invoke$arity$1 = _PLUS___1;
  _PLUS_.cljs$core$IFn$_invoke$arity$2 = _PLUS___2;
  _PLUS_.cljs$core$IFn$_invoke$arity$variadic = _PLUS___3.cljs$core$IFn$_invoke$arity$variadic;
  return _PLUS_
}();
cljs.core._ = function() {
  var _ = null;
  var ___1 = function(x) {
    return-x
  };
  var ___2 = function(x, y) {
    return x - y
  };
  var ___3 = function() {
    var G__529108__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, _, x - y, more)
    };
    var G__529108 = function(x, y, var_args) {
      var more = null;
      if(arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__529108__delegate.call(this, x, y, more)
    };
    G__529108.cljs$lang$maxFixedArity = 2;
    G__529108.cljs$lang$applyTo = function(arglist__529109) {
      var x = cljs.core.first(arglist__529109);
      arglist__529109 = cljs.core.next(arglist__529109);
      var y = cljs.core.first(arglist__529109);
      var more = cljs.core.rest(arglist__529109);
      return G__529108__delegate(x, y, more)
    };
    G__529108.cljs$core$IFn$_invoke$arity$variadic = G__529108__delegate;
    return G__529108
  }();
  _ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return ___1.call(this, x);
      case 2:
        return ___2.call(this, x, y);
      default:
        return ___3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _.cljs$lang$maxFixedArity = 2;
  _.cljs$lang$applyTo = ___3.cljs$lang$applyTo;
  _.cljs$core$IFn$_invoke$arity$1 = ___1;
  _.cljs$core$IFn$_invoke$arity$2 = ___2;
  _.cljs$core$IFn$_invoke$arity$variadic = ___3.cljs$core$IFn$_invoke$arity$variadic;
  return _
}();
cljs.core._STAR_ = function() {
  var _STAR_ = null;
  var _STAR___0 = function() {
    return 1
  };
  var _STAR___1 = function(x) {
    return x
  };
  var _STAR___2 = function(x, y) {
    return x * y
  };
  var _STAR___3 = function() {
    var G__529110__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, _STAR_, x * y, more)
    };
    var G__529110 = function(x, y, var_args) {
      var more = null;
      if(arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__529110__delegate.call(this, x, y, more)
    };
    G__529110.cljs$lang$maxFixedArity = 2;
    G__529110.cljs$lang$applyTo = function(arglist__529111) {
      var x = cljs.core.first(arglist__529111);
      arglist__529111 = cljs.core.next(arglist__529111);
      var y = cljs.core.first(arglist__529111);
      var more = cljs.core.rest(arglist__529111);
      return G__529110__delegate(x, y, more)
    };
    G__529110.cljs$core$IFn$_invoke$arity$variadic = G__529110__delegate;
    return G__529110
  }();
  _STAR_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 0:
        return _STAR___0.call(this);
      case 1:
        return _STAR___1.call(this, x);
      case 2:
        return _STAR___2.call(this, x, y);
      default:
        return _STAR___3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _STAR_.cljs$lang$maxFixedArity = 2;
  _STAR_.cljs$lang$applyTo = _STAR___3.cljs$lang$applyTo;
  _STAR_.cljs$core$IFn$_invoke$arity$0 = _STAR___0;
  _STAR_.cljs$core$IFn$_invoke$arity$1 = _STAR___1;
  _STAR_.cljs$core$IFn$_invoke$arity$2 = _STAR___2;
  _STAR_.cljs$core$IFn$_invoke$arity$variadic = _STAR___3.cljs$core$IFn$_invoke$arity$variadic;
  return _STAR_
}();
cljs.core._SLASH_ = function() {
  var _SLASH_ = null;
  var _SLASH___1 = function(x) {
    return _SLASH_.call(null, 1, x)
  };
  var _SLASH___2 = function(x, y) {
    return x / y
  };
  var _SLASH___3 = function() {
    var G__529112__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, _SLASH_, _SLASH_.call(null, x, y), more)
    };
    var G__529112 = function(x, y, var_args) {
      var more = null;
      if(arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__529112__delegate.call(this, x, y, more)
    };
    G__529112.cljs$lang$maxFixedArity = 2;
    G__529112.cljs$lang$applyTo = function(arglist__529113) {
      var x = cljs.core.first(arglist__529113);
      arglist__529113 = cljs.core.next(arglist__529113);
      var y = cljs.core.first(arglist__529113);
      var more = cljs.core.rest(arglist__529113);
      return G__529112__delegate(x, y, more)
    };
    G__529112.cljs$core$IFn$_invoke$arity$variadic = G__529112__delegate;
    return G__529112
  }();
  _SLASH_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return _SLASH___1.call(this, x);
      case 2:
        return _SLASH___2.call(this, x, y);
      default:
        return _SLASH___3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _SLASH_.cljs$lang$maxFixedArity = 2;
  _SLASH_.cljs$lang$applyTo = _SLASH___3.cljs$lang$applyTo;
  _SLASH_.cljs$core$IFn$_invoke$arity$1 = _SLASH___1;
  _SLASH_.cljs$core$IFn$_invoke$arity$2 = _SLASH___2;
  _SLASH_.cljs$core$IFn$_invoke$arity$variadic = _SLASH___3.cljs$core$IFn$_invoke$arity$variadic;
  return _SLASH_
}();
cljs.core._LT_ = function() {
  var _LT_ = null;
  var _LT___1 = function(x) {
    return true
  };
  var _LT___2 = function(x, y) {
    return x < y
  };
  var _LT___3 = function() {
    var G__529114__delegate = function(x, y, more) {
      while(true) {
        if(x < y) {
          if(cljs.core.next.call(null, more)) {
            var G__529115 = y;
            var G__529116 = cljs.core.first.call(null, more);
            var G__529117 = cljs.core.next.call(null, more);
            x = G__529115;
            y = G__529116;
            more = G__529117;
            continue
          }else {
            return y < cljs.core.first.call(null, more)
          }
        }else {
          return false
        }
        break
      }
    };
    var G__529114 = function(x, y, var_args) {
      var more = null;
      if(arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__529114__delegate.call(this, x, y, more)
    };
    G__529114.cljs$lang$maxFixedArity = 2;
    G__529114.cljs$lang$applyTo = function(arglist__529118) {
      var x = cljs.core.first(arglist__529118);
      arglist__529118 = cljs.core.next(arglist__529118);
      var y = cljs.core.first(arglist__529118);
      var more = cljs.core.rest(arglist__529118);
      return G__529114__delegate(x, y, more)
    };
    G__529114.cljs$core$IFn$_invoke$arity$variadic = G__529114__delegate;
    return G__529114
  }();
  _LT_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return _LT___1.call(this, x);
      case 2:
        return _LT___2.call(this, x, y);
      default:
        return _LT___3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _LT_.cljs$lang$maxFixedArity = 2;
  _LT_.cljs$lang$applyTo = _LT___3.cljs$lang$applyTo;
  _LT_.cljs$core$IFn$_invoke$arity$1 = _LT___1;
  _LT_.cljs$core$IFn$_invoke$arity$2 = _LT___2;
  _LT_.cljs$core$IFn$_invoke$arity$variadic = _LT___3.cljs$core$IFn$_invoke$arity$variadic;
  return _LT_
}();
cljs.core._LT__EQ_ = function() {
  var _LT__EQ_ = null;
  var _LT__EQ___1 = function(x) {
    return true
  };
  var _LT__EQ___2 = function(x, y) {
    return x <= y
  };
  var _LT__EQ___3 = function() {
    var G__529119__delegate = function(x, y, more) {
      while(true) {
        if(x <= y) {
          if(cljs.core.next.call(null, more)) {
            var G__529120 = y;
            var G__529121 = cljs.core.first.call(null, more);
            var G__529122 = cljs.core.next.call(null, more);
            x = G__529120;
            y = G__529121;
            more = G__529122;
            continue
          }else {
            return y <= cljs.core.first.call(null, more)
          }
        }else {
          return false
        }
        break
      }
    };
    var G__529119 = function(x, y, var_args) {
      var more = null;
      if(arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__529119__delegate.call(this, x, y, more)
    };
    G__529119.cljs$lang$maxFixedArity = 2;
    G__529119.cljs$lang$applyTo = function(arglist__529123) {
      var x = cljs.core.first(arglist__529123);
      arglist__529123 = cljs.core.next(arglist__529123);
      var y = cljs.core.first(arglist__529123);
      var more = cljs.core.rest(arglist__529123);
      return G__529119__delegate(x, y, more)
    };
    G__529119.cljs$core$IFn$_invoke$arity$variadic = G__529119__delegate;
    return G__529119
  }();
  _LT__EQ_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return _LT__EQ___1.call(this, x);
      case 2:
        return _LT__EQ___2.call(this, x, y);
      default:
        return _LT__EQ___3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _LT__EQ_.cljs$lang$maxFixedArity = 2;
  _LT__EQ_.cljs$lang$applyTo = _LT__EQ___3.cljs$lang$applyTo;
  _LT__EQ_.cljs$core$IFn$_invoke$arity$1 = _LT__EQ___1;
  _LT__EQ_.cljs$core$IFn$_invoke$arity$2 = _LT__EQ___2;
  _LT__EQ_.cljs$core$IFn$_invoke$arity$variadic = _LT__EQ___3.cljs$core$IFn$_invoke$arity$variadic;
  return _LT__EQ_
}();
cljs.core._GT_ = function() {
  var _GT_ = null;
  var _GT___1 = function(x) {
    return true
  };
  var _GT___2 = function(x, y) {
    return x > y
  };
  var _GT___3 = function() {
    var G__529124__delegate = function(x, y, more) {
      while(true) {
        if(x > y) {
          if(cljs.core.next.call(null, more)) {
            var G__529125 = y;
            var G__529126 = cljs.core.first.call(null, more);
            var G__529127 = cljs.core.next.call(null, more);
            x = G__529125;
            y = G__529126;
            more = G__529127;
            continue
          }else {
            return y > cljs.core.first.call(null, more)
          }
        }else {
          return false
        }
        break
      }
    };
    var G__529124 = function(x, y, var_args) {
      var more = null;
      if(arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__529124__delegate.call(this, x, y, more)
    };
    G__529124.cljs$lang$maxFixedArity = 2;
    G__529124.cljs$lang$applyTo = function(arglist__529128) {
      var x = cljs.core.first(arglist__529128);
      arglist__529128 = cljs.core.next(arglist__529128);
      var y = cljs.core.first(arglist__529128);
      var more = cljs.core.rest(arglist__529128);
      return G__529124__delegate(x, y, more)
    };
    G__529124.cljs$core$IFn$_invoke$arity$variadic = G__529124__delegate;
    return G__529124
  }();
  _GT_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return _GT___1.call(this, x);
      case 2:
        return _GT___2.call(this, x, y);
      default:
        return _GT___3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _GT_.cljs$lang$maxFixedArity = 2;
  _GT_.cljs$lang$applyTo = _GT___3.cljs$lang$applyTo;
  _GT_.cljs$core$IFn$_invoke$arity$1 = _GT___1;
  _GT_.cljs$core$IFn$_invoke$arity$2 = _GT___2;
  _GT_.cljs$core$IFn$_invoke$arity$variadic = _GT___3.cljs$core$IFn$_invoke$arity$variadic;
  return _GT_
}();
cljs.core._GT__EQ_ = function() {
  var _GT__EQ_ = null;
  var _GT__EQ___1 = function(x) {
    return true
  };
  var _GT__EQ___2 = function(x, y) {
    return x >= y
  };
  var _GT__EQ___3 = function() {
    var G__529129__delegate = function(x, y, more) {
      while(true) {
        if(x >= y) {
          if(cljs.core.next.call(null, more)) {
            var G__529130 = y;
            var G__529131 = cljs.core.first.call(null, more);
            var G__529132 = cljs.core.next.call(null, more);
            x = G__529130;
            y = G__529131;
            more = G__529132;
            continue
          }else {
            return y >= cljs.core.first.call(null, more)
          }
        }else {
          return false
        }
        break
      }
    };
    var G__529129 = function(x, y, var_args) {
      var more = null;
      if(arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__529129__delegate.call(this, x, y, more)
    };
    G__529129.cljs$lang$maxFixedArity = 2;
    G__529129.cljs$lang$applyTo = function(arglist__529133) {
      var x = cljs.core.first(arglist__529133);
      arglist__529133 = cljs.core.next(arglist__529133);
      var y = cljs.core.first(arglist__529133);
      var more = cljs.core.rest(arglist__529133);
      return G__529129__delegate(x, y, more)
    };
    G__529129.cljs$core$IFn$_invoke$arity$variadic = G__529129__delegate;
    return G__529129
  }();
  _GT__EQ_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return _GT__EQ___1.call(this, x);
      case 2:
        return _GT__EQ___2.call(this, x, y);
      default:
        return _GT__EQ___3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _GT__EQ_.cljs$lang$maxFixedArity = 2;
  _GT__EQ_.cljs$lang$applyTo = _GT__EQ___3.cljs$lang$applyTo;
  _GT__EQ_.cljs$core$IFn$_invoke$arity$1 = _GT__EQ___1;
  _GT__EQ_.cljs$core$IFn$_invoke$arity$2 = _GT__EQ___2;
  _GT__EQ_.cljs$core$IFn$_invoke$arity$variadic = _GT__EQ___3.cljs$core$IFn$_invoke$arity$variadic;
  return _GT__EQ_
}();
cljs.core.dec = function dec(x) {
  return x - 1
};
cljs.core.max = function() {
  var max = null;
  var max__1 = function(x) {
    return x
  };
  var max__2 = function(x, y) {
    var x__3592__auto__ = x;
    var y__3593__auto__ = y;
    return x__3592__auto__ > y__3593__auto__ ? x__3592__auto__ : y__3593__auto__
  };
  var max__3 = function() {
    var G__529134__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, max, function() {
        var x__3592__auto__ = x;
        var y__3593__auto__ = y;
        return x__3592__auto__ > y__3593__auto__ ? x__3592__auto__ : y__3593__auto__
      }(), more)
    };
    var G__529134 = function(x, y, var_args) {
      var more = null;
      if(arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__529134__delegate.call(this, x, y, more)
    };
    G__529134.cljs$lang$maxFixedArity = 2;
    G__529134.cljs$lang$applyTo = function(arglist__529135) {
      var x = cljs.core.first(arglist__529135);
      arglist__529135 = cljs.core.next(arglist__529135);
      var y = cljs.core.first(arglist__529135);
      var more = cljs.core.rest(arglist__529135);
      return G__529134__delegate(x, y, more)
    };
    G__529134.cljs$core$IFn$_invoke$arity$variadic = G__529134__delegate;
    return G__529134
  }();
  max = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return max__1.call(this, x);
      case 2:
        return max__2.call(this, x, y);
      default:
        return max__3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  max.cljs$lang$maxFixedArity = 2;
  max.cljs$lang$applyTo = max__3.cljs$lang$applyTo;
  max.cljs$core$IFn$_invoke$arity$1 = max__1;
  max.cljs$core$IFn$_invoke$arity$2 = max__2;
  max.cljs$core$IFn$_invoke$arity$variadic = max__3.cljs$core$IFn$_invoke$arity$variadic;
  return max
}();
cljs.core.min = function() {
  var min = null;
  var min__1 = function(x) {
    return x
  };
  var min__2 = function(x, y) {
    var x__3599__auto__ = x;
    var y__3600__auto__ = y;
    return x__3599__auto__ < y__3600__auto__ ? x__3599__auto__ : y__3600__auto__
  };
  var min__3 = function() {
    var G__529136__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, min, function() {
        var x__3599__auto__ = x;
        var y__3600__auto__ = y;
        return x__3599__auto__ < y__3600__auto__ ? x__3599__auto__ : y__3600__auto__
      }(), more)
    };
    var G__529136 = function(x, y, var_args) {
      var more = null;
      if(arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__529136__delegate.call(this, x, y, more)
    };
    G__529136.cljs$lang$maxFixedArity = 2;
    G__529136.cljs$lang$applyTo = function(arglist__529137) {
      var x = cljs.core.first(arglist__529137);
      arglist__529137 = cljs.core.next(arglist__529137);
      var y = cljs.core.first(arglist__529137);
      var more = cljs.core.rest(arglist__529137);
      return G__529136__delegate(x, y, more)
    };
    G__529136.cljs$core$IFn$_invoke$arity$variadic = G__529136__delegate;
    return G__529136
  }();
  min = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return min__1.call(this, x);
      case 2:
        return min__2.call(this, x, y);
      default:
        return min__3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  min.cljs$lang$maxFixedArity = 2;
  min.cljs$lang$applyTo = min__3.cljs$lang$applyTo;
  min.cljs$core$IFn$_invoke$arity$1 = min__1;
  min.cljs$core$IFn$_invoke$arity$2 = min__2;
  min.cljs$core$IFn$_invoke$arity$variadic = min__3.cljs$core$IFn$_invoke$arity$variadic;
  return min
}();
cljs.core.byte$ = function byte$(x) {
  return x
};
cljs.core.char$ = function char$(x) {
  if(typeof x === "number") {
    return String.fromCharCode(x)
  }else {
    if(typeof x === "string" && x.length === 1) {
      return x
    }else {
      if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        throw new Error("Argument to char must be a character or number");
      }else {
        return null
      }
    }
  }
};
cljs.core.short$ = function short$(x) {
  return x
};
cljs.core.float$ = function float$(x) {
  return x
};
cljs.core.double$ = function double$(x) {
  return x
};
cljs.core.unchecked_byte = function unchecked_byte(x) {
  return x
};
cljs.core.unchecked_char = function unchecked_char(x) {
  return x
};
cljs.core.unchecked_short = function unchecked_short(x) {
  return x
};
cljs.core.unchecked_float = function unchecked_float(x) {
  return x
};
cljs.core.unchecked_double = function unchecked_double(x) {
  return x
};
cljs.core.unchecked_add = function() {
  var unchecked_add = null;
  var unchecked_add__0 = function() {
    return 0
  };
  var unchecked_add__1 = function(x) {
    return x
  };
  var unchecked_add__2 = function(x, y) {
    return x + y
  };
  var unchecked_add__3 = function() {
    var G__529138__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, unchecked_add, x + y, more)
    };
    var G__529138 = function(x, y, var_args) {
      var more = null;
      if(arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__529138__delegate.call(this, x, y, more)
    };
    G__529138.cljs$lang$maxFixedArity = 2;
    G__529138.cljs$lang$applyTo = function(arglist__529139) {
      var x = cljs.core.first(arglist__529139);
      arglist__529139 = cljs.core.next(arglist__529139);
      var y = cljs.core.first(arglist__529139);
      var more = cljs.core.rest(arglist__529139);
      return G__529138__delegate(x, y, more)
    };
    G__529138.cljs$core$IFn$_invoke$arity$variadic = G__529138__delegate;
    return G__529138
  }();
  unchecked_add = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 0:
        return unchecked_add__0.call(this);
      case 1:
        return unchecked_add__1.call(this, x);
      case 2:
        return unchecked_add__2.call(this, x, y);
      default:
        return unchecked_add__3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  unchecked_add.cljs$lang$maxFixedArity = 2;
  unchecked_add.cljs$lang$applyTo = unchecked_add__3.cljs$lang$applyTo;
  unchecked_add.cljs$core$IFn$_invoke$arity$0 = unchecked_add__0;
  unchecked_add.cljs$core$IFn$_invoke$arity$1 = unchecked_add__1;
  unchecked_add.cljs$core$IFn$_invoke$arity$2 = unchecked_add__2;
  unchecked_add.cljs$core$IFn$_invoke$arity$variadic = unchecked_add__3.cljs$core$IFn$_invoke$arity$variadic;
  return unchecked_add
}();
cljs.core.unchecked_add_int = function() {
  var unchecked_add_int = null;
  var unchecked_add_int__0 = function() {
    return 0
  };
  var unchecked_add_int__1 = function(x) {
    return x
  };
  var unchecked_add_int__2 = function(x, y) {
    return x + y
  };
  var unchecked_add_int__3 = function() {
    var G__529140__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, unchecked_add_int, x + y, more)
    };
    var G__529140 = function(x, y, var_args) {
      var more = null;
      if(arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__529140__delegate.call(this, x, y, more)
    };
    G__529140.cljs$lang$maxFixedArity = 2;
    G__529140.cljs$lang$applyTo = function(arglist__529141) {
      var x = cljs.core.first(arglist__529141);
      arglist__529141 = cljs.core.next(arglist__529141);
      var y = cljs.core.first(arglist__529141);
      var more = cljs.core.rest(arglist__529141);
      return G__529140__delegate(x, y, more)
    };
    G__529140.cljs$core$IFn$_invoke$arity$variadic = G__529140__delegate;
    return G__529140
  }();
  unchecked_add_int = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 0:
        return unchecked_add_int__0.call(this);
      case 1:
        return unchecked_add_int__1.call(this, x);
      case 2:
        return unchecked_add_int__2.call(this, x, y);
      default:
        return unchecked_add_int__3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  unchecked_add_int.cljs$lang$maxFixedArity = 2;
  unchecked_add_int.cljs$lang$applyTo = unchecked_add_int__3.cljs$lang$applyTo;
  unchecked_add_int.cljs$core$IFn$_invoke$arity$0 = unchecked_add_int__0;
  unchecked_add_int.cljs$core$IFn$_invoke$arity$1 = unchecked_add_int__1;
  unchecked_add_int.cljs$core$IFn$_invoke$arity$2 = unchecked_add_int__2;
  unchecked_add_int.cljs$core$IFn$_invoke$arity$variadic = unchecked_add_int__3.cljs$core$IFn$_invoke$arity$variadic;
  return unchecked_add_int
}();
cljs.core.unchecked_dec = function unchecked_dec(x) {
  return x - 1
};
cljs.core.unchecked_dec_int = function unchecked_dec_int(x) {
  return x - 1
};
cljs.core.unchecked_divide_int = function() {
  var unchecked_divide_int = null;
  var unchecked_divide_int__1 = function(x) {
    return unchecked_divide_int.call(null, 1, x)
  };
  var unchecked_divide_int__2 = function(x, y) {
    return x / y
  };
  var unchecked_divide_int__3 = function() {
    var G__529142__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, unchecked_divide_int, unchecked_divide_int.call(null, x, y), more)
    };
    var G__529142 = function(x, y, var_args) {
      var more = null;
      if(arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__529142__delegate.call(this, x, y, more)
    };
    G__529142.cljs$lang$maxFixedArity = 2;
    G__529142.cljs$lang$applyTo = function(arglist__529143) {
      var x = cljs.core.first(arglist__529143);
      arglist__529143 = cljs.core.next(arglist__529143);
      var y = cljs.core.first(arglist__529143);
      var more = cljs.core.rest(arglist__529143);
      return G__529142__delegate(x, y, more)
    };
    G__529142.cljs$core$IFn$_invoke$arity$variadic = G__529142__delegate;
    return G__529142
  }();
  unchecked_divide_int = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return unchecked_divide_int__1.call(this, x);
      case 2:
        return unchecked_divide_int__2.call(this, x, y);
      default:
        return unchecked_divide_int__3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  unchecked_divide_int.cljs$lang$maxFixedArity = 2;
  unchecked_divide_int.cljs$lang$applyTo = unchecked_divide_int__3.cljs$lang$applyTo;
  unchecked_divide_int.cljs$core$IFn$_invoke$arity$1 = unchecked_divide_int__1;
  unchecked_divide_int.cljs$core$IFn$_invoke$arity$2 = unchecked_divide_int__2;
  unchecked_divide_int.cljs$core$IFn$_invoke$arity$variadic = unchecked_divide_int__3.cljs$core$IFn$_invoke$arity$variadic;
  return unchecked_divide_int
}();
cljs.core.unchecked_inc = function unchecked_inc(x) {
  return x + 1
};
cljs.core.unchecked_inc_int = function unchecked_inc_int(x) {
  return x + 1
};
cljs.core.unchecked_multiply = function() {
  var unchecked_multiply = null;
  var unchecked_multiply__0 = function() {
    return 1
  };
  var unchecked_multiply__1 = function(x) {
    return x
  };
  var unchecked_multiply__2 = function(x, y) {
    return x * y
  };
  var unchecked_multiply__3 = function() {
    var G__529144__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, unchecked_multiply, x * y, more)
    };
    var G__529144 = function(x, y, var_args) {
      var more = null;
      if(arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__529144__delegate.call(this, x, y, more)
    };
    G__529144.cljs$lang$maxFixedArity = 2;
    G__529144.cljs$lang$applyTo = function(arglist__529145) {
      var x = cljs.core.first(arglist__529145);
      arglist__529145 = cljs.core.next(arglist__529145);
      var y = cljs.core.first(arglist__529145);
      var more = cljs.core.rest(arglist__529145);
      return G__529144__delegate(x, y, more)
    };
    G__529144.cljs$core$IFn$_invoke$arity$variadic = G__529144__delegate;
    return G__529144
  }();
  unchecked_multiply = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 0:
        return unchecked_multiply__0.call(this);
      case 1:
        return unchecked_multiply__1.call(this, x);
      case 2:
        return unchecked_multiply__2.call(this, x, y);
      default:
        return unchecked_multiply__3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  unchecked_multiply.cljs$lang$maxFixedArity = 2;
  unchecked_multiply.cljs$lang$applyTo = unchecked_multiply__3.cljs$lang$applyTo;
  unchecked_multiply.cljs$core$IFn$_invoke$arity$0 = unchecked_multiply__0;
  unchecked_multiply.cljs$core$IFn$_invoke$arity$1 = unchecked_multiply__1;
  unchecked_multiply.cljs$core$IFn$_invoke$arity$2 = unchecked_multiply__2;
  unchecked_multiply.cljs$core$IFn$_invoke$arity$variadic = unchecked_multiply__3.cljs$core$IFn$_invoke$arity$variadic;
  return unchecked_multiply
}();
cljs.core.unchecked_multiply_int = function() {
  var unchecked_multiply_int = null;
  var unchecked_multiply_int__0 = function() {
    return 1
  };
  var unchecked_multiply_int__1 = function(x) {
    return x
  };
  var unchecked_multiply_int__2 = function(x, y) {
    return x * y
  };
  var unchecked_multiply_int__3 = function() {
    var G__529146__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, unchecked_multiply_int, x * y, more)
    };
    var G__529146 = function(x, y, var_args) {
      var more = null;
      if(arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__529146__delegate.call(this, x, y, more)
    };
    G__529146.cljs$lang$maxFixedArity = 2;
    G__529146.cljs$lang$applyTo = function(arglist__529147) {
      var x = cljs.core.first(arglist__529147);
      arglist__529147 = cljs.core.next(arglist__529147);
      var y = cljs.core.first(arglist__529147);
      var more = cljs.core.rest(arglist__529147);
      return G__529146__delegate(x, y, more)
    };
    G__529146.cljs$core$IFn$_invoke$arity$variadic = G__529146__delegate;
    return G__529146
  }();
  unchecked_multiply_int = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 0:
        return unchecked_multiply_int__0.call(this);
      case 1:
        return unchecked_multiply_int__1.call(this, x);
      case 2:
        return unchecked_multiply_int__2.call(this, x, y);
      default:
        return unchecked_multiply_int__3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  unchecked_multiply_int.cljs$lang$maxFixedArity = 2;
  unchecked_multiply_int.cljs$lang$applyTo = unchecked_multiply_int__3.cljs$lang$applyTo;
  unchecked_multiply_int.cljs$core$IFn$_invoke$arity$0 = unchecked_multiply_int__0;
  unchecked_multiply_int.cljs$core$IFn$_invoke$arity$1 = unchecked_multiply_int__1;
  unchecked_multiply_int.cljs$core$IFn$_invoke$arity$2 = unchecked_multiply_int__2;
  unchecked_multiply_int.cljs$core$IFn$_invoke$arity$variadic = unchecked_multiply_int__3.cljs$core$IFn$_invoke$arity$variadic;
  return unchecked_multiply_int
}();
cljs.core.unchecked_negate = function unchecked_negate(x) {
  return-x
};
cljs.core.unchecked_negate_int = function unchecked_negate_int(x) {
  return-x
};
cljs.core.unchecked_remainder_int = function unchecked_remainder_int(x, n) {
  return cljs.core.mod.call(null, x, n)
};
cljs.core.unchecked_substract = function() {
  var unchecked_substract = null;
  var unchecked_substract__1 = function(x) {
    return-x
  };
  var unchecked_substract__2 = function(x, y) {
    return x - y
  };
  var unchecked_substract__3 = function() {
    var G__529148__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, unchecked_substract, x - y, more)
    };
    var G__529148 = function(x, y, var_args) {
      var more = null;
      if(arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__529148__delegate.call(this, x, y, more)
    };
    G__529148.cljs$lang$maxFixedArity = 2;
    G__529148.cljs$lang$applyTo = function(arglist__529149) {
      var x = cljs.core.first(arglist__529149);
      arglist__529149 = cljs.core.next(arglist__529149);
      var y = cljs.core.first(arglist__529149);
      var more = cljs.core.rest(arglist__529149);
      return G__529148__delegate(x, y, more)
    };
    G__529148.cljs$core$IFn$_invoke$arity$variadic = G__529148__delegate;
    return G__529148
  }();
  unchecked_substract = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return unchecked_substract__1.call(this, x);
      case 2:
        return unchecked_substract__2.call(this, x, y);
      default:
        return unchecked_substract__3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  unchecked_substract.cljs$lang$maxFixedArity = 2;
  unchecked_substract.cljs$lang$applyTo = unchecked_substract__3.cljs$lang$applyTo;
  unchecked_substract.cljs$core$IFn$_invoke$arity$1 = unchecked_substract__1;
  unchecked_substract.cljs$core$IFn$_invoke$arity$2 = unchecked_substract__2;
  unchecked_substract.cljs$core$IFn$_invoke$arity$variadic = unchecked_substract__3.cljs$core$IFn$_invoke$arity$variadic;
  return unchecked_substract
}();
cljs.core.unchecked_substract_int = function() {
  var unchecked_substract_int = null;
  var unchecked_substract_int__1 = function(x) {
    return-x
  };
  var unchecked_substract_int__2 = function(x, y) {
    return x - y
  };
  var unchecked_substract_int__3 = function() {
    var G__529150__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, unchecked_substract_int, x - y, more)
    };
    var G__529150 = function(x, y, var_args) {
      var more = null;
      if(arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__529150__delegate.call(this, x, y, more)
    };
    G__529150.cljs$lang$maxFixedArity = 2;
    G__529150.cljs$lang$applyTo = function(arglist__529151) {
      var x = cljs.core.first(arglist__529151);
      arglist__529151 = cljs.core.next(arglist__529151);
      var y = cljs.core.first(arglist__529151);
      var more = cljs.core.rest(arglist__529151);
      return G__529150__delegate(x, y, more)
    };
    G__529150.cljs$core$IFn$_invoke$arity$variadic = G__529150__delegate;
    return G__529150
  }();
  unchecked_substract_int = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return unchecked_substract_int__1.call(this, x);
      case 2:
        return unchecked_substract_int__2.call(this, x, y);
      default:
        return unchecked_substract_int__3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  unchecked_substract_int.cljs$lang$maxFixedArity = 2;
  unchecked_substract_int.cljs$lang$applyTo = unchecked_substract_int__3.cljs$lang$applyTo;
  unchecked_substract_int.cljs$core$IFn$_invoke$arity$1 = unchecked_substract_int__1;
  unchecked_substract_int.cljs$core$IFn$_invoke$arity$2 = unchecked_substract_int__2;
  unchecked_substract_int.cljs$core$IFn$_invoke$arity$variadic = unchecked_substract_int__3.cljs$core$IFn$_invoke$arity$variadic;
  return unchecked_substract_int
}();
cljs.core.fix = function fix(q) {
  if(q >= 0) {
    return Math.floor.call(null, q)
  }else {
    return Math.ceil.call(null, q)
  }
};
cljs.core.int$ = function int$(x) {
  return x | 0
};
cljs.core.unchecked_int = function unchecked_int(x) {
  return cljs.core.fix.call(null, x)
};
cljs.core.long$ = function long$(x) {
  return cljs.core.fix.call(null, x)
};
cljs.core.unchecked_long = function unchecked_long(x) {
  return cljs.core.fix.call(null, x)
};
cljs.core.booleans = function booleans(x) {
  return x
};
cljs.core.bytes = function bytes(x) {
  return x
};
cljs.core.chars = function chars(x) {
  return x
};
cljs.core.shorts = function shorts(x) {
  return x
};
cljs.core.ints = function ints(x) {
  return x
};
cljs.core.floats = function floats(x) {
  return x
};
cljs.core.doubles = function doubles(x) {
  return x
};
cljs.core.longs = function longs(x) {
  return x
};
cljs.core.js_mod = function js_mod(n, d) {
  return n % d
};
cljs.core.mod = function mod(n, d) {
  return(n % d + d) % d
};
cljs.core.quot = function quot(n, d) {
  var rem = n % d;
  return cljs.core.fix.call(null, (n - rem) / d)
};
cljs.core.rem = function rem(n, d) {
  var q = cljs.core.quot.call(null, n, d);
  return n - d * q
};
cljs.core.rand = function() {
  var rand = null;
  var rand__0 = function() {
    return Math.random.call(null)
  };
  var rand__1 = function(n) {
    return n * rand.call(null)
  };
  rand = function(n) {
    switch(arguments.length) {
      case 0:
        return rand__0.call(this);
      case 1:
        return rand__1.call(this, n)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  rand.cljs$core$IFn$_invoke$arity$0 = rand__0;
  rand.cljs$core$IFn$_invoke$arity$1 = rand__1;
  return rand
}();
cljs.core.rand_int = function rand_int(n) {
  return cljs.core.fix.call(null, cljs.core.rand.call(null, n))
};
cljs.core.bit_xor = function bit_xor(x, y) {
  return x ^ y
};
cljs.core.bit_and = function bit_and(x, y) {
  return x & y
};
cljs.core.bit_or = function bit_or(x, y) {
  return x | y
};
cljs.core.bit_and_not = function bit_and_not(x, y) {
  return x & ~y
};
cljs.core.bit_clear = function bit_clear(x, n) {
  return x & ~(1 << n)
};
cljs.core.bit_flip = function bit_flip(x, n) {
  return x ^ 1 << n
};
cljs.core.bit_not = function bit_not(x) {
  return~x
};
cljs.core.bit_set = function bit_set(x, n) {
  return x | 1 << n
};
cljs.core.bit_test = function bit_test(x, n) {
  return(x & 1 << n) != 0
};
cljs.core.bit_shift_left = function bit_shift_left(x, n) {
  return x << n
};
cljs.core.bit_shift_right = function bit_shift_right(x, n) {
  return x >> n
};
cljs.core.bit_shift_right_zero_fill = function bit_shift_right_zero_fill(x, n) {
  return x >>> n
};
cljs.core.unsigned_bit_shift_right = function unsigned_bit_shift_right(x, n) {
  return x >>> n
};
cljs.core.bit_count = function bit_count(v) {
  var v__$1 = v - (v >> 1 & 1431655765);
  var v__$2 = (v__$1 & 858993459) + (v__$1 >> 2 & 858993459);
  return(v__$2 + (v__$2 >> 4) & 252645135) * 16843009 >> 24
};
cljs.core._EQ__EQ_ = function() {
  var _EQ__EQ_ = null;
  var _EQ__EQ___1 = function(x) {
    return true
  };
  var _EQ__EQ___2 = function(x, y) {
    return cljs.core._equiv.call(null, x, y)
  };
  var _EQ__EQ___3 = function() {
    var G__529152__delegate = function(x, y, more) {
      while(true) {
        if(_EQ__EQ_.call(null, x, y)) {
          if(cljs.core.next.call(null, more)) {
            var G__529153 = y;
            var G__529154 = cljs.core.first.call(null, more);
            var G__529155 = cljs.core.next.call(null, more);
            x = G__529153;
            y = G__529154;
            more = G__529155;
            continue
          }else {
            return _EQ__EQ_.call(null, y, cljs.core.first.call(null, more))
          }
        }else {
          return false
        }
        break
      }
    };
    var G__529152 = function(x, y, var_args) {
      var more = null;
      if(arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__529152__delegate.call(this, x, y, more)
    };
    G__529152.cljs$lang$maxFixedArity = 2;
    G__529152.cljs$lang$applyTo = function(arglist__529156) {
      var x = cljs.core.first(arglist__529156);
      arglist__529156 = cljs.core.next(arglist__529156);
      var y = cljs.core.first(arglist__529156);
      var more = cljs.core.rest(arglist__529156);
      return G__529152__delegate(x, y, more)
    };
    G__529152.cljs$core$IFn$_invoke$arity$variadic = G__529152__delegate;
    return G__529152
  }();
  _EQ__EQ_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return _EQ__EQ___1.call(this, x);
      case 2:
        return _EQ__EQ___2.call(this, x, y);
      default:
        return _EQ__EQ___3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _EQ__EQ_.cljs$lang$maxFixedArity = 2;
  _EQ__EQ_.cljs$lang$applyTo = _EQ__EQ___3.cljs$lang$applyTo;
  _EQ__EQ_.cljs$core$IFn$_invoke$arity$1 = _EQ__EQ___1;
  _EQ__EQ_.cljs$core$IFn$_invoke$arity$2 = _EQ__EQ___2;
  _EQ__EQ_.cljs$core$IFn$_invoke$arity$variadic = _EQ__EQ___3.cljs$core$IFn$_invoke$arity$variadic;
  return _EQ__EQ_
}();
cljs.core.pos_QMARK_ = function pos_QMARK_(n) {
  return n > 0
};
cljs.core.zero_QMARK_ = function zero_QMARK_(n) {
  return n === 0
};
cljs.core.neg_QMARK_ = function neg_QMARK_(x) {
  return x < 0
};
cljs.core.nthnext = function nthnext(coll, n) {
  var n__$1 = n;
  var xs = cljs.core.seq.call(null, coll);
  while(true) {
    if(xs && n__$1 > 0) {
      var G__529157 = n__$1 - 1;
      var G__529158 = cljs.core.next.call(null, xs);
      n__$1 = G__529157;
      xs = G__529158;
      continue
    }else {
      return xs
    }
    break
  }
};
cljs.core.str = function() {
  var str = null;
  var str__0 = function() {
    return""
  };
  var str__1 = function(x) {
    if(x == null) {
      return""
    }else {
      return x.toString()
    }
  };
  var str__2 = function() {
    var G__529159__delegate = function(x, ys) {
      var sb = new goog.string.StringBuffer(str.call(null, x));
      var more = ys;
      while(true) {
        if(cljs.core.truth_(more)) {
          var G__529160 = sb.append(str.call(null, cljs.core.first.call(null, more)));
          var G__529161 = cljs.core.next.call(null, more);
          sb = G__529160;
          more = G__529161;
          continue
        }else {
          return sb.toString()
        }
        break
      }
    };
    var G__529159 = function(x, var_args) {
      var ys = null;
      if(arguments.length > 1) {
        ys = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
      }
      return G__529159__delegate.call(this, x, ys)
    };
    G__529159.cljs$lang$maxFixedArity = 1;
    G__529159.cljs$lang$applyTo = function(arglist__529162) {
      var x = cljs.core.first(arglist__529162);
      var ys = cljs.core.rest(arglist__529162);
      return G__529159__delegate(x, ys)
    };
    G__529159.cljs$core$IFn$_invoke$arity$variadic = G__529159__delegate;
    return G__529159
  }();
  str = function(x, var_args) {
    var ys = var_args;
    switch(arguments.length) {
      case 0:
        return str__0.call(this);
      case 1:
        return str__1.call(this, x);
      default:
        return str__2.cljs$core$IFn$_invoke$arity$variadic(x, cljs.core.array_seq(arguments, 1))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  str.cljs$lang$maxFixedArity = 1;
  str.cljs$lang$applyTo = str__2.cljs$lang$applyTo;
  str.cljs$core$IFn$_invoke$arity$0 = str__0;
  str.cljs$core$IFn$_invoke$arity$1 = str__1;
  str.cljs$core$IFn$_invoke$arity$variadic = str__2.cljs$core$IFn$_invoke$arity$variadic;
  return str
}();
cljs.core.subs = function() {
  var subs = null;
  var subs__2 = function(s, start) {
    return s.substring(start)
  };
  var subs__3 = function(s, start, end) {
    return s.substring(start, end)
  };
  subs = function(s, start, end) {
    switch(arguments.length) {
      case 2:
        return subs__2.call(this, s, start);
      case 3:
        return subs__3.call(this, s, start, end)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  subs.cljs$core$IFn$_invoke$arity$2 = subs__2;
  subs.cljs$core$IFn$_invoke$arity$3 = subs__3;
  return subs
}();
cljs.core.equiv_sequential = function equiv_sequential(x, y) {
  return cljs.core.boolean$.call(null, cljs.core.sequential_QMARK_.call(null, y) ? function() {
    var xs = cljs.core.seq.call(null, x);
    var ys = cljs.core.seq.call(null, y);
    while(true) {
      if(xs == null) {
        return ys == null
      }else {
        if(ys == null) {
          return false
        }else {
          if(cljs.core._EQ_.call(null, cljs.core.first.call(null, xs), cljs.core.first.call(null, ys))) {
            var G__529163 = cljs.core.next.call(null, xs);
            var G__529164 = cljs.core.next.call(null, ys);
            xs = G__529163;
            ys = G__529164;
            continue
          }else {
            if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
              return false
            }else {
              return null
            }
          }
        }
      }
      break
    }
  }() : null)
};
cljs.core.hash_combine = function hash_combine(seed, hash) {
  return seed ^ hash + 2654435769 + (seed << 6) + (seed >> 2)
};
cljs.core.hash_coll = function hash_coll(coll) {
  if(cljs.core.seq.call(null, coll)) {
    var res = cljs.core.hash.call(null, cljs.core.first.call(null, coll));
    var s = cljs.core.next.call(null, coll);
    while(true) {
      if(s == null) {
        return res
      }else {
        var G__529165 = cljs.core.hash_combine.call(null, res, cljs.core.hash.call(null, cljs.core.first.call(null, s)));
        var G__529166 = cljs.core.next.call(null, s);
        res = G__529165;
        s = G__529166;
        continue
      }
      break
    }
  }else {
    return 0
  }
};
cljs.core.hash_imap = function hash_imap(m) {
  var h = 0;
  var s = cljs.core.seq.call(null, m);
  while(true) {
    if(s) {
      var e = cljs.core.first.call(null, s);
      var G__529167 = (h + (cljs.core.hash.call(null, cljs.core.key.call(null, e)) ^ cljs.core.hash.call(null, cljs.core.val.call(null, e)))) % 4503599627370496;
      var G__529168 = cljs.core.next.call(null, s);
      h = G__529167;
      s = G__529168;
      continue
    }else {
      return h
    }
    break
  }
};
cljs.core.hash_iset = function hash_iset(s) {
  var h = 0;
  var s__$1 = cljs.core.seq.call(null, s);
  while(true) {
    if(s__$1) {
      var e = cljs.core.first.call(null, s__$1);
      var G__529169 = (h + cljs.core.hash.call(null, e)) % 4503599627370496;
      var G__529170 = cljs.core.next.call(null, s__$1);
      h = G__529169;
      s__$1 = G__529170;
      continue
    }else {
      return h
    }
    break
  }
};
cljs.core.extend_object_BANG_ = function extend_object_BANG_(obj, fn_map) {
  var seq__529177_529183 = cljs.core.seq.call(null, fn_map);
  var chunk__529178_529184 = null;
  var count__529179_529185 = 0;
  var i__529180_529186 = 0;
  while(true) {
    if(i__529180_529186 < count__529179_529185) {
      var vec__529181_529187 = cljs.core._nth.call(null, chunk__529178_529184, i__529180_529186);
      var key_name_529188 = cljs.core.nth.call(null, vec__529181_529187, 0, null);
      var f_529189 = cljs.core.nth.call(null, vec__529181_529187, 1, null);
      var str_name_529190 = cljs.core.name.call(null, key_name_529188);
      obj[str_name_529190] = f_529189;
      var G__529191 = seq__529177_529183;
      var G__529192 = chunk__529178_529184;
      var G__529193 = count__529179_529185;
      var G__529194 = i__529180_529186 + 1;
      seq__529177_529183 = G__529191;
      chunk__529178_529184 = G__529192;
      count__529179_529185 = G__529193;
      i__529180_529186 = G__529194;
      continue
    }else {
      var temp__4092__auto___529195 = cljs.core.seq.call(null, seq__529177_529183);
      if(temp__4092__auto___529195) {
        var seq__529177_529196__$1 = temp__4092__auto___529195;
        if(cljs.core.chunked_seq_QMARK_.call(null, seq__529177_529196__$1)) {
          var c__4009__auto___529197 = cljs.core.chunk_first.call(null, seq__529177_529196__$1);
          var G__529198 = cljs.core.chunk_rest.call(null, seq__529177_529196__$1);
          var G__529199 = c__4009__auto___529197;
          var G__529200 = cljs.core.count.call(null, c__4009__auto___529197);
          var G__529201 = 0;
          seq__529177_529183 = G__529198;
          chunk__529178_529184 = G__529199;
          count__529179_529185 = G__529200;
          i__529180_529186 = G__529201;
          continue
        }else {
          var vec__529182_529202 = cljs.core.first.call(null, seq__529177_529196__$1);
          var key_name_529203 = cljs.core.nth.call(null, vec__529182_529202, 0, null);
          var f_529204 = cljs.core.nth.call(null, vec__529182_529202, 1, null);
          var str_name_529205 = cljs.core.name.call(null, key_name_529203);
          obj[str_name_529205] = f_529204;
          var G__529206 = cljs.core.next.call(null, seq__529177_529196__$1);
          var G__529207 = null;
          var G__529208 = 0;
          var G__529209 = 0;
          seq__529177_529183 = G__529206;
          chunk__529178_529184 = G__529207;
          count__529179_529185 = G__529208;
          i__529180_529186 = G__529209;
          continue
        }
      }else {
      }
    }
    break
  }
  return obj
};
cljs.core.List = function(meta, first, rest, count, __hash) {
  this.meta = meta;
  this.first = first;
  this.rest = rest;
  this.count = count;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 65937646
};
cljs.core.List.cljs$lang$type = true;
cljs.core.List.cljs$lang$ctorStr = "cljs.core/List";
cljs.core.List.cljs$lang$ctorPrWriter = function(this__3829__auto__, writer__3830__auto__, opt__3831__auto__) {
  return cljs.core._write.call(null, writer__3830__auto__, "cljs.core/List")
};
cljs.core.List.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__3696__auto__ = self__.__hash;
  if(!(h__3696__auto__ == null)) {
    return h__3696__auto__
  }else {
    var h__3696__auto____$1 = cljs.core.hash_coll.call(null, coll__$1);
    self__.__hash = h__3696__auto____$1;
    return h__3696__auto____$1
  }
};
cljs.core.List.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if(self__.count === 1) {
    return null
  }else {
    return self__.rest
  }
};
cljs.core.List.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.List(self__.meta, o, coll__$1, self__.count + 1, null)
};
cljs.core.List.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll)
};
cljs.core.List.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, coll__$1)
};
cljs.core.List.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, start, coll__$1)
};
cljs.core.List.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1
};
cljs.core.List.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.count
};
cljs.core.List.prototype.cljs$core$IStack$_peek$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.first
};
cljs.core.List.prototype.cljs$core$IStack$_pop$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._rest.call(null, coll__$1)
};
cljs.core.List.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.first
};
cljs.core.List.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if(self__.count === 1) {
    return cljs.core.List.EMPTY
  }else {
    return self__.rest
  }
};
cljs.core.List.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other)
};
cljs.core.List.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.List(meta__$1, self__.first, self__.rest, self__.count, self__.__hash)
};
cljs.core.List.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta
};
cljs.core.List.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.List.EMPTY
};
cljs.core.__GT_List = function __GT_List(meta, first, rest, count, __hash) {
  return new cljs.core.List(meta, first, rest, count, __hash)
};
cljs.core.EmptyList = function(meta) {
  this.meta = meta;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 65937614
};
cljs.core.EmptyList.cljs$lang$type = true;
cljs.core.EmptyList.cljs$lang$ctorStr = "cljs.core/EmptyList";
cljs.core.EmptyList.cljs$lang$ctorPrWriter = function(this__3829__auto__, writer__3830__auto__, opt__3831__auto__) {
  return cljs.core._write.call(null, writer__3830__auto__, "cljs.core/EmptyList")
};
cljs.core.EmptyList.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return 0
};
cljs.core.EmptyList.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return null
};
cljs.core.EmptyList.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.List(self__.meta, o, null, 1, null)
};
cljs.core.EmptyList.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll)
};
cljs.core.EmptyList.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, coll__$1)
};
cljs.core.EmptyList.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, start, coll__$1)
};
cljs.core.EmptyList.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return null
};
cljs.core.EmptyList.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return 0
};
cljs.core.EmptyList.prototype.cljs$core$IStack$_peek$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return null
};
cljs.core.EmptyList.prototype.cljs$core$IStack$_pop$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  throw new Error("Can't pop empty list");
};
cljs.core.EmptyList.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return null
};
cljs.core.EmptyList.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.List.EMPTY
};
cljs.core.EmptyList.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other)
};
cljs.core.EmptyList.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.EmptyList(meta__$1)
};
cljs.core.EmptyList.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta
};
cljs.core.EmptyList.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1
};
cljs.core.__GT_EmptyList = function __GT_EmptyList(meta) {
  return new cljs.core.EmptyList(meta)
};
cljs.core.List.EMPTY = new cljs.core.EmptyList(null);
cljs.core.reversible_QMARK_ = function reversible_QMARK_(coll) {
  var G__529211 = coll;
  if(G__529211) {
    var bit__3911__auto__ = G__529211.cljs$lang$protocol_mask$partition0$ & 134217728;
    if(bit__3911__auto__ || G__529211.cljs$core$IReversible$) {
      return true
    }else {
      if(!G__529211.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IReversible, G__529211)
      }else {
        return false
      }
    }
  }else {
    return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IReversible, G__529211)
  }
};
cljs.core.rseq = function rseq(coll) {
  return cljs.core._rseq.call(null, coll)
};
cljs.core.reverse = function reverse(coll) {
  if(cljs.core.reversible_QMARK_.call(null, coll)) {
    return cljs.core.rseq.call(null, coll)
  }else {
    return cljs.core.reduce.call(null, cljs.core.conj, cljs.core.List.EMPTY, coll)
  }
};
cljs.core.list = function() {
  var list__delegate = function(xs) {
    var arr = xs instanceof cljs.core.IndexedSeq ? xs.arr : function() {
      var arr = [];
      var xs__$1 = xs;
      while(true) {
        if(!(xs__$1 == null)) {
          arr.push(cljs.core._first.call(null, xs__$1));
          var G__529212 = cljs.core._next.call(null, xs__$1);
          xs__$1 = G__529212;
          continue
        }else {
          return arr
        }
        break
      }
    }();
    var i = arr.length;
    var r = cljs.core.List.EMPTY;
    while(true) {
      if(i > 0) {
        var G__529213 = i - 1;
        var G__529214 = cljs.core._conj.call(null, r, arr[i - 1]);
        i = G__529213;
        r = G__529214;
        continue
      }else {
        return r
      }
      break
    }
  };
  var list = function(var_args) {
    var xs = null;
    if(arguments.length > 0) {
      xs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return list__delegate.call(this, xs)
  };
  list.cljs$lang$maxFixedArity = 0;
  list.cljs$lang$applyTo = function(arglist__529215) {
    var xs = cljs.core.seq(arglist__529215);
    return list__delegate(xs)
  };
  list.cljs$core$IFn$_invoke$arity$variadic = list__delegate;
  return list
}();
cljs.core.Cons = function(meta, first, rest, __hash) {
  this.meta = meta;
  this.first = first;
  this.rest = rest;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 65929452
};
cljs.core.Cons.cljs$lang$type = true;
cljs.core.Cons.cljs$lang$ctorStr = "cljs.core/Cons";
cljs.core.Cons.cljs$lang$ctorPrWriter = function(this__3829__auto__, writer__3830__auto__, opt__3831__auto__) {
  return cljs.core._write.call(null, writer__3830__auto__, "cljs.core/Cons")
};
cljs.core.Cons.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__3696__auto__ = self__.__hash;
  if(!(h__3696__auto__ == null)) {
    return h__3696__auto__
  }else {
    var h__3696__auto____$1 = cljs.core.hash_coll.call(null, coll__$1);
    self__.__hash = h__3696__auto____$1;
    return h__3696__auto____$1
  }
};
cljs.core.Cons.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if(self__.rest == null) {
    return null
  }else {
    return cljs.core.seq.call(null, self__.rest)
  }
};
cljs.core.Cons.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.Cons(null, o, coll__$1, self__.__hash)
};
cljs.core.Cons.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll)
};
cljs.core.Cons.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, coll__$1)
};
cljs.core.Cons.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, start, coll__$1)
};
cljs.core.Cons.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1
};
cljs.core.Cons.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.first
};
cljs.core.Cons.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if(self__.rest == null) {
    return cljs.core.List.EMPTY
  }else {
    return self__.rest
  }
};
cljs.core.Cons.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other)
};
cljs.core.Cons.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.Cons(meta__$1, self__.first, self__.rest, self__.__hash)
};
cljs.core.Cons.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta
};
cljs.core.Cons.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, self__.meta)
};
cljs.core.__GT_Cons = function __GT_Cons(meta, first, rest, __hash) {
  return new cljs.core.Cons(meta, first, rest, __hash)
};
cljs.core.cons = function cons(x, coll) {
  if(function() {
    var or__3285__auto__ = coll == null;
    if(or__3285__auto__) {
      return or__3285__auto__
    }else {
      var G__529219 = coll;
      if(G__529219) {
        var bit__3904__auto__ = G__529219.cljs$lang$protocol_mask$partition0$ & 64;
        if(bit__3904__auto__ || G__529219.cljs$core$ISeq$) {
          return true
        }else {
          return false
        }
      }else {
        return false
      }
    }
  }()) {
    return new cljs.core.Cons(null, x, coll, null)
  }else {
    return new cljs.core.Cons(null, x, cljs.core.seq.call(null, coll), null)
  }
};
cljs.core.list_QMARK_ = function list_QMARK_(x) {
  var G__529221 = x;
  if(G__529221) {
    var bit__3911__auto__ = G__529221.cljs$lang$protocol_mask$partition0$ & 33554432;
    if(bit__3911__auto__ || G__529221.cljs$core$IList$) {
      return true
    }else {
      if(!G__529221.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IList, G__529221)
      }else {
        return false
      }
    }
  }else {
    return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IList, G__529221)
  }
};
cljs.core.Keyword = function(ns, name, fqn, _hash) {
  this.ns = ns;
  this.name = name;
  this.fqn = fqn;
  this._hash = _hash;
  this.cljs$lang$protocol_mask$partition0$ = 2153775105;
  this.cljs$lang$protocol_mask$partition1$ = 4096
};
cljs.core.Keyword.cljs$lang$type = true;
cljs.core.Keyword.cljs$lang$ctorStr = "cljs.core/Keyword";
cljs.core.Keyword.cljs$lang$ctorPrWriter = function(this__3829__auto__, writer__3830__auto__, opt__3831__auto__) {
  return cljs.core._write.call(null, writer__3830__auto__, "cljs.core/Keyword")
};
cljs.core.Keyword.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(o, writer, _) {
  var self__ = this;
  var o__$1 = this;
  return cljs.core._write.call(null, writer, [cljs.core.str(":"), cljs.core.str(self__.fqn)].join(""))
};
cljs.core.Keyword.prototype.cljs$core$INamed$_name$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.name
};
cljs.core.Keyword.prototype.cljs$core$INamed$_namespace$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.ns
};
cljs.core.Keyword.prototype.cljs$core$IHash$_hash$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  if(self__._hash == null) {
    self__._hash = cljs.core.hash_combine.call(null, cljs.core.hash.call(null, self__.ns), cljs.core.hash.call(null, self__.name)) + 2654435769;
    return self__._hash
  }else {
    return self__._hash
  }
};
cljs.core.Keyword.prototype.call = function() {
  var G__529223 = null;
  var G__529223__2 = function(self__, coll) {
    var self__ = this;
    var self____$1 = this;
    var kw = self____$1;
    return cljs.core.get.call(null, coll, kw)
  };
  var G__529223__3 = function(self__, coll, not_found) {
    var self__ = this;
    var self____$1 = this;
    var kw = self____$1;
    return cljs.core.get.call(null, coll, kw, not_found)
  };
  G__529223 = function(self__, coll, not_found) {
    switch(arguments.length) {
      case 2:
        return G__529223__2.call(this, self__, coll);
      case 3:
        return G__529223__3.call(this, self__, coll, not_found)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  return G__529223
}();
cljs.core.Keyword.prototype.apply = function(self__, args529222) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone.call(null, args529222)))
};
cljs.core.Keyword.prototype.cljs$core$IFn$_invoke$arity$1 = function(coll) {
  var self__ = this;
  var kw = this;
  return cljs.core.get.call(null, coll, kw)
};
cljs.core.Keyword.prototype.cljs$core$IFn$_invoke$arity$2 = function(coll, not_found) {
  var self__ = this;
  var kw = this;
  return cljs.core.get.call(null, coll, kw, not_found)
};
cljs.core.Keyword.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(_, other) {
  var self__ = this;
  var ___$1 = this;
  if(other instanceof cljs.core.Keyword) {
    return self__.fqn === other.fqn
  }else {
    return false
  }
};
cljs.core.Keyword.prototype.toString = function() {
  var self__ = this;
  var _ = this;
  return[cljs.core.str(":"), cljs.core.str(self__.fqn)].join("")
};
cljs.core.__GT_Keyword = function __GT_Keyword(ns, name, fqn, _hash) {
  return new cljs.core.Keyword(ns, name, fqn, _hash)
};
cljs.core.keyword_QMARK_ = function keyword_QMARK_(x) {
  return x instanceof cljs.core.Keyword
};
cljs.core.keyword_identical_QMARK_ = function keyword_identical_QMARK_(x, y) {
  if(x === y) {
    return true
  }else {
    if(x instanceof cljs.core.Keyword && y instanceof cljs.core.Keyword) {
      return x.fqn === y.fqn
    }else {
      return false
    }
  }
};
cljs.core.namespace = function namespace(x) {
  if(function() {
    var G__529225 = x;
    if(G__529225) {
      var bit__3904__auto__ = G__529225.cljs$lang$protocol_mask$partition1$ & 4096;
      if(bit__3904__auto__ || G__529225.cljs$core$INamed$) {
        return true
      }else {
        return false
      }
    }else {
      return false
    }
  }()) {
    return cljs.core._namespace.call(null, x)
  }else {
    throw new Error([cljs.core.str("Doesn't support namespace: "), cljs.core.str(x)].join(""));
  }
};
cljs.core.keyword = function() {
  var keyword = null;
  var keyword__1 = function(name) {
    if(name instanceof cljs.core.Keyword) {
      return name
    }else {
      if(name instanceof cljs.core.Symbol) {
        return new cljs.core.Keyword(cljs.core.namespace.call(null, name), cljs.core.name.call(null, name), name.str, null)
      }else {
        if(typeof name === "string") {
          var parts = name.split("/");
          if(parts.length === 2) {
            return new cljs.core.Keyword(parts[0], parts[1], name, null)
          }else {
            return new cljs.core.Keyword(null, parts[0], name, null)
          }
        }else {
          return null
        }
      }
    }
  };
  var keyword__2 = function(ns, name) {
    return new cljs.core.Keyword(ns, name, [cljs.core.str(cljs.core.truth_(ns) ? [cljs.core.str(ns), cljs.core.str("/")].join("") : null), cljs.core.str(name)].join(""), null)
  };
  keyword = function(ns, name) {
    switch(arguments.length) {
      case 1:
        return keyword__1.call(this, ns);
      case 2:
        return keyword__2.call(this, ns, name)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  keyword.cljs$core$IFn$_invoke$arity$1 = keyword__1;
  keyword.cljs$core$IFn$_invoke$arity$2 = keyword__2;
  return keyword
}();
cljs.core.LazySeq = function(meta, fn, s, __hash) {
  this.meta = meta;
  this.fn = fn;
  this.s = s;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32374988
};
cljs.core.LazySeq.cljs$lang$type = true;
cljs.core.LazySeq.cljs$lang$ctorStr = "cljs.core/LazySeq";
cljs.core.LazySeq.cljs$lang$ctorPrWriter = function(this__3829__auto__, writer__3830__auto__, opt__3831__auto__) {
  return cljs.core._write.call(null, writer__3830__auto__, "cljs.core/LazySeq")
};
cljs.core.LazySeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__3696__auto__ = self__.__hash;
  if(!(h__3696__auto__ == null)) {
    return h__3696__auto__
  }else {
    var h__3696__auto____$1 = cljs.core.hash_coll.call(null, coll__$1);
    self__.__hash = h__3696__auto____$1;
    return h__3696__auto____$1
  }
};
cljs.core.LazySeq.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  cljs.core._seq.call(null, coll__$1);
  if(self__.s == null) {
    return null
  }else {
    return cljs.core.next.call(null, self__.s)
  }
};
cljs.core.LazySeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons.call(null, o, coll__$1)
};
cljs.core.LazySeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll)
};
cljs.core.LazySeq.prototype.sval = function() {
  var self__ = this;
  var coll = this;
  if(self__.fn == null) {
    return self__.s
  }else {
    self__.s = self__.fn.call(null);
    self__.fn = null;
    return self__.s
  }
};
cljs.core.LazySeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, coll__$1)
};
cljs.core.LazySeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, start, coll__$1)
};
cljs.core.LazySeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  coll__$1.sval();
  if(self__.s == null) {
    return null
  }else {
    var ls = self__.s;
    while(true) {
      if(ls instanceof cljs.core.LazySeq) {
        var G__529226 = ls.sval();
        ls = G__529226;
        continue
      }else {
        self__.s = ls;
        return cljs.core.seq.call(null, self__.s)
      }
      break
    }
  }
};
cljs.core.LazySeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  cljs.core._seq.call(null, coll__$1);
  if(self__.s == null) {
    return null
  }else {
    return cljs.core.first.call(null, self__.s)
  }
};
cljs.core.LazySeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  cljs.core._seq.call(null, coll__$1);
  if(!(self__.s == null)) {
    return cljs.core.rest.call(null, self__.s)
  }else {
    return cljs.core.List.EMPTY
  }
};
cljs.core.LazySeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other)
};
cljs.core.LazySeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.LazySeq(meta__$1, self__.fn, self__.s, self__.__hash)
};
cljs.core.LazySeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta
};
cljs.core.LazySeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, self__.meta)
};
cljs.core.__GT_LazySeq = function __GT_LazySeq(meta, fn, s, __hash) {
  return new cljs.core.LazySeq(meta, fn, s, __hash)
};
cljs.core.ChunkBuffer = function(buf, end) {
  this.buf = buf;
  this.end = end;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 2
};
cljs.core.ChunkBuffer.cljs$lang$type = true;
cljs.core.ChunkBuffer.cljs$lang$ctorStr = "cljs.core/ChunkBuffer";
cljs.core.ChunkBuffer.cljs$lang$ctorPrWriter = function(this__3829__auto__, writer__3830__auto__, opt__3831__auto__) {
  return cljs.core._write.call(null, writer__3830__auto__, "cljs.core/ChunkBuffer")
};
cljs.core.ChunkBuffer.prototype.cljs$core$ICounted$_count$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.end
};
cljs.core.ChunkBuffer.prototype.add = function(o) {
  var self__ = this;
  var _ = this;
  self__.buf[self__.end] = o;
  return self__.end = self__.end + 1
};
cljs.core.ChunkBuffer.prototype.chunk = function(o) {
  var self__ = this;
  var _ = this;
  var ret = new cljs.core.ArrayChunk(self__.buf, 0, self__.end);
  self__.buf = null;
  return ret
};
cljs.core.__GT_ChunkBuffer = function __GT_ChunkBuffer(buf, end) {
  return new cljs.core.ChunkBuffer(buf, end)
};
cljs.core.chunk_buffer = function chunk_buffer(capacity) {
  return new cljs.core.ChunkBuffer(new Array(capacity), 0)
};
cljs.core.ArrayChunk = function(arr, off, end) {
  this.arr = arr;
  this.off = off;
  this.end = end;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 524306
};
cljs.core.ArrayChunk.cljs$lang$type = true;
cljs.core.ArrayChunk.cljs$lang$ctorStr = "cljs.core/ArrayChunk";
cljs.core.ArrayChunk.cljs$lang$ctorPrWriter = function(this__3829__auto__, writer__3830__auto__, opt__3831__auto__) {
  return cljs.core._write.call(null, writer__3830__auto__, "cljs.core/ArrayChunk")
};
cljs.core.ArrayChunk.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.array_reduce.call(null, self__.arr, f, self__.arr[self__.off], self__.off + 1)
};
cljs.core.ArrayChunk.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.array_reduce.call(null, self__.arr, f, start, self__.off)
};
cljs.core.ArrayChunk.prototype.cljs$core$IChunk$ = true;
cljs.core.ArrayChunk.prototype.cljs$core$IChunk$_drop_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if(self__.off === self__.end) {
    throw new Error("-drop-first of empty chunk");
  }else {
    return new cljs.core.ArrayChunk(self__.arr, self__.off + 1, self__.end)
  }
};
cljs.core.ArrayChunk.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, i) {
  var self__ = this;
  var coll__$1 = this;
  return self__.arr[self__.off + i]
};
cljs.core.ArrayChunk.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, i, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if(i >= 0 && i < self__.end - self__.off) {
    return self__.arr[self__.off + i]
  }else {
    return not_found
  }
};
cljs.core.ArrayChunk.prototype.cljs$core$ICounted$_count$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.end - self__.off
};
cljs.core.__GT_ArrayChunk = function __GT_ArrayChunk(arr, off, end) {
  return new cljs.core.ArrayChunk(arr, off, end)
};
cljs.core.array_chunk = function() {
  var array_chunk = null;
  var array_chunk__1 = function(arr) {
    return new cljs.core.ArrayChunk(arr, 0, arr.length)
  };
  var array_chunk__2 = function(arr, off) {
    return new cljs.core.ArrayChunk(arr, off, arr.length)
  };
  var array_chunk__3 = function(arr, off, end) {
    return new cljs.core.ArrayChunk(arr, off, end)
  };
  array_chunk = function(arr, off, end) {
    switch(arguments.length) {
      case 1:
        return array_chunk__1.call(this, arr);
      case 2:
        return array_chunk__2.call(this, arr, off);
      case 3:
        return array_chunk__3.call(this, arr, off, end)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  array_chunk.cljs$core$IFn$_invoke$arity$1 = array_chunk__1;
  array_chunk.cljs$core$IFn$_invoke$arity$2 = array_chunk__2;
  array_chunk.cljs$core$IFn$_invoke$arity$3 = array_chunk__3;
  return array_chunk
}();
cljs.core.ChunkedCons = function(chunk, more, meta, __hash) {
  this.chunk = chunk;
  this.more = more;
  this.meta = meta;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 31850732;
  this.cljs$lang$protocol_mask$partition1$ = 1536
};
cljs.core.ChunkedCons.cljs$lang$type = true;
cljs.core.ChunkedCons.cljs$lang$ctorStr = "cljs.core/ChunkedCons";
cljs.core.ChunkedCons.cljs$lang$ctorPrWriter = function(this__3829__auto__, writer__3830__auto__, opt__3831__auto__) {
  return cljs.core._write.call(null, writer__3830__auto__, "cljs.core/ChunkedCons")
};
cljs.core.ChunkedCons.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__3696__auto__ = self__.__hash;
  if(!(h__3696__auto__ == null)) {
    return h__3696__auto__
  }else {
    var h__3696__auto____$1 = cljs.core.hash_coll.call(null, coll__$1);
    self__.__hash = h__3696__auto____$1;
    return h__3696__auto____$1
  }
};
cljs.core.ChunkedCons.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if(cljs.core._count.call(null, self__.chunk) > 1) {
    return new cljs.core.ChunkedCons(cljs.core._drop_first.call(null, self__.chunk), self__.more, self__.meta, null)
  }else {
    var more__$1 = cljs.core._seq.call(null, self__.more);
    if(more__$1 == null) {
      return null
    }else {
      return more__$1
    }
  }
};
cljs.core.ChunkedCons.prototype.cljs$core$ICollection$_conj$arity$2 = function(this$, o) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core.cons.call(null, o, this$__$1)
};
cljs.core.ChunkedCons.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll)
};
cljs.core.ChunkedCons.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1
};
cljs.core.ChunkedCons.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._nth.call(null, self__.chunk, 0)
};
cljs.core.ChunkedCons.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if(cljs.core._count.call(null, self__.chunk) > 1) {
    return new cljs.core.ChunkedCons(cljs.core._drop_first.call(null, self__.chunk), self__.more, self__.meta, null)
  }else {
    if(self__.more == null) {
      return cljs.core.List.EMPTY
    }else {
      return self__.more
    }
  }
};
cljs.core.ChunkedCons.prototype.cljs$core$IChunkedNext$_chunked_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if(self__.more == null) {
    return null
  }else {
    return self__.more
  }
};
cljs.core.ChunkedCons.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other)
};
cljs.core.ChunkedCons.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, m) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.ChunkedCons(self__.chunk, self__.more, m, self__.__hash)
};
cljs.core.ChunkedCons.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta
};
cljs.core.ChunkedCons.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, self__.meta)
};
cljs.core.ChunkedCons.prototype.cljs$core$IChunkedSeq$_chunked_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.chunk
};
cljs.core.ChunkedCons.prototype.cljs$core$IChunkedSeq$_chunked_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if(self__.more == null) {
    return cljs.core.List.EMPTY
  }else {
    return self__.more
  }
};
cljs.core.__GT_ChunkedCons = function __GT_ChunkedCons(chunk, more, meta, __hash) {
  return new cljs.core.ChunkedCons(chunk, more, meta, __hash)
};
cljs.core.chunk_cons = function chunk_cons(chunk, rest) {
  if(cljs.core._count.call(null, chunk) === 0) {
    return rest
  }else {
    return new cljs.core.ChunkedCons(chunk, rest, null, null)
  }
};
cljs.core.chunk_append = function chunk_append(b, x) {
  return b.add(x)
};
cljs.core.chunk = function chunk(b) {
  return b.chunk()
};
cljs.core.chunk_first = function chunk_first(s) {
  return cljs.core._chunked_first.call(null, s)
};
cljs.core.chunk_rest = function chunk_rest(s) {
  return cljs.core._chunked_rest.call(null, s)
};
cljs.core.chunk_next = function chunk_next(s) {
  if(function() {
    var G__529228 = s;
    if(G__529228) {
      var bit__3904__auto__ = G__529228.cljs$lang$protocol_mask$partition1$ & 1024;
      if(bit__3904__auto__ || G__529228.cljs$core$IChunkedNext$) {
        return true
      }else {
        return false
      }
    }else {
      return false
    }
  }()) {
    return cljs.core._chunked_next.call(null, s)
  }else {
    return cljs.core.seq.call(null, cljs.core._chunked_rest.call(null, s))
  }
};
cljs.core.to_array = function to_array(s) {
  var ary = [];
  var s__$1 = s;
  while(true) {
    if(cljs.core.seq.call(null, s__$1)) {
      ary.push(cljs.core.first.call(null, s__$1));
      var G__529229 = cljs.core.next.call(null, s__$1);
      s__$1 = G__529229;
      continue
    }else {
      return ary
    }
    break
  }
};
cljs.core.to_array_2d = function to_array_2d(coll) {
  var ret = new Array(cljs.core.count.call(null, coll));
  var i_529230 = 0;
  var xs_529231 = cljs.core.seq.call(null, coll);
  while(true) {
    if(xs_529231) {
      ret[i_529230] = cljs.core.to_array.call(null, cljs.core.first.call(null, xs_529231));
      var G__529232 = i_529230 + 1;
      var G__529233 = cljs.core.next.call(null, xs_529231);
      i_529230 = G__529232;
      xs_529231 = G__529233;
      continue
    }else {
    }
    break
  }
  return ret
};
cljs.core.int_array = function() {
  var int_array = null;
  var int_array__1 = function(size_or_seq) {
    if(typeof size_or_seq === "number") {
      return int_array.call(null, size_or_seq, null)
    }else {
      return cljs.core.into_array.call(null, size_or_seq)
    }
  };
  var int_array__2 = function(size, init_val_or_seq) {
    var a = new Array(size);
    if(cljs.core.seq_QMARK_.call(null, init_val_or_seq)) {
      var s = cljs.core.seq.call(null, init_val_or_seq);
      var i = 0;
      var s__$1 = s;
      while(true) {
        if(s__$1 && i < size) {
          a[i] = cljs.core.first.call(null, s__$1);
          var G__529234 = i + 1;
          var G__529235 = cljs.core.next.call(null, s__$1);
          i = G__529234;
          s__$1 = G__529235;
          continue
        }else {
          return a
        }
        break
      }
    }else {
      var n__4108__auto___529236 = size;
      var i_529237 = 0;
      while(true) {
        if(i_529237 < n__4108__auto___529236) {
          a[i_529237] = init_val_or_seq;
          var G__529238 = i_529237 + 1;
          i_529237 = G__529238;
          continue
        }else {
        }
        break
      }
      return a
    }
  };
  int_array = function(size, init_val_or_seq) {
    switch(arguments.length) {
      case 1:
        return int_array__1.call(this, size);
      case 2:
        return int_array__2.call(this, size, init_val_or_seq)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  int_array.cljs$core$IFn$_invoke$arity$1 = int_array__1;
  int_array.cljs$core$IFn$_invoke$arity$2 = int_array__2;
  return int_array
}();
cljs.core.long_array = function() {
  var long_array = null;
  var long_array__1 = function(size_or_seq) {
    if(typeof size_or_seq === "number") {
      return long_array.call(null, size_or_seq, null)
    }else {
      return cljs.core.into_array.call(null, size_or_seq)
    }
  };
  var long_array__2 = function(size, init_val_or_seq) {
    var a = new Array(size);
    if(cljs.core.seq_QMARK_.call(null, init_val_or_seq)) {
      var s = cljs.core.seq.call(null, init_val_or_seq);
      var i = 0;
      var s__$1 = s;
      while(true) {
        if(s__$1 && i < size) {
          a[i] = cljs.core.first.call(null, s__$1);
          var G__529239 = i + 1;
          var G__529240 = cljs.core.next.call(null, s__$1);
          i = G__529239;
          s__$1 = G__529240;
          continue
        }else {
          return a
        }
        break
      }
    }else {
      var n__4108__auto___529241 = size;
      var i_529242 = 0;
      while(true) {
        if(i_529242 < n__4108__auto___529241) {
          a[i_529242] = init_val_or_seq;
          var G__529243 = i_529242 + 1;
          i_529242 = G__529243;
          continue
        }else {
        }
        break
      }
      return a
    }
  };
  long_array = function(size, init_val_or_seq) {
    switch(arguments.length) {
      case 1:
        return long_array__1.call(this, size);
      case 2:
        return long_array__2.call(this, size, init_val_or_seq)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  long_array.cljs$core$IFn$_invoke$arity$1 = long_array__1;
  long_array.cljs$core$IFn$_invoke$arity$2 = long_array__2;
  return long_array
}();
cljs.core.double_array = function() {
  var double_array = null;
  var double_array__1 = function(size_or_seq) {
    if(typeof size_or_seq === "number") {
      return double_array.call(null, size_or_seq, null)
    }else {
      return cljs.core.into_array.call(null, size_or_seq)
    }
  };
  var double_array__2 = function(size, init_val_or_seq) {
    var a = new Array(size);
    if(cljs.core.seq_QMARK_.call(null, init_val_or_seq)) {
      var s = cljs.core.seq.call(null, init_val_or_seq);
      var i = 0;
      var s__$1 = s;
      while(true) {
        if(s__$1 && i < size) {
          a[i] = cljs.core.first.call(null, s__$1);
          var G__529244 = i + 1;
          var G__529245 = cljs.core.next.call(null, s__$1);
          i = G__529244;
          s__$1 = G__529245;
          continue
        }else {
          return a
        }
        break
      }
    }else {
      var n__4108__auto___529246 = size;
      var i_529247 = 0;
      while(true) {
        if(i_529247 < n__4108__auto___529246) {
          a[i_529247] = init_val_or_seq;
          var G__529248 = i_529247 + 1;
          i_529247 = G__529248;
          continue
        }else {
        }
        break
      }
      return a
    }
  };
  double_array = function(size, init_val_or_seq) {
    switch(arguments.length) {
      case 1:
        return double_array__1.call(this, size);
      case 2:
        return double_array__2.call(this, size, init_val_or_seq)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  double_array.cljs$core$IFn$_invoke$arity$1 = double_array__1;
  double_array.cljs$core$IFn$_invoke$arity$2 = double_array__2;
  return double_array
}();
cljs.core.object_array = function() {
  var object_array = null;
  var object_array__1 = function(size_or_seq) {
    if(typeof size_or_seq === "number") {
      return object_array.call(null, size_or_seq, null)
    }else {
      return cljs.core.into_array.call(null, size_or_seq)
    }
  };
  var object_array__2 = function(size, init_val_or_seq) {
    var a = new Array(size);
    if(cljs.core.seq_QMARK_.call(null, init_val_or_seq)) {
      var s = cljs.core.seq.call(null, init_val_or_seq);
      var i = 0;
      var s__$1 = s;
      while(true) {
        if(s__$1 && i < size) {
          a[i] = cljs.core.first.call(null, s__$1);
          var G__529249 = i + 1;
          var G__529250 = cljs.core.next.call(null, s__$1);
          i = G__529249;
          s__$1 = G__529250;
          continue
        }else {
          return a
        }
        break
      }
    }else {
      var n__4108__auto___529251 = size;
      var i_529252 = 0;
      while(true) {
        if(i_529252 < n__4108__auto___529251) {
          a[i_529252] = init_val_or_seq;
          var G__529253 = i_529252 + 1;
          i_529252 = G__529253;
          continue
        }else {
        }
        break
      }
      return a
    }
  };
  object_array = function(size, init_val_or_seq) {
    switch(arguments.length) {
      case 1:
        return object_array__1.call(this, size);
      case 2:
        return object_array__2.call(this, size, init_val_or_seq)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  object_array.cljs$core$IFn$_invoke$arity$1 = object_array__1;
  object_array.cljs$core$IFn$_invoke$arity$2 = object_array__2;
  return object_array
}();
cljs.core.bounded_count = function bounded_count(s, n) {
  if(cljs.core.counted_QMARK_.call(null, s)) {
    return cljs.core.count.call(null, s)
  }else {
    var s__$1 = s;
    var i = n;
    var sum = 0;
    while(true) {
      if(i > 0 && cljs.core.seq.call(null, s__$1)) {
        var G__529254 = cljs.core.next.call(null, s__$1);
        var G__529255 = i - 1;
        var G__529256 = sum + 1;
        s__$1 = G__529254;
        i = G__529255;
        sum = G__529256;
        continue
      }else {
        return sum
      }
      break
    }
  }
};
cljs.core.spread = function spread(arglist) {
  if(arglist == null) {
    return null
  }else {
    if(cljs.core.next.call(null, arglist) == null) {
      return cljs.core.seq.call(null, cljs.core.first.call(null, arglist))
    }else {
      if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        return cljs.core.cons.call(null, cljs.core.first.call(null, arglist), spread.call(null, cljs.core.next.call(null, arglist)))
      }else {
        return null
      }
    }
  }
};
cljs.core.concat = function() {
  var concat = null;
  var concat__0 = function() {
    return new cljs.core.LazySeq(null, function() {
      return null
    }, null, null)
  };
  var concat__1 = function(x) {
    return new cljs.core.LazySeq(null, function() {
      return x
    }, null, null)
  };
  var concat__2 = function(x, y) {
    return new cljs.core.LazySeq(null, function() {
      var s = cljs.core.seq.call(null, x);
      if(s) {
        if(cljs.core.chunked_seq_QMARK_.call(null, s)) {
          return cljs.core.chunk_cons.call(null, cljs.core.chunk_first.call(null, s), concat.call(null, cljs.core.chunk_rest.call(null, s), y))
        }else {
          return cljs.core.cons.call(null, cljs.core.first.call(null, s), concat.call(null, cljs.core.rest.call(null, s), y))
        }
      }else {
        return y
      }
    }, null, null)
  };
  var concat__3 = function() {
    var G__529257__delegate = function(x, y, zs) {
      var cat = function cat(xys, zs__$1) {
        return new cljs.core.LazySeq(null, function() {
          var xys__$1 = cljs.core.seq.call(null, xys);
          if(xys__$1) {
            if(cljs.core.chunked_seq_QMARK_.call(null, xys__$1)) {
              return cljs.core.chunk_cons.call(null, cljs.core.chunk_first.call(null, xys__$1), cat.call(null, cljs.core.chunk_rest.call(null, xys__$1), zs__$1))
            }else {
              return cljs.core.cons.call(null, cljs.core.first.call(null, xys__$1), cat.call(null, cljs.core.rest.call(null, xys__$1), zs__$1))
            }
          }else {
            if(cljs.core.truth_(zs__$1)) {
              return cat.call(null, cljs.core.first.call(null, zs__$1), cljs.core.next.call(null, zs__$1))
            }else {
              return null
            }
          }
        }, null, null)
      };
      return cat.call(null, concat.call(null, x, y), zs)
    };
    var G__529257 = function(x, y, var_args) {
      var zs = null;
      if(arguments.length > 2) {
        zs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__529257__delegate.call(this, x, y, zs)
    };
    G__529257.cljs$lang$maxFixedArity = 2;
    G__529257.cljs$lang$applyTo = function(arglist__529258) {
      var x = cljs.core.first(arglist__529258);
      arglist__529258 = cljs.core.next(arglist__529258);
      var y = cljs.core.first(arglist__529258);
      var zs = cljs.core.rest(arglist__529258);
      return G__529257__delegate(x, y, zs)
    };
    G__529257.cljs$core$IFn$_invoke$arity$variadic = G__529257__delegate;
    return G__529257
  }();
  concat = function(x, y, var_args) {
    var zs = var_args;
    switch(arguments.length) {
      case 0:
        return concat__0.call(this);
      case 1:
        return concat__1.call(this, x);
      case 2:
        return concat__2.call(this, x, y);
      default:
        return concat__3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  concat.cljs$lang$maxFixedArity = 2;
  concat.cljs$lang$applyTo = concat__3.cljs$lang$applyTo;
  concat.cljs$core$IFn$_invoke$arity$0 = concat__0;
  concat.cljs$core$IFn$_invoke$arity$1 = concat__1;
  concat.cljs$core$IFn$_invoke$arity$2 = concat__2;
  concat.cljs$core$IFn$_invoke$arity$variadic = concat__3.cljs$core$IFn$_invoke$arity$variadic;
  return concat
}();
cljs.core.list_STAR_ = function() {
  var list_STAR_ = null;
  var list_STAR___1 = function(args) {
    return cljs.core.seq.call(null, args)
  };
  var list_STAR___2 = function(a, args) {
    return cljs.core.cons.call(null, a, args)
  };
  var list_STAR___3 = function(a, b, args) {
    return cljs.core.cons.call(null, a, cljs.core.cons.call(null, b, args))
  };
  var list_STAR___4 = function(a, b, c, args) {
    return cljs.core.cons.call(null, a, cljs.core.cons.call(null, b, cljs.core.cons.call(null, c, args)))
  };
  var list_STAR___5 = function() {
    var G__529259__delegate = function(a, b, c, d, more) {
      return cljs.core.cons.call(null, a, cljs.core.cons.call(null, b, cljs.core.cons.call(null, c, cljs.core.cons.call(null, d, cljs.core.spread.call(null, more)))))
    };
    var G__529259 = function(a, b, c, d, var_args) {
      var more = null;
      if(arguments.length > 4) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 4), 0)
      }
      return G__529259__delegate.call(this, a, b, c, d, more)
    };
    G__529259.cljs$lang$maxFixedArity = 4;
    G__529259.cljs$lang$applyTo = function(arglist__529260) {
      var a = cljs.core.first(arglist__529260);
      arglist__529260 = cljs.core.next(arglist__529260);
      var b = cljs.core.first(arglist__529260);
      arglist__529260 = cljs.core.next(arglist__529260);
      var c = cljs.core.first(arglist__529260);
      arglist__529260 = cljs.core.next(arglist__529260);
      var d = cljs.core.first(arglist__529260);
      var more = cljs.core.rest(arglist__529260);
      return G__529259__delegate(a, b, c, d, more)
    };
    G__529259.cljs$core$IFn$_invoke$arity$variadic = G__529259__delegate;
    return G__529259
  }();
  list_STAR_ = function(a, b, c, d, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return list_STAR___1.call(this, a);
      case 2:
        return list_STAR___2.call(this, a, b);
      case 3:
        return list_STAR___3.call(this, a, b, c);
      case 4:
        return list_STAR___4.call(this, a, b, c, d);
      default:
        return list_STAR___5.cljs$core$IFn$_invoke$arity$variadic(a, b, c, d, cljs.core.array_seq(arguments, 4))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  list_STAR_.cljs$lang$maxFixedArity = 4;
  list_STAR_.cljs$lang$applyTo = list_STAR___5.cljs$lang$applyTo;
  list_STAR_.cljs$core$IFn$_invoke$arity$1 = list_STAR___1;
  list_STAR_.cljs$core$IFn$_invoke$arity$2 = list_STAR___2;
  list_STAR_.cljs$core$IFn$_invoke$arity$3 = list_STAR___3;
  list_STAR_.cljs$core$IFn$_invoke$arity$4 = list_STAR___4;
  list_STAR_.cljs$core$IFn$_invoke$arity$variadic = list_STAR___5.cljs$core$IFn$_invoke$arity$variadic;
  return list_STAR_
}();
cljs.core.transient$ = function transient$(coll) {
  return cljs.core._as_transient.call(null, coll)
};
cljs.core.persistent_BANG_ = function persistent_BANG_(tcoll) {
  return cljs.core._persistent_BANG_.call(null, tcoll)
};
cljs.core.conj_BANG_ = function conj_BANG_(tcoll, val) {
  return cljs.core._conj_BANG_.call(null, tcoll, val)
};
cljs.core.assoc_BANG_ = function assoc_BANG_(tcoll, key, val) {
  return cljs.core._assoc_BANG_.call(null, tcoll, key, val)
};
cljs.core.dissoc_BANG_ = function dissoc_BANG_(tcoll, key) {
  return cljs.core._dissoc_BANG_.call(null, tcoll, key)
};
cljs.core.pop_BANG_ = function pop_BANG_(tcoll) {
  return cljs.core._pop_BANG_.call(null, tcoll)
};
cljs.core.disj_BANG_ = function disj_BANG_(tcoll, val) {
  return cljs.core._disjoin_BANG_.call(null, tcoll, val)
};
cljs.core.apply_to = function apply_to(f, argc, args) {
  var args__$1 = cljs.core.seq.call(null, args);
  if(argc === 0) {
    return f.call(null)
  }else {
    var a = cljs.core._first.call(null, args__$1);
    var args__$2 = cljs.core._rest.call(null, args__$1);
    if(argc === 1) {
      if(f.cljs$core$IFn$_invoke$arity$1) {
        return f.cljs$core$IFn$_invoke$arity$1(a)
      }else {
        return f.call(null, a)
      }
    }else {
      var b = cljs.core._first.call(null, args__$2);
      var args__$3 = cljs.core._rest.call(null, args__$2);
      if(argc === 2) {
        if(f.cljs$core$IFn$_invoke$arity$2) {
          return f.cljs$core$IFn$_invoke$arity$2(a, b)
        }else {
          return f.call(null, a, b)
        }
      }else {
        var c = cljs.core._first.call(null, args__$3);
        var args__$4 = cljs.core._rest.call(null, args__$3);
        if(argc === 3) {
          if(f.cljs$core$IFn$_invoke$arity$3) {
            return f.cljs$core$IFn$_invoke$arity$3(a, b, c)
          }else {
            return f.call(null, a, b, c)
          }
        }else {
          var d = cljs.core._first.call(null, args__$4);
          var args__$5 = cljs.core._rest.call(null, args__$4);
          if(argc === 4) {
            if(f.cljs$core$IFn$_invoke$arity$4) {
              return f.cljs$core$IFn$_invoke$arity$4(a, b, c, d)
            }else {
              return f.call(null, a, b, c, d)
            }
          }else {
            var e = cljs.core._first.call(null, args__$5);
            var args__$6 = cljs.core._rest.call(null, args__$5);
            if(argc === 5) {
              if(f.cljs$core$IFn$_invoke$arity$5) {
                return f.cljs$core$IFn$_invoke$arity$5(a, b, c, d, e)
              }else {
                return f.call(null, a, b, c, d, e)
              }
            }else {
              var f__$1 = cljs.core._first.call(null, args__$6);
              var args__$7 = cljs.core._rest.call(null, args__$6);
              if(argc === 6) {
                if(f__$1.cljs$core$IFn$_invoke$arity$6) {
                  return f__$1.cljs$core$IFn$_invoke$arity$6(a, b, c, d, e, f__$1)
                }else {
                  return f__$1.call(null, a, b, c, d, e, f__$1)
                }
              }else {
                var g = cljs.core._first.call(null, args__$7);
                var args__$8 = cljs.core._rest.call(null, args__$7);
                if(argc === 7) {
                  if(f__$1.cljs$core$IFn$_invoke$arity$7) {
                    return f__$1.cljs$core$IFn$_invoke$arity$7(a, b, c, d, e, f__$1, g)
                  }else {
                    return f__$1.call(null, a, b, c, d, e, f__$1, g)
                  }
                }else {
                  var h = cljs.core._first.call(null, args__$8);
                  var args__$9 = cljs.core._rest.call(null, args__$8);
                  if(argc === 8) {
                    if(f__$1.cljs$core$IFn$_invoke$arity$8) {
                      return f__$1.cljs$core$IFn$_invoke$arity$8(a, b, c, d, e, f__$1, g, h)
                    }else {
                      return f__$1.call(null, a, b, c, d, e, f__$1, g, h)
                    }
                  }else {
                    var i = cljs.core._first.call(null, args__$9);
                    var args__$10 = cljs.core._rest.call(null, args__$9);
                    if(argc === 9) {
                      if(f__$1.cljs$core$IFn$_invoke$arity$9) {
                        return f__$1.cljs$core$IFn$_invoke$arity$9(a, b, c, d, e, f__$1, g, h, i)
                      }else {
                        return f__$1.call(null, a, b, c, d, e, f__$1, g, h, i)
                      }
                    }else {
                      var j = cljs.core._first.call(null, args__$10);
                      var args__$11 = cljs.core._rest.call(null, args__$10);
                      if(argc === 10) {
                        if(f__$1.cljs$core$IFn$_invoke$arity$10) {
                          return f__$1.cljs$core$IFn$_invoke$arity$10(a, b, c, d, e, f__$1, g, h, i, j)
                        }else {
                          return f__$1.call(null, a, b, c, d, e, f__$1, g, h, i, j)
                        }
                      }else {
                        var k = cljs.core._first.call(null, args__$11);
                        var args__$12 = cljs.core._rest.call(null, args__$11);
                        if(argc === 11) {
                          if(f__$1.cljs$core$IFn$_invoke$arity$11) {
                            return f__$1.cljs$core$IFn$_invoke$arity$11(a, b, c, d, e, f__$1, g, h, i, j, k)
                          }else {
                            return f__$1.call(null, a, b, c, d, e, f__$1, g, h, i, j, k)
                          }
                        }else {
                          var l = cljs.core._first.call(null, args__$12);
                          var args__$13 = cljs.core._rest.call(null, args__$12);
                          if(argc === 12) {
                            if(f__$1.cljs$core$IFn$_invoke$arity$12) {
                              return f__$1.cljs$core$IFn$_invoke$arity$12(a, b, c, d, e, f__$1, g, h, i, j, k, l)
                            }else {
                              return f__$1.call(null, a, b, c, d, e, f__$1, g, h, i, j, k, l)
                            }
                          }else {
                            var m = cljs.core._first.call(null, args__$13);
                            var args__$14 = cljs.core._rest.call(null, args__$13);
                            if(argc === 13) {
                              if(f__$1.cljs$core$IFn$_invoke$arity$13) {
                                return f__$1.cljs$core$IFn$_invoke$arity$13(a, b, c, d, e, f__$1, g, h, i, j, k, l, m)
                              }else {
                                return f__$1.call(null, a, b, c, d, e, f__$1, g, h, i, j, k, l, m)
                              }
                            }else {
                              var n = cljs.core._first.call(null, args__$14);
                              var args__$15 = cljs.core._rest.call(null, args__$14);
                              if(argc === 14) {
                                if(f__$1.cljs$core$IFn$_invoke$arity$14) {
                                  return f__$1.cljs$core$IFn$_invoke$arity$14(a, b, c, d, e, f__$1, g, h, i, j, k, l, m, n)
                                }else {
                                  return f__$1.call(null, a, b, c, d, e, f__$1, g, h, i, j, k, l, m, n)
                                }
                              }else {
                                var o = cljs.core._first.call(null, args__$15);
                                var args__$16 = cljs.core._rest.call(null, args__$15);
                                if(argc === 15) {
                                  if(f__$1.cljs$core$IFn$_invoke$arity$15) {
                                    return f__$1.cljs$core$IFn$_invoke$arity$15(a, b, c, d, e, f__$1, g, h, i, j, k, l, m, n, o)
                                  }else {
                                    return f__$1.call(null, a, b, c, d, e, f__$1, g, h, i, j, k, l, m, n, o)
                                  }
                                }else {
                                  var p = cljs.core._first.call(null, args__$16);
                                  var args__$17 = cljs.core._rest.call(null, args__$16);
                                  if(argc === 16) {
                                    if(f__$1.cljs$core$IFn$_invoke$arity$16) {
                                      return f__$1.cljs$core$IFn$_invoke$arity$16(a, b, c, d, e, f__$1, g, h, i, j, k, l, m, n, o, p)
                                    }else {
                                      return f__$1.call(null, a, b, c, d, e, f__$1, g, h, i, j, k, l, m, n, o, p)
                                    }
                                  }else {
                                    var q = cljs.core._first.call(null, args__$17);
                                    var args__$18 = cljs.core._rest.call(null, args__$17);
                                    if(argc === 17) {
                                      if(f__$1.cljs$core$IFn$_invoke$arity$17) {
                                        return f__$1.cljs$core$IFn$_invoke$arity$17(a, b, c, d, e, f__$1, g, h, i, j, k, l, m, n, o, p, q)
                                      }else {
                                        return f__$1.call(null, a, b, c, d, e, f__$1, g, h, i, j, k, l, m, n, o, p, q)
                                      }
                                    }else {
                                      var r = cljs.core._first.call(null, args__$18);
                                      var args__$19 = cljs.core._rest.call(null, args__$18);
                                      if(argc === 18) {
                                        if(f__$1.cljs$core$IFn$_invoke$arity$18) {
                                          return f__$1.cljs$core$IFn$_invoke$arity$18(a, b, c, d, e, f__$1, g, h, i, j, k, l, m, n, o, p, q, r)
                                        }else {
                                          return f__$1.call(null, a, b, c, d, e, f__$1, g, h, i, j, k, l, m, n, o, p, q, r)
                                        }
                                      }else {
                                        var s = cljs.core._first.call(null, args__$19);
                                        var args__$20 = cljs.core._rest.call(null, args__$19);
                                        if(argc === 19) {
                                          if(f__$1.cljs$core$IFn$_invoke$arity$19) {
                                            return f__$1.cljs$core$IFn$_invoke$arity$19(a, b, c, d, e, f__$1, g, h, i, j, k, l, m, n, o, p, q, r, s)
                                          }else {
                                            return f__$1.call(null, a, b, c, d, e, f__$1, g, h, i, j, k, l, m, n, o, p, q, r, s)
                                          }
                                        }else {
                                          var t = cljs.core._first.call(null, args__$20);
                                          var args__$21 = cljs.core._rest.call(null, args__$20);
                                          if(argc === 20) {
                                            if(f__$1.cljs$core$IFn$_invoke$arity$20) {
                                              return f__$1.cljs$core$IFn$_invoke$arity$20(a, b, c, d, e, f__$1, g, h, i, j, k, l, m, n, o, p, q, r, s, t)
                                            }else {
                                              return f__$1.call(null, a, b, c, d, e, f__$1, g, h, i, j, k, l, m, n, o, p, q, r, s, t)
                                            }
                                          }else {
                                            throw new Error("Only up to 20 arguments supported on functions");
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
};
cljs.core.apply = function() {
  var apply = null;
  var apply__2 = function(f, args) {
    var fixed_arity = f.cljs$lang$maxFixedArity;
    if(f.cljs$lang$applyTo) {
      var bc = cljs.core.bounded_count.call(null, args, fixed_arity + 1);
      if(bc <= fixed_arity) {
        return cljs.core.apply_to.call(null, f, bc, args)
      }else {
        return f.cljs$lang$applyTo(args)
      }
    }else {
      return f.apply(f, cljs.core.to_array.call(null, args))
    }
  };
  var apply__3 = function(f, x, args) {
    var arglist = cljs.core.list_STAR_.call(null, x, args);
    var fixed_arity = f.cljs$lang$maxFixedArity;
    if(f.cljs$lang$applyTo) {
      var bc = cljs.core.bounded_count.call(null, arglist, fixed_arity + 1);
      if(bc <= fixed_arity) {
        return cljs.core.apply_to.call(null, f, bc, arglist)
      }else {
        return f.cljs$lang$applyTo(arglist)
      }
    }else {
      return f.apply(f, cljs.core.to_array.call(null, arglist))
    }
  };
  var apply__4 = function(f, x, y, args) {
    var arglist = cljs.core.list_STAR_.call(null, x, y, args);
    var fixed_arity = f.cljs$lang$maxFixedArity;
    if(f.cljs$lang$applyTo) {
      var bc = cljs.core.bounded_count.call(null, arglist, fixed_arity + 1);
      if(bc <= fixed_arity) {
        return cljs.core.apply_to.call(null, f, bc, arglist)
      }else {
        return f.cljs$lang$applyTo(arglist)
      }
    }else {
      return f.apply(f, cljs.core.to_array.call(null, arglist))
    }
  };
  var apply__5 = function(f, x, y, z, args) {
    var arglist = cljs.core.list_STAR_.call(null, x, y, z, args);
    var fixed_arity = f.cljs$lang$maxFixedArity;
    if(f.cljs$lang$applyTo) {
      var bc = cljs.core.bounded_count.call(null, arglist, fixed_arity + 1);
      if(bc <= fixed_arity) {
        return cljs.core.apply_to.call(null, f, bc, arglist)
      }else {
        return f.cljs$lang$applyTo(arglist)
      }
    }else {
      return f.apply(f, cljs.core.to_array.call(null, arglist))
    }
  };
  var apply__6 = function() {
    var G__529261__delegate = function(f, a, b, c, d, args) {
      var arglist = cljs.core.cons.call(null, a, cljs.core.cons.call(null, b, cljs.core.cons.call(null, c, cljs.core.cons.call(null, d, cljs.core.spread.call(null, args)))));
      var fixed_arity = f.cljs$lang$maxFixedArity;
      if(f.cljs$lang$applyTo) {
        var bc = cljs.core.bounded_count.call(null, arglist, fixed_arity + 1);
        if(bc <= fixed_arity) {
          return cljs.core.apply_to.call(null, f, bc, arglist)
        }else {
          return f.cljs$lang$applyTo(arglist)
        }
      }else {
        return f.apply(f, cljs.core.to_array.call(null, arglist))
      }
    };
    var G__529261 = function(f, a, b, c, d, var_args) {
      var args = null;
      if(arguments.length > 5) {
        args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 5), 0)
      }
      return G__529261__delegate.call(this, f, a, b, c, d, args)
    };
    G__529261.cljs$lang$maxFixedArity = 5;
    G__529261.cljs$lang$applyTo = function(arglist__529262) {
      var f = cljs.core.first(arglist__529262);
      arglist__529262 = cljs.core.next(arglist__529262);
      var a = cljs.core.first(arglist__529262);
      arglist__529262 = cljs.core.next(arglist__529262);
      var b = cljs.core.first(arglist__529262);
      arglist__529262 = cljs.core.next(arglist__529262);
      var c = cljs.core.first(arglist__529262);
      arglist__529262 = cljs.core.next(arglist__529262);
      var d = cljs.core.first(arglist__529262);
      var args = cljs.core.rest(arglist__529262);
      return G__529261__delegate(f, a, b, c, d, args)
    };
    G__529261.cljs$core$IFn$_invoke$arity$variadic = G__529261__delegate;
    return G__529261
  }();
  apply = function(f, a, b, c, d, var_args) {
    var args = var_args;
    switch(arguments.length) {
      case 2:
        return apply__2.call(this, f, a);
      case 3:
        return apply__3.call(this, f, a, b);
      case 4:
        return apply__4.call(this, f, a, b, c);
      case 5:
        return apply__5.call(this, f, a, b, c, d);
      default:
        return apply__6.cljs$core$IFn$_invoke$arity$variadic(f, a, b, c, d, cljs.core.array_seq(arguments, 5))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  apply.cljs$lang$maxFixedArity = 5;
  apply.cljs$lang$applyTo = apply__6.cljs$lang$applyTo;
  apply.cljs$core$IFn$_invoke$arity$2 = apply__2;
  apply.cljs$core$IFn$_invoke$arity$3 = apply__3;
  apply.cljs$core$IFn$_invoke$arity$4 = apply__4;
  apply.cljs$core$IFn$_invoke$arity$5 = apply__5;
  apply.cljs$core$IFn$_invoke$arity$variadic = apply__6.cljs$core$IFn$_invoke$arity$variadic;
  return apply
}();
cljs.core.vary_meta = function() {
  var vary_meta__delegate = function(obj, f, args) {
    return cljs.core.with_meta.call(null, obj, cljs.core.apply.call(null, f, cljs.core.meta.call(null, obj), args))
  };
  var vary_meta = function(obj, f, var_args) {
    var args = null;
    if(arguments.length > 2) {
      args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
    }
    return vary_meta__delegate.call(this, obj, f, args)
  };
  vary_meta.cljs$lang$maxFixedArity = 2;
  vary_meta.cljs$lang$applyTo = function(arglist__529263) {
    var obj = cljs.core.first(arglist__529263);
    arglist__529263 = cljs.core.next(arglist__529263);
    var f = cljs.core.first(arglist__529263);
    var args = cljs.core.rest(arglist__529263);
    return vary_meta__delegate(obj, f, args)
  };
  vary_meta.cljs$core$IFn$_invoke$arity$variadic = vary_meta__delegate;
  return vary_meta
}();
cljs.core.not_EQ_ = function() {
  var not_EQ_ = null;
  var not_EQ___1 = function(x) {
    return false
  };
  var not_EQ___2 = function(x, y) {
    return!cljs.core._EQ_.call(null, x, y)
  };
  var not_EQ___3 = function() {
    var G__529264__delegate = function(x, y, more) {
      return cljs.core.not.call(null, cljs.core.apply.call(null, cljs.core._EQ_, x, y, more))
    };
    var G__529264 = function(x, y, var_args) {
      var more = null;
      if(arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__529264__delegate.call(this, x, y, more)
    };
    G__529264.cljs$lang$maxFixedArity = 2;
    G__529264.cljs$lang$applyTo = function(arglist__529265) {
      var x = cljs.core.first(arglist__529265);
      arglist__529265 = cljs.core.next(arglist__529265);
      var y = cljs.core.first(arglist__529265);
      var more = cljs.core.rest(arglist__529265);
      return G__529264__delegate(x, y, more)
    };
    G__529264.cljs$core$IFn$_invoke$arity$variadic = G__529264__delegate;
    return G__529264
  }();
  not_EQ_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return not_EQ___1.call(this, x);
      case 2:
        return not_EQ___2.call(this, x, y);
      default:
        return not_EQ___3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  not_EQ_.cljs$lang$maxFixedArity = 2;
  not_EQ_.cljs$lang$applyTo = not_EQ___3.cljs$lang$applyTo;
  not_EQ_.cljs$core$IFn$_invoke$arity$1 = not_EQ___1;
  not_EQ_.cljs$core$IFn$_invoke$arity$2 = not_EQ___2;
  not_EQ_.cljs$core$IFn$_invoke$arity$variadic = not_EQ___3.cljs$core$IFn$_invoke$arity$variadic;
  return not_EQ_
}();
cljs.core.not_empty = function not_empty(coll) {
  if(cljs.core.seq.call(null, coll)) {
    return coll
  }else {
    return null
  }
};
cljs.core.every_QMARK_ = function every_QMARK_(pred, coll) {
  while(true) {
    if(cljs.core.seq.call(null, coll) == null) {
      return true
    }else {
      if(cljs.core.truth_(pred.call(null, cljs.core.first.call(null, coll)))) {
        var G__529266 = pred;
        var G__529267 = cljs.core.next.call(null, coll);
        pred = G__529266;
        coll = G__529267;
        continue
      }else {
        if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          return false
        }else {
          return null
        }
      }
    }
    break
  }
};
cljs.core.not_every_QMARK_ = function not_every_QMARK_(pred, coll) {
  return!cljs.core.every_QMARK_.call(null, pred, coll)
};
cljs.core.some = function some(pred, coll) {
  while(true) {
    if(cljs.core.seq.call(null, coll)) {
      var or__3285__auto__ = pred.call(null, cljs.core.first.call(null, coll));
      if(cljs.core.truth_(or__3285__auto__)) {
        return or__3285__auto__
      }else {
        var G__529268 = pred;
        var G__529269 = cljs.core.next.call(null, coll);
        pred = G__529268;
        coll = G__529269;
        continue
      }
    }else {
      return null
    }
    break
  }
};
cljs.core.not_any_QMARK_ = function not_any_QMARK_(pred, coll) {
  return cljs.core.not.call(null, cljs.core.some.call(null, pred, coll))
};
cljs.core.even_QMARK_ = function even_QMARK_(n) {
  if(cljs.core.integer_QMARK_.call(null, n)) {
    return(n & 1) === 0
  }else {
    throw new Error([cljs.core.str("Argument must be an integer: "), cljs.core.str(n)].join(""));
  }
};
cljs.core.odd_QMARK_ = function odd_QMARK_(n) {
  return!cljs.core.even_QMARK_.call(null, n)
};
cljs.core.identity = function identity(x) {
  return x
};
cljs.core.complement = function complement(f) {
  return function() {
    var G__529270 = null;
    var G__529270__0 = function() {
      return cljs.core.not.call(null, f.call(null))
    };
    var G__529270__1 = function(x) {
      return cljs.core.not.call(null, f.call(null, x))
    };
    var G__529270__2 = function(x, y) {
      return cljs.core.not.call(null, f.call(null, x, y))
    };
    var G__529270__3 = function() {
      var G__529271__delegate = function(x, y, zs) {
        return cljs.core.not.call(null, cljs.core.apply.call(null, f, x, y, zs))
      };
      var G__529271 = function(x, y, var_args) {
        var zs = null;
        if(arguments.length > 2) {
          zs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
        }
        return G__529271__delegate.call(this, x, y, zs)
      };
      G__529271.cljs$lang$maxFixedArity = 2;
      G__529271.cljs$lang$applyTo = function(arglist__529272) {
        var x = cljs.core.first(arglist__529272);
        arglist__529272 = cljs.core.next(arglist__529272);
        var y = cljs.core.first(arglist__529272);
        var zs = cljs.core.rest(arglist__529272);
        return G__529271__delegate(x, y, zs)
      };
      G__529271.cljs$core$IFn$_invoke$arity$variadic = G__529271__delegate;
      return G__529271
    }();
    G__529270 = function(x, y, var_args) {
      var zs = var_args;
      switch(arguments.length) {
        case 0:
          return G__529270__0.call(this);
        case 1:
          return G__529270__1.call(this, x);
        case 2:
          return G__529270__2.call(this, x, y);
        default:
          return G__529270__3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    G__529270.cljs$lang$maxFixedArity = 2;
    G__529270.cljs$lang$applyTo = G__529270__3.cljs$lang$applyTo;
    return G__529270
  }()
};
cljs.core.constantly = function constantly(x) {
  return function() {
    var G__529273__delegate = function(args) {
      return x
    };
    var G__529273 = function(var_args) {
      var args = null;
      if(arguments.length > 0) {
        args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
      }
      return G__529273__delegate.call(this, args)
    };
    G__529273.cljs$lang$maxFixedArity = 0;
    G__529273.cljs$lang$applyTo = function(arglist__529274) {
      var args = cljs.core.seq(arglist__529274);
      return G__529273__delegate(args)
    };
    G__529273.cljs$core$IFn$_invoke$arity$variadic = G__529273__delegate;
    return G__529273
  }()
};
cljs.core.comp = function() {
  var comp = null;
  var comp__0 = function() {
    return cljs.core.identity
  };
  var comp__1 = function(f) {
    return f
  };
  var comp__2 = function(f, g) {
    return function() {
      var G__529275 = null;
      var G__529275__0 = function() {
        return f.call(null, g.call(null))
      };
      var G__529275__1 = function(x) {
        return f.call(null, g.call(null, x))
      };
      var G__529275__2 = function(x, y) {
        return f.call(null, g.call(null, x, y))
      };
      var G__529275__3 = function(x, y, z) {
        return f.call(null, g.call(null, x, y, z))
      };
      var G__529275__4 = function() {
        var G__529276__delegate = function(x, y, z, args) {
          return f.call(null, cljs.core.apply.call(null, g, x, y, z, args))
        };
        var G__529276 = function(x, y, z, var_args) {
          var args = null;
          if(arguments.length > 3) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
          }
          return G__529276__delegate.call(this, x, y, z, args)
        };
        G__529276.cljs$lang$maxFixedArity = 3;
        G__529276.cljs$lang$applyTo = function(arglist__529277) {
          var x = cljs.core.first(arglist__529277);
          arglist__529277 = cljs.core.next(arglist__529277);
          var y = cljs.core.first(arglist__529277);
          arglist__529277 = cljs.core.next(arglist__529277);
          var z = cljs.core.first(arglist__529277);
          var args = cljs.core.rest(arglist__529277);
          return G__529276__delegate(x, y, z, args)
        };
        G__529276.cljs$core$IFn$_invoke$arity$variadic = G__529276__delegate;
        return G__529276
      }();
      G__529275 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return G__529275__0.call(this);
          case 1:
            return G__529275__1.call(this, x);
          case 2:
            return G__529275__2.call(this, x, y);
          case 3:
            return G__529275__3.call(this, x, y, z);
          default:
            return G__529275__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3))
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__529275.cljs$lang$maxFixedArity = 3;
      G__529275.cljs$lang$applyTo = G__529275__4.cljs$lang$applyTo;
      return G__529275
    }()
  };
  var comp__3 = function(f, g, h) {
    return function() {
      var G__529278 = null;
      var G__529278__0 = function() {
        return f.call(null, g.call(null, h.call(null)))
      };
      var G__529278__1 = function(x) {
        return f.call(null, g.call(null, h.call(null, x)))
      };
      var G__529278__2 = function(x, y) {
        return f.call(null, g.call(null, h.call(null, x, y)))
      };
      var G__529278__3 = function(x, y, z) {
        return f.call(null, g.call(null, h.call(null, x, y, z)))
      };
      var G__529278__4 = function() {
        var G__529279__delegate = function(x, y, z, args) {
          return f.call(null, g.call(null, cljs.core.apply.call(null, h, x, y, z, args)))
        };
        var G__529279 = function(x, y, z, var_args) {
          var args = null;
          if(arguments.length > 3) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
          }
          return G__529279__delegate.call(this, x, y, z, args)
        };
        G__529279.cljs$lang$maxFixedArity = 3;
        G__529279.cljs$lang$applyTo = function(arglist__529280) {
          var x = cljs.core.first(arglist__529280);
          arglist__529280 = cljs.core.next(arglist__529280);
          var y = cljs.core.first(arglist__529280);
          arglist__529280 = cljs.core.next(arglist__529280);
          var z = cljs.core.first(arglist__529280);
          var args = cljs.core.rest(arglist__529280);
          return G__529279__delegate(x, y, z, args)
        };
        G__529279.cljs$core$IFn$_invoke$arity$variadic = G__529279__delegate;
        return G__529279
      }();
      G__529278 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return G__529278__0.call(this);
          case 1:
            return G__529278__1.call(this, x);
          case 2:
            return G__529278__2.call(this, x, y);
          case 3:
            return G__529278__3.call(this, x, y, z);
          default:
            return G__529278__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3))
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__529278.cljs$lang$maxFixedArity = 3;
      G__529278.cljs$lang$applyTo = G__529278__4.cljs$lang$applyTo;
      return G__529278
    }()
  };
  var comp__4 = function() {
    var G__529281__delegate = function(f1, f2, f3, fs) {
      var fs__$1 = cljs.core.reverse.call(null, cljs.core.list_STAR_.call(null, f1, f2, f3, fs));
      return function() {
        var G__529282__delegate = function(args) {
          var ret = cljs.core.apply.call(null, cljs.core.first.call(null, fs__$1), args);
          var fs__$2 = cljs.core.next.call(null, fs__$1);
          while(true) {
            if(fs__$2) {
              var G__529283 = cljs.core.first.call(null, fs__$2).call(null, ret);
              var G__529284 = cljs.core.next.call(null, fs__$2);
              ret = G__529283;
              fs__$2 = G__529284;
              continue
            }else {
              return ret
            }
            break
          }
        };
        var G__529282 = function(var_args) {
          var args = null;
          if(arguments.length > 0) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
          }
          return G__529282__delegate.call(this, args)
        };
        G__529282.cljs$lang$maxFixedArity = 0;
        G__529282.cljs$lang$applyTo = function(arglist__529285) {
          var args = cljs.core.seq(arglist__529285);
          return G__529282__delegate(args)
        };
        G__529282.cljs$core$IFn$_invoke$arity$variadic = G__529282__delegate;
        return G__529282
      }()
    };
    var G__529281 = function(f1, f2, f3, var_args) {
      var fs = null;
      if(arguments.length > 3) {
        fs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
      }
      return G__529281__delegate.call(this, f1, f2, f3, fs)
    };
    G__529281.cljs$lang$maxFixedArity = 3;
    G__529281.cljs$lang$applyTo = function(arglist__529286) {
      var f1 = cljs.core.first(arglist__529286);
      arglist__529286 = cljs.core.next(arglist__529286);
      var f2 = cljs.core.first(arglist__529286);
      arglist__529286 = cljs.core.next(arglist__529286);
      var f3 = cljs.core.first(arglist__529286);
      var fs = cljs.core.rest(arglist__529286);
      return G__529281__delegate(f1, f2, f3, fs)
    };
    G__529281.cljs$core$IFn$_invoke$arity$variadic = G__529281__delegate;
    return G__529281
  }();
  comp = function(f1, f2, f3, var_args) {
    var fs = var_args;
    switch(arguments.length) {
      case 0:
        return comp__0.call(this);
      case 1:
        return comp__1.call(this, f1);
      case 2:
        return comp__2.call(this, f1, f2);
      case 3:
        return comp__3.call(this, f1, f2, f3);
      default:
        return comp__4.cljs$core$IFn$_invoke$arity$variadic(f1, f2, f3, cljs.core.array_seq(arguments, 3))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  comp.cljs$lang$maxFixedArity = 3;
  comp.cljs$lang$applyTo = comp__4.cljs$lang$applyTo;
  comp.cljs$core$IFn$_invoke$arity$0 = comp__0;
  comp.cljs$core$IFn$_invoke$arity$1 = comp__1;
  comp.cljs$core$IFn$_invoke$arity$2 = comp__2;
  comp.cljs$core$IFn$_invoke$arity$3 = comp__3;
  comp.cljs$core$IFn$_invoke$arity$variadic = comp__4.cljs$core$IFn$_invoke$arity$variadic;
  return comp
}();
cljs.core.partial = function() {
  var partial = null;
  var partial__1 = function(f) {
    return f
  };
  var partial__2 = function(f, arg1) {
    return function() {
      var G__529287__delegate = function(args) {
        return cljs.core.apply.call(null, f, arg1, args)
      };
      var G__529287 = function(var_args) {
        var args = null;
        if(arguments.length > 0) {
          args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
        }
        return G__529287__delegate.call(this, args)
      };
      G__529287.cljs$lang$maxFixedArity = 0;
      G__529287.cljs$lang$applyTo = function(arglist__529288) {
        var args = cljs.core.seq(arglist__529288);
        return G__529287__delegate(args)
      };
      G__529287.cljs$core$IFn$_invoke$arity$variadic = G__529287__delegate;
      return G__529287
    }()
  };
  var partial__3 = function(f, arg1, arg2) {
    return function() {
      var G__529289__delegate = function(args) {
        return cljs.core.apply.call(null, f, arg1, arg2, args)
      };
      var G__529289 = function(var_args) {
        var args = null;
        if(arguments.length > 0) {
          args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
        }
        return G__529289__delegate.call(this, args)
      };
      G__529289.cljs$lang$maxFixedArity = 0;
      G__529289.cljs$lang$applyTo = function(arglist__529290) {
        var args = cljs.core.seq(arglist__529290);
        return G__529289__delegate(args)
      };
      G__529289.cljs$core$IFn$_invoke$arity$variadic = G__529289__delegate;
      return G__529289
    }()
  };
  var partial__4 = function(f, arg1, arg2, arg3) {
    return function() {
      var G__529291__delegate = function(args) {
        return cljs.core.apply.call(null, f, arg1, arg2, arg3, args)
      };
      var G__529291 = function(var_args) {
        var args = null;
        if(arguments.length > 0) {
          args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
        }
        return G__529291__delegate.call(this, args)
      };
      G__529291.cljs$lang$maxFixedArity = 0;
      G__529291.cljs$lang$applyTo = function(arglist__529292) {
        var args = cljs.core.seq(arglist__529292);
        return G__529291__delegate(args)
      };
      G__529291.cljs$core$IFn$_invoke$arity$variadic = G__529291__delegate;
      return G__529291
    }()
  };
  var partial__5 = function() {
    var G__529293__delegate = function(f, arg1, arg2, arg3, more) {
      return function() {
        var G__529294__delegate = function(args) {
          return cljs.core.apply.call(null, f, arg1, arg2, arg3, cljs.core.concat.call(null, more, args))
        };
        var G__529294 = function(var_args) {
          var args = null;
          if(arguments.length > 0) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
          }
          return G__529294__delegate.call(this, args)
        };
        G__529294.cljs$lang$maxFixedArity = 0;
        G__529294.cljs$lang$applyTo = function(arglist__529295) {
          var args = cljs.core.seq(arglist__529295);
          return G__529294__delegate(args)
        };
        G__529294.cljs$core$IFn$_invoke$arity$variadic = G__529294__delegate;
        return G__529294
      }()
    };
    var G__529293 = function(f, arg1, arg2, arg3, var_args) {
      var more = null;
      if(arguments.length > 4) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 4), 0)
      }
      return G__529293__delegate.call(this, f, arg1, arg2, arg3, more)
    };
    G__529293.cljs$lang$maxFixedArity = 4;
    G__529293.cljs$lang$applyTo = function(arglist__529296) {
      var f = cljs.core.first(arglist__529296);
      arglist__529296 = cljs.core.next(arglist__529296);
      var arg1 = cljs.core.first(arglist__529296);
      arglist__529296 = cljs.core.next(arglist__529296);
      var arg2 = cljs.core.first(arglist__529296);
      arglist__529296 = cljs.core.next(arglist__529296);
      var arg3 = cljs.core.first(arglist__529296);
      var more = cljs.core.rest(arglist__529296);
      return G__529293__delegate(f, arg1, arg2, arg3, more)
    };
    G__529293.cljs$core$IFn$_invoke$arity$variadic = G__529293__delegate;
    return G__529293
  }();
  partial = function(f, arg1, arg2, arg3, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return partial__1.call(this, f);
      case 2:
        return partial__2.call(this, f, arg1);
      case 3:
        return partial__3.call(this, f, arg1, arg2);
      case 4:
        return partial__4.call(this, f, arg1, arg2, arg3);
      default:
        return partial__5.cljs$core$IFn$_invoke$arity$variadic(f, arg1, arg2, arg3, cljs.core.array_seq(arguments, 4))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  partial.cljs$lang$maxFixedArity = 4;
  partial.cljs$lang$applyTo = partial__5.cljs$lang$applyTo;
  partial.cljs$core$IFn$_invoke$arity$1 = partial__1;
  partial.cljs$core$IFn$_invoke$arity$2 = partial__2;
  partial.cljs$core$IFn$_invoke$arity$3 = partial__3;
  partial.cljs$core$IFn$_invoke$arity$4 = partial__4;
  partial.cljs$core$IFn$_invoke$arity$variadic = partial__5.cljs$core$IFn$_invoke$arity$variadic;
  return partial
}();
cljs.core.fnil = function() {
  var fnil = null;
  var fnil__2 = function(f, x) {
    return function() {
      var G__529297 = null;
      var G__529297__1 = function(a) {
        return f.call(null, a == null ? x : a)
      };
      var G__529297__2 = function(a, b) {
        return f.call(null, a == null ? x : a, b)
      };
      var G__529297__3 = function(a, b, c) {
        return f.call(null, a == null ? x : a, b, c)
      };
      var G__529297__4 = function() {
        var G__529298__delegate = function(a, b, c, ds) {
          return cljs.core.apply.call(null, f, a == null ? x : a, b, c, ds)
        };
        var G__529298 = function(a, b, c, var_args) {
          var ds = null;
          if(arguments.length > 3) {
            ds = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
          }
          return G__529298__delegate.call(this, a, b, c, ds)
        };
        G__529298.cljs$lang$maxFixedArity = 3;
        G__529298.cljs$lang$applyTo = function(arglist__529299) {
          var a = cljs.core.first(arglist__529299);
          arglist__529299 = cljs.core.next(arglist__529299);
          var b = cljs.core.first(arglist__529299);
          arglist__529299 = cljs.core.next(arglist__529299);
          var c = cljs.core.first(arglist__529299);
          var ds = cljs.core.rest(arglist__529299);
          return G__529298__delegate(a, b, c, ds)
        };
        G__529298.cljs$core$IFn$_invoke$arity$variadic = G__529298__delegate;
        return G__529298
      }();
      G__529297 = function(a, b, c, var_args) {
        var ds = var_args;
        switch(arguments.length) {
          case 1:
            return G__529297__1.call(this, a);
          case 2:
            return G__529297__2.call(this, a, b);
          case 3:
            return G__529297__3.call(this, a, b, c);
          default:
            return G__529297__4.cljs$core$IFn$_invoke$arity$variadic(a, b, c, cljs.core.array_seq(arguments, 3))
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__529297.cljs$lang$maxFixedArity = 3;
      G__529297.cljs$lang$applyTo = G__529297__4.cljs$lang$applyTo;
      return G__529297
    }()
  };
  var fnil__3 = function(f, x, y) {
    return function() {
      var G__529300 = null;
      var G__529300__2 = function(a, b) {
        return f.call(null, a == null ? x : a, b == null ? y : b)
      };
      var G__529300__3 = function(a, b, c) {
        return f.call(null, a == null ? x : a, b == null ? y : b, c)
      };
      var G__529300__4 = function() {
        var G__529301__delegate = function(a, b, c, ds) {
          return cljs.core.apply.call(null, f, a == null ? x : a, b == null ? y : b, c, ds)
        };
        var G__529301 = function(a, b, c, var_args) {
          var ds = null;
          if(arguments.length > 3) {
            ds = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
          }
          return G__529301__delegate.call(this, a, b, c, ds)
        };
        G__529301.cljs$lang$maxFixedArity = 3;
        G__529301.cljs$lang$applyTo = function(arglist__529302) {
          var a = cljs.core.first(arglist__529302);
          arglist__529302 = cljs.core.next(arglist__529302);
          var b = cljs.core.first(arglist__529302);
          arglist__529302 = cljs.core.next(arglist__529302);
          var c = cljs.core.first(arglist__529302);
          var ds = cljs.core.rest(arglist__529302);
          return G__529301__delegate(a, b, c, ds)
        };
        G__529301.cljs$core$IFn$_invoke$arity$variadic = G__529301__delegate;
        return G__529301
      }();
      G__529300 = function(a, b, c, var_args) {
        var ds = var_args;
        switch(arguments.length) {
          case 2:
            return G__529300__2.call(this, a, b);
          case 3:
            return G__529300__3.call(this, a, b, c);
          default:
            return G__529300__4.cljs$core$IFn$_invoke$arity$variadic(a, b, c, cljs.core.array_seq(arguments, 3))
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__529300.cljs$lang$maxFixedArity = 3;
      G__529300.cljs$lang$applyTo = G__529300__4.cljs$lang$applyTo;
      return G__529300
    }()
  };
  var fnil__4 = function(f, x, y, z) {
    return function() {
      var G__529303 = null;
      var G__529303__2 = function(a, b) {
        return f.call(null, a == null ? x : a, b == null ? y : b)
      };
      var G__529303__3 = function(a, b, c) {
        return f.call(null, a == null ? x : a, b == null ? y : b, c == null ? z : c)
      };
      var G__529303__4 = function() {
        var G__529304__delegate = function(a, b, c, ds) {
          return cljs.core.apply.call(null, f, a == null ? x : a, b == null ? y : b, c == null ? z : c, ds)
        };
        var G__529304 = function(a, b, c, var_args) {
          var ds = null;
          if(arguments.length > 3) {
            ds = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
          }
          return G__529304__delegate.call(this, a, b, c, ds)
        };
        G__529304.cljs$lang$maxFixedArity = 3;
        G__529304.cljs$lang$applyTo = function(arglist__529305) {
          var a = cljs.core.first(arglist__529305);
          arglist__529305 = cljs.core.next(arglist__529305);
          var b = cljs.core.first(arglist__529305);
          arglist__529305 = cljs.core.next(arglist__529305);
          var c = cljs.core.first(arglist__529305);
          var ds = cljs.core.rest(arglist__529305);
          return G__529304__delegate(a, b, c, ds)
        };
        G__529304.cljs$core$IFn$_invoke$arity$variadic = G__529304__delegate;
        return G__529304
      }();
      G__529303 = function(a, b, c, var_args) {
        var ds = var_args;
        switch(arguments.length) {
          case 2:
            return G__529303__2.call(this, a, b);
          case 3:
            return G__529303__3.call(this, a, b, c);
          default:
            return G__529303__4.cljs$core$IFn$_invoke$arity$variadic(a, b, c, cljs.core.array_seq(arguments, 3))
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__529303.cljs$lang$maxFixedArity = 3;
      G__529303.cljs$lang$applyTo = G__529303__4.cljs$lang$applyTo;
      return G__529303
    }()
  };
  fnil = function(f, x, y, z) {
    switch(arguments.length) {
      case 2:
        return fnil__2.call(this, f, x);
      case 3:
        return fnil__3.call(this, f, x, y);
      case 4:
        return fnil__4.call(this, f, x, y, z)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  fnil.cljs$core$IFn$_invoke$arity$2 = fnil__2;
  fnil.cljs$core$IFn$_invoke$arity$3 = fnil__3;
  fnil.cljs$core$IFn$_invoke$arity$4 = fnil__4;
  return fnil
}();
cljs.core.map_indexed = function map_indexed(f, coll) {
  var mapi = function mapi(idx, coll__$1) {
    return new cljs.core.LazySeq(null, function() {
      var temp__4092__auto__ = cljs.core.seq.call(null, coll__$1);
      if(temp__4092__auto__) {
        var s = temp__4092__auto__;
        if(cljs.core.chunked_seq_QMARK_.call(null, s)) {
          var c = cljs.core.chunk_first.call(null, s);
          var size = cljs.core.count.call(null, c);
          var b = cljs.core.chunk_buffer.call(null, size);
          var n__4108__auto___529306 = size;
          var i_529307 = 0;
          while(true) {
            if(i_529307 < n__4108__auto___529306) {
              cljs.core.chunk_append.call(null, b, f.call(null, idx + i_529307, cljs.core._nth.call(null, c, i_529307)));
              var G__529308 = i_529307 + 1;
              i_529307 = G__529308;
              continue
            }else {
            }
            break
          }
          return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b), mapi.call(null, idx + size, cljs.core.chunk_rest.call(null, s)))
        }else {
          return cljs.core.cons.call(null, f.call(null, idx, cljs.core.first.call(null, s)), mapi.call(null, idx + 1, cljs.core.rest.call(null, s)))
        }
      }else {
        return null
      }
    }, null, null)
  };
  return mapi.call(null, 0, coll)
};
cljs.core.keep = function keep(f, coll) {
  return new cljs.core.LazySeq(null, function() {
    var temp__4092__auto__ = cljs.core.seq.call(null, coll);
    if(temp__4092__auto__) {
      var s = temp__4092__auto__;
      if(cljs.core.chunked_seq_QMARK_.call(null, s)) {
        var c = cljs.core.chunk_first.call(null, s);
        var size = cljs.core.count.call(null, c);
        var b = cljs.core.chunk_buffer.call(null, size);
        var n__4108__auto___529309 = size;
        var i_529310 = 0;
        while(true) {
          if(i_529310 < n__4108__auto___529309) {
            var x_529311 = f.call(null, cljs.core._nth.call(null, c, i_529310));
            if(x_529311 == null) {
            }else {
              cljs.core.chunk_append.call(null, b, x_529311)
            }
            var G__529312 = i_529310 + 1;
            i_529310 = G__529312;
            continue
          }else {
          }
          break
        }
        return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b), keep.call(null, f, cljs.core.chunk_rest.call(null, s)))
      }else {
        var x = f.call(null, cljs.core.first.call(null, s));
        if(x == null) {
          return keep.call(null, f, cljs.core.rest.call(null, s))
        }else {
          return cljs.core.cons.call(null, x, keep.call(null, f, cljs.core.rest.call(null, s)))
        }
      }
    }else {
      return null
    }
  }, null, null)
};
cljs.core.keep_indexed = function keep_indexed(f, coll) {
  var keepi = function keepi(idx, coll__$1) {
    return new cljs.core.LazySeq(null, function() {
      var temp__4092__auto__ = cljs.core.seq.call(null, coll__$1);
      if(temp__4092__auto__) {
        var s = temp__4092__auto__;
        if(cljs.core.chunked_seq_QMARK_.call(null, s)) {
          var c = cljs.core.chunk_first.call(null, s);
          var size = cljs.core.count.call(null, c);
          var b = cljs.core.chunk_buffer.call(null, size);
          var n__4108__auto___529313 = size;
          var i_529314 = 0;
          while(true) {
            if(i_529314 < n__4108__auto___529313) {
              var x_529315 = f.call(null, idx + i_529314, cljs.core._nth.call(null, c, i_529314));
              if(x_529315 == null) {
              }else {
                cljs.core.chunk_append.call(null, b, x_529315)
              }
              var G__529316 = i_529314 + 1;
              i_529314 = G__529316;
              continue
            }else {
            }
            break
          }
          return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b), keepi.call(null, idx + size, cljs.core.chunk_rest.call(null, s)))
        }else {
          var x = f.call(null, idx, cljs.core.first.call(null, s));
          if(x == null) {
            return keepi.call(null, idx + 1, cljs.core.rest.call(null, s))
          }else {
            return cljs.core.cons.call(null, x, keepi.call(null, idx + 1, cljs.core.rest.call(null, s)))
          }
        }
      }else {
        return null
      }
    }, null, null)
  };
  return keepi.call(null, 0, coll)
};
cljs.core.every_pred = function() {
  var every_pred = null;
  var every_pred__1 = function(p) {
    return function() {
      var ep1 = null;
      var ep1__0 = function() {
        return true
      };
      var ep1__1 = function(x) {
        return cljs.core.boolean$.call(null, p.call(null, x))
      };
      var ep1__2 = function(x, y) {
        return cljs.core.boolean$.call(null, function() {
          var and__3273__auto__ = p.call(null, x);
          if(cljs.core.truth_(and__3273__auto__)) {
            return p.call(null, y)
          }else {
            return and__3273__auto__
          }
        }())
      };
      var ep1__3 = function(x, y, z) {
        return cljs.core.boolean$.call(null, function() {
          var and__3273__auto__ = p.call(null, x);
          if(cljs.core.truth_(and__3273__auto__)) {
            var and__3273__auto____$1 = p.call(null, y);
            if(cljs.core.truth_(and__3273__auto____$1)) {
              return p.call(null, z)
            }else {
              return and__3273__auto____$1
            }
          }else {
            return and__3273__auto__
          }
        }())
      };
      var ep1__4 = function() {
        var G__529323__delegate = function(x, y, z, args) {
          return cljs.core.boolean$.call(null, ep1.call(null, x, y, z) && cljs.core.every_QMARK_.call(null, p, args))
        };
        var G__529323 = function(x, y, z, var_args) {
          var args = null;
          if(arguments.length > 3) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
          }
          return G__529323__delegate.call(this, x, y, z, args)
        };
        G__529323.cljs$lang$maxFixedArity = 3;
        G__529323.cljs$lang$applyTo = function(arglist__529324) {
          var x = cljs.core.first(arglist__529324);
          arglist__529324 = cljs.core.next(arglist__529324);
          var y = cljs.core.first(arglist__529324);
          arglist__529324 = cljs.core.next(arglist__529324);
          var z = cljs.core.first(arglist__529324);
          var args = cljs.core.rest(arglist__529324);
          return G__529323__delegate(x, y, z, args)
        };
        G__529323.cljs$core$IFn$_invoke$arity$variadic = G__529323__delegate;
        return G__529323
      }();
      ep1 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return ep1__0.call(this);
          case 1:
            return ep1__1.call(this, x);
          case 2:
            return ep1__2.call(this, x, y);
          case 3:
            return ep1__3.call(this, x, y, z);
          default:
            return ep1__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3))
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      ep1.cljs$lang$maxFixedArity = 3;
      ep1.cljs$lang$applyTo = ep1__4.cljs$lang$applyTo;
      ep1.cljs$core$IFn$_invoke$arity$0 = ep1__0;
      ep1.cljs$core$IFn$_invoke$arity$1 = ep1__1;
      ep1.cljs$core$IFn$_invoke$arity$2 = ep1__2;
      ep1.cljs$core$IFn$_invoke$arity$3 = ep1__3;
      ep1.cljs$core$IFn$_invoke$arity$variadic = ep1__4.cljs$core$IFn$_invoke$arity$variadic;
      return ep1
    }()
  };
  var every_pred__2 = function(p1, p2) {
    return function() {
      var ep2 = null;
      var ep2__0 = function() {
        return true
      };
      var ep2__1 = function(x) {
        return cljs.core.boolean$.call(null, function() {
          var and__3273__auto__ = p1.call(null, x);
          if(cljs.core.truth_(and__3273__auto__)) {
            return p2.call(null, x)
          }else {
            return and__3273__auto__
          }
        }())
      };
      var ep2__2 = function(x, y) {
        return cljs.core.boolean$.call(null, function() {
          var and__3273__auto__ = p1.call(null, x);
          if(cljs.core.truth_(and__3273__auto__)) {
            var and__3273__auto____$1 = p1.call(null, y);
            if(cljs.core.truth_(and__3273__auto____$1)) {
              var and__3273__auto____$2 = p2.call(null, x);
              if(cljs.core.truth_(and__3273__auto____$2)) {
                return p2.call(null, y)
              }else {
                return and__3273__auto____$2
              }
            }else {
              return and__3273__auto____$1
            }
          }else {
            return and__3273__auto__
          }
        }())
      };
      var ep2__3 = function(x, y, z) {
        return cljs.core.boolean$.call(null, function() {
          var and__3273__auto__ = p1.call(null, x);
          if(cljs.core.truth_(and__3273__auto__)) {
            var and__3273__auto____$1 = p1.call(null, y);
            if(cljs.core.truth_(and__3273__auto____$1)) {
              var and__3273__auto____$2 = p1.call(null, z);
              if(cljs.core.truth_(and__3273__auto____$2)) {
                var and__3273__auto____$3 = p2.call(null, x);
                if(cljs.core.truth_(and__3273__auto____$3)) {
                  var and__3273__auto____$4 = p2.call(null, y);
                  if(cljs.core.truth_(and__3273__auto____$4)) {
                    return p2.call(null, z)
                  }else {
                    return and__3273__auto____$4
                  }
                }else {
                  return and__3273__auto____$3
                }
              }else {
                return and__3273__auto____$2
              }
            }else {
              return and__3273__auto____$1
            }
          }else {
            return and__3273__auto__
          }
        }())
      };
      var ep2__4 = function() {
        var G__529325__delegate = function(x, y, z, args) {
          return cljs.core.boolean$.call(null, ep2.call(null, x, y, z) && cljs.core.every_QMARK_.call(null, function(p1__529317_SHARP_) {
            var and__3273__auto__ = p1.call(null, p1__529317_SHARP_);
            if(cljs.core.truth_(and__3273__auto__)) {
              return p2.call(null, p1__529317_SHARP_)
            }else {
              return and__3273__auto__
            }
          }, args))
        };
        var G__529325 = function(x, y, z, var_args) {
          var args = null;
          if(arguments.length > 3) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
          }
          return G__529325__delegate.call(this, x, y, z, args)
        };
        G__529325.cljs$lang$maxFixedArity = 3;
        G__529325.cljs$lang$applyTo = function(arglist__529326) {
          var x = cljs.core.first(arglist__529326);
          arglist__529326 = cljs.core.next(arglist__529326);
          var y = cljs.core.first(arglist__529326);
          arglist__529326 = cljs.core.next(arglist__529326);
          var z = cljs.core.first(arglist__529326);
          var args = cljs.core.rest(arglist__529326);
          return G__529325__delegate(x, y, z, args)
        };
        G__529325.cljs$core$IFn$_invoke$arity$variadic = G__529325__delegate;
        return G__529325
      }();
      ep2 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return ep2__0.call(this);
          case 1:
            return ep2__1.call(this, x);
          case 2:
            return ep2__2.call(this, x, y);
          case 3:
            return ep2__3.call(this, x, y, z);
          default:
            return ep2__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3))
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      ep2.cljs$lang$maxFixedArity = 3;
      ep2.cljs$lang$applyTo = ep2__4.cljs$lang$applyTo;
      ep2.cljs$core$IFn$_invoke$arity$0 = ep2__0;
      ep2.cljs$core$IFn$_invoke$arity$1 = ep2__1;
      ep2.cljs$core$IFn$_invoke$arity$2 = ep2__2;
      ep2.cljs$core$IFn$_invoke$arity$3 = ep2__3;
      ep2.cljs$core$IFn$_invoke$arity$variadic = ep2__4.cljs$core$IFn$_invoke$arity$variadic;
      return ep2
    }()
  };
  var every_pred__3 = function(p1, p2, p3) {
    return function() {
      var ep3 = null;
      var ep3__0 = function() {
        return true
      };
      var ep3__1 = function(x) {
        return cljs.core.boolean$.call(null, function() {
          var and__3273__auto__ = p1.call(null, x);
          if(cljs.core.truth_(and__3273__auto__)) {
            var and__3273__auto____$1 = p2.call(null, x);
            if(cljs.core.truth_(and__3273__auto____$1)) {
              return p3.call(null, x)
            }else {
              return and__3273__auto____$1
            }
          }else {
            return and__3273__auto__
          }
        }())
      };
      var ep3__2 = function(x, y) {
        return cljs.core.boolean$.call(null, function() {
          var and__3273__auto__ = p1.call(null, x);
          if(cljs.core.truth_(and__3273__auto__)) {
            var and__3273__auto____$1 = p2.call(null, x);
            if(cljs.core.truth_(and__3273__auto____$1)) {
              var and__3273__auto____$2 = p3.call(null, x);
              if(cljs.core.truth_(and__3273__auto____$2)) {
                var and__3273__auto____$3 = p1.call(null, y);
                if(cljs.core.truth_(and__3273__auto____$3)) {
                  var and__3273__auto____$4 = p2.call(null, y);
                  if(cljs.core.truth_(and__3273__auto____$4)) {
                    return p3.call(null, y)
                  }else {
                    return and__3273__auto____$4
                  }
                }else {
                  return and__3273__auto____$3
                }
              }else {
                return and__3273__auto____$2
              }
            }else {
              return and__3273__auto____$1
            }
          }else {
            return and__3273__auto__
          }
        }())
      };
      var ep3__3 = function(x, y, z) {
        return cljs.core.boolean$.call(null, function() {
          var and__3273__auto__ = p1.call(null, x);
          if(cljs.core.truth_(and__3273__auto__)) {
            var and__3273__auto____$1 = p2.call(null, x);
            if(cljs.core.truth_(and__3273__auto____$1)) {
              var and__3273__auto____$2 = p3.call(null, x);
              if(cljs.core.truth_(and__3273__auto____$2)) {
                var and__3273__auto____$3 = p1.call(null, y);
                if(cljs.core.truth_(and__3273__auto____$3)) {
                  var and__3273__auto____$4 = p2.call(null, y);
                  if(cljs.core.truth_(and__3273__auto____$4)) {
                    var and__3273__auto____$5 = p3.call(null, y);
                    if(cljs.core.truth_(and__3273__auto____$5)) {
                      var and__3273__auto____$6 = p1.call(null, z);
                      if(cljs.core.truth_(and__3273__auto____$6)) {
                        var and__3273__auto____$7 = p2.call(null, z);
                        if(cljs.core.truth_(and__3273__auto____$7)) {
                          return p3.call(null, z)
                        }else {
                          return and__3273__auto____$7
                        }
                      }else {
                        return and__3273__auto____$6
                      }
                    }else {
                      return and__3273__auto____$5
                    }
                  }else {
                    return and__3273__auto____$4
                  }
                }else {
                  return and__3273__auto____$3
                }
              }else {
                return and__3273__auto____$2
              }
            }else {
              return and__3273__auto____$1
            }
          }else {
            return and__3273__auto__
          }
        }())
      };
      var ep3__4 = function() {
        var G__529327__delegate = function(x, y, z, args) {
          return cljs.core.boolean$.call(null, ep3.call(null, x, y, z) && cljs.core.every_QMARK_.call(null, function(p1__529318_SHARP_) {
            var and__3273__auto__ = p1.call(null, p1__529318_SHARP_);
            if(cljs.core.truth_(and__3273__auto__)) {
              var and__3273__auto____$1 = p2.call(null, p1__529318_SHARP_);
              if(cljs.core.truth_(and__3273__auto____$1)) {
                return p3.call(null, p1__529318_SHARP_)
              }else {
                return and__3273__auto____$1
              }
            }else {
              return and__3273__auto__
            }
          }, args))
        };
        var G__529327 = function(x, y, z, var_args) {
          var args = null;
          if(arguments.length > 3) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
          }
          return G__529327__delegate.call(this, x, y, z, args)
        };
        G__529327.cljs$lang$maxFixedArity = 3;
        G__529327.cljs$lang$applyTo = function(arglist__529328) {
          var x = cljs.core.first(arglist__529328);
          arglist__529328 = cljs.core.next(arglist__529328);
          var y = cljs.core.first(arglist__529328);
          arglist__529328 = cljs.core.next(arglist__529328);
          var z = cljs.core.first(arglist__529328);
          var args = cljs.core.rest(arglist__529328);
          return G__529327__delegate(x, y, z, args)
        };
        G__529327.cljs$core$IFn$_invoke$arity$variadic = G__529327__delegate;
        return G__529327
      }();
      ep3 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return ep3__0.call(this);
          case 1:
            return ep3__1.call(this, x);
          case 2:
            return ep3__2.call(this, x, y);
          case 3:
            return ep3__3.call(this, x, y, z);
          default:
            return ep3__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3))
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      ep3.cljs$lang$maxFixedArity = 3;
      ep3.cljs$lang$applyTo = ep3__4.cljs$lang$applyTo;
      ep3.cljs$core$IFn$_invoke$arity$0 = ep3__0;
      ep3.cljs$core$IFn$_invoke$arity$1 = ep3__1;
      ep3.cljs$core$IFn$_invoke$arity$2 = ep3__2;
      ep3.cljs$core$IFn$_invoke$arity$3 = ep3__3;
      ep3.cljs$core$IFn$_invoke$arity$variadic = ep3__4.cljs$core$IFn$_invoke$arity$variadic;
      return ep3
    }()
  };
  var every_pred__4 = function() {
    var G__529329__delegate = function(p1, p2, p3, ps) {
      var ps__$1 = cljs.core.list_STAR_.call(null, p1, p2, p3, ps);
      return function() {
        var epn = null;
        var epn__0 = function() {
          return true
        };
        var epn__1 = function(x) {
          return cljs.core.every_QMARK_.call(null, function(p1__529319_SHARP_) {
            return p1__529319_SHARP_.call(null, x)
          }, ps__$1)
        };
        var epn__2 = function(x, y) {
          return cljs.core.every_QMARK_.call(null, function(p1__529320_SHARP_) {
            var and__3273__auto__ = p1__529320_SHARP_.call(null, x);
            if(cljs.core.truth_(and__3273__auto__)) {
              return p1__529320_SHARP_.call(null, y)
            }else {
              return and__3273__auto__
            }
          }, ps__$1)
        };
        var epn__3 = function(x, y, z) {
          return cljs.core.every_QMARK_.call(null, function(p1__529321_SHARP_) {
            var and__3273__auto__ = p1__529321_SHARP_.call(null, x);
            if(cljs.core.truth_(and__3273__auto__)) {
              var and__3273__auto____$1 = p1__529321_SHARP_.call(null, y);
              if(cljs.core.truth_(and__3273__auto____$1)) {
                return p1__529321_SHARP_.call(null, z)
              }else {
                return and__3273__auto____$1
              }
            }else {
              return and__3273__auto__
            }
          }, ps__$1)
        };
        var epn__4 = function() {
          var G__529330__delegate = function(x, y, z, args) {
            return cljs.core.boolean$.call(null, epn.call(null, x, y, z) && cljs.core.every_QMARK_.call(null, function(p1__529322_SHARP_) {
              return cljs.core.every_QMARK_.call(null, p1__529322_SHARP_, args)
            }, ps__$1))
          };
          var G__529330 = function(x, y, z, var_args) {
            var args = null;
            if(arguments.length > 3) {
              args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
            }
            return G__529330__delegate.call(this, x, y, z, args)
          };
          G__529330.cljs$lang$maxFixedArity = 3;
          G__529330.cljs$lang$applyTo = function(arglist__529331) {
            var x = cljs.core.first(arglist__529331);
            arglist__529331 = cljs.core.next(arglist__529331);
            var y = cljs.core.first(arglist__529331);
            arglist__529331 = cljs.core.next(arglist__529331);
            var z = cljs.core.first(arglist__529331);
            var args = cljs.core.rest(arglist__529331);
            return G__529330__delegate(x, y, z, args)
          };
          G__529330.cljs$core$IFn$_invoke$arity$variadic = G__529330__delegate;
          return G__529330
        }();
        epn = function(x, y, z, var_args) {
          var args = var_args;
          switch(arguments.length) {
            case 0:
              return epn__0.call(this);
            case 1:
              return epn__1.call(this, x);
            case 2:
              return epn__2.call(this, x, y);
            case 3:
              return epn__3.call(this, x, y, z);
            default:
              return epn__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3))
          }
          throw new Error("Invalid arity: " + arguments.length);
        };
        epn.cljs$lang$maxFixedArity = 3;
        epn.cljs$lang$applyTo = epn__4.cljs$lang$applyTo;
        epn.cljs$core$IFn$_invoke$arity$0 = epn__0;
        epn.cljs$core$IFn$_invoke$arity$1 = epn__1;
        epn.cljs$core$IFn$_invoke$arity$2 = epn__2;
        epn.cljs$core$IFn$_invoke$arity$3 = epn__3;
        epn.cljs$core$IFn$_invoke$arity$variadic = epn__4.cljs$core$IFn$_invoke$arity$variadic;
        return epn
      }()
    };
    var G__529329 = function(p1, p2, p3, var_args) {
      var ps = null;
      if(arguments.length > 3) {
        ps = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
      }
      return G__529329__delegate.call(this, p1, p2, p3, ps)
    };
    G__529329.cljs$lang$maxFixedArity = 3;
    G__529329.cljs$lang$applyTo = function(arglist__529332) {
      var p1 = cljs.core.first(arglist__529332);
      arglist__529332 = cljs.core.next(arglist__529332);
      var p2 = cljs.core.first(arglist__529332);
      arglist__529332 = cljs.core.next(arglist__529332);
      var p3 = cljs.core.first(arglist__529332);
      var ps = cljs.core.rest(arglist__529332);
      return G__529329__delegate(p1, p2, p3, ps)
    };
    G__529329.cljs$core$IFn$_invoke$arity$variadic = G__529329__delegate;
    return G__529329
  }();
  every_pred = function(p1, p2, p3, var_args) {
    var ps = var_args;
    switch(arguments.length) {
      case 1:
        return every_pred__1.call(this, p1);
      case 2:
        return every_pred__2.call(this, p1, p2);
      case 3:
        return every_pred__3.call(this, p1, p2, p3);
      default:
        return every_pred__4.cljs$core$IFn$_invoke$arity$variadic(p1, p2, p3, cljs.core.array_seq(arguments, 3))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  every_pred.cljs$lang$maxFixedArity = 3;
  every_pred.cljs$lang$applyTo = every_pred__4.cljs$lang$applyTo;
  every_pred.cljs$core$IFn$_invoke$arity$1 = every_pred__1;
  every_pred.cljs$core$IFn$_invoke$arity$2 = every_pred__2;
  every_pred.cljs$core$IFn$_invoke$arity$3 = every_pred__3;
  every_pred.cljs$core$IFn$_invoke$arity$variadic = every_pred__4.cljs$core$IFn$_invoke$arity$variadic;
  return every_pred
}();
cljs.core.some_fn = function() {
  var some_fn = null;
  var some_fn__1 = function(p) {
    return function() {
      var sp1 = null;
      var sp1__0 = function() {
        return null
      };
      var sp1__1 = function(x) {
        return p.call(null, x)
      };
      var sp1__2 = function(x, y) {
        var or__3285__auto__ = p.call(null, x);
        if(cljs.core.truth_(or__3285__auto__)) {
          return or__3285__auto__
        }else {
          return p.call(null, y)
        }
      };
      var sp1__3 = function(x, y, z) {
        var or__3285__auto__ = p.call(null, x);
        if(cljs.core.truth_(or__3285__auto__)) {
          return or__3285__auto__
        }else {
          var or__3285__auto____$1 = p.call(null, y);
          if(cljs.core.truth_(or__3285__auto____$1)) {
            return or__3285__auto____$1
          }else {
            return p.call(null, z)
          }
        }
      };
      var sp1__4 = function() {
        var G__529339__delegate = function(x, y, z, args) {
          var or__3285__auto__ = sp1.call(null, x, y, z);
          if(cljs.core.truth_(or__3285__auto__)) {
            return or__3285__auto__
          }else {
            return cljs.core.some.call(null, p, args)
          }
        };
        var G__529339 = function(x, y, z, var_args) {
          var args = null;
          if(arguments.length > 3) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
          }
          return G__529339__delegate.call(this, x, y, z, args)
        };
        G__529339.cljs$lang$maxFixedArity = 3;
        G__529339.cljs$lang$applyTo = function(arglist__529340) {
          var x = cljs.core.first(arglist__529340);
          arglist__529340 = cljs.core.next(arglist__529340);
          var y = cljs.core.first(arglist__529340);
          arglist__529340 = cljs.core.next(arglist__529340);
          var z = cljs.core.first(arglist__529340);
          var args = cljs.core.rest(arglist__529340);
          return G__529339__delegate(x, y, z, args)
        };
        G__529339.cljs$core$IFn$_invoke$arity$variadic = G__529339__delegate;
        return G__529339
      }();
      sp1 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return sp1__0.call(this);
          case 1:
            return sp1__1.call(this, x);
          case 2:
            return sp1__2.call(this, x, y);
          case 3:
            return sp1__3.call(this, x, y, z);
          default:
            return sp1__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3))
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      sp1.cljs$lang$maxFixedArity = 3;
      sp1.cljs$lang$applyTo = sp1__4.cljs$lang$applyTo;
      sp1.cljs$core$IFn$_invoke$arity$0 = sp1__0;
      sp1.cljs$core$IFn$_invoke$arity$1 = sp1__1;
      sp1.cljs$core$IFn$_invoke$arity$2 = sp1__2;
      sp1.cljs$core$IFn$_invoke$arity$3 = sp1__3;
      sp1.cljs$core$IFn$_invoke$arity$variadic = sp1__4.cljs$core$IFn$_invoke$arity$variadic;
      return sp1
    }()
  };
  var some_fn__2 = function(p1, p2) {
    return function() {
      var sp2 = null;
      var sp2__0 = function() {
        return null
      };
      var sp2__1 = function(x) {
        var or__3285__auto__ = p1.call(null, x);
        if(cljs.core.truth_(or__3285__auto__)) {
          return or__3285__auto__
        }else {
          return p2.call(null, x)
        }
      };
      var sp2__2 = function(x, y) {
        var or__3285__auto__ = p1.call(null, x);
        if(cljs.core.truth_(or__3285__auto__)) {
          return or__3285__auto__
        }else {
          var or__3285__auto____$1 = p1.call(null, y);
          if(cljs.core.truth_(or__3285__auto____$1)) {
            return or__3285__auto____$1
          }else {
            var or__3285__auto____$2 = p2.call(null, x);
            if(cljs.core.truth_(or__3285__auto____$2)) {
              return or__3285__auto____$2
            }else {
              return p2.call(null, y)
            }
          }
        }
      };
      var sp2__3 = function(x, y, z) {
        var or__3285__auto__ = p1.call(null, x);
        if(cljs.core.truth_(or__3285__auto__)) {
          return or__3285__auto__
        }else {
          var or__3285__auto____$1 = p1.call(null, y);
          if(cljs.core.truth_(or__3285__auto____$1)) {
            return or__3285__auto____$1
          }else {
            var or__3285__auto____$2 = p1.call(null, z);
            if(cljs.core.truth_(or__3285__auto____$2)) {
              return or__3285__auto____$2
            }else {
              var or__3285__auto____$3 = p2.call(null, x);
              if(cljs.core.truth_(or__3285__auto____$3)) {
                return or__3285__auto____$3
              }else {
                var or__3285__auto____$4 = p2.call(null, y);
                if(cljs.core.truth_(or__3285__auto____$4)) {
                  return or__3285__auto____$4
                }else {
                  return p2.call(null, z)
                }
              }
            }
          }
        }
      };
      var sp2__4 = function() {
        var G__529341__delegate = function(x, y, z, args) {
          var or__3285__auto__ = sp2.call(null, x, y, z);
          if(cljs.core.truth_(or__3285__auto__)) {
            return or__3285__auto__
          }else {
            return cljs.core.some.call(null, function(p1__529333_SHARP_) {
              var or__3285__auto____$1 = p1.call(null, p1__529333_SHARP_);
              if(cljs.core.truth_(or__3285__auto____$1)) {
                return or__3285__auto____$1
              }else {
                return p2.call(null, p1__529333_SHARP_)
              }
            }, args)
          }
        };
        var G__529341 = function(x, y, z, var_args) {
          var args = null;
          if(arguments.length > 3) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
          }
          return G__529341__delegate.call(this, x, y, z, args)
        };
        G__529341.cljs$lang$maxFixedArity = 3;
        G__529341.cljs$lang$applyTo = function(arglist__529342) {
          var x = cljs.core.first(arglist__529342);
          arglist__529342 = cljs.core.next(arglist__529342);
          var y = cljs.core.first(arglist__529342);
          arglist__529342 = cljs.core.next(arglist__529342);
          var z = cljs.core.first(arglist__529342);
          var args = cljs.core.rest(arglist__529342);
          return G__529341__delegate(x, y, z, args)
        };
        G__529341.cljs$core$IFn$_invoke$arity$variadic = G__529341__delegate;
        return G__529341
      }();
      sp2 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return sp2__0.call(this);
          case 1:
            return sp2__1.call(this, x);
          case 2:
            return sp2__2.call(this, x, y);
          case 3:
            return sp2__3.call(this, x, y, z);
          default:
            return sp2__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3))
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      sp2.cljs$lang$maxFixedArity = 3;
      sp2.cljs$lang$applyTo = sp2__4.cljs$lang$applyTo;
      sp2.cljs$core$IFn$_invoke$arity$0 = sp2__0;
      sp2.cljs$core$IFn$_invoke$arity$1 = sp2__1;
      sp2.cljs$core$IFn$_invoke$arity$2 = sp2__2;
      sp2.cljs$core$IFn$_invoke$arity$3 = sp2__3;
      sp2.cljs$core$IFn$_invoke$arity$variadic = sp2__4.cljs$core$IFn$_invoke$arity$variadic;
      return sp2
    }()
  };
  var some_fn__3 = function(p1, p2, p3) {
    return function() {
      var sp3 = null;
      var sp3__0 = function() {
        return null
      };
      var sp3__1 = function(x) {
        var or__3285__auto__ = p1.call(null, x);
        if(cljs.core.truth_(or__3285__auto__)) {
          return or__3285__auto__
        }else {
          var or__3285__auto____$1 = p2.call(null, x);
          if(cljs.core.truth_(or__3285__auto____$1)) {
            return or__3285__auto____$1
          }else {
            return p3.call(null, x)
          }
        }
      };
      var sp3__2 = function(x, y) {
        var or__3285__auto__ = p1.call(null, x);
        if(cljs.core.truth_(or__3285__auto__)) {
          return or__3285__auto__
        }else {
          var or__3285__auto____$1 = p2.call(null, x);
          if(cljs.core.truth_(or__3285__auto____$1)) {
            return or__3285__auto____$1
          }else {
            var or__3285__auto____$2 = p3.call(null, x);
            if(cljs.core.truth_(or__3285__auto____$2)) {
              return or__3285__auto____$2
            }else {
              var or__3285__auto____$3 = p1.call(null, y);
              if(cljs.core.truth_(or__3285__auto____$3)) {
                return or__3285__auto____$3
              }else {
                var or__3285__auto____$4 = p2.call(null, y);
                if(cljs.core.truth_(or__3285__auto____$4)) {
                  return or__3285__auto____$4
                }else {
                  return p3.call(null, y)
                }
              }
            }
          }
        }
      };
      var sp3__3 = function(x, y, z) {
        var or__3285__auto__ = p1.call(null, x);
        if(cljs.core.truth_(or__3285__auto__)) {
          return or__3285__auto__
        }else {
          var or__3285__auto____$1 = p2.call(null, x);
          if(cljs.core.truth_(or__3285__auto____$1)) {
            return or__3285__auto____$1
          }else {
            var or__3285__auto____$2 = p3.call(null, x);
            if(cljs.core.truth_(or__3285__auto____$2)) {
              return or__3285__auto____$2
            }else {
              var or__3285__auto____$3 = p1.call(null, y);
              if(cljs.core.truth_(or__3285__auto____$3)) {
                return or__3285__auto____$3
              }else {
                var or__3285__auto____$4 = p2.call(null, y);
                if(cljs.core.truth_(or__3285__auto____$4)) {
                  return or__3285__auto____$4
                }else {
                  var or__3285__auto____$5 = p3.call(null, y);
                  if(cljs.core.truth_(or__3285__auto____$5)) {
                    return or__3285__auto____$5
                  }else {
                    var or__3285__auto____$6 = p1.call(null, z);
                    if(cljs.core.truth_(or__3285__auto____$6)) {
                      return or__3285__auto____$6
                    }else {
                      var or__3285__auto____$7 = p2.call(null, z);
                      if(cljs.core.truth_(or__3285__auto____$7)) {
                        return or__3285__auto____$7
                      }else {
                        return p3.call(null, z)
                      }
                    }
                  }
                }
              }
            }
          }
        }
      };
      var sp3__4 = function() {
        var G__529343__delegate = function(x, y, z, args) {
          var or__3285__auto__ = sp3.call(null, x, y, z);
          if(cljs.core.truth_(or__3285__auto__)) {
            return or__3285__auto__
          }else {
            return cljs.core.some.call(null, function(p1__529334_SHARP_) {
              var or__3285__auto____$1 = p1.call(null, p1__529334_SHARP_);
              if(cljs.core.truth_(or__3285__auto____$1)) {
                return or__3285__auto____$1
              }else {
                var or__3285__auto____$2 = p2.call(null, p1__529334_SHARP_);
                if(cljs.core.truth_(or__3285__auto____$2)) {
                  return or__3285__auto____$2
                }else {
                  return p3.call(null, p1__529334_SHARP_)
                }
              }
            }, args)
          }
        };
        var G__529343 = function(x, y, z, var_args) {
          var args = null;
          if(arguments.length > 3) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
          }
          return G__529343__delegate.call(this, x, y, z, args)
        };
        G__529343.cljs$lang$maxFixedArity = 3;
        G__529343.cljs$lang$applyTo = function(arglist__529344) {
          var x = cljs.core.first(arglist__529344);
          arglist__529344 = cljs.core.next(arglist__529344);
          var y = cljs.core.first(arglist__529344);
          arglist__529344 = cljs.core.next(arglist__529344);
          var z = cljs.core.first(arglist__529344);
          var args = cljs.core.rest(arglist__529344);
          return G__529343__delegate(x, y, z, args)
        };
        G__529343.cljs$core$IFn$_invoke$arity$variadic = G__529343__delegate;
        return G__529343
      }();
      sp3 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return sp3__0.call(this);
          case 1:
            return sp3__1.call(this, x);
          case 2:
            return sp3__2.call(this, x, y);
          case 3:
            return sp3__3.call(this, x, y, z);
          default:
            return sp3__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3))
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      sp3.cljs$lang$maxFixedArity = 3;
      sp3.cljs$lang$applyTo = sp3__4.cljs$lang$applyTo;
      sp3.cljs$core$IFn$_invoke$arity$0 = sp3__0;
      sp3.cljs$core$IFn$_invoke$arity$1 = sp3__1;
      sp3.cljs$core$IFn$_invoke$arity$2 = sp3__2;
      sp3.cljs$core$IFn$_invoke$arity$3 = sp3__3;
      sp3.cljs$core$IFn$_invoke$arity$variadic = sp3__4.cljs$core$IFn$_invoke$arity$variadic;
      return sp3
    }()
  };
  var some_fn__4 = function() {
    var G__529345__delegate = function(p1, p2, p3, ps) {
      var ps__$1 = cljs.core.list_STAR_.call(null, p1, p2, p3, ps);
      return function() {
        var spn = null;
        var spn__0 = function() {
          return null
        };
        var spn__1 = function(x) {
          return cljs.core.some.call(null, function(p1__529335_SHARP_) {
            return p1__529335_SHARP_.call(null, x)
          }, ps__$1)
        };
        var spn__2 = function(x, y) {
          return cljs.core.some.call(null, function(p1__529336_SHARP_) {
            var or__3285__auto__ = p1__529336_SHARP_.call(null, x);
            if(cljs.core.truth_(or__3285__auto__)) {
              return or__3285__auto__
            }else {
              return p1__529336_SHARP_.call(null, y)
            }
          }, ps__$1)
        };
        var spn__3 = function(x, y, z) {
          return cljs.core.some.call(null, function(p1__529337_SHARP_) {
            var or__3285__auto__ = p1__529337_SHARP_.call(null, x);
            if(cljs.core.truth_(or__3285__auto__)) {
              return or__3285__auto__
            }else {
              var or__3285__auto____$1 = p1__529337_SHARP_.call(null, y);
              if(cljs.core.truth_(or__3285__auto____$1)) {
                return or__3285__auto____$1
              }else {
                return p1__529337_SHARP_.call(null, z)
              }
            }
          }, ps__$1)
        };
        var spn__4 = function() {
          var G__529346__delegate = function(x, y, z, args) {
            var or__3285__auto__ = spn.call(null, x, y, z);
            if(cljs.core.truth_(or__3285__auto__)) {
              return or__3285__auto__
            }else {
              return cljs.core.some.call(null, function(p1__529338_SHARP_) {
                return cljs.core.some.call(null, p1__529338_SHARP_, args)
              }, ps__$1)
            }
          };
          var G__529346 = function(x, y, z, var_args) {
            var args = null;
            if(arguments.length > 3) {
              args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
            }
            return G__529346__delegate.call(this, x, y, z, args)
          };
          G__529346.cljs$lang$maxFixedArity = 3;
          G__529346.cljs$lang$applyTo = function(arglist__529347) {
            var x = cljs.core.first(arglist__529347);
            arglist__529347 = cljs.core.next(arglist__529347);
            var y = cljs.core.first(arglist__529347);
            arglist__529347 = cljs.core.next(arglist__529347);
            var z = cljs.core.first(arglist__529347);
            var args = cljs.core.rest(arglist__529347);
            return G__529346__delegate(x, y, z, args)
          };
          G__529346.cljs$core$IFn$_invoke$arity$variadic = G__529346__delegate;
          return G__529346
        }();
        spn = function(x, y, z, var_args) {
          var args = var_args;
          switch(arguments.length) {
            case 0:
              return spn__0.call(this);
            case 1:
              return spn__1.call(this, x);
            case 2:
              return spn__2.call(this, x, y);
            case 3:
              return spn__3.call(this, x, y, z);
            default:
              return spn__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3))
          }
          throw new Error("Invalid arity: " + arguments.length);
        };
        spn.cljs$lang$maxFixedArity = 3;
        spn.cljs$lang$applyTo = spn__4.cljs$lang$applyTo;
        spn.cljs$core$IFn$_invoke$arity$0 = spn__0;
        spn.cljs$core$IFn$_invoke$arity$1 = spn__1;
        spn.cljs$core$IFn$_invoke$arity$2 = spn__2;
        spn.cljs$core$IFn$_invoke$arity$3 = spn__3;
        spn.cljs$core$IFn$_invoke$arity$variadic = spn__4.cljs$core$IFn$_invoke$arity$variadic;
        return spn
      }()
    };
    var G__529345 = function(p1, p2, p3, var_args) {
      var ps = null;
      if(arguments.length > 3) {
        ps = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
      }
      return G__529345__delegate.call(this, p1, p2, p3, ps)
    };
    G__529345.cljs$lang$maxFixedArity = 3;
    G__529345.cljs$lang$applyTo = function(arglist__529348) {
      var p1 = cljs.core.first(arglist__529348);
      arglist__529348 = cljs.core.next(arglist__529348);
      var p2 = cljs.core.first(arglist__529348);
      arglist__529348 = cljs.core.next(arglist__529348);
      var p3 = cljs.core.first(arglist__529348);
      var ps = cljs.core.rest(arglist__529348);
      return G__529345__delegate(p1, p2, p3, ps)
    };
    G__529345.cljs$core$IFn$_invoke$arity$variadic = G__529345__delegate;
    return G__529345
  }();
  some_fn = function(p1, p2, p3, var_args) {
    var ps = var_args;
    switch(arguments.length) {
      case 1:
        return some_fn__1.call(this, p1);
      case 2:
        return some_fn__2.call(this, p1, p2);
      case 3:
        return some_fn__3.call(this, p1, p2, p3);
      default:
        return some_fn__4.cljs$core$IFn$_invoke$arity$variadic(p1, p2, p3, cljs.core.array_seq(arguments, 3))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  some_fn.cljs$lang$maxFixedArity = 3;
  some_fn.cljs$lang$applyTo = some_fn__4.cljs$lang$applyTo;
  some_fn.cljs$core$IFn$_invoke$arity$1 = some_fn__1;
  some_fn.cljs$core$IFn$_invoke$arity$2 = some_fn__2;
  some_fn.cljs$core$IFn$_invoke$arity$3 = some_fn__3;
  some_fn.cljs$core$IFn$_invoke$arity$variadic = some_fn__4.cljs$core$IFn$_invoke$arity$variadic;
  return some_fn
}();
cljs.core.map = function() {
  var map = null;
  var map__2 = function(f, coll) {
    return new cljs.core.LazySeq(null, function() {
      var temp__4092__auto__ = cljs.core.seq.call(null, coll);
      if(temp__4092__auto__) {
        var s = temp__4092__auto__;
        if(cljs.core.chunked_seq_QMARK_.call(null, s)) {
          var c = cljs.core.chunk_first.call(null, s);
          var size = cljs.core.count.call(null, c);
          var b = cljs.core.chunk_buffer.call(null, size);
          var n__4108__auto___529350 = size;
          var i_529351 = 0;
          while(true) {
            if(i_529351 < n__4108__auto___529350) {
              cljs.core.chunk_append.call(null, b, f.call(null, cljs.core._nth.call(null, c, i_529351)));
              var G__529352 = i_529351 + 1;
              i_529351 = G__529352;
              continue
            }else {
            }
            break
          }
          return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b), map.call(null, f, cljs.core.chunk_rest.call(null, s)))
        }else {
          return cljs.core.cons.call(null, f.call(null, cljs.core.first.call(null, s)), map.call(null, f, cljs.core.rest.call(null, s)))
        }
      }else {
        return null
      }
    }, null, null)
  };
  var map__3 = function(f, c1, c2) {
    return new cljs.core.LazySeq(null, function() {
      var s1 = cljs.core.seq.call(null, c1);
      var s2 = cljs.core.seq.call(null, c2);
      if(s1 && s2) {
        return cljs.core.cons.call(null, f.call(null, cljs.core.first.call(null, s1), cljs.core.first.call(null, s2)), map.call(null, f, cljs.core.rest.call(null, s1), cljs.core.rest.call(null, s2)))
      }else {
        return null
      }
    }, null, null)
  };
  var map__4 = function(f, c1, c2, c3) {
    return new cljs.core.LazySeq(null, function() {
      var s1 = cljs.core.seq.call(null, c1);
      var s2 = cljs.core.seq.call(null, c2);
      var s3 = cljs.core.seq.call(null, c3);
      if(s1 && s2 && s3) {
        return cljs.core.cons.call(null, f.call(null, cljs.core.first.call(null, s1), cljs.core.first.call(null, s2), cljs.core.first.call(null, s3)), map.call(null, f, cljs.core.rest.call(null, s1), cljs.core.rest.call(null, s2), cljs.core.rest.call(null, s3)))
      }else {
        return null
      }
    }, null, null)
  };
  var map__5 = function() {
    var G__529353__delegate = function(f, c1, c2, c3, colls) {
      var step = function step(cs) {
        return new cljs.core.LazySeq(null, function() {
          var ss = map.call(null, cljs.core.seq, cs);
          if(cljs.core.every_QMARK_.call(null, cljs.core.identity, ss)) {
            return cljs.core.cons.call(null, map.call(null, cljs.core.first, ss), step.call(null, map.call(null, cljs.core.rest, ss)))
          }else {
            return null
          }
        }, null, null)
      };
      return map.call(null, function(p1__529349_SHARP_) {
        return cljs.core.apply.call(null, f, p1__529349_SHARP_)
      }, step.call(null, cljs.core.conj.call(null, colls, c3, c2, c1)))
    };
    var G__529353 = function(f, c1, c2, c3, var_args) {
      var colls = null;
      if(arguments.length > 4) {
        colls = cljs.core.array_seq(Array.prototype.slice.call(arguments, 4), 0)
      }
      return G__529353__delegate.call(this, f, c1, c2, c3, colls)
    };
    G__529353.cljs$lang$maxFixedArity = 4;
    G__529353.cljs$lang$applyTo = function(arglist__529354) {
      var f = cljs.core.first(arglist__529354);
      arglist__529354 = cljs.core.next(arglist__529354);
      var c1 = cljs.core.first(arglist__529354);
      arglist__529354 = cljs.core.next(arglist__529354);
      var c2 = cljs.core.first(arglist__529354);
      arglist__529354 = cljs.core.next(arglist__529354);
      var c3 = cljs.core.first(arglist__529354);
      var colls = cljs.core.rest(arglist__529354);
      return G__529353__delegate(f, c1, c2, c3, colls)
    };
    G__529353.cljs$core$IFn$_invoke$arity$variadic = G__529353__delegate;
    return G__529353
  }();
  map = function(f, c1, c2, c3, var_args) {
    var colls = var_args;
    switch(arguments.length) {
      case 2:
        return map__2.call(this, f, c1);
      case 3:
        return map__3.call(this, f, c1, c2);
      case 4:
        return map__4.call(this, f, c1, c2, c3);
      default:
        return map__5.cljs$core$IFn$_invoke$arity$variadic(f, c1, c2, c3, cljs.core.array_seq(arguments, 4))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  map.cljs$lang$maxFixedArity = 4;
  map.cljs$lang$applyTo = map__5.cljs$lang$applyTo;
  map.cljs$core$IFn$_invoke$arity$2 = map__2;
  map.cljs$core$IFn$_invoke$arity$3 = map__3;
  map.cljs$core$IFn$_invoke$arity$4 = map__4;
  map.cljs$core$IFn$_invoke$arity$variadic = map__5.cljs$core$IFn$_invoke$arity$variadic;
  return map
}();
cljs.core.take = function take(n, coll) {
  return new cljs.core.LazySeq(null, function() {
    if(n > 0) {
      var temp__4092__auto__ = cljs.core.seq.call(null, coll);
      if(temp__4092__auto__) {
        var s = temp__4092__auto__;
        return cljs.core.cons.call(null, cljs.core.first.call(null, s), take.call(null, n - 1, cljs.core.rest.call(null, s)))
      }else {
        return null
      }
    }else {
      return null
    }
  }, null, null)
};
cljs.core.drop = function drop(n, coll) {
  var step = function(n__$1, coll__$1) {
    while(true) {
      var s = cljs.core.seq.call(null, coll__$1);
      if(n__$1 > 0 && s) {
        var G__529355 = n__$1 - 1;
        var G__529356 = cljs.core.rest.call(null, s);
        n__$1 = G__529355;
        coll__$1 = G__529356;
        continue
      }else {
        return s
      }
      break
    }
  };
  return new cljs.core.LazySeq(null, function() {
    return step.call(null, n, coll)
  }, null, null)
};
cljs.core.drop_last = function() {
  var drop_last = null;
  var drop_last__1 = function(s) {
    return drop_last.call(null, 1, s)
  };
  var drop_last__2 = function(n, s) {
    return cljs.core.map.call(null, function(x, _) {
      return x
    }, s, cljs.core.drop.call(null, n, s))
  };
  drop_last = function(n, s) {
    switch(arguments.length) {
      case 1:
        return drop_last__1.call(this, n);
      case 2:
        return drop_last__2.call(this, n, s)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  drop_last.cljs$core$IFn$_invoke$arity$1 = drop_last__1;
  drop_last.cljs$core$IFn$_invoke$arity$2 = drop_last__2;
  return drop_last
}();
cljs.core.take_last = function take_last(n, coll) {
  var s = cljs.core.seq.call(null, coll);
  var lead = cljs.core.seq.call(null, cljs.core.drop.call(null, n, coll));
  while(true) {
    if(lead) {
      var G__529357 = cljs.core.next.call(null, s);
      var G__529358 = cljs.core.next.call(null, lead);
      s = G__529357;
      lead = G__529358;
      continue
    }else {
      return s
    }
    break
  }
};
cljs.core.drop_while = function drop_while(pred, coll) {
  var step = function(pred__$1, coll__$1) {
    while(true) {
      var s = cljs.core.seq.call(null, coll__$1);
      if(cljs.core.truth_(function() {
        var and__3273__auto__ = s;
        if(and__3273__auto__) {
          return pred__$1.call(null, cljs.core.first.call(null, s))
        }else {
          return and__3273__auto__
        }
      }())) {
        var G__529359 = pred__$1;
        var G__529360 = cljs.core.rest.call(null, s);
        pred__$1 = G__529359;
        coll__$1 = G__529360;
        continue
      }else {
        return s
      }
      break
    }
  };
  return new cljs.core.LazySeq(null, function() {
    return step.call(null, pred, coll)
  }, null, null)
};
cljs.core.cycle = function cycle(coll) {
  return new cljs.core.LazySeq(null, function() {
    var temp__4092__auto__ = cljs.core.seq.call(null, coll);
    if(temp__4092__auto__) {
      var s = temp__4092__auto__;
      return cljs.core.concat.call(null, s, cycle.call(null, s))
    }else {
      return null
    }
  }, null, null)
};
cljs.core.split_at = function split_at(n, coll) {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.take.call(null, n, coll), cljs.core.drop.call(null, n, coll)], null)
};
cljs.core.repeat = function() {
  var repeat = null;
  var repeat__1 = function(x) {
    return new cljs.core.LazySeq(null, function() {
      return cljs.core.cons.call(null, x, repeat.call(null, x))
    }, null, null)
  };
  var repeat__2 = function(n, x) {
    return cljs.core.take.call(null, n, repeat.call(null, x))
  };
  repeat = function(n, x) {
    switch(arguments.length) {
      case 1:
        return repeat__1.call(this, n);
      case 2:
        return repeat__2.call(this, n, x)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  repeat.cljs$core$IFn$_invoke$arity$1 = repeat__1;
  repeat.cljs$core$IFn$_invoke$arity$2 = repeat__2;
  return repeat
}();
cljs.core.replicate = function replicate(n, x) {
  return cljs.core.take.call(null, n, cljs.core.repeat.call(null, x))
};
cljs.core.repeatedly = function() {
  var repeatedly = null;
  var repeatedly__1 = function(f) {
    return new cljs.core.LazySeq(null, function() {
      return cljs.core.cons.call(null, f.call(null), repeatedly.call(null, f))
    }, null, null)
  };
  var repeatedly__2 = function(n, f) {
    return cljs.core.take.call(null, n, repeatedly.call(null, f))
  };
  repeatedly = function(n, f) {
    switch(arguments.length) {
      case 1:
        return repeatedly__1.call(this, n);
      case 2:
        return repeatedly__2.call(this, n, f)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  repeatedly.cljs$core$IFn$_invoke$arity$1 = repeatedly__1;
  repeatedly.cljs$core$IFn$_invoke$arity$2 = repeatedly__2;
  return repeatedly
}();
cljs.core.iterate = function iterate(f, x) {
  return cljs.core.cons.call(null, x, new cljs.core.LazySeq(null, function() {
    return iterate.call(null, f, f.call(null, x))
  }, null, null))
};
cljs.core.interleave = function() {
  var interleave = null;
  var interleave__2 = function(c1, c2) {
    return new cljs.core.LazySeq(null, function() {
      var s1 = cljs.core.seq.call(null, c1);
      var s2 = cljs.core.seq.call(null, c2);
      if(s1 && s2) {
        return cljs.core.cons.call(null, cljs.core.first.call(null, s1), cljs.core.cons.call(null, cljs.core.first.call(null, s2), interleave.call(null, cljs.core.rest.call(null, s1), cljs.core.rest.call(null, s2))))
      }else {
        return null
      }
    }, null, null)
  };
  var interleave__3 = function() {
    var G__529361__delegate = function(c1, c2, colls) {
      return new cljs.core.LazySeq(null, function() {
        var ss = cljs.core.map.call(null, cljs.core.seq, cljs.core.conj.call(null, colls, c2, c1));
        if(cljs.core.every_QMARK_.call(null, cljs.core.identity, ss)) {
          return cljs.core.concat.call(null, cljs.core.map.call(null, cljs.core.first, ss), cljs.core.apply.call(null, interleave, cljs.core.map.call(null, cljs.core.rest, ss)))
        }else {
          return null
        }
      }, null, null)
    };
    var G__529361 = function(c1, c2, var_args) {
      var colls = null;
      if(arguments.length > 2) {
        colls = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__529361__delegate.call(this, c1, c2, colls)
    };
    G__529361.cljs$lang$maxFixedArity = 2;
    G__529361.cljs$lang$applyTo = function(arglist__529362) {
      var c1 = cljs.core.first(arglist__529362);
      arglist__529362 = cljs.core.next(arglist__529362);
      var c2 = cljs.core.first(arglist__529362);
      var colls = cljs.core.rest(arglist__529362);
      return G__529361__delegate(c1, c2, colls)
    };
    G__529361.cljs$core$IFn$_invoke$arity$variadic = G__529361__delegate;
    return G__529361
  }();
  interleave = function(c1, c2, var_args) {
    var colls = var_args;
    switch(arguments.length) {
      case 2:
        return interleave__2.call(this, c1, c2);
      default:
        return interleave__3.cljs$core$IFn$_invoke$arity$variadic(c1, c2, cljs.core.array_seq(arguments, 2))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  interleave.cljs$lang$maxFixedArity = 2;
  interleave.cljs$lang$applyTo = interleave__3.cljs$lang$applyTo;
  interleave.cljs$core$IFn$_invoke$arity$2 = interleave__2;
  interleave.cljs$core$IFn$_invoke$arity$variadic = interleave__3.cljs$core$IFn$_invoke$arity$variadic;
  return interleave
}();
cljs.core.interpose = function interpose(sep, coll) {
  return cljs.core.drop.call(null, 1, cljs.core.interleave.call(null, cljs.core.repeat.call(null, sep), coll))
};
cljs.core.flatten1 = function flatten1(colls) {
  var cat = function cat(coll, colls__$1) {
    return new cljs.core.LazySeq(null, function() {
      var temp__4090__auto__ = cljs.core.seq.call(null, coll);
      if(temp__4090__auto__) {
        var coll__$1 = temp__4090__auto__;
        return cljs.core.cons.call(null, cljs.core.first.call(null, coll__$1), cat.call(null, cljs.core.rest.call(null, coll__$1), colls__$1))
      }else {
        if(cljs.core.seq.call(null, colls__$1)) {
          return cat.call(null, cljs.core.first.call(null, colls__$1), cljs.core.rest.call(null, colls__$1))
        }else {
          return null
        }
      }
    }, null, null)
  };
  return cat.call(null, null, colls)
};
cljs.core.mapcat = function() {
  var mapcat = null;
  var mapcat__2 = function(f, coll) {
    return cljs.core.flatten1.call(null, cljs.core.map.call(null, f, coll))
  };
  var mapcat__3 = function() {
    var G__529363__delegate = function(f, coll, colls) {
      return cljs.core.flatten1.call(null, cljs.core.apply.call(null, cljs.core.map, f, coll, colls))
    };
    var G__529363 = function(f, coll, var_args) {
      var colls = null;
      if(arguments.length > 2) {
        colls = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__529363__delegate.call(this, f, coll, colls)
    };
    G__529363.cljs$lang$maxFixedArity = 2;
    G__529363.cljs$lang$applyTo = function(arglist__529364) {
      var f = cljs.core.first(arglist__529364);
      arglist__529364 = cljs.core.next(arglist__529364);
      var coll = cljs.core.first(arglist__529364);
      var colls = cljs.core.rest(arglist__529364);
      return G__529363__delegate(f, coll, colls)
    };
    G__529363.cljs$core$IFn$_invoke$arity$variadic = G__529363__delegate;
    return G__529363
  }();
  mapcat = function(f, coll, var_args) {
    var colls = var_args;
    switch(arguments.length) {
      case 2:
        return mapcat__2.call(this, f, coll);
      default:
        return mapcat__3.cljs$core$IFn$_invoke$arity$variadic(f, coll, cljs.core.array_seq(arguments, 2))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  mapcat.cljs$lang$maxFixedArity = 2;
  mapcat.cljs$lang$applyTo = mapcat__3.cljs$lang$applyTo;
  mapcat.cljs$core$IFn$_invoke$arity$2 = mapcat__2;
  mapcat.cljs$core$IFn$_invoke$arity$variadic = mapcat__3.cljs$core$IFn$_invoke$arity$variadic;
  return mapcat
}();
cljs.core.filter = function filter(pred, coll) {
  return new cljs.core.LazySeq(null, function() {
    var temp__4092__auto__ = cljs.core.seq.call(null, coll);
    if(temp__4092__auto__) {
      var s = temp__4092__auto__;
      if(cljs.core.chunked_seq_QMARK_.call(null, s)) {
        var c = cljs.core.chunk_first.call(null, s);
        var size = cljs.core.count.call(null, c);
        var b = cljs.core.chunk_buffer.call(null, size);
        var n__4108__auto___529365 = size;
        var i_529366 = 0;
        while(true) {
          if(i_529366 < n__4108__auto___529365) {
            if(cljs.core.truth_(pred.call(null, cljs.core._nth.call(null, c, i_529366)))) {
              cljs.core.chunk_append.call(null, b, cljs.core._nth.call(null, c, i_529366))
            }else {
            }
            var G__529367 = i_529366 + 1;
            i_529366 = G__529367;
            continue
          }else {
          }
          break
        }
        return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b), filter.call(null, pred, cljs.core.chunk_rest.call(null, s)))
      }else {
        var f = cljs.core.first.call(null, s);
        var r = cljs.core.rest.call(null, s);
        if(cljs.core.truth_(pred.call(null, f))) {
          return cljs.core.cons.call(null, f, filter.call(null, pred, r))
        }else {
          return filter.call(null, pred, r)
        }
      }
    }else {
      return null
    }
  }, null, null)
};
cljs.core.remove = function remove(pred, coll) {
  return cljs.core.filter.call(null, cljs.core.complement.call(null, pred), coll)
};
cljs.core.tree_seq = function tree_seq(branch_QMARK_, children, root) {
  var walk = function walk(node) {
    return new cljs.core.LazySeq(null, function() {
      return cljs.core.cons.call(null, node, cljs.core.truth_(branch_QMARK_.call(null, node)) ? cljs.core.mapcat.call(null, walk, children.call(null, node)) : null)
    }, null, null)
  };
  return walk.call(null, root)
};
cljs.core.flatten = function flatten(x) {
  return cljs.core.filter.call(null, function(p1__529368_SHARP_) {
    return!cljs.core.sequential_QMARK_.call(null, p1__529368_SHARP_)
  }, cljs.core.rest.call(null, cljs.core.tree_seq.call(null, cljs.core.sequential_QMARK_, cljs.core.seq, x)))
};
cljs.core.into = function into(to, from) {
  if(!(to == null)) {
    if(function() {
      var G__529370 = to;
      if(G__529370) {
        var bit__3904__auto__ = G__529370.cljs$lang$protocol_mask$partition1$ & 4;
        if(bit__3904__auto__ || G__529370.cljs$core$IEditableCollection$) {
          return true
        }else {
          return false
        }
      }else {
        return false
      }
    }()) {
      return cljs.core.persistent_BANG_.call(null, cljs.core.reduce.call(null, cljs.core._conj_BANG_, cljs.core.transient$.call(null, to), from))
    }else {
      return cljs.core.reduce.call(null, cljs.core._conj, to, from)
    }
  }else {
    return cljs.core.reduce.call(null, cljs.core.conj, cljs.core.List.EMPTY, from)
  }
};
cljs.core.mapv = function() {
  var mapv = null;
  var mapv__2 = function(f, coll) {
    return cljs.core.persistent_BANG_.call(null, cljs.core.reduce.call(null, function(v, o) {
      return cljs.core.conj_BANG_.call(null, v, f.call(null, o))
    }, cljs.core.transient$.call(null, cljs.core.PersistentVector.EMPTY), coll))
  };
  var mapv__3 = function(f, c1, c2) {
    return cljs.core.into.call(null, cljs.core.PersistentVector.EMPTY, cljs.core.map.call(null, f, c1, c2))
  };
  var mapv__4 = function(f, c1, c2, c3) {
    return cljs.core.into.call(null, cljs.core.PersistentVector.EMPTY, cljs.core.map.call(null, f, c1, c2, c3))
  };
  var mapv__5 = function() {
    var G__529371__delegate = function(f, c1, c2, c3, colls) {
      return cljs.core.into.call(null, cljs.core.PersistentVector.EMPTY, cljs.core.apply.call(null, cljs.core.map, f, c1, c2, c3, colls))
    };
    var G__529371 = function(f, c1, c2, c3, var_args) {
      var colls = null;
      if(arguments.length > 4) {
        colls = cljs.core.array_seq(Array.prototype.slice.call(arguments, 4), 0)
      }
      return G__529371__delegate.call(this, f, c1, c2, c3, colls)
    };
    G__529371.cljs$lang$maxFixedArity = 4;
    G__529371.cljs$lang$applyTo = function(arglist__529372) {
      var f = cljs.core.first(arglist__529372);
      arglist__529372 = cljs.core.next(arglist__529372);
      var c1 = cljs.core.first(arglist__529372);
      arglist__529372 = cljs.core.next(arglist__529372);
      var c2 = cljs.core.first(arglist__529372);
      arglist__529372 = cljs.core.next(arglist__529372);
      var c3 = cljs.core.first(arglist__529372);
      var colls = cljs.core.rest(arglist__529372);
      return G__529371__delegate(f, c1, c2, c3, colls)
    };
    G__529371.cljs$core$IFn$_invoke$arity$variadic = G__529371__delegate;
    return G__529371
  }();
  mapv = function(f, c1, c2, c3, var_args) {
    var colls = var_args;
    switch(arguments.length) {
      case 2:
        return mapv__2.call(this, f, c1);
      case 3:
        return mapv__3.call(this, f, c1, c2);
      case 4:
        return mapv__4.call(this, f, c1, c2, c3);
      default:
        return mapv__5.cljs$core$IFn$_invoke$arity$variadic(f, c1, c2, c3, cljs.core.array_seq(arguments, 4))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  mapv.cljs$lang$maxFixedArity = 4;
  mapv.cljs$lang$applyTo = mapv__5.cljs$lang$applyTo;
  mapv.cljs$core$IFn$_invoke$arity$2 = mapv__2;
  mapv.cljs$core$IFn$_invoke$arity$3 = mapv__3;
  mapv.cljs$core$IFn$_invoke$arity$4 = mapv__4;
  mapv.cljs$core$IFn$_invoke$arity$variadic = mapv__5.cljs$core$IFn$_invoke$arity$variadic;
  return mapv
}();
cljs.core.filterv = function filterv(pred, coll) {
  return cljs.core.persistent_BANG_.call(null, cljs.core.reduce.call(null, function(v, o) {
    if(cljs.core.truth_(pred.call(null, o))) {
      return cljs.core.conj_BANG_.call(null, v, o)
    }else {
      return v
    }
  }, cljs.core.transient$.call(null, cljs.core.PersistentVector.EMPTY), coll))
};
cljs.core.partition = function() {
  var partition = null;
  var partition__2 = function(n, coll) {
    return partition.call(null, n, n, coll)
  };
  var partition__3 = function(n, step, coll) {
    return new cljs.core.LazySeq(null, function() {
      var temp__4092__auto__ = cljs.core.seq.call(null, coll);
      if(temp__4092__auto__) {
        var s = temp__4092__auto__;
        var p = cljs.core.take.call(null, n, s);
        if(n === cljs.core.count.call(null, p)) {
          return cljs.core.cons.call(null, p, partition.call(null, n, step, cljs.core.drop.call(null, step, s)))
        }else {
          return null
        }
      }else {
        return null
      }
    }, null, null)
  };
  var partition__4 = function(n, step, pad, coll) {
    return new cljs.core.LazySeq(null, function() {
      var temp__4092__auto__ = cljs.core.seq.call(null, coll);
      if(temp__4092__auto__) {
        var s = temp__4092__auto__;
        var p = cljs.core.take.call(null, n, s);
        if(n === cljs.core.count.call(null, p)) {
          return cljs.core.cons.call(null, p, partition.call(null, n, step, pad, cljs.core.drop.call(null, step, s)))
        }else {
          return cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.take.call(null, n, cljs.core.concat.call(null, p, pad)))
        }
      }else {
        return null
      }
    }, null, null)
  };
  partition = function(n, step, pad, coll) {
    switch(arguments.length) {
      case 2:
        return partition__2.call(this, n, step);
      case 3:
        return partition__3.call(this, n, step, pad);
      case 4:
        return partition__4.call(this, n, step, pad, coll)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  partition.cljs$core$IFn$_invoke$arity$2 = partition__2;
  partition.cljs$core$IFn$_invoke$arity$3 = partition__3;
  partition.cljs$core$IFn$_invoke$arity$4 = partition__4;
  return partition
}();
cljs.core.get_in = function() {
  var get_in = null;
  var get_in__2 = function(m, ks) {
    return get_in.call(null, m, ks, null)
  };
  var get_in__3 = function(m, ks, not_found) {
    var sentinel = cljs.core.lookup_sentinel;
    var m__$1 = m;
    var ks__$1 = cljs.core.seq.call(null, ks);
    while(true) {
      if(ks__$1) {
        if(!function() {
          var G__529374 = m__$1;
          if(G__529374) {
            var bit__3911__auto__ = G__529374.cljs$lang$protocol_mask$partition0$ & 256;
            if(bit__3911__auto__ || G__529374.cljs$core$ILookup$) {
              return true
            }else {
              if(!G__529374.cljs$lang$protocol_mask$partition0$) {
                return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ILookup, G__529374)
              }else {
                return false
              }
            }
          }else {
            return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ILookup, G__529374)
          }
        }()) {
          return not_found
        }else {
          var m__$2 = cljs.core.get.call(null, m__$1, cljs.core.first.call(null, ks__$1), sentinel);
          if(sentinel === m__$2) {
            return not_found
          }else {
            var G__529375 = sentinel;
            var G__529376 = m__$2;
            var G__529377 = cljs.core.next.call(null, ks__$1);
            sentinel = G__529375;
            m__$1 = G__529376;
            ks__$1 = G__529377;
            continue
          }
        }
      }else {
        return m__$1
      }
      break
    }
  };
  get_in = function(m, ks, not_found) {
    switch(arguments.length) {
      case 2:
        return get_in__2.call(this, m, ks);
      case 3:
        return get_in__3.call(this, m, ks, not_found)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  get_in.cljs$core$IFn$_invoke$arity$2 = get_in__2;
  get_in.cljs$core$IFn$_invoke$arity$3 = get_in__3;
  return get_in
}();
cljs.core.assoc_in = function assoc_in(m, p__529378, v) {
  var vec__529380 = p__529378;
  var k = cljs.core.nth.call(null, vec__529380, 0, null);
  var ks = cljs.core.nthnext.call(null, vec__529380, 1);
  if(ks) {
    return cljs.core.assoc.call(null, m, k, assoc_in.call(null, cljs.core.get.call(null, m, k), ks, v))
  }else {
    return cljs.core.assoc.call(null, m, k, v)
  }
};
cljs.core.update_in = function() {
  var update_in = null;
  var update_in__3 = function(m, p__529381, f) {
    var vec__529391 = p__529381;
    var k = cljs.core.nth.call(null, vec__529391, 0, null);
    var ks = cljs.core.nthnext.call(null, vec__529391, 1);
    if(ks) {
      return cljs.core.assoc.call(null, m, k, update_in.call(null, cljs.core.get.call(null, m, k), ks, f))
    }else {
      return cljs.core.assoc.call(null, m, k, f.call(null, cljs.core.get.call(null, m, k)))
    }
  };
  var update_in__4 = function(m, p__529382, f, a) {
    var vec__529392 = p__529382;
    var k = cljs.core.nth.call(null, vec__529392, 0, null);
    var ks = cljs.core.nthnext.call(null, vec__529392, 1);
    if(ks) {
      return cljs.core.assoc.call(null, m, k, update_in.call(null, cljs.core.get.call(null, m, k), ks, f, a))
    }else {
      return cljs.core.assoc.call(null, m, k, f.call(null, cljs.core.get.call(null, m, k), a))
    }
  };
  var update_in__5 = function(m, p__529383, f, a, b) {
    var vec__529393 = p__529383;
    var k = cljs.core.nth.call(null, vec__529393, 0, null);
    var ks = cljs.core.nthnext.call(null, vec__529393, 1);
    if(ks) {
      return cljs.core.assoc.call(null, m, k, update_in.call(null, cljs.core.get.call(null, m, k), ks, f, a, b))
    }else {
      return cljs.core.assoc.call(null, m, k, f.call(null, cljs.core.get.call(null, m, k), a, b))
    }
  };
  var update_in__6 = function(m, p__529384, f, a, b, c) {
    var vec__529394 = p__529384;
    var k = cljs.core.nth.call(null, vec__529394, 0, null);
    var ks = cljs.core.nthnext.call(null, vec__529394, 1);
    if(ks) {
      return cljs.core.assoc.call(null, m, k, update_in.call(null, cljs.core.get.call(null, m, k), ks, f, a, b, c))
    }else {
      return cljs.core.assoc.call(null, m, k, f.call(null, cljs.core.get.call(null, m, k), a, b, c))
    }
  };
  var update_in__7 = function() {
    var G__529396__delegate = function(m, p__529385, f, a, b, c, args) {
      var vec__529395 = p__529385;
      var k = cljs.core.nth.call(null, vec__529395, 0, null);
      var ks = cljs.core.nthnext.call(null, vec__529395, 1);
      if(ks) {
        return cljs.core.assoc.call(null, m, k, cljs.core.apply.call(null, update_in, cljs.core.get.call(null, m, k), ks, f, a, b, c, args))
      }else {
        return cljs.core.assoc.call(null, m, k, cljs.core.apply.call(null, f, cljs.core.get.call(null, m, k), a, b, c, args))
      }
    };
    var G__529396 = function(m, p__529385, f, a, b, c, var_args) {
      var args = null;
      if(arguments.length > 6) {
        args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 6), 0)
      }
      return G__529396__delegate.call(this, m, p__529385, f, a, b, c, args)
    };
    G__529396.cljs$lang$maxFixedArity = 6;
    G__529396.cljs$lang$applyTo = function(arglist__529397) {
      var m = cljs.core.first(arglist__529397);
      arglist__529397 = cljs.core.next(arglist__529397);
      var p__529385 = cljs.core.first(arglist__529397);
      arglist__529397 = cljs.core.next(arglist__529397);
      var f = cljs.core.first(arglist__529397);
      arglist__529397 = cljs.core.next(arglist__529397);
      var a = cljs.core.first(arglist__529397);
      arglist__529397 = cljs.core.next(arglist__529397);
      var b = cljs.core.first(arglist__529397);
      arglist__529397 = cljs.core.next(arglist__529397);
      var c = cljs.core.first(arglist__529397);
      var args = cljs.core.rest(arglist__529397);
      return G__529396__delegate(m, p__529385, f, a, b, c, args)
    };
    G__529396.cljs$core$IFn$_invoke$arity$variadic = G__529396__delegate;
    return G__529396
  }();
  update_in = function(m, p__529385, f, a, b, c, var_args) {
    var args = var_args;
    switch(arguments.length) {
      case 3:
        return update_in__3.call(this, m, p__529385, f);
      case 4:
        return update_in__4.call(this, m, p__529385, f, a);
      case 5:
        return update_in__5.call(this, m, p__529385, f, a, b);
      case 6:
        return update_in__6.call(this, m, p__529385, f, a, b, c);
      default:
        return update_in__7.cljs$core$IFn$_invoke$arity$variadic(m, p__529385, f, a, b, c, cljs.core.array_seq(arguments, 6))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  update_in.cljs$lang$maxFixedArity = 6;
  update_in.cljs$lang$applyTo = update_in__7.cljs$lang$applyTo;
  update_in.cljs$core$IFn$_invoke$arity$3 = update_in__3;
  update_in.cljs$core$IFn$_invoke$arity$4 = update_in__4;
  update_in.cljs$core$IFn$_invoke$arity$5 = update_in__5;
  update_in.cljs$core$IFn$_invoke$arity$6 = update_in__6;
  update_in.cljs$core$IFn$_invoke$arity$variadic = update_in__7.cljs$core$IFn$_invoke$arity$variadic;
  return update_in
}();
cljs.core.VectorNode = function(edit, arr) {
  this.edit = edit;
  this.arr = arr
};
cljs.core.VectorNode.cljs$lang$type = true;
cljs.core.VectorNode.cljs$lang$ctorStr = "cljs.core/VectorNode";
cljs.core.VectorNode.cljs$lang$ctorPrWriter = function(this__3832__auto__, writer__3833__auto__, opts__3834__auto__) {
  return cljs.core._write.call(null, writer__3833__auto__, "cljs.core/VectorNode")
};
cljs.core.__GT_VectorNode = function __GT_VectorNode(edit, arr) {
  return new cljs.core.VectorNode(edit, arr)
};
cljs.core.pv_fresh_node = function pv_fresh_node(edit) {
  return new cljs.core.VectorNode(edit, new Array(32))
};
cljs.core.pv_aget = function pv_aget(node, idx) {
  return node.arr[idx]
};
cljs.core.pv_aset = function pv_aset(node, idx, val) {
  return node.arr[idx] = val
};
cljs.core.pv_clone_node = function pv_clone_node(node) {
  return new cljs.core.VectorNode(node.edit, cljs.core.aclone.call(null, node.arr))
};
cljs.core.tail_off = function tail_off(pv) {
  var cnt = pv.cnt;
  if(cnt < 32) {
    return 0
  }else {
    return cnt - 1 >>> 5 << 5
  }
};
cljs.core.new_path = function new_path(edit, level, node) {
  var ll = level;
  var ret = node;
  while(true) {
    if(ll === 0) {
      return ret
    }else {
      var embed = ret;
      var r = cljs.core.pv_fresh_node.call(null, edit);
      var _ = cljs.core.pv_aset.call(null, r, 0, embed);
      var G__529398 = ll - 5;
      var G__529399 = r;
      ll = G__529398;
      ret = G__529399;
      continue
    }
    break
  }
};
cljs.core.push_tail = function push_tail(pv, level, parent, tailnode) {
  var ret = cljs.core.pv_clone_node.call(null, parent);
  var subidx = pv.cnt - 1 >>> level & 31;
  if(5 === level) {
    cljs.core.pv_aset.call(null, ret, subidx, tailnode);
    return ret
  }else {
    var child = cljs.core.pv_aget.call(null, parent, subidx);
    if(!(child == null)) {
      var node_to_insert = push_tail.call(null, pv, level - 5, child, tailnode);
      cljs.core.pv_aset.call(null, ret, subidx, node_to_insert);
      return ret
    }else {
      var node_to_insert = cljs.core.new_path.call(null, null, level - 5, tailnode);
      cljs.core.pv_aset.call(null, ret, subidx, node_to_insert);
      return ret
    }
  }
};
cljs.core.vector_index_out_of_bounds = function vector_index_out_of_bounds(i, cnt) {
  throw new Error([cljs.core.str("No item "), cljs.core.str(i), cljs.core.str(" in vector of length "), cljs.core.str(cnt)].join(""));
};
cljs.core.array_for = function array_for(pv, i) {
  if(0 <= i && i < pv.cnt) {
    if(i >= cljs.core.tail_off.call(null, pv)) {
      return pv.tail
    }else {
      var node = pv.root;
      var level = pv.shift;
      while(true) {
        if(level > 0) {
          var G__529400 = cljs.core.pv_aget.call(null, node, i >>> level & 31);
          var G__529401 = level - 5;
          node = G__529400;
          level = G__529401;
          continue
        }else {
          return node.arr
        }
        break
      }
    }
  }else {
    return cljs.core.vector_index_out_of_bounds.call(null, i, pv.cnt)
  }
};
cljs.core.do_assoc = function do_assoc(pv, level, node, i, val) {
  var ret = cljs.core.pv_clone_node.call(null, node);
  if(level === 0) {
    cljs.core.pv_aset.call(null, ret, i & 31, val);
    return ret
  }else {
    var subidx = i >>> level & 31;
    cljs.core.pv_aset.call(null, ret, subidx, do_assoc.call(null, pv, level - 5, cljs.core.pv_aget.call(null, node, subidx), i, val));
    return ret
  }
};
cljs.core.pop_tail = function pop_tail(pv, level, node) {
  var subidx = pv.cnt - 2 >>> level & 31;
  if(level > 5) {
    var new_child = pop_tail.call(null, pv, level - 5, cljs.core.pv_aget.call(null, node, subidx));
    if(new_child == null && subidx === 0) {
      return null
    }else {
      var ret = cljs.core.pv_clone_node.call(null, node);
      cljs.core.pv_aset.call(null, ret, subidx, new_child);
      return ret
    }
  }else {
    if(subidx === 0) {
      return null
    }else {
      if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        var ret = cljs.core.pv_clone_node.call(null, node);
        cljs.core.pv_aset.call(null, ret, subidx, null);
        return ret
      }else {
        return null
      }
    }
  }
};
cljs.core.PersistentVector = function(meta, cnt, shift, root, tail, __hash) {
  this.meta = meta;
  this.cnt = cnt;
  this.shift = shift;
  this.root = root;
  this.tail = tail;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 4;
  this.cljs$lang$protocol_mask$partition0$ = 167668511
};
cljs.core.PersistentVector.cljs$lang$type = true;
cljs.core.PersistentVector.cljs$lang$ctorStr = "cljs.core/PersistentVector";
cljs.core.PersistentVector.cljs$lang$ctorPrWriter = function(this__3829__auto__, writer__3830__auto__, opt__3831__auto__) {
  return cljs.core._write.call(null, writer__3830__auto__, "cljs.core/PersistentVector")
};
cljs.core.PersistentVector.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.TransientVector(self__.cnt, self__.shift, cljs.core.tv_editable_root.call(null, self__.root), cljs.core.tv_editable_tail.call(null, self__.tail))
};
cljs.core.PersistentVector.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__3696__auto__ = self__.__hash;
  if(!(h__3696__auto__ == null)) {
    return h__3696__auto__
  }else {
    var h__3696__auto____$1 = cljs.core.hash_coll.call(null, coll__$1);
    self__.__hash = h__3696__auto____$1;
    return h__3696__auto____$1
  }
};
cljs.core.PersistentVector.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._nth.call(null, coll__$1, k, null)
};
cljs.core.PersistentVector.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._nth.call(null, coll__$1, k, not_found)
};
cljs.core.PersistentVector.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var self__ = this;
  var coll__$1 = this;
  if(0 <= k && k < self__.cnt) {
    if(cljs.core.tail_off.call(null, coll__$1) <= k) {
      var new_tail = cljs.core.aclone.call(null, self__.tail);
      new_tail[k & 31] = v;
      return new cljs.core.PersistentVector(self__.meta, self__.cnt, self__.shift, self__.root, new_tail, null)
    }else {
      return new cljs.core.PersistentVector(self__.meta, self__.cnt, self__.shift, cljs.core.do_assoc.call(null, coll__$1, self__.shift, self__.root, k, v), self__.tail, null)
    }
  }else {
    if(k === self__.cnt) {
      return cljs.core._conj.call(null, coll__$1, v)
    }else {
      if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        throw new Error([cljs.core.str("Index "), cljs.core.str(k), cljs.core.str(" out of bounds  [0,"), cljs.core.str(self__.cnt), cljs.core.str("]")].join(""));
      }else {
        return null
      }
    }
  }
};
cljs.core.PersistentVector.prototype.call = function() {
  var G__529403 = null;
  var G__529403__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$IIndexed$_nth$arity$2(null, k)
  };
  var G__529403__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$IIndexed$_nth$arity$3(null, k, not_found)
  };
  G__529403 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__529403__2.call(this, self__, k);
      case 3:
        return G__529403__3.call(this, self__, k, not_found)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  return G__529403
}();
cljs.core.PersistentVector.prototype.apply = function(self__, args529402) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone.call(null, args529402)))
};
cljs.core.PersistentVector.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$IIndexed$_nth$arity$2(null, k)
};
cljs.core.PersistentVector.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$IIndexed$_nth$arity$3(null, k, not_found)
};
cljs.core.PersistentVector.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(v, f, init) {
  var self__ = this;
  var v__$1 = this;
  var step_init = [0, init];
  var i = 0;
  while(true) {
    if(i < self__.cnt) {
      var arr = cljs.core.array_for.call(null, v__$1, i);
      var len = arr.length;
      var init__$1 = function() {
        var j = 0;
        var init__$1 = step_init[1];
        while(true) {
          if(j < len) {
            var init__$2 = f.call(null, init__$1, j + i, arr[j]);
            if(cljs.core.reduced_QMARK_.call(null, init__$2)) {
              return init__$2
            }else {
              var G__529404 = j + 1;
              var G__529405 = init__$2;
              j = G__529404;
              init__$1 = G__529405;
              continue
            }
          }else {
            step_init[0] = len;
            step_init[1] = init__$1;
            return init__$1
          }
          break
        }
      }();
      if(cljs.core.reduced_QMARK_.call(null, init__$1)) {
        return cljs.core.deref.call(null, init__$1)
      }else {
        var G__529406 = i + step_init[0];
        i = G__529406;
        continue
      }
    }else {
      return step_init[1]
    }
    break
  }
};
cljs.core.PersistentVector.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  if(self__.cnt - cljs.core.tail_off.call(null, coll__$1) < 32) {
    var len = self__.tail.length;
    var new_tail = new Array(len + 1);
    var n__4108__auto___529407 = len;
    var i_529408 = 0;
    while(true) {
      if(i_529408 < n__4108__auto___529407) {
        new_tail[i_529408] = self__.tail[i_529408];
        var G__529409 = i_529408 + 1;
        i_529408 = G__529409;
        continue
      }else {
      }
      break
    }
    new_tail[len] = o;
    return new cljs.core.PersistentVector(self__.meta, self__.cnt + 1, self__.shift, self__.root, new_tail, null)
  }else {
    var root_overflow_QMARK_ = self__.cnt >>> 5 > 1 << self__.shift;
    var new_shift = root_overflow_QMARK_ ? self__.shift + 5 : self__.shift;
    var new_root = root_overflow_QMARK_ ? function() {
      var n_r = cljs.core.pv_fresh_node.call(null, null);
      cljs.core.pv_aset.call(null, n_r, 0, self__.root);
      cljs.core.pv_aset.call(null, n_r, 1, cljs.core.new_path.call(null, null, self__.shift, new cljs.core.VectorNode(null, self__.tail)));
      return n_r
    }() : cljs.core.push_tail.call(null, coll__$1, self__.shift, self__.root, new cljs.core.VectorNode(null, self__.tail));
    return new cljs.core.PersistentVector(self__.meta, self__.cnt + 1, new_shift, new_root, [o], null)
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IReversible$_rseq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if(self__.cnt > 0) {
    return new cljs.core.RSeq(coll__$1, self__.cnt - 1, null)
  }else {
    return null
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IMapEntry$_key$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._nth.call(null, coll__$1, 0)
};
cljs.core.PersistentVector.prototype.cljs$core$IMapEntry$_val$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._nth.call(null, coll__$1, 1)
};
cljs.core.PersistentVector.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll)
};
cljs.core.PersistentVector.prototype.cljs$core$IReduce$_reduce$arity$2 = function(v, f) {
  var self__ = this;
  var v__$1 = this;
  return cljs.core.ci_reduce.call(null, v__$1, f)
};
cljs.core.PersistentVector.prototype.cljs$core$IReduce$_reduce$arity$3 = function(v, f, start) {
  var self__ = this;
  var v__$1 = this;
  return cljs.core.ci_reduce.call(null, v__$1, f, start)
};
cljs.core.PersistentVector.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if(self__.cnt === 0) {
    return null
  }else {
    if(self__.cnt < 32) {
      return cljs.core.array_seq.call(null, self__.tail)
    }else {
      if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        return cljs.core.chunked_seq.call(null, coll__$1, 0, 0)
      }else {
        return null
      }
    }
  }
};
cljs.core.PersistentVector.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.cnt
};
cljs.core.PersistentVector.prototype.cljs$core$IStack$_peek$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if(self__.cnt > 0) {
    return cljs.core._nth.call(null, coll__$1, self__.cnt - 1)
  }else {
    return null
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IStack$_pop$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if(self__.cnt === 0) {
    throw new Error("Can't pop empty vector");
  }else {
    if(1 === self__.cnt) {
      return cljs.core._with_meta.call(null, cljs.core.PersistentVector.EMPTY, self__.meta)
    }else {
      if(1 < self__.cnt - cljs.core.tail_off.call(null, coll__$1)) {
        return new cljs.core.PersistentVector(self__.meta, self__.cnt - 1, self__.shift, self__.root, self__.tail.slice(0, -1), null)
      }else {
        if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          var new_tail = cljs.core.array_for.call(null, coll__$1, self__.cnt - 2);
          var nr = cljs.core.pop_tail.call(null, coll__$1, self__.shift, self__.root);
          var new_root = nr == null ? cljs.core.PersistentVector.EMPTY_NODE : nr;
          var cnt_1 = self__.cnt - 1;
          if(5 < self__.shift && cljs.core.pv_aget.call(null, new_root, 1) == null) {
            return new cljs.core.PersistentVector(self__.meta, cnt_1, self__.shift - 5, cljs.core.pv_aget.call(null, new_root, 0), new_tail, null)
          }else {
            return new cljs.core.PersistentVector(self__.meta, cnt_1, self__.shift, new_root, new_tail, null)
          }
        }else {
          return null
        }
      }
    }
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IVector$_assoc_n$arity$3 = function(coll, n, val) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._assoc.call(null, coll__$1, n, val)
};
cljs.core.PersistentVector.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other)
};
cljs.core.PersistentVector.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentVector(meta__$1, self__.cnt, self__.shift, self__.root, self__.tail, self__.__hash)
};
cljs.core.PersistentVector.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta
};
cljs.core.PersistentVector.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, n) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.array_for.call(null, coll__$1, n)[n & 31]
};
cljs.core.PersistentVector.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, n, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if(0 <= n && n < self__.cnt) {
    return cljs.core._nth.call(null, coll__$1, n)
  }else {
    return not_found
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta.call(null, cljs.core.PersistentVector.EMPTY, self__.meta)
};
cljs.core.__GT_PersistentVector = function __GT_PersistentVector(meta, cnt, shift, root, tail, __hash) {
  return new cljs.core.PersistentVector(meta, cnt, shift, root, tail, __hash)
};
cljs.core.PersistentVector.EMPTY_NODE = new cljs.core.VectorNode(null, new Array(32));
cljs.core.PersistentVector.EMPTY = new cljs.core.PersistentVector(null, 0, 5, cljs.core.PersistentVector.EMPTY_NODE, [], 0);
cljs.core.PersistentVector.fromArray = function(xs, no_clone) {
  var l = xs.length;
  var xs__$1 = no_clone ? xs : cljs.core.aclone.call(null, xs);
  if(l < 32) {
    return new cljs.core.PersistentVector(null, l, 5, cljs.core.PersistentVector.EMPTY_NODE, xs__$1, null)
  }else {
    var node = xs__$1.slice(0, 32);
    var v = new cljs.core.PersistentVector(null, 32, 5, cljs.core.PersistentVector.EMPTY_NODE, node, null);
    var i = 32;
    var out = cljs.core._as_transient.call(null, v);
    while(true) {
      if(i < l) {
        var G__529410 = i + 1;
        var G__529411 = cljs.core.conj_BANG_.call(null, out, xs__$1[i]);
        i = G__529410;
        out = G__529411;
        continue
      }else {
        return cljs.core.persistent_BANG_.call(null, out)
      }
      break
    }
  }
};
cljs.core.vec = function vec(coll) {
  return cljs.core._persistent_BANG_.call(null, cljs.core.reduce.call(null, cljs.core._conj_BANG_, cljs.core._as_transient.call(null, cljs.core.PersistentVector.EMPTY), coll))
};
cljs.core.vector = function() {
  var vector__delegate = function(args) {
    if(args instanceof cljs.core.IndexedSeq) {
      return cljs.core.PersistentVector.fromArray.call(null, args.arr, true)
    }else {
      return cljs.core.vec.call(null, args)
    }
  };
  var vector = function(var_args) {
    var args = null;
    if(arguments.length > 0) {
      args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return vector__delegate.call(this, args)
  };
  vector.cljs$lang$maxFixedArity = 0;
  vector.cljs$lang$applyTo = function(arglist__529412) {
    var args = cljs.core.seq(arglist__529412);
    return vector__delegate(args)
  };
  vector.cljs$core$IFn$_invoke$arity$variadic = vector__delegate;
  return vector
}();
cljs.core.ChunkedSeq = function(vec, node, i, off, meta, __hash) {
  this.vec = vec;
  this.node = node;
  this.i = i;
  this.off = off;
  this.meta = meta;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 32243948;
  this.cljs$lang$protocol_mask$partition1$ = 1536
};
cljs.core.ChunkedSeq.cljs$lang$type = true;
cljs.core.ChunkedSeq.cljs$lang$ctorStr = "cljs.core/ChunkedSeq";
cljs.core.ChunkedSeq.cljs$lang$ctorPrWriter = function(this__3829__auto__, writer__3830__auto__, opt__3831__auto__) {
  return cljs.core._write.call(null, writer__3830__auto__, "cljs.core/ChunkedSeq")
};
cljs.core.ChunkedSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__3696__auto__ = self__.__hash;
  if(!(h__3696__auto__ == null)) {
    return h__3696__auto__
  }else {
    var h__3696__auto____$1 = cljs.core.hash_coll.call(null, coll__$1);
    self__.__hash = h__3696__auto____$1;
    return h__3696__auto____$1
  }
};
cljs.core.ChunkedSeq.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if(self__.off + 1 < self__.node.length) {
    var s = cljs.core.chunked_seq.call(null, self__.vec, self__.node, self__.i, self__.off + 1);
    if(s == null) {
      return null
    }else {
      return s
    }
  }else {
    return cljs.core._chunked_next.call(null, coll__$1)
  }
};
cljs.core.ChunkedSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons.call(null, o, coll__$1)
};
cljs.core.ChunkedSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll)
};
cljs.core.ChunkedSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.ci_reduce.call(null, cljs.core.subvec.call(null, self__.vec, self__.i + self__.off, cljs.core.count.call(null, self__.vec)), f)
};
cljs.core.ChunkedSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.ci_reduce.call(null, cljs.core.subvec.call(null, self__.vec, self__.i + self__.off, cljs.core.count.call(null, self__.vec)), f, start)
};
cljs.core.ChunkedSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1
};
cljs.core.ChunkedSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.node[self__.off]
};
cljs.core.ChunkedSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if(self__.off + 1 < self__.node.length) {
    var s = cljs.core.chunked_seq.call(null, self__.vec, self__.node, self__.i, self__.off + 1);
    if(s == null) {
      return cljs.core.List.EMPTY
    }else {
      return s
    }
  }else {
    return cljs.core._chunked_rest.call(null, coll__$1)
  }
};
cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedNext$_chunked_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var l = self__.node.length;
  var s = self__.i + l < cljs.core._count.call(null, self__.vec) ? cljs.core.chunked_seq.call(null, self__.vec, self__.i + l, 0) : null;
  if(s == null) {
    return null
  }else {
    return s
  }
};
cljs.core.ChunkedSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other)
};
cljs.core.ChunkedSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, m) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.chunked_seq.call(null, self__.vec, self__.node, self__.i, self__.off, m)
};
cljs.core.ChunkedSeq.prototype.cljs$core$IWithMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta
};
cljs.core.ChunkedSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta.call(null, cljs.core.PersistentVector.EMPTY, self__.meta)
};
cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedSeq$_chunked_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.array_chunk.call(null, self__.node, self__.off)
};
cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedSeq$_chunked_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var l = self__.node.length;
  var s = self__.i + l < cljs.core._count.call(null, self__.vec) ? cljs.core.chunked_seq.call(null, self__.vec, self__.i + l, 0) : null;
  if(s == null) {
    return cljs.core.List.EMPTY
  }else {
    return s
  }
};
cljs.core.__GT_ChunkedSeq = function __GT_ChunkedSeq(vec, node, i, off, meta, __hash) {
  return new cljs.core.ChunkedSeq(vec, node, i, off, meta, __hash)
};
cljs.core.chunked_seq = function() {
  var chunked_seq = null;
  var chunked_seq__3 = function(vec, i, off) {
    return new cljs.core.ChunkedSeq(vec, cljs.core.array_for.call(null, vec, i), i, off, null, null)
  };
  var chunked_seq__4 = function(vec, node, i, off) {
    return new cljs.core.ChunkedSeq(vec, node, i, off, null, null)
  };
  var chunked_seq__5 = function(vec, node, i, off, meta) {
    return new cljs.core.ChunkedSeq(vec, node, i, off, meta, null)
  };
  chunked_seq = function(vec, node, i, off, meta) {
    switch(arguments.length) {
      case 3:
        return chunked_seq__3.call(this, vec, node, i);
      case 4:
        return chunked_seq__4.call(this, vec, node, i, off);
      case 5:
        return chunked_seq__5.call(this, vec, node, i, off, meta)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  chunked_seq.cljs$core$IFn$_invoke$arity$3 = chunked_seq__3;
  chunked_seq.cljs$core$IFn$_invoke$arity$4 = chunked_seq__4;
  chunked_seq.cljs$core$IFn$_invoke$arity$5 = chunked_seq__5;
  return chunked_seq
}();
cljs.core.Subvec = function(meta, v, start, end, __hash) {
  this.meta = meta;
  this.v = v;
  this.start = start;
  this.end = end;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32400159
};
cljs.core.Subvec.cljs$lang$type = true;
cljs.core.Subvec.cljs$lang$ctorStr = "cljs.core/Subvec";
cljs.core.Subvec.cljs$lang$ctorPrWriter = function(this__3829__auto__, writer__3830__auto__, opt__3831__auto__) {
  return cljs.core._write.call(null, writer__3830__auto__, "cljs.core/Subvec")
};
cljs.core.Subvec.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__3696__auto__ = self__.__hash;
  if(!(h__3696__auto__ == null)) {
    return h__3696__auto__
  }else {
    var h__3696__auto____$1 = cljs.core.hash_coll.call(null, coll__$1);
    self__.__hash = h__3696__auto____$1;
    return h__3696__auto____$1
  }
};
cljs.core.Subvec.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._nth.call(null, coll__$1, k, null)
};
cljs.core.Subvec.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._nth.call(null, coll__$1, k, not_found)
};
cljs.core.Subvec.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, key, val) {
  var self__ = this;
  var coll__$1 = this;
  var v_pos = self__.start + key;
  return cljs.core.build_subvec.call(null, self__.meta, cljs.core.assoc.call(null, self__.v, v_pos, val), self__.start, function() {
    var x__3592__auto__ = self__.end;
    var y__3593__auto__ = v_pos + 1;
    return x__3592__auto__ > y__3593__auto__ ? x__3592__auto__ : y__3593__auto__
  }(), null)
};
cljs.core.Subvec.prototype.call = function() {
  var G__529414 = null;
  var G__529414__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$IIndexed$_nth$arity$2(null, k)
  };
  var G__529414__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$IIndexed$_nth$arity$3(null, k, not_found)
  };
  G__529414 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__529414__2.call(this, self__, k);
      case 3:
        return G__529414__3.call(this, self__, k, not_found)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  return G__529414
}();
cljs.core.Subvec.prototype.apply = function(self__, args529413) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone.call(null, args529413)))
};
cljs.core.Subvec.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$IIndexed$_nth$arity$2(null, k)
};
cljs.core.Subvec.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$IIndexed$_nth$arity$3(null, k, not_found)
};
cljs.core.Subvec.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.build_subvec.call(null, self__.meta, cljs.core._assoc_n.call(null, self__.v, self__.end, o), self__.start, self__.end + 1, null)
};
cljs.core.Subvec.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll)
};
cljs.core.Subvec.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.ci_reduce.call(null, coll__$1, f)
};
cljs.core.Subvec.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start__$1) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.ci_reduce.call(null, coll__$1, f, start__$1)
};
cljs.core.Subvec.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var subvec_seq = function subvec_seq(i) {
    if(i === self__.end) {
      return null
    }else {
      return cljs.core.cons.call(null, cljs.core._nth.call(null, self__.v, i), new cljs.core.LazySeq(null, function() {
        return subvec_seq.call(null, i + 1)
      }, null, null))
    }
  };
  return subvec_seq.call(null, self__.start)
};
cljs.core.Subvec.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.end - self__.start
};
cljs.core.Subvec.prototype.cljs$core$IStack$_peek$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._nth.call(null, self__.v, self__.end - 1)
};
cljs.core.Subvec.prototype.cljs$core$IStack$_pop$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if(self__.start === self__.end) {
    throw new Error("Can't pop empty vector");
  }else {
    return cljs.core.build_subvec.call(null, self__.meta, self__.v, self__.start, self__.end - 1, null)
  }
};
cljs.core.Subvec.prototype.cljs$core$IVector$_assoc_n$arity$3 = function(coll, n, val) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._assoc.call(null, coll__$1, n, val)
};
cljs.core.Subvec.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other)
};
cljs.core.Subvec.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.build_subvec.call(null, meta__$1, self__.v, self__.start, self__.end, self__.__hash)
};
cljs.core.Subvec.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta
};
cljs.core.Subvec.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, n) {
  var self__ = this;
  var coll__$1 = this;
  if(n < 0 || self__.end <= self__.start + n) {
    return cljs.core.vector_index_out_of_bounds.call(null, n, self__.end - self__.start)
  }else {
    return cljs.core._nth.call(null, self__.v, self__.start + n)
  }
};
cljs.core.Subvec.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, n, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if(n < 0 || self__.end <= self__.start + n) {
    return not_found
  }else {
    return cljs.core._nth.call(null, self__.v, self__.start + n, not_found)
  }
};
cljs.core.Subvec.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta.call(null, cljs.core.PersistentVector.EMPTY, self__.meta)
};
cljs.core.__GT_Subvec = function __GT_Subvec(meta, v, start, end, __hash) {
  return new cljs.core.Subvec(meta, v, start, end, __hash)
};
cljs.core.build_subvec = function build_subvec(meta, v, start, end, __hash) {
  while(true) {
    if(v instanceof cljs.core.Subvec) {
      var G__529415 = meta;
      var G__529416 = v.v;
      var G__529417 = v.start + start;
      var G__529418 = v.start + end;
      var G__529419 = __hash;
      meta = G__529415;
      v = G__529416;
      start = G__529417;
      end = G__529418;
      __hash = G__529419;
      continue
    }else {
      var c = cljs.core.count.call(null, v);
      if(start < 0 || end < 0 || start > c || end > c) {
        throw new Error("Index out of bounds");
      }else {
      }
      return new cljs.core.Subvec(meta, v, start, end, __hash)
    }
    break
  }
};
cljs.core.subvec = function() {
  var subvec = null;
  var subvec__2 = function(v, start) {
    return subvec.call(null, v, start, cljs.core.count.call(null, v))
  };
  var subvec__3 = function(v, start, end) {
    return cljs.core.build_subvec.call(null, null, v, start, end, null)
  };
  subvec = function(v, start, end) {
    switch(arguments.length) {
      case 2:
        return subvec__2.call(this, v, start);
      case 3:
        return subvec__3.call(this, v, start, end)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  subvec.cljs$core$IFn$_invoke$arity$2 = subvec__2;
  subvec.cljs$core$IFn$_invoke$arity$3 = subvec__3;
  return subvec
}();
cljs.core.tv_ensure_editable = function tv_ensure_editable(edit, node) {
  if(edit === node.edit) {
    return node
  }else {
    return new cljs.core.VectorNode(edit, cljs.core.aclone.call(null, node.arr))
  }
};
cljs.core.tv_editable_root = function tv_editable_root(node) {
  return new cljs.core.VectorNode(function() {
    var obj529423 = {};
    return obj529423
  }(), cljs.core.aclone.call(null, node.arr))
};
cljs.core.tv_editable_tail = function tv_editable_tail(tl) {
  var ret = new Array(32);
  cljs.core.array_copy.call(null, tl, 0, ret, 0, tl.length);
  return ret
};
cljs.core.tv_push_tail = function tv_push_tail(tv, level, parent, tail_node) {
  var ret = cljs.core.tv_ensure_editable.call(null, tv.root.edit, parent);
  var subidx = tv.cnt - 1 >>> level & 31;
  cljs.core.pv_aset.call(null, ret, subidx, level === 5 ? tail_node : function() {
    var child = cljs.core.pv_aget.call(null, ret, subidx);
    if(!(child == null)) {
      return tv_push_tail.call(null, tv, level - 5, child, tail_node)
    }else {
      return cljs.core.new_path.call(null, tv.root.edit, level - 5, tail_node)
    }
  }());
  return ret
};
cljs.core.tv_pop_tail = function tv_pop_tail(tv, level, node) {
  var node__$1 = cljs.core.tv_ensure_editable.call(null, tv.root.edit, node);
  var subidx = tv.cnt - 2 >>> level & 31;
  if(level > 5) {
    var new_child = tv_pop_tail.call(null, tv, level - 5, cljs.core.pv_aget.call(null, node__$1, subidx));
    if(new_child == null && subidx === 0) {
      return null
    }else {
      cljs.core.pv_aset.call(null, node__$1, subidx, new_child);
      return node__$1
    }
  }else {
    if(subidx === 0) {
      return null
    }else {
      if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        cljs.core.pv_aset.call(null, node__$1, subidx, null);
        return node__$1
      }else {
        return null
      }
    }
  }
};
cljs.core.editable_array_for = function editable_array_for(tv, i) {
  if(0 <= i && i < tv.cnt) {
    if(i >= cljs.core.tail_off.call(null, tv)) {
      return tv.tail
    }else {
      var root = tv.root;
      var node = root;
      var level = tv.shift;
      while(true) {
        if(level > 0) {
          var G__529424 = cljs.core.tv_ensure_editable.call(null, root.edit, cljs.core.pv_aget.call(null, node, i >>> level & 31));
          var G__529425 = level - 5;
          node = G__529424;
          level = G__529425;
          continue
        }else {
          return node.arr
        }
        break
      }
    }
  }else {
    throw new Error([cljs.core.str("No item "), cljs.core.str(i), cljs.core.str(" in transient vector of length "), cljs.core.str(tv.cnt)].join(""));
  }
};
cljs.core.TransientVector = function(cnt, shift, root, tail) {
  this.cnt = cnt;
  this.shift = shift;
  this.root = root;
  this.tail = tail;
  this.cljs$lang$protocol_mask$partition0$ = 275;
  this.cljs$lang$protocol_mask$partition1$ = 88
};
cljs.core.TransientVector.cljs$lang$type = true;
cljs.core.TransientVector.cljs$lang$ctorStr = "cljs.core/TransientVector";
cljs.core.TransientVector.cljs$lang$ctorPrWriter = function(this__3829__auto__, writer__3830__auto__, opt__3831__auto__) {
  return cljs.core._write.call(null, writer__3830__auto__, "cljs.core/TransientVector")
};
cljs.core.TransientVector.prototype.call = function() {
  var G__529427 = null;
  var G__529427__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$2(null, k)
  };
  var G__529427__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found)
  };
  G__529427 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__529427__2.call(this, self__, k);
      case 3:
        return G__529427__3.call(this, self__, k, not_found)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  return G__529427
}();
cljs.core.TransientVector.prototype.apply = function(self__, args529426) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone.call(null, args529426)))
};
cljs.core.TransientVector.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$2(null, k)
};
cljs.core.TransientVector.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found)
};
cljs.core.TransientVector.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._nth.call(null, coll__$1, k, null)
};
cljs.core.TransientVector.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._nth.call(null, coll__$1, k, not_found)
};
cljs.core.TransientVector.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, n) {
  var self__ = this;
  var coll__$1 = this;
  if(self__.root.edit) {
    return cljs.core.array_for.call(null, coll__$1, n)[n & 31]
  }else {
    throw new Error("nth after persistent!");
  }
};
cljs.core.TransientVector.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, n, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if(0 <= n && n < self__.cnt) {
    return cljs.core._nth.call(null, coll__$1, n)
  }else {
    return not_found
  }
};
cljs.core.TransientVector.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if(self__.root.edit) {
    return self__.cnt
  }else {
    throw new Error("count after persistent!");
  }
};
cljs.core.TransientVector.prototype.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3 = function(tcoll, n, val) {
  var self__ = this;
  var tcoll__$1 = this;
  if(self__.root.edit) {
    if(0 <= n && n < self__.cnt) {
      if(cljs.core.tail_off.call(null, tcoll__$1) <= n) {
        self__.tail[n & 31] = val;
        return tcoll__$1
      }else {
        var new_root = function go(level, node) {
          var node__$1 = cljs.core.tv_ensure_editable.call(null, self__.root.edit, node);
          if(level === 0) {
            cljs.core.pv_aset.call(null, node__$1, n & 31, val);
            return node__$1
          }else {
            var subidx = n >>> level & 31;
            cljs.core.pv_aset.call(null, node__$1, subidx, go.call(null, level - 5, cljs.core.pv_aget.call(null, node__$1, subidx)));
            return node__$1
          }
        }.call(null, self__.shift, self__.root);
        self__.root = new_root;
        return tcoll__$1
      }
    }else {
      if(n === self__.cnt) {
        return cljs.core._conj_BANG_.call(null, tcoll__$1, val)
      }else {
        if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          throw new Error([cljs.core.str("Index "), cljs.core.str(n), cljs.core.str(" out of bounds for TransientVector of length"), cljs.core.str(self__.cnt)].join(""));
        }else {
          return null
        }
      }
    }
  }else {
    throw new Error("assoc! after persistent!");
  }
};
cljs.core.TransientVector.prototype.cljs$core$ITransientVector$_pop_BANG_$arity$1 = function(tcoll) {
  var self__ = this;
  var tcoll__$1 = this;
  if(self__.root.edit) {
    if(self__.cnt === 0) {
      throw new Error("Can't pop empty vector");
    }else {
      if(1 === self__.cnt) {
        self__.cnt = 0;
        return tcoll__$1
      }else {
        if((self__.cnt - 1 & 31) > 0) {
          self__.cnt = self__.cnt - 1;
          return tcoll__$1
        }else {
          if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
            var new_tail = cljs.core.editable_array_for.call(null, tcoll__$1, self__.cnt - 2);
            var new_root = function() {
              var nr = cljs.core.tv_pop_tail.call(null, tcoll__$1, self__.shift, self__.root);
              if(!(nr == null)) {
                return nr
              }else {
                return new cljs.core.VectorNode(self__.root.edit, new Array(32))
              }
            }();
            if(5 < self__.shift && cljs.core.pv_aget.call(null, new_root, 1) == null) {
              var new_root__$1 = cljs.core.tv_ensure_editable.call(null, self__.root.edit, cljs.core.pv_aget.call(null, new_root, 0));
              self__.root = new_root__$1;
              self__.shift = self__.shift - 5;
              self__.cnt = self__.cnt - 1;
              self__.tail = new_tail;
              return tcoll__$1
            }else {
              self__.root = new_root;
              self__.cnt = self__.cnt - 1;
              self__.tail = new_tail;
              return tcoll__$1
            }
          }else {
            return null
          }
        }
      }
    }
  }else {
    throw new Error("pop! after persistent!");
  }
};
cljs.core.TransientVector.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = function(tcoll, key, val) {
  var self__ = this;
  var tcoll__$1 = this;
  return cljs.core._assoc_n_BANG_.call(null, tcoll__$1, key, val)
};
cljs.core.TransientVector.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = function(tcoll, o) {
  var self__ = this;
  var tcoll__$1 = this;
  if(self__.root.edit) {
    if(self__.cnt - cljs.core.tail_off.call(null, tcoll__$1) < 32) {
      self__.tail[self__.cnt & 31] = o;
      self__.cnt = self__.cnt + 1;
      return tcoll__$1
    }else {
      var tail_node = new cljs.core.VectorNode(self__.root.edit, self__.tail);
      var new_tail = new Array(32);
      new_tail[0] = o;
      self__.tail = new_tail;
      if(self__.cnt >>> 5 > 1 << self__.shift) {
        var new_root_array = new Array(32);
        var new_shift = self__.shift + 5;
        new_root_array[0] = self__.root;
        new_root_array[1] = cljs.core.new_path.call(null, self__.root.edit, self__.shift, tail_node);
        self__.root = new cljs.core.VectorNode(self__.root.edit, new_root_array);
        self__.shift = new_shift;
        self__.cnt = self__.cnt + 1;
        return tcoll__$1
      }else {
        var new_root = cljs.core.tv_push_tail.call(null, tcoll__$1, self__.shift, self__.root, tail_node);
        self__.root = new_root;
        self__.cnt = self__.cnt + 1;
        return tcoll__$1
      }
    }
  }else {
    throw new Error("conj! after persistent!");
  }
};
cljs.core.TransientVector.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = function(tcoll) {
  var self__ = this;
  var tcoll__$1 = this;
  if(self__.root.edit) {
    self__.root.edit = null;
    var len = self__.cnt - cljs.core.tail_off.call(null, tcoll__$1);
    var trimmed_tail = new Array(len);
    cljs.core.array_copy.call(null, self__.tail, 0, trimmed_tail, 0, len);
    return new cljs.core.PersistentVector(null, self__.cnt, self__.shift, self__.root, trimmed_tail, null)
  }else {
    throw new Error("persistent! called twice");
  }
};
cljs.core.__GT_TransientVector = function __GT_TransientVector(cnt, shift, root, tail) {
  return new cljs.core.TransientVector(cnt, shift, root, tail)
};
cljs.core.PersistentQueueSeq = function(meta, front, rear, __hash) {
  this.meta = meta;
  this.front = front;
  this.rear = rear;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 31850572
};
cljs.core.PersistentQueueSeq.cljs$lang$type = true;
cljs.core.PersistentQueueSeq.cljs$lang$ctorStr = "cljs.core/PersistentQueueSeq";
cljs.core.PersistentQueueSeq.cljs$lang$ctorPrWriter = function(this__3829__auto__, writer__3830__auto__, opt__3831__auto__) {
  return cljs.core._write.call(null, writer__3830__auto__, "cljs.core/PersistentQueueSeq")
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__3696__auto__ = self__.__hash;
  if(!(h__3696__auto__ == null)) {
    return h__3696__auto__
  }else {
    var h__3696__auto____$1 = cljs.core.hash_coll.call(null, coll__$1);
    self__.__hash = h__3696__auto____$1;
    return h__3696__auto____$1
  }
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons.call(null, o, coll__$1)
};
cljs.core.PersistentQueueSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll)
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.first.call(null, self__.front)
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var temp__4090__auto__ = cljs.core.next.call(null, self__.front);
  if(temp__4090__auto__) {
    var f1 = temp__4090__auto__;
    return new cljs.core.PersistentQueueSeq(self__.meta, f1, self__.rear, null)
  }else {
    if(self__.rear == null) {
      return cljs.core._empty.call(null, coll__$1)
    }else {
      return new cljs.core.PersistentQueueSeq(self__.meta, self__.rear, null, null)
    }
  }
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other)
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentQueueSeq(meta__$1, self__.front, self__.rear, self__.__hash)
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, self__.meta)
};
cljs.core.__GT_PersistentQueueSeq = function __GT_PersistentQueueSeq(meta, front, rear, __hash) {
  return new cljs.core.PersistentQueueSeq(meta, front, rear, __hash)
};
cljs.core.PersistentQueue = function(meta, count, front, rear, __hash) {
  this.meta = meta;
  this.count = count;
  this.front = front;
  this.rear = rear;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 31858766
};
cljs.core.PersistentQueue.cljs$lang$type = true;
cljs.core.PersistentQueue.cljs$lang$ctorStr = "cljs.core/PersistentQueue";
cljs.core.PersistentQueue.cljs$lang$ctorPrWriter = function(this__3829__auto__, writer__3830__auto__, opt__3831__auto__) {
  return cljs.core._write.call(null, writer__3830__auto__, "cljs.core/PersistentQueue")
};
cljs.core.PersistentQueue.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__3696__auto__ = self__.__hash;
  if(!(h__3696__auto__ == null)) {
    return h__3696__auto__
  }else {
    var h__3696__auto____$1 = cljs.core.hash_coll.call(null, coll__$1);
    self__.__hash = h__3696__auto____$1;
    return h__3696__auto____$1
  }
};
cljs.core.PersistentQueue.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  if(cljs.core.truth_(self__.front)) {
    return new cljs.core.PersistentQueue(self__.meta, self__.count + 1, self__.front, cljs.core.conj.call(null, function() {
      var or__3285__auto__ = self__.rear;
      if(cljs.core.truth_(or__3285__auto__)) {
        return or__3285__auto__
      }else {
        return cljs.core.PersistentVector.EMPTY
      }
    }(), o), null)
  }else {
    return new cljs.core.PersistentQueue(self__.meta, self__.count + 1, cljs.core.conj.call(null, self__.front, o), cljs.core.PersistentVector.EMPTY, null)
  }
};
cljs.core.PersistentQueue.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll)
};
cljs.core.PersistentQueue.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var rear__$1 = cljs.core.seq.call(null, self__.rear);
  if(cljs.core.truth_(function() {
    var or__3285__auto__ = self__.front;
    if(cljs.core.truth_(or__3285__auto__)) {
      return or__3285__auto__
    }else {
      return rear__$1
    }
  }())) {
    return new cljs.core.PersistentQueueSeq(null, self__.front, cljs.core.seq.call(null, rear__$1), null)
  }else {
    return null
  }
};
cljs.core.PersistentQueue.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.count
};
cljs.core.PersistentQueue.prototype.cljs$core$IStack$_peek$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.first.call(null, self__.front)
};
cljs.core.PersistentQueue.prototype.cljs$core$IStack$_pop$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if(cljs.core.truth_(self__.front)) {
    var temp__4090__auto__ = cljs.core.next.call(null, self__.front);
    if(temp__4090__auto__) {
      var f1 = temp__4090__auto__;
      return new cljs.core.PersistentQueue(self__.meta, self__.count - 1, f1, self__.rear, null)
    }else {
      return new cljs.core.PersistentQueue(self__.meta, self__.count - 1, cljs.core.seq.call(null, self__.rear), cljs.core.PersistentVector.EMPTY, null)
    }
  }else {
    return coll__$1
  }
};
cljs.core.PersistentQueue.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.first.call(null, self__.front)
};
cljs.core.PersistentQueue.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.rest.call(null, cljs.core.seq.call(null, coll__$1))
};
cljs.core.PersistentQueue.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other)
};
cljs.core.PersistentQueue.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentQueue(meta__$1, self__.count, self__.front, self__.rear, self__.__hash)
};
cljs.core.PersistentQueue.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta
};
cljs.core.PersistentQueue.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.PersistentQueue.EMPTY
};
cljs.core.__GT_PersistentQueue = function __GT_PersistentQueue(meta, count, front, rear, __hash) {
  return new cljs.core.PersistentQueue(meta, count, front, rear, __hash)
};
cljs.core.PersistentQueue.EMPTY = new cljs.core.PersistentQueue(null, 0, null, cljs.core.PersistentVector.EMPTY, 0);
cljs.core.NeverEquiv = function() {
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 2097152
};
cljs.core.NeverEquiv.cljs$lang$type = true;
cljs.core.NeverEquiv.cljs$lang$ctorStr = "cljs.core/NeverEquiv";
cljs.core.NeverEquiv.cljs$lang$ctorPrWriter = function(this__3829__auto__, writer__3830__auto__, opt__3831__auto__) {
  return cljs.core._write.call(null, writer__3830__auto__, "cljs.core/NeverEquiv")
};
cljs.core.NeverEquiv.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(o, other) {
  var self__ = this;
  var o__$1 = this;
  return false
};
cljs.core.__GT_NeverEquiv = function __GT_NeverEquiv() {
  return new cljs.core.NeverEquiv
};
cljs.core.never_equiv = new cljs.core.NeverEquiv;
cljs.core.equiv_map = function equiv_map(x, y) {
  return cljs.core.boolean$.call(null, cljs.core.map_QMARK_.call(null, y) ? cljs.core.count.call(null, x) === cljs.core.count.call(null, y) ? cljs.core.every_QMARK_.call(null, cljs.core.identity, cljs.core.map.call(null, function(xkv) {
    return cljs.core._EQ_.call(null, cljs.core.get.call(null, y, cljs.core.first.call(null, xkv), cljs.core.never_equiv), cljs.core.second.call(null, xkv))
  }, x)) : null : null)
};
cljs.core.scan_array = function scan_array(incr, k, array) {
  var len = array.length;
  var i = 0;
  while(true) {
    if(i < len) {
      if(k === array[i]) {
        return i
      }else {
        var G__529428 = i + incr;
        i = G__529428;
        continue
      }
    }else {
      return null
    }
    break
  }
};
cljs.core.obj_map_compare_keys = function obj_map_compare_keys(a, b) {
  var a__$1 = cljs.core.hash.call(null, a);
  var b__$1 = cljs.core.hash.call(null, b);
  if(a__$1 < b__$1) {
    return-1
  }else {
    if(a__$1 > b__$1) {
      return 1
    }else {
      if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        return 0
      }else {
        return null
      }
    }
  }
};
cljs.core.obj_map__GT_hash_map = function obj_map__GT_hash_map(m, k, v) {
  var ks = m.keys;
  var len = ks.length;
  var so = m.strobj;
  var mm = cljs.core.meta.call(null, m);
  var i = 0;
  var out = cljs.core.transient$.call(null, cljs.core.PersistentHashMap.EMPTY);
  while(true) {
    if(i < len) {
      var k__$1 = ks[i];
      var G__529429 = i + 1;
      var G__529430 = cljs.core.assoc_BANG_.call(null, out, k__$1, so[k__$1]);
      i = G__529429;
      out = G__529430;
      continue
    }else {
      return cljs.core.with_meta.call(null, cljs.core.persistent_BANG_.call(null, cljs.core.assoc_BANG_.call(null, out, k, v)), mm)
    }
    break
  }
};
cljs.core.obj_clone = function obj_clone(obj, ks) {
  var new_obj = function() {
    var obj529434 = {};
    return obj529434
  }();
  var l = ks.length;
  var i_529435 = 0;
  while(true) {
    if(i_529435 < l) {
      var k_529436 = ks[i_529435];
      new_obj[k_529436] = obj[k_529436];
      var G__529437 = i_529435 + 1;
      i_529435 = G__529437;
      continue
    }else {
    }
    break
  }
  return new_obj
};
cljs.core.ObjMap = function(meta, keys, strobj, update_count, __hash) {
  this.meta = meta;
  this.keys = keys;
  this.strobj = strobj;
  this.update_count = update_count;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 4;
  this.cljs$lang$protocol_mask$partition0$ = 16123663
};
cljs.core.ObjMap.cljs$lang$type = true;
cljs.core.ObjMap.cljs$lang$ctorStr = "cljs.core/ObjMap";
cljs.core.ObjMap.cljs$lang$ctorPrWriter = function(this__3829__auto__, writer__3830__auto__, opt__3831__auto__) {
  return cljs.core._write.call(null, writer__3830__auto__, "cljs.core/ObjMap")
};
cljs.core.ObjMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.transient$.call(null, cljs.core.into.call(null, cljs.core.PersistentHashMap.EMPTY, coll__$1))
};
cljs.core.ObjMap.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__3696__auto__ = self__.__hash;
  if(!(h__3696__auto__ == null)) {
    return h__3696__auto__
  }else {
    var h__3696__auto____$1 = cljs.core.hash_imap.call(null, coll__$1);
    self__.__hash = h__3696__auto____$1;
    return h__3696__auto____$1
  }
};
cljs.core.ObjMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._lookup.call(null, coll__$1, k, null)
};
cljs.core.ObjMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if(goog.isString(k) && !(cljs.core.scan_array.call(null, 1, k, self__.keys) == null)) {
    return self__.strobj[k]
  }else {
    return not_found
  }
};
cljs.core.ObjMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var self__ = this;
  var coll__$1 = this;
  if(goog.isString(k)) {
    if(self__.update_count > cljs.core.ObjMap.HASHMAP_THRESHOLD || self__.keys.length >= cljs.core.ObjMap.HASHMAP_THRESHOLD) {
      return cljs.core.obj_map__GT_hash_map.call(null, coll__$1, k, v)
    }else {
      if(!(cljs.core.scan_array.call(null, 1, k, self__.keys) == null)) {
        var new_strobj = cljs.core.obj_clone.call(null, self__.strobj, self__.keys);
        new_strobj[k] = v;
        return new cljs.core.ObjMap(self__.meta, self__.keys, new_strobj, self__.update_count + 1, null)
      }else {
        var new_strobj = cljs.core.obj_clone.call(null, self__.strobj, self__.keys);
        var new_keys = cljs.core.aclone.call(null, self__.keys);
        new_strobj[k] = v;
        new_keys.push(k);
        return new cljs.core.ObjMap(self__.meta, new_keys, new_strobj, self__.update_count + 1, null)
      }
    }
  }else {
    return cljs.core.obj_map__GT_hash_map.call(null, coll__$1, k, v)
  }
};
cljs.core.ObjMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  if(goog.isString(k) && !(cljs.core.scan_array.call(null, 1, k, self__.keys) == null)) {
    return true
  }else {
    return false
  }
};
cljs.core.ObjMap.prototype.call = function() {
  var G__529440 = null;
  var G__529440__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$2(null, k)
  };
  var G__529440__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found)
  };
  G__529440 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__529440__2.call(this, self__, k);
      case 3:
        return G__529440__3.call(this, self__, k, not_found)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  return G__529440
}();
cljs.core.ObjMap.prototype.apply = function(self__, args529439) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone.call(null, args529439)))
};
cljs.core.ObjMap.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$2(null, k)
};
cljs.core.ObjMap.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found)
};
cljs.core.ObjMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(coll, f, init) {
  var self__ = this;
  var coll__$1 = this;
  var len = self__.keys.length;
  var keys__$1 = self__.keys.sort(cljs.core.obj_map_compare_keys);
  var init__$1 = init;
  while(true) {
    if(cljs.core.seq.call(null, keys__$1)) {
      var k = cljs.core.first.call(null, keys__$1);
      var init__$2 = f.call(null, init__$1, k, self__.strobj[k]);
      if(cljs.core.reduced_QMARK_.call(null, init__$2)) {
        return cljs.core.deref.call(null, init__$2)
      }else {
        var G__529441 = cljs.core.rest.call(null, keys__$1);
        var G__529442 = init__$2;
        keys__$1 = G__529441;
        init__$1 = G__529442;
        continue
      }
    }else {
      return init__$1
    }
    break
  }
};
cljs.core.ObjMap.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, entry) {
  var self__ = this;
  var coll__$1 = this;
  if(cljs.core.vector_QMARK_.call(null, entry)) {
    return cljs.core._assoc.call(null, coll__$1, cljs.core._nth.call(null, entry, 0), cljs.core._nth.call(null, entry, 1))
  }else {
    return cljs.core.reduce.call(null, cljs.core._conj, coll__$1, entry)
  }
};
cljs.core.ObjMap.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll)
};
cljs.core.ObjMap.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if(self__.keys.length > 0) {
    return cljs.core.map.call(null, function(p1__529438_SHARP_) {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [p1__529438_SHARP_, self__.strobj[p1__529438_SHARP_]], null)
    }, self__.keys.sort(cljs.core.obj_map_compare_keys))
  }else {
    return null
  }
};
cljs.core.ObjMap.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.keys.length
};
cljs.core.ObjMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_map.call(null, coll__$1, other)
};
cljs.core.ObjMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.ObjMap(meta__$1, self__.keys, self__.strobj, self__.update_count, self__.__hash)
};
cljs.core.ObjMap.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta
};
cljs.core.ObjMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta.call(null, cljs.core.ObjMap.EMPTY, self__.meta)
};
cljs.core.ObjMap.prototype.cljs$core$IMap$_dissoc$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  if(goog.isString(k) && !(cljs.core.scan_array.call(null, 1, k, self__.keys) == null)) {
    var new_keys = cljs.core.aclone.call(null, self__.keys);
    var new_strobj = cljs.core.obj_clone.call(null, self__.strobj, self__.keys);
    new_keys.splice(cljs.core.scan_array.call(null, 1, k, new_keys), 1);
    delete new_strobj[k];
    return new cljs.core.ObjMap(self__.meta, new_keys, new_strobj, self__.update_count + 1, null)
  }else {
    return coll__$1
  }
};
cljs.core.__GT_ObjMap = function __GT_ObjMap(meta, keys, strobj, update_count, __hash) {
  return new cljs.core.ObjMap(meta, keys, strobj, update_count, __hash)
};
cljs.core.ObjMap.EMPTY = new cljs.core.ObjMap(null, [], function() {
  var obj529444 = {};
  return obj529444
}(), 0, 0);
cljs.core.ObjMap.HASHMAP_THRESHOLD = 8;
cljs.core.ObjMap.fromObject = function(ks, obj) {
  return new cljs.core.ObjMap(null, ks, obj, 0, null)
};
cljs.core.array_map_index_of_nil_QMARK_ = function array_map_index_of_nil_QMARK_(arr, m, k) {
  var len = arr.length;
  var i = 0;
  while(true) {
    if(len <= i) {
      return-1
    }else {
      if(arr[i] == null) {
        return i
      }else {
        if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          var G__529445 = i + 2;
          i = G__529445;
          continue
        }else {
          return null
        }
      }
    }
    break
  }
};
cljs.core.array_map_index_of_keyword_QMARK_ = function array_map_index_of_keyword_QMARK_(arr, m, k) {
  var len = arr.length;
  var kstr = k.fqn;
  var i = 0;
  while(true) {
    if(len <= i) {
      return-1
    }else {
      if(function() {
        var k_SINGLEQUOTE_ = arr[i];
        return k_SINGLEQUOTE_ instanceof cljs.core.Keyword && kstr === k_SINGLEQUOTE_.fqn
      }()) {
        return i
      }else {
        if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          var G__529446 = i + 2;
          i = G__529446;
          continue
        }else {
          return null
        }
      }
    }
    break
  }
};
cljs.core.array_map_index_of_symbol_QMARK_ = function array_map_index_of_symbol_QMARK_(arr, m, k) {
  var len = arr.length;
  var kstr = k.str;
  var i = 0;
  while(true) {
    if(len <= i) {
      return-1
    }else {
      if(function() {
        var k_SINGLEQUOTE_ = arr[i];
        return k_SINGLEQUOTE_ instanceof cljs.core.Symbol && kstr === k_SINGLEQUOTE_.str
      }()) {
        return i
      }else {
        if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          var G__529447 = i + 2;
          i = G__529447;
          continue
        }else {
          return null
        }
      }
    }
    break
  }
};
cljs.core.array_map_index_of_identical_QMARK_ = function array_map_index_of_identical_QMARK_(arr, m, k) {
  var len = arr.length;
  var i = 0;
  while(true) {
    if(len <= i) {
      return-1
    }else {
      if(k === arr[i]) {
        return i
      }else {
        if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          var G__529448 = i + 2;
          i = G__529448;
          continue
        }else {
          return null
        }
      }
    }
    break
  }
};
cljs.core.array_map_index_of_equiv_QMARK_ = function array_map_index_of_equiv_QMARK_(arr, m, k) {
  var len = arr.length;
  var i = 0;
  while(true) {
    if(len <= i) {
      return-1
    }else {
      if(cljs.core._EQ_.call(null, k, arr[i])) {
        return i
      }else {
        if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          var G__529449 = i + 2;
          i = G__529449;
          continue
        }else {
          return null
        }
      }
    }
    break
  }
};
cljs.core.array_map_index_of = function array_map_index_of(m, k) {
  var arr = m.arr;
  if(k instanceof cljs.core.Keyword) {
    return cljs.core.array_map_index_of_keyword_QMARK_.call(null, arr, m, k)
  }else {
    if(goog.isString(k) || typeof k === "number") {
      return cljs.core.array_map_index_of_identical_QMARK_.call(null, arr, m, k)
    }else {
      if(k instanceof cljs.core.Symbol) {
        return cljs.core.array_map_index_of_symbol_QMARK_.call(null, arr, m, k)
      }else {
        if(k == null) {
          return cljs.core.array_map_index_of_nil_QMARK_.call(null, arr, m, k)
        }else {
          if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
            return cljs.core.array_map_index_of_equiv_QMARK_.call(null, arr, m, k)
          }else {
            return null
          }
        }
      }
    }
  }
};
cljs.core.array_map_extend_kv = function array_map_extend_kv(m, k, v) {
  var arr = m.arr;
  var l = arr.length;
  var narr = new Array(l + 2);
  var i_529450 = 0;
  while(true) {
    if(i_529450 < l) {
      narr[i_529450] = arr[i_529450];
      var G__529451 = i_529450 + 1;
      i_529450 = G__529451;
      continue
    }else {
    }
    break
  }
  narr[l] = k;
  narr[l + 1] = v;
  return narr
};
cljs.core.PersistentArrayMapSeq = function(arr, i, _meta) {
  this.arr = arr;
  this.i = i;
  this._meta = _meta;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32374990
};
cljs.core.PersistentArrayMapSeq.cljs$lang$type = true;
cljs.core.PersistentArrayMapSeq.cljs$lang$ctorStr = "cljs.core/PersistentArrayMapSeq";
cljs.core.PersistentArrayMapSeq.cljs$lang$ctorPrWriter = function(this__3829__auto__, writer__3830__auto__, opt__3831__auto__) {
  return cljs.core._write.call(null, writer__3830__auto__, "cljs.core/PersistentArrayMapSeq")
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.hash_coll.call(null, coll__$1)
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if(self__.i < self__.arr.length - 2) {
    return new cljs.core.PersistentArrayMapSeq(self__.arr, self__.i + 2, self__._meta)
  }else {
    return null
  }
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons.call(null, o, coll__$1)
};
cljs.core.PersistentArrayMapSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll)
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, coll__$1)
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, start, coll__$1)
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return(self__.arr.length - self__.i) / 2
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.arr[self__.i], self__.arr[self__.i + 1]], null)
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if(self__.i < self__.arr.length - 2) {
    return new cljs.core.PersistentArrayMapSeq(self__.arr, self__.i + 2, self__._meta)
  }else {
    return cljs.core.List.EMPTY
  }
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other)
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, new_meta) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentArrayMapSeq(self__.arr, self__.i, new_meta)
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__._meta
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, self__._meta)
};
cljs.core.__GT_PersistentArrayMapSeq = function __GT_PersistentArrayMapSeq(arr, i, _meta) {
  return new cljs.core.PersistentArrayMapSeq(arr, i, _meta)
};
cljs.core.persistent_array_map_seq = function persistent_array_map_seq(arr, i, _meta) {
  if(i <= arr.length - 2) {
    return new cljs.core.PersistentArrayMapSeq(arr, i, _meta)
  }else {
    return null
  }
};
cljs.core.PersistentArrayMap = function(meta, cnt, arr, __hash) {
  this.meta = meta;
  this.cnt = cnt;
  this.arr = arr;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 4;
  this.cljs$lang$protocol_mask$partition0$ = 16123663
};
cljs.core.PersistentArrayMap.cljs$lang$type = true;
cljs.core.PersistentArrayMap.cljs$lang$ctorStr = "cljs.core/PersistentArrayMap";
cljs.core.PersistentArrayMap.cljs$lang$ctorPrWriter = function(this__3829__auto__, writer__3830__auto__, opt__3831__auto__) {
  return cljs.core._write.call(null, writer__3830__auto__, "cljs.core/PersistentArrayMap")
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.TransientArrayMap(function() {
    var obj529454 = {};
    return obj529454
  }(), self__.arr.length, cljs.core.aclone.call(null, self__.arr))
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__3696__auto__ = self__.__hash;
  if(!(h__3696__auto__ == null)) {
    return h__3696__auto__
  }else {
    var h__3696__auto____$1 = cljs.core.hash_imap.call(null, coll__$1);
    self__.__hash = h__3696__auto____$1;
    return h__3696__auto____$1
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._lookup.call(null, coll__$1, k, null)
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  var coll__$1 = this;
  var idx = cljs.core.array_map_index_of.call(null, coll__$1, k);
  if(idx === -1) {
    return not_found
  }else {
    return self__.arr[idx + 1]
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var self__ = this;
  var coll__$1 = this;
  var idx = cljs.core.array_map_index_of.call(null, coll__$1, k);
  if(idx === -1) {
    if(self__.cnt < cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD) {
      var arr__$1 = cljs.core.array_map_extend_kv.call(null, coll__$1, k, v);
      return new cljs.core.PersistentArrayMap(self__.meta, self__.cnt + 1, arr__$1, null)
    }else {
      return cljs.core._with_meta.call(null, cljs.core._assoc.call(null, cljs.core.into.call(null, cljs.core.PersistentHashMap.EMPTY, coll__$1), k, v), self__.meta)
    }
  }else {
    if(v === self__.arr[idx + 1]) {
      return coll__$1
    }else {
      if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        var arr__$1 = function() {
          var G__529455 = cljs.core.aclone.call(null, self__.arr);
          G__529455[idx + 1] = v;
          return G__529455
        }();
        return new cljs.core.PersistentArrayMap(self__.meta, self__.cnt, arr__$1, null)
      }else {
        return null
      }
    }
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return!(cljs.core.array_map_index_of.call(null, coll__$1, k) === -1)
};
cljs.core.PersistentArrayMap.prototype.call = function() {
  var G__529456 = null;
  var G__529456__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$2(null, k)
  };
  var G__529456__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found)
  };
  G__529456 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__529456__2.call(this, self__, k);
      case 3:
        return G__529456__3.call(this, self__, k, not_found)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  return G__529456
}();
cljs.core.PersistentArrayMap.prototype.apply = function(self__, args529452) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone.call(null, args529452)))
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$2(null, k)
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found)
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(coll, f, init) {
  var self__ = this;
  var coll__$1 = this;
  var len = self__.arr.length;
  var i = 0;
  var init__$1 = init;
  while(true) {
    if(i < len) {
      var init__$2 = f.call(null, init__$1, self__.arr[i], self__.arr[i + 1]);
      if(cljs.core.reduced_QMARK_.call(null, init__$2)) {
        return cljs.core.deref.call(null, init__$2)
      }else {
        var G__529457 = i + 2;
        var G__529458 = init__$2;
        i = G__529457;
        init__$1 = G__529458;
        continue
      }
    }else {
      return init__$1
    }
    break
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, entry) {
  var self__ = this;
  var coll__$1 = this;
  if(cljs.core.vector_QMARK_.call(null, entry)) {
    return cljs.core._assoc.call(null, coll__$1, cljs.core._nth.call(null, entry, 0), cljs.core._nth.call(null, entry, 1))
  }else {
    return cljs.core.reduce.call(null, cljs.core._conj, coll__$1, entry)
  }
};
cljs.core.PersistentArrayMap.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll)
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.persistent_array_map_seq.call(null, self__.arr, 0, null)
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.cnt
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_map.call(null, coll__$1, other)
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentArrayMap(meta__$1, self__.cnt, self__.arr, self__.__hash)
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._with_meta.call(null, cljs.core.PersistentArrayMap.EMPTY, self__.meta)
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IMap$_dissoc$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  var idx = cljs.core.array_map_index_of.call(null, coll__$1, k);
  if(idx >= 0) {
    var len = self__.arr.length;
    var new_len = len - 2;
    if(new_len === 0) {
      return cljs.core._empty.call(null, coll__$1)
    }else {
      var new_arr = new Array(new_len);
      var s = 0;
      var d = 0;
      while(true) {
        if(s >= len) {
          return new cljs.core.PersistentArrayMap(self__.meta, self__.cnt - 1, new_arr, null)
        }else {
          if(cljs.core._EQ_.call(null, k, self__.arr[s])) {
            var G__529459 = s + 2;
            var G__529460 = d;
            s = G__529459;
            d = G__529460;
            continue
          }else {
            if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
              new_arr[d] = self__.arr[s];
              new_arr[d + 1] = self__.arr[s + 1];
              var G__529461 = s + 2;
              var G__529462 = d + 2;
              s = G__529461;
              d = G__529462;
              continue
            }else {
              return null
            }
          }
        }
        break
      }
    }
  }else {
    return coll__$1
  }
};
cljs.core.__GT_PersistentArrayMap = function __GT_PersistentArrayMap(meta, cnt, arr, __hash) {
  return new cljs.core.PersistentArrayMap(meta, cnt, arr, __hash)
};
cljs.core.PersistentArrayMap.EMPTY = new cljs.core.PersistentArrayMap(null, 0, [], null);
cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD = 8;
cljs.core.PersistentArrayMap.fromArray = function(arr, no_clone, no_check) {
  var arr__$1 = no_clone ? arr : cljs.core.aclone.call(null, arr);
  if(no_check) {
    var cnt = arr__$1.length / 2;
    return new cljs.core.PersistentArrayMap(null, cnt, arr__$1, null)
  }else {
    var len = arr__$1.length;
    var i = 0;
    var ret = cljs.core.transient$.call(null, cljs.core.PersistentArrayMap.EMPTY);
    while(true) {
      if(i < len) {
        var G__529463 = i + 2;
        var G__529464 = cljs.core._assoc_BANG_.call(null, ret, arr__$1[i], arr__$1[i + 1]);
        i = G__529463;
        ret = G__529464;
        continue
      }else {
        return cljs.core._persistent_BANG_.call(null, ret)
      }
      break
    }
  }
};
cljs.core.TransientArrayMap = function(editable_QMARK_, len, arr) {
  this.editable_QMARK_ = editable_QMARK_;
  this.len = len;
  this.arr = arr;
  this.cljs$lang$protocol_mask$partition1$ = 56;
  this.cljs$lang$protocol_mask$partition0$ = 258
};
cljs.core.TransientArrayMap.cljs$lang$type = true;
cljs.core.TransientArrayMap.cljs$lang$ctorStr = "cljs.core/TransientArrayMap";
cljs.core.TransientArrayMap.cljs$lang$ctorPrWriter = function(this__3829__auto__, writer__3830__auto__, opt__3831__auto__) {
  return cljs.core._write.call(null, writer__3830__auto__, "cljs.core/TransientArrayMap")
};
cljs.core.TransientArrayMap.prototype.cljs$core$ITransientMap$_dissoc_BANG_$arity$2 = function(tcoll, key) {
  var self__ = this;
  var tcoll__$1 = this;
  if(cljs.core.truth_(self__.editable_QMARK_)) {
    var idx = cljs.core.array_map_index_of.call(null, tcoll__$1, key);
    if(idx >= 0) {
      self__.arr[idx] = self__.arr[self__.len - 2];
      self__.arr[idx + 1] = self__.arr[self__.len - 1];
      var G__529465_529467 = self__.arr;
      G__529465_529467.pop();
      G__529465_529467.pop();
      self__.len = self__.len - 2
    }else {
    }
    return tcoll__$1
  }else {
    throw new Error("dissoc! after persistent!");
  }
};
cljs.core.TransientArrayMap.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = function(tcoll, key, val) {
  var self__ = this;
  var tcoll__$1 = this;
  if(cljs.core.truth_(self__.editable_QMARK_)) {
    var idx = cljs.core.array_map_index_of.call(null, tcoll__$1, key);
    if(idx === -1) {
      if(self__.len + 2 <= 2 * cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD) {
        self__.len = self__.len + 2;
        self__.arr.push(key);
        self__.arr.push(val);
        return tcoll__$1
      }else {
        return cljs.core.assoc_BANG_.call(null, cljs.core.array__GT_transient_hash_map.call(null, self__.len, self__.arr), key, val)
      }
    }else {
      if(val === self__.arr[idx + 1]) {
        return tcoll__$1
      }else {
        self__.arr[idx + 1] = val;
        return tcoll__$1
      }
    }
  }else {
    throw new Error("assoc! after persistent!");
  }
};
cljs.core.TransientArrayMap.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = function(tcoll, o) {
  var self__ = this;
  var tcoll__$1 = this;
  if(cljs.core.truth_(self__.editable_QMARK_)) {
    if(function() {
      var G__529466 = o;
      if(G__529466) {
        var bit__3911__auto__ = G__529466.cljs$lang$protocol_mask$partition0$ & 2048;
        if(bit__3911__auto__ || G__529466.cljs$core$IMapEntry$) {
          return true
        }else {
          if(!G__529466.cljs$lang$protocol_mask$partition0$) {
            return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IMapEntry, G__529466)
          }else {
            return false
          }
        }
      }else {
        return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IMapEntry, G__529466)
      }
    }()) {
      return cljs.core._assoc_BANG_.call(null, tcoll__$1, cljs.core.key.call(null, o), cljs.core.val.call(null, o))
    }else {
      var es = cljs.core.seq.call(null, o);
      var tcoll__$2 = tcoll__$1;
      while(true) {
        var temp__4090__auto__ = cljs.core.first.call(null, es);
        if(cljs.core.truth_(temp__4090__auto__)) {
          var e = temp__4090__auto__;
          var G__529468 = cljs.core.next.call(null, es);
          var G__529469 = cljs.core._assoc_BANG_.call(null, tcoll__$2, cljs.core.key.call(null, e), cljs.core.val.call(null, e));
          es = G__529468;
          tcoll__$2 = G__529469;
          continue
        }else {
          return tcoll__$2
        }
        break
      }
    }
  }else {
    throw new Error("conj! after persistent!");
  }
};
cljs.core.TransientArrayMap.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = function(tcoll) {
  var self__ = this;
  var tcoll__$1 = this;
  if(cljs.core.truth_(self__.editable_QMARK_)) {
    self__.editable_QMARK_ = false;
    return new cljs.core.PersistentArrayMap(null, cljs.core.quot.call(null, self__.len, 2), self__.arr, null)
  }else {
    throw new Error("persistent! called twice");
  }
};
cljs.core.TransientArrayMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(tcoll, k) {
  var self__ = this;
  var tcoll__$1 = this;
  return cljs.core._lookup.call(null, tcoll__$1, k, null)
};
cljs.core.TransientArrayMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(tcoll, k, not_found) {
  var self__ = this;
  var tcoll__$1 = this;
  if(cljs.core.truth_(self__.editable_QMARK_)) {
    var idx = cljs.core.array_map_index_of.call(null, tcoll__$1, k);
    if(idx === -1) {
      return not_found
    }else {
      return self__.arr[idx + 1]
    }
  }else {
    throw new Error("lookup after persistent!");
  }
};
cljs.core.TransientArrayMap.prototype.cljs$core$ICounted$_count$arity$1 = function(tcoll) {
  var self__ = this;
  var tcoll__$1 = this;
  if(cljs.core.truth_(self__.editable_QMARK_)) {
    return cljs.core.quot.call(null, self__.len, 2)
  }else {
    throw new Error("count after persistent!");
  }
};
cljs.core.__GT_TransientArrayMap = function __GT_TransientArrayMap(editable_QMARK_, len, arr) {
  return new cljs.core.TransientArrayMap(editable_QMARK_, len, arr)
};
cljs.core.array__GT_transient_hash_map = function array__GT_transient_hash_map(len, arr) {
  var out = cljs.core.transient$.call(null, cljs.core.PersistentHashMap.EMPTY);
  var i = 0;
  while(true) {
    if(i < len) {
      var G__529470 = cljs.core.assoc_BANG_.call(null, out, arr[i], arr[i + 1]);
      var G__529471 = i + 2;
      out = G__529470;
      i = G__529471;
      continue
    }else {
      return out
    }
    break
  }
};
cljs.core.Box = function(val) {
  this.val = val
};
cljs.core.Box.cljs$lang$type = true;
cljs.core.Box.cljs$lang$ctorStr = "cljs.core/Box";
cljs.core.Box.cljs$lang$ctorPrWriter = function(this__3832__auto__, writer__3833__auto__, opts__3834__auto__) {
  return cljs.core._write.call(null, writer__3833__auto__, "cljs.core/Box")
};
cljs.core.__GT_Box = function __GT_Box(val) {
  return new cljs.core.Box(val)
};
cljs.core.key_test = function key_test(key, other) {
  if(key === other) {
    return true
  }else {
    if(cljs.core.keyword_identical_QMARK_.call(null, key, other)) {
      return true
    }else {
      if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        return cljs.core._EQ_.call(null, key, other)
      }else {
        return null
      }
    }
  }
};
cljs.core.mask = function mask(hash, shift) {
  return hash >>> shift & 31
};
cljs.core.clone_and_set = function() {
  var clone_and_set = null;
  var clone_and_set__3 = function(arr, i, a) {
    var G__529474 = cljs.core.aclone.call(null, arr);
    G__529474[i] = a;
    return G__529474
  };
  var clone_and_set__5 = function(arr, i, a, j, b) {
    var G__529475 = cljs.core.aclone.call(null, arr);
    G__529475[i] = a;
    G__529475[j] = b;
    return G__529475
  };
  clone_and_set = function(arr, i, a, j, b) {
    switch(arguments.length) {
      case 3:
        return clone_and_set__3.call(this, arr, i, a);
      case 5:
        return clone_and_set__5.call(this, arr, i, a, j, b)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  clone_and_set.cljs$core$IFn$_invoke$arity$3 = clone_and_set__3;
  clone_and_set.cljs$core$IFn$_invoke$arity$5 = clone_and_set__5;
  return clone_and_set
}();
cljs.core.remove_pair = function remove_pair(arr, i) {
  var new_arr = new Array(arr.length - 2);
  cljs.core.array_copy.call(null, arr, 0, new_arr, 0, 2 * i);
  cljs.core.array_copy.call(null, arr, 2 * (i + 1), new_arr, 2 * i, new_arr.length - 2 * i);
  return new_arr
};
cljs.core.bitmap_indexed_node_index = function bitmap_indexed_node_index(bitmap, bit) {
  return cljs.core.bit_count.call(null, bitmap & bit - 1)
};
cljs.core.bitpos = function bitpos(hash, shift) {
  return 1 << (hash >>> shift & 31)
};
cljs.core.edit_and_set = function() {
  var edit_and_set = null;
  var edit_and_set__4 = function(inode, edit, i, a) {
    var editable = inode.ensure_editable(edit);
    editable.arr[i] = a;
    return editable
  };
  var edit_and_set__6 = function(inode, edit, i, a, j, b) {
    var editable = inode.ensure_editable(edit);
    editable.arr[i] = a;
    editable.arr[j] = b;
    return editable
  };
  edit_and_set = function(inode, edit, i, a, j, b) {
    switch(arguments.length) {
      case 4:
        return edit_and_set__4.call(this, inode, edit, i, a);
      case 6:
        return edit_and_set__6.call(this, inode, edit, i, a, j, b)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  edit_and_set.cljs$core$IFn$_invoke$arity$4 = edit_and_set__4;
  edit_and_set.cljs$core$IFn$_invoke$arity$6 = edit_and_set__6;
  return edit_and_set
}();
cljs.core.inode_kv_reduce = function inode_kv_reduce(arr, f, init) {
  var len = arr.length;
  var i = 0;
  var init__$1 = init;
  while(true) {
    if(i < len) {
      var init__$2 = function() {
        var k = arr[i];
        if(!(k == null)) {
          return f.call(null, init__$1, k, arr[i + 1])
        }else {
          var node = arr[i + 1];
          if(!(node == null)) {
            return node.kv_reduce(f, init__$1)
          }else {
            return init__$1
          }
        }
      }();
      if(cljs.core.reduced_QMARK_.call(null, init__$2)) {
        return cljs.core.deref.call(null, init__$2)
      }else {
        var G__529476 = i + 2;
        var G__529477 = init__$2;
        i = G__529476;
        init__$1 = G__529477;
        continue
      }
    }else {
      return init__$1
    }
    break
  }
};
cljs.core.BitmapIndexedNode = function(edit, bitmap, arr) {
  this.edit = edit;
  this.bitmap = bitmap;
  this.arr = arr
};
cljs.core.BitmapIndexedNode.cljs$lang$type = true;
cljs.core.BitmapIndexedNode.cljs$lang$ctorStr = "cljs.core/BitmapIndexedNode";
cljs.core.BitmapIndexedNode.cljs$lang$ctorPrWriter = function(this__3829__auto__, writer__3830__auto__, opt__3831__auto__) {
  return cljs.core._write.call(null, writer__3830__auto__, "cljs.core/BitmapIndexedNode")
};
cljs.core.BitmapIndexedNode.prototype.edit_and_remove_pair = function(e, bit, i) {
  var self__ = this;
  var inode = this;
  if(self__.bitmap === bit) {
    return null
  }else {
    var editable = inode.ensure_editable(e);
    var earr = editable.arr;
    var len = earr.length;
    editable.bitmap = bit ^ editable.bitmap;
    cljs.core.array_copy.call(null, earr, 2 * (i + 1), earr, 2 * i, len - 2 * (i + 1));
    earr[len - 2] = null;
    earr[len - 1] = null;
    return editable
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_assoc_BANG_ = function(edit__$1, shift, hash, key, val, added_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var bit = 1 << (hash >>> shift & 31);
  var idx = cljs.core.bitmap_indexed_node_index.call(null, self__.bitmap, bit);
  if((self__.bitmap & bit) === 0) {
    var n = cljs.core.bit_count.call(null, self__.bitmap);
    if(2 * n < self__.arr.length) {
      var editable = inode.ensure_editable(edit__$1);
      var earr = editable.arr;
      added_leaf_QMARK_.val = true;
      cljs.core.array_copy_downward.call(null, earr, 2 * idx, earr, 2 * (idx + 1), 2 * (n - idx));
      earr[2 * idx] = key;
      earr[2 * idx + 1] = val;
      editable.bitmap = editable.bitmap | bit;
      return editable
    }else {
      if(n >= 16) {
        var nodes = new Array(32);
        var jdx = hash >>> shift & 31;
        nodes[jdx] = cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit__$1, shift + 5, hash, key, val, added_leaf_QMARK_);
        var i_529478 = 0;
        var j_529479 = 0;
        while(true) {
          if(i_529478 < 32) {
            if((self__.bitmap >>> i_529478 & 1) === 0) {
              var G__529480 = i_529478 + 1;
              var G__529481 = j_529479;
              i_529478 = G__529480;
              j_529479 = G__529481;
              continue
            }else {
              nodes[i_529478] = !(self__.arr[j_529479] == null) ? cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit__$1, shift + 5, cljs.core.hash.call(null, self__.arr[j_529479]), self__.arr[j_529479], self__.arr[j_529479 + 1], added_leaf_QMARK_) : self__.arr[j_529479 + 1];
              var G__529482 = i_529478 + 1;
              var G__529483 = j_529479 + 2;
              i_529478 = G__529482;
              j_529479 = G__529483;
              continue
            }
          }else {
          }
          break
        }
        return new cljs.core.ArrayNode(edit__$1, n + 1, nodes)
      }else {
        if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          var new_arr = new Array(2 * (n + 4));
          cljs.core.array_copy.call(null, self__.arr, 0, new_arr, 0, 2 * idx);
          new_arr[2 * idx] = key;
          new_arr[2 * idx + 1] = val;
          cljs.core.array_copy.call(null, self__.arr, 2 * idx, new_arr, 2 * (idx + 1), 2 * (n - idx));
          added_leaf_QMARK_.val = true;
          var editable = inode.ensure_editable(edit__$1);
          editable.arr = new_arr;
          editable.bitmap = editable.bitmap | bit;
          return editable
        }else {
          return null
        }
      }
    }
  }else {
    var key_or_nil = self__.arr[2 * idx];
    var val_or_node = self__.arr[2 * idx + 1];
    if(key_or_nil == null) {
      var n = val_or_node.inode_assoc_BANG_(edit__$1, shift + 5, hash, key, val, added_leaf_QMARK_);
      if(n === val_or_node) {
        return inode
      }else {
        return cljs.core.edit_and_set.call(null, inode, edit__$1, 2 * idx + 1, n)
      }
    }else {
      if(cljs.core.key_test.call(null, key, key_or_nil)) {
        if(val === val_or_node) {
          return inode
        }else {
          return cljs.core.edit_and_set.call(null, inode, edit__$1, 2 * idx + 1, val)
        }
      }else {
        if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          added_leaf_QMARK_.val = true;
          return cljs.core.edit_and_set.call(null, inode, edit__$1, 2 * idx, null, 2 * idx + 1, cljs.core.create_node.call(null, edit__$1, shift + 5, key_or_nil, val_or_node, hash, key, val))
        }else {
          return null
        }
      }
    }
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_seq = function() {
  var self__ = this;
  var inode = this;
  return cljs.core.create_inode_seq.call(null, self__.arr)
};
cljs.core.BitmapIndexedNode.prototype.inode_without_BANG_ = function(edit__$1, shift, hash, key, removed_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var bit = 1 << (hash >>> shift & 31);
  if((self__.bitmap & bit) === 0) {
    return inode
  }else {
    var idx = cljs.core.bitmap_indexed_node_index.call(null, self__.bitmap, bit);
    var key_or_nil = self__.arr[2 * idx];
    var val_or_node = self__.arr[2 * idx + 1];
    if(key_or_nil == null) {
      var n = val_or_node.inode_without_BANG_(edit__$1, shift + 5, hash, key, removed_leaf_QMARK_);
      if(n === val_or_node) {
        return inode
      }else {
        if(!(n == null)) {
          return cljs.core.edit_and_set.call(null, inode, edit__$1, 2 * idx + 1, n)
        }else {
          if(self__.bitmap === bit) {
            return null
          }else {
            if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
              return inode.edit_and_remove_pair(edit__$1, bit, idx)
            }else {
              return null
            }
          }
        }
      }
    }else {
      if(cljs.core.key_test.call(null, key, key_or_nil)) {
        removed_leaf_QMARK_[0] = true;
        return inode.edit_and_remove_pair(edit__$1, bit, idx)
      }else {
        if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          return inode
        }else {
          return null
        }
      }
    }
  }
};
cljs.core.BitmapIndexedNode.prototype.ensure_editable = function(e) {
  var self__ = this;
  var inode = this;
  if(e === self__.edit) {
    return inode
  }else {
    var n = cljs.core.bit_count.call(null, self__.bitmap);
    var new_arr = new Array(n < 0 ? 4 : 2 * (n + 1));
    cljs.core.array_copy.call(null, self__.arr, 0, new_arr, 0, 2 * n);
    return new cljs.core.BitmapIndexedNode(e, self__.bitmap, new_arr)
  }
};
cljs.core.BitmapIndexedNode.prototype.kv_reduce = function(f, init) {
  var self__ = this;
  var inode = this;
  return cljs.core.inode_kv_reduce.call(null, self__.arr, f, init)
};
cljs.core.BitmapIndexedNode.prototype.inode_find = function(shift, hash, key, not_found) {
  var self__ = this;
  var inode = this;
  var bit = 1 << (hash >>> shift & 31);
  if((self__.bitmap & bit) === 0) {
    return not_found
  }else {
    var idx = cljs.core.bitmap_indexed_node_index.call(null, self__.bitmap, bit);
    var key_or_nil = self__.arr[2 * idx];
    var val_or_node = self__.arr[2 * idx + 1];
    if(key_or_nil == null) {
      return val_or_node.inode_find(shift + 5, hash, key, not_found)
    }else {
      if(cljs.core.key_test.call(null, key, key_or_nil)) {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [key_or_nil, val_or_node], null)
      }else {
        if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          return not_found
        }else {
          return null
        }
      }
    }
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_without = function(shift, hash, key) {
  var self__ = this;
  var inode = this;
  var bit = 1 << (hash >>> shift & 31);
  if((self__.bitmap & bit) === 0) {
    return inode
  }else {
    var idx = cljs.core.bitmap_indexed_node_index.call(null, self__.bitmap, bit);
    var key_or_nil = self__.arr[2 * idx];
    var val_or_node = self__.arr[2 * idx + 1];
    if(key_or_nil == null) {
      var n = val_or_node.inode_without(shift + 5, hash, key);
      if(n === val_or_node) {
        return inode
      }else {
        if(!(n == null)) {
          return new cljs.core.BitmapIndexedNode(null, self__.bitmap, cljs.core.clone_and_set.call(null, self__.arr, 2 * idx + 1, n))
        }else {
          if(self__.bitmap === bit) {
            return null
          }else {
            if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
              return new cljs.core.BitmapIndexedNode(null, self__.bitmap ^ bit, cljs.core.remove_pair.call(null, self__.arr, idx))
            }else {
              return null
            }
          }
        }
      }
    }else {
      if(cljs.core.key_test.call(null, key, key_or_nil)) {
        return new cljs.core.BitmapIndexedNode(null, self__.bitmap ^ bit, cljs.core.remove_pair.call(null, self__.arr, idx))
      }else {
        if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          return inode
        }else {
          return null
        }
      }
    }
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_assoc = function(shift, hash, key, val, added_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var bit = 1 << (hash >>> shift & 31);
  var idx = cljs.core.bitmap_indexed_node_index.call(null, self__.bitmap, bit);
  if((self__.bitmap & bit) === 0) {
    var n = cljs.core.bit_count.call(null, self__.bitmap);
    if(n >= 16) {
      var nodes = new Array(32);
      var jdx = hash >>> shift & 31;
      nodes[jdx] = cljs.core.BitmapIndexedNode.EMPTY.inode_assoc(shift + 5, hash, key, val, added_leaf_QMARK_);
      var i_529484 = 0;
      var j_529485 = 0;
      while(true) {
        if(i_529484 < 32) {
          if((self__.bitmap >>> i_529484 & 1) === 0) {
            var G__529486 = i_529484 + 1;
            var G__529487 = j_529485;
            i_529484 = G__529486;
            j_529485 = G__529487;
            continue
          }else {
            nodes[i_529484] = !(self__.arr[j_529485] == null) ? cljs.core.BitmapIndexedNode.EMPTY.inode_assoc(shift + 5, cljs.core.hash.call(null, self__.arr[j_529485]), self__.arr[j_529485], self__.arr[j_529485 + 1], added_leaf_QMARK_) : self__.arr[j_529485 + 1];
            var G__529488 = i_529484 + 1;
            var G__529489 = j_529485 + 2;
            i_529484 = G__529488;
            j_529485 = G__529489;
            continue
          }
        }else {
        }
        break
      }
      return new cljs.core.ArrayNode(null, n + 1, nodes)
    }else {
      var new_arr = new Array(2 * (n + 1));
      cljs.core.array_copy.call(null, self__.arr, 0, new_arr, 0, 2 * idx);
      new_arr[2 * idx] = key;
      new_arr[2 * idx + 1] = val;
      cljs.core.array_copy.call(null, self__.arr, 2 * idx, new_arr, 2 * (idx + 1), 2 * (n - idx));
      added_leaf_QMARK_.val = true;
      return new cljs.core.BitmapIndexedNode(null, self__.bitmap | bit, new_arr)
    }
  }else {
    var key_or_nil = self__.arr[2 * idx];
    var val_or_node = self__.arr[2 * idx + 1];
    if(key_or_nil == null) {
      var n = val_or_node.inode_assoc(shift + 5, hash, key, val, added_leaf_QMARK_);
      if(n === val_or_node) {
        return inode
      }else {
        return new cljs.core.BitmapIndexedNode(null, self__.bitmap, cljs.core.clone_and_set.call(null, self__.arr, 2 * idx + 1, n))
      }
    }else {
      if(cljs.core.key_test.call(null, key, key_or_nil)) {
        if(val === val_or_node) {
          return inode
        }else {
          return new cljs.core.BitmapIndexedNode(null, self__.bitmap, cljs.core.clone_and_set.call(null, self__.arr, 2 * idx + 1, val))
        }
      }else {
        if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          added_leaf_QMARK_.val = true;
          return new cljs.core.BitmapIndexedNode(null, self__.bitmap, cljs.core.clone_and_set.call(null, self__.arr, 2 * idx, null, 2 * idx + 1, cljs.core.create_node.call(null, shift + 5, key_or_nil, val_or_node, hash, key, val)))
        }else {
          return null
        }
      }
    }
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_lookup = function(shift, hash, key, not_found) {
  var self__ = this;
  var inode = this;
  var bit = 1 << (hash >>> shift & 31);
  if((self__.bitmap & bit) === 0) {
    return not_found
  }else {
    var idx = cljs.core.bitmap_indexed_node_index.call(null, self__.bitmap, bit);
    var key_or_nil = self__.arr[2 * idx];
    var val_or_node = self__.arr[2 * idx + 1];
    if(key_or_nil == null) {
      return val_or_node.inode_lookup(shift + 5, hash, key, not_found)
    }else {
      if(cljs.core.key_test.call(null, key, key_or_nil)) {
        return val_or_node
      }else {
        if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          return not_found
        }else {
          return null
        }
      }
    }
  }
};
cljs.core.__GT_BitmapIndexedNode = function __GT_BitmapIndexedNode(edit, bitmap, arr) {
  return new cljs.core.BitmapIndexedNode(edit, bitmap, arr)
};
cljs.core.BitmapIndexedNode.EMPTY = new cljs.core.BitmapIndexedNode(null, 0, new Array(0));
cljs.core.pack_array_node = function pack_array_node(array_node, edit, idx) {
  var arr = array_node.arr;
  var len = 2 * (array_node.cnt - 1);
  var new_arr = new Array(len);
  var i = 0;
  var j = 1;
  var bitmap = 0;
  while(true) {
    if(i < len) {
      if(!(i === idx) && !(arr[i] == null)) {
        new_arr[j] = arr[i];
        var G__529490 = i + 1;
        var G__529491 = j + 2;
        var G__529492 = bitmap | 1 << i;
        i = G__529490;
        j = G__529491;
        bitmap = G__529492;
        continue
      }else {
        var G__529493 = i + 1;
        var G__529494 = j;
        var G__529495 = bitmap;
        i = G__529493;
        j = G__529494;
        bitmap = G__529495;
        continue
      }
    }else {
      return new cljs.core.BitmapIndexedNode(edit, bitmap, new_arr)
    }
    break
  }
};
cljs.core.ArrayNode = function(edit, cnt, arr) {
  this.edit = edit;
  this.cnt = cnt;
  this.arr = arr
};
cljs.core.ArrayNode.cljs$lang$type = true;
cljs.core.ArrayNode.cljs$lang$ctorStr = "cljs.core/ArrayNode";
cljs.core.ArrayNode.cljs$lang$ctorPrWriter = function(this__3829__auto__, writer__3830__auto__, opt__3831__auto__) {
  return cljs.core._write.call(null, writer__3830__auto__, "cljs.core/ArrayNode")
};
cljs.core.ArrayNode.prototype.inode_assoc_BANG_ = function(edit__$1, shift, hash, key, val, added_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var idx = hash >>> shift & 31;
  var node = self__.arr[idx];
  if(node == null) {
    var editable = cljs.core.edit_and_set.call(null, inode, edit__$1, idx, cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit__$1, shift + 5, hash, key, val, added_leaf_QMARK_));
    editable.cnt = editable.cnt + 1;
    return editable
  }else {
    var n = node.inode_assoc_BANG_(edit__$1, shift + 5, hash, key, val, added_leaf_QMARK_);
    if(n === node) {
      return inode
    }else {
      return cljs.core.edit_and_set.call(null, inode, edit__$1, idx, n)
    }
  }
};
cljs.core.ArrayNode.prototype.inode_seq = function() {
  var self__ = this;
  var inode = this;
  return cljs.core.create_array_node_seq.call(null, self__.arr)
};
cljs.core.ArrayNode.prototype.inode_without_BANG_ = function(edit__$1, shift, hash, key, removed_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var idx = hash >>> shift & 31;
  var node = self__.arr[idx];
  if(node == null) {
    return inode
  }else {
    var n = node.inode_without_BANG_(edit__$1, shift + 5, hash, key, removed_leaf_QMARK_);
    if(n === node) {
      return inode
    }else {
      if(n == null) {
        if(self__.cnt <= 8) {
          return cljs.core.pack_array_node.call(null, inode, edit__$1, idx)
        }else {
          var editable = cljs.core.edit_and_set.call(null, inode, edit__$1, idx, n);
          editable.cnt = editable.cnt - 1;
          return editable
        }
      }else {
        if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          return cljs.core.edit_and_set.call(null, inode, edit__$1, idx, n)
        }else {
          return null
        }
      }
    }
  }
};
cljs.core.ArrayNode.prototype.ensure_editable = function(e) {
  var self__ = this;
  var inode = this;
  if(e === self__.edit) {
    return inode
  }else {
    return new cljs.core.ArrayNode(e, self__.cnt, cljs.core.aclone.call(null, self__.arr))
  }
};
cljs.core.ArrayNode.prototype.kv_reduce = function(f, init) {
  var self__ = this;
  var inode = this;
  var len = self__.arr.length;
  var i = 0;
  var init__$1 = init;
  while(true) {
    if(i < len) {
      var node = self__.arr[i];
      if(!(node == null)) {
        var init__$2 = node.kv_reduce(f, init__$1);
        if(cljs.core.reduced_QMARK_.call(null, init__$2)) {
          return cljs.core.deref.call(null, init__$2)
        }else {
          var G__529496 = i + 1;
          var G__529497 = init__$2;
          i = G__529496;
          init__$1 = G__529497;
          continue
        }
      }else {
        var G__529498 = i + 1;
        var G__529499 = init__$1;
        i = G__529498;
        init__$1 = G__529499;
        continue
      }
    }else {
      return init__$1
    }
    break
  }
};
cljs.core.ArrayNode.prototype.inode_find = function(shift, hash, key, not_found) {
  var self__ = this;
  var inode = this;
  var idx = hash >>> shift & 31;
  var node = self__.arr[idx];
  if(!(node == null)) {
    return node.inode_find(shift + 5, hash, key, not_found)
  }else {
    return not_found
  }
};
cljs.core.ArrayNode.prototype.inode_without = function(shift, hash, key) {
  var self__ = this;
  var inode = this;
  var idx = hash >>> shift & 31;
  var node = self__.arr[idx];
  if(!(node == null)) {
    var n = node.inode_without(shift + 5, hash, key);
    if(n === node) {
      return inode
    }else {
      if(n == null) {
        if(self__.cnt <= 8) {
          return cljs.core.pack_array_node.call(null, inode, null, idx)
        }else {
          return new cljs.core.ArrayNode(null, self__.cnt - 1, cljs.core.clone_and_set.call(null, self__.arr, idx, n))
        }
      }else {
        if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          return new cljs.core.ArrayNode(null, self__.cnt, cljs.core.clone_and_set.call(null, self__.arr, idx, n))
        }else {
          return null
        }
      }
    }
  }else {
    return inode
  }
};
cljs.core.ArrayNode.prototype.inode_assoc = function(shift, hash, key, val, added_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var idx = hash >>> shift & 31;
  var node = self__.arr[idx];
  if(node == null) {
    return new cljs.core.ArrayNode(null, self__.cnt + 1, cljs.core.clone_and_set.call(null, self__.arr, idx, cljs.core.BitmapIndexedNode.EMPTY.inode_assoc(shift + 5, hash, key, val, added_leaf_QMARK_)))
  }else {
    var n = node.inode_assoc(shift + 5, hash, key, val, added_leaf_QMARK_);
    if(n === node) {
      return inode
    }else {
      return new cljs.core.ArrayNode(null, self__.cnt, cljs.core.clone_and_set.call(null, self__.arr, idx, n))
    }
  }
};
cljs.core.ArrayNode.prototype.inode_lookup = function(shift, hash, key, not_found) {
  var self__ = this;
  var inode = this;
  var idx = hash >>> shift & 31;
  var node = self__.arr[idx];
  if(!(node == null)) {
    return node.inode_lookup(shift + 5, hash, key, not_found)
  }else {
    return not_found
  }
};
cljs.core.__GT_ArrayNode = function __GT_ArrayNode(edit, cnt, arr) {
  return new cljs.core.ArrayNode(edit, cnt, arr)
};
cljs.core.hash_collision_node_find_index = function hash_collision_node_find_index(arr, cnt, key) {
  var lim = 2 * cnt;
  var i = 0;
  while(true) {
    if(i < lim) {
      if(cljs.core.key_test.call(null, key, arr[i])) {
        return i
      }else {
        var G__529500 = i + 2;
        i = G__529500;
        continue
      }
    }else {
      return-1
    }
    break
  }
};
cljs.core.HashCollisionNode = function(edit, collision_hash, cnt, arr) {
  this.edit = edit;
  this.collision_hash = collision_hash;
  this.cnt = cnt;
  this.arr = arr
};
cljs.core.HashCollisionNode.cljs$lang$type = true;
cljs.core.HashCollisionNode.cljs$lang$ctorStr = "cljs.core/HashCollisionNode";
cljs.core.HashCollisionNode.cljs$lang$ctorPrWriter = function(this__3829__auto__, writer__3830__auto__, opt__3831__auto__) {
  return cljs.core._write.call(null, writer__3830__auto__, "cljs.core/HashCollisionNode")
};
cljs.core.HashCollisionNode.prototype.inode_assoc_BANG_ = function(edit__$1, shift, hash, key, val, added_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  if(hash === self__.collision_hash) {
    var idx = cljs.core.hash_collision_node_find_index.call(null, self__.arr, self__.cnt, key);
    if(idx === -1) {
      if(self__.arr.length > 2 * self__.cnt) {
        var editable = cljs.core.edit_and_set.call(null, inode, edit__$1, 2 * self__.cnt, key, 2 * self__.cnt + 1, val);
        added_leaf_QMARK_.val = true;
        editable.cnt = editable.cnt + 1;
        return editable
      }else {
        var len = self__.arr.length;
        var new_arr = new Array(len + 2);
        cljs.core.array_copy.call(null, self__.arr, 0, new_arr, 0, len);
        new_arr[len] = key;
        new_arr[len + 1] = val;
        added_leaf_QMARK_.val = true;
        return inode.ensure_editable_array(edit__$1, self__.cnt + 1, new_arr)
      }
    }else {
      if(self__.arr[idx + 1] === val) {
        return inode
      }else {
        return cljs.core.edit_and_set.call(null, inode, edit__$1, idx + 1, val)
      }
    }
  }else {
    return(new cljs.core.BitmapIndexedNode(edit__$1, 1 << (self__.collision_hash >>> shift & 31), [null, inode, null, null])).inode_assoc_BANG_(edit__$1, shift, hash, key, val, added_leaf_QMARK_)
  }
};
cljs.core.HashCollisionNode.prototype.inode_seq = function() {
  var self__ = this;
  var inode = this;
  return cljs.core.create_inode_seq.call(null, self__.arr)
};
cljs.core.HashCollisionNode.prototype.inode_without_BANG_ = function(edit__$1, shift, hash, key, removed_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var idx = cljs.core.hash_collision_node_find_index.call(null, self__.arr, self__.cnt, key);
  if(idx === -1) {
    return inode
  }else {
    removed_leaf_QMARK_[0] = true;
    if(self__.cnt === 1) {
      return null
    }else {
      var editable = inode.ensure_editable(edit__$1);
      var earr = editable.arr;
      earr[idx] = earr[2 * self__.cnt - 2];
      earr[idx + 1] = earr[2 * self__.cnt - 1];
      earr[2 * self__.cnt - 1] = null;
      earr[2 * self__.cnt - 2] = null;
      editable.cnt = editable.cnt - 1;
      return editable
    }
  }
};
cljs.core.HashCollisionNode.prototype.ensure_editable = function(e) {
  var self__ = this;
  var inode = this;
  if(e === self__.edit) {
    return inode
  }else {
    var new_arr = new Array(2 * (self__.cnt + 1));
    cljs.core.array_copy.call(null, self__.arr, 0, new_arr, 0, 2 * self__.cnt);
    return new cljs.core.HashCollisionNode(e, self__.collision_hash, self__.cnt, new_arr)
  }
};
cljs.core.HashCollisionNode.prototype.kv_reduce = function(f, init) {
  var self__ = this;
  var inode = this;
  return cljs.core.inode_kv_reduce.call(null, self__.arr, f, init)
};
cljs.core.HashCollisionNode.prototype.inode_find = function(shift, hash, key, not_found) {
  var self__ = this;
  var inode = this;
  var idx = cljs.core.hash_collision_node_find_index.call(null, self__.arr, self__.cnt, key);
  if(idx < 0) {
    return not_found
  }else {
    if(cljs.core.key_test.call(null, key, self__.arr[idx])) {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.arr[idx], self__.arr[idx + 1]], null)
    }else {
      if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        return not_found
      }else {
        return null
      }
    }
  }
};
cljs.core.HashCollisionNode.prototype.inode_without = function(shift, hash, key) {
  var self__ = this;
  var inode = this;
  var idx = cljs.core.hash_collision_node_find_index.call(null, self__.arr, self__.cnt, key);
  if(idx === -1) {
    return inode
  }else {
    if(self__.cnt === 1) {
      return null
    }else {
      if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        return new cljs.core.HashCollisionNode(null, self__.collision_hash, self__.cnt - 1, cljs.core.remove_pair.call(null, self__.arr, cljs.core.quot.call(null, idx, 2)))
      }else {
        return null
      }
    }
  }
};
cljs.core.HashCollisionNode.prototype.inode_assoc = function(shift, hash, key, val, added_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  if(hash === self__.collision_hash) {
    var idx = cljs.core.hash_collision_node_find_index.call(null, self__.arr, self__.cnt, key);
    if(idx === -1) {
      var len = 2 * self__.cnt;
      var new_arr = new Array(len + 2);
      cljs.core.array_copy.call(null, self__.arr, 0, new_arr, 0, len);
      new_arr[len] = key;
      new_arr[len + 1] = val;
      added_leaf_QMARK_.val = true;
      return new cljs.core.HashCollisionNode(null, self__.collision_hash, self__.cnt + 1, new_arr)
    }else {
      if(cljs.core._EQ_.call(null, self__.arr[idx], val)) {
        return inode
      }else {
        return new cljs.core.HashCollisionNode(null, self__.collision_hash, self__.cnt, cljs.core.clone_and_set.call(null, self__.arr, idx + 1, val))
      }
    }
  }else {
    return(new cljs.core.BitmapIndexedNode(null, 1 << (self__.collision_hash >>> shift & 31), [null, inode])).inode_assoc(shift, hash, key, val, added_leaf_QMARK_)
  }
};
cljs.core.HashCollisionNode.prototype.inode_lookup = function(shift, hash, key, not_found) {
  var self__ = this;
  var inode = this;
  var idx = cljs.core.hash_collision_node_find_index.call(null, self__.arr, self__.cnt, key);
  if(idx < 0) {
    return not_found
  }else {
    if(cljs.core.key_test.call(null, key, self__.arr[idx])) {
      return self__.arr[idx + 1]
    }else {
      if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        return not_found
      }else {
        return null
      }
    }
  }
};
cljs.core.HashCollisionNode.prototype.ensure_editable_array = function(e, count, array) {
  var self__ = this;
  var inode = this;
  if(e === self__.edit) {
    self__.arr = array;
    self__.cnt = count;
    return inode
  }else {
    return new cljs.core.HashCollisionNode(self__.edit, self__.collision_hash, count, array)
  }
};
cljs.core.__GT_HashCollisionNode = function __GT_HashCollisionNode(edit, collision_hash, cnt, arr) {
  return new cljs.core.HashCollisionNode(edit, collision_hash, cnt, arr)
};
cljs.core.create_node = function() {
  var create_node = null;
  var create_node__6 = function(shift, key1, val1, key2hash, key2, val2) {
    var key1hash = cljs.core.hash.call(null, key1);
    if(key1hash === key2hash) {
      return new cljs.core.HashCollisionNode(null, key1hash, 2, [key1, val1, key2, val2])
    }else {
      var added_leaf_QMARK_ = new cljs.core.Box(false);
      return cljs.core.BitmapIndexedNode.EMPTY.inode_assoc(shift, key1hash, key1, val1, added_leaf_QMARK_).inode_assoc(shift, key2hash, key2, val2, added_leaf_QMARK_)
    }
  };
  var create_node__7 = function(edit, shift, key1, val1, key2hash, key2, val2) {
    var key1hash = cljs.core.hash.call(null, key1);
    if(key1hash === key2hash) {
      return new cljs.core.HashCollisionNode(null, key1hash, 2, [key1, val1, key2, val2])
    }else {
      var added_leaf_QMARK_ = new cljs.core.Box(false);
      return cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit, shift, key1hash, key1, val1, added_leaf_QMARK_).inode_assoc_BANG_(edit, shift, key2hash, key2, val2, added_leaf_QMARK_)
    }
  };
  create_node = function(edit, shift, key1, val1, key2hash, key2, val2) {
    switch(arguments.length) {
      case 6:
        return create_node__6.call(this, edit, shift, key1, val1, key2hash, key2);
      case 7:
        return create_node__7.call(this, edit, shift, key1, val1, key2hash, key2, val2)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  create_node.cljs$core$IFn$_invoke$arity$6 = create_node__6;
  create_node.cljs$core$IFn$_invoke$arity$7 = create_node__7;
  return create_node
}();
cljs.core.NodeSeq = function(meta, nodes, i, s, __hash) {
  this.meta = meta;
  this.nodes = nodes;
  this.i = i;
  this.s = s;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32374860
};
cljs.core.NodeSeq.cljs$lang$type = true;
cljs.core.NodeSeq.cljs$lang$ctorStr = "cljs.core/NodeSeq";
cljs.core.NodeSeq.cljs$lang$ctorPrWriter = function(this__3829__auto__, writer__3830__auto__, opt__3831__auto__) {
  return cljs.core._write.call(null, writer__3830__auto__, "cljs.core/NodeSeq")
};
cljs.core.NodeSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__3696__auto__ = self__.__hash;
  if(!(h__3696__auto__ == null)) {
    return h__3696__auto__
  }else {
    var h__3696__auto____$1 = cljs.core.hash_coll.call(null, coll__$1);
    self__.__hash = h__3696__auto____$1;
    return h__3696__auto____$1
  }
};
cljs.core.NodeSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons.call(null, o, coll__$1)
};
cljs.core.NodeSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll)
};
cljs.core.NodeSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, coll__$1)
};
cljs.core.NodeSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, start, coll__$1)
};
cljs.core.NodeSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return this$__$1
};
cljs.core.NodeSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if(self__.s == null) {
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.nodes[self__.i], self__.nodes[self__.i + 1]], null)
  }else {
    return cljs.core.first.call(null, self__.s)
  }
};
cljs.core.NodeSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if(self__.s == null) {
    return cljs.core.create_inode_seq.call(null, self__.nodes, self__.i + 2, null)
  }else {
    return cljs.core.create_inode_seq.call(null, self__.nodes, self__.i, cljs.core.next.call(null, self__.s))
  }
};
cljs.core.NodeSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other)
};
cljs.core.NodeSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.NodeSeq(meta__$1, self__.nodes, self__.i, self__.s, self__.__hash)
};
cljs.core.NodeSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta
};
cljs.core.NodeSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, self__.meta)
};
cljs.core.__GT_NodeSeq = function __GT_NodeSeq(meta, nodes, i, s, __hash) {
  return new cljs.core.NodeSeq(meta, nodes, i, s, __hash)
};
cljs.core.create_inode_seq = function() {
  var create_inode_seq = null;
  var create_inode_seq__1 = function(nodes) {
    return create_inode_seq.call(null, nodes, 0, null)
  };
  var create_inode_seq__3 = function(nodes, i, s) {
    if(s == null) {
      var len = nodes.length;
      var j = i;
      while(true) {
        if(j < len) {
          if(!(nodes[j] == null)) {
            return new cljs.core.NodeSeq(null, nodes, j, null, null)
          }else {
            var temp__4090__auto__ = nodes[j + 1];
            if(cljs.core.truth_(temp__4090__auto__)) {
              var node = temp__4090__auto__;
              var temp__4090__auto____$1 = node.inode_seq();
              if(cljs.core.truth_(temp__4090__auto____$1)) {
                var node_seq = temp__4090__auto____$1;
                return new cljs.core.NodeSeq(null, nodes, j + 2, node_seq, null)
              }else {
                var G__529501 = j + 2;
                j = G__529501;
                continue
              }
            }else {
              var G__529502 = j + 2;
              j = G__529502;
              continue
            }
          }
        }else {
          return null
        }
        break
      }
    }else {
      return new cljs.core.NodeSeq(null, nodes, i, s, null)
    }
  };
  create_inode_seq = function(nodes, i, s) {
    switch(arguments.length) {
      case 1:
        return create_inode_seq__1.call(this, nodes);
      case 3:
        return create_inode_seq__3.call(this, nodes, i, s)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  create_inode_seq.cljs$core$IFn$_invoke$arity$1 = create_inode_seq__1;
  create_inode_seq.cljs$core$IFn$_invoke$arity$3 = create_inode_seq__3;
  return create_inode_seq
}();
cljs.core.ArrayNodeSeq = function(meta, nodes, i, s, __hash) {
  this.meta = meta;
  this.nodes = nodes;
  this.i = i;
  this.s = s;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32374860
};
cljs.core.ArrayNodeSeq.cljs$lang$type = true;
cljs.core.ArrayNodeSeq.cljs$lang$ctorStr = "cljs.core/ArrayNodeSeq";
cljs.core.ArrayNodeSeq.cljs$lang$ctorPrWriter = function(this__3829__auto__, writer__3830__auto__, opt__3831__auto__) {
  return cljs.core._write.call(null, writer__3830__auto__, "cljs.core/ArrayNodeSeq")
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__3696__auto__ = self__.__hash;
  if(!(h__3696__auto__ == null)) {
    return h__3696__auto__
  }else {
    var h__3696__auto____$1 = cljs.core.hash_coll.call(null, coll__$1);
    self__.__hash = h__3696__auto____$1;
    return h__3696__auto____$1
  }
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons.call(null, o, coll__$1)
};
cljs.core.ArrayNodeSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll)
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, coll__$1)
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, start, coll__$1)
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return this$__$1
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.first.call(null, self__.s)
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.create_array_node_seq.call(null, null, self__.nodes, self__.i, cljs.core.next.call(null, self__.s))
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other)
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.ArrayNodeSeq(meta__$1, self__.nodes, self__.i, self__.s, self__.__hash)
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, self__.meta)
};
cljs.core.__GT_ArrayNodeSeq = function __GT_ArrayNodeSeq(meta, nodes, i, s, __hash) {
  return new cljs.core.ArrayNodeSeq(meta, nodes, i, s, __hash)
};
cljs.core.create_array_node_seq = function() {
  var create_array_node_seq = null;
  var create_array_node_seq__1 = function(nodes) {
    return create_array_node_seq.call(null, null, nodes, 0, null)
  };
  var create_array_node_seq__4 = function(meta, nodes, i, s) {
    if(s == null) {
      var len = nodes.length;
      var j = i;
      while(true) {
        if(j < len) {
          var temp__4090__auto__ = nodes[j];
          if(cljs.core.truth_(temp__4090__auto__)) {
            var nj = temp__4090__auto__;
            var temp__4090__auto____$1 = nj.inode_seq();
            if(cljs.core.truth_(temp__4090__auto____$1)) {
              var ns = temp__4090__auto____$1;
              return new cljs.core.ArrayNodeSeq(meta, nodes, j + 1, ns, null)
            }else {
              var G__529503 = j + 1;
              j = G__529503;
              continue
            }
          }else {
            var G__529504 = j + 1;
            j = G__529504;
            continue
          }
        }else {
          return null
        }
        break
      }
    }else {
      return new cljs.core.ArrayNodeSeq(meta, nodes, i, s, null)
    }
  };
  create_array_node_seq = function(meta, nodes, i, s) {
    switch(arguments.length) {
      case 1:
        return create_array_node_seq__1.call(this, meta);
      case 4:
        return create_array_node_seq__4.call(this, meta, nodes, i, s)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  create_array_node_seq.cljs$core$IFn$_invoke$arity$1 = create_array_node_seq__1;
  create_array_node_seq.cljs$core$IFn$_invoke$arity$4 = create_array_node_seq__4;
  return create_array_node_seq
}();
cljs.core.PersistentHashMap = function(meta, cnt, root, has_nil_QMARK_, nil_val, __hash) {
  this.meta = meta;
  this.cnt = cnt;
  this.root = root;
  this.has_nil_QMARK_ = has_nil_QMARK_;
  this.nil_val = nil_val;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 4;
  this.cljs$lang$protocol_mask$partition0$ = 16123663
};
cljs.core.PersistentHashMap.cljs$lang$type = true;
cljs.core.PersistentHashMap.cljs$lang$ctorStr = "cljs.core/PersistentHashMap";
cljs.core.PersistentHashMap.cljs$lang$ctorPrWriter = function(this__3829__auto__, writer__3830__auto__, opt__3831__auto__) {
  return cljs.core._write.call(null, writer__3830__auto__, "cljs.core/PersistentHashMap")
};
cljs.core.PersistentHashMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.TransientHashMap(function() {
    var obj529507 = {};
    return obj529507
  }(), self__.root, self__.cnt, self__.has_nil_QMARK_, self__.nil_val)
};
cljs.core.PersistentHashMap.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__3696__auto__ = self__.__hash;
  if(!(h__3696__auto__ == null)) {
    return h__3696__auto__
  }else {
    var h__3696__auto____$1 = cljs.core.hash_imap.call(null, coll__$1);
    self__.__hash = h__3696__auto____$1;
    return h__3696__auto____$1
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._lookup.call(null, coll__$1, k, null)
};
cljs.core.PersistentHashMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if(k == null) {
    if(self__.has_nil_QMARK_) {
      return self__.nil_val
    }else {
      return not_found
    }
  }else {
    if(self__.root == null) {
      return not_found
    }else {
      if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        return self__.root.inode_lookup(0, cljs.core.hash.call(null, k), k, not_found)
      }else {
        return null
      }
    }
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var self__ = this;
  var coll__$1 = this;
  if(k == null) {
    if(self__.has_nil_QMARK_ && v === self__.nil_val) {
      return coll__$1
    }else {
      return new cljs.core.PersistentHashMap(self__.meta, self__.has_nil_QMARK_ ? self__.cnt : self__.cnt + 1, self__.root, true, v, null)
    }
  }else {
    var added_leaf_QMARK_ = new cljs.core.Box(false);
    var new_root = (self__.root == null ? cljs.core.BitmapIndexedNode.EMPTY : self__.root).inode_assoc(0, cljs.core.hash.call(null, k), k, v, added_leaf_QMARK_);
    if(new_root === self__.root) {
      return coll__$1
    }else {
      return new cljs.core.PersistentHashMap(self__.meta, added_leaf_QMARK_.val ? self__.cnt + 1 : self__.cnt, new_root, self__.has_nil_QMARK_, self__.nil_val, null)
    }
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  if(k == null) {
    return self__.has_nil_QMARK_
  }else {
    if(self__.root == null) {
      return false
    }else {
      if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        return!(self__.root.inode_lookup(0, cljs.core.hash.call(null, k), k, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)
      }else {
        return null
      }
    }
  }
};
cljs.core.PersistentHashMap.prototype.call = function() {
  var G__529508 = null;
  var G__529508__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$2(null, k)
  };
  var G__529508__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found)
  };
  G__529508 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__529508__2.call(this, self__, k);
      case 3:
        return G__529508__3.call(this, self__, k, not_found)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  return G__529508
}();
cljs.core.PersistentHashMap.prototype.apply = function(self__, args529505) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone.call(null, args529505)))
};
cljs.core.PersistentHashMap.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$2(null, k)
};
cljs.core.PersistentHashMap.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found)
};
cljs.core.PersistentHashMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(coll, f, init) {
  var self__ = this;
  var coll__$1 = this;
  var init__$1 = self__.has_nil_QMARK_ ? f.call(null, init, null, self__.nil_val) : init;
  if(cljs.core.reduced_QMARK_.call(null, init__$1)) {
    return cljs.core.deref.call(null, init__$1)
  }else {
    if(!(self__.root == null)) {
      return self__.root.kv_reduce(f, init__$1)
    }else {
      if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        return init__$1
      }else {
        return null
      }
    }
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, entry) {
  var self__ = this;
  var coll__$1 = this;
  if(cljs.core.vector_QMARK_.call(null, entry)) {
    return cljs.core._assoc.call(null, coll__$1, cljs.core._nth.call(null, entry, 0), cljs.core._nth.call(null, entry, 1))
  }else {
    return cljs.core.reduce.call(null, cljs.core._conj, coll__$1, entry)
  }
};
cljs.core.PersistentHashMap.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll)
};
cljs.core.PersistentHashMap.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if(self__.cnt > 0) {
    var s = !(self__.root == null) ? self__.root.inode_seq() : null;
    if(self__.has_nil_QMARK_) {
      return cljs.core.cons.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, self__.nil_val], null), s)
    }else {
      return s
    }
  }else {
    return null
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.cnt
};
cljs.core.PersistentHashMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_map.call(null, coll__$1, other)
};
cljs.core.PersistentHashMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentHashMap(meta__$1, self__.cnt, self__.root, self__.has_nil_QMARK_, self__.nil_val, self__.__hash)
};
cljs.core.PersistentHashMap.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta
};
cljs.core.PersistentHashMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._with_meta.call(null, cljs.core.PersistentHashMap.EMPTY, self__.meta)
};
cljs.core.PersistentHashMap.prototype.cljs$core$IMap$_dissoc$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  if(k == null) {
    if(self__.has_nil_QMARK_) {
      return new cljs.core.PersistentHashMap(self__.meta, self__.cnt - 1, self__.root, false, null, null)
    }else {
      return coll__$1
    }
  }else {
    if(self__.root == null) {
      return coll__$1
    }else {
      if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        var new_root = self__.root.inode_without(0, cljs.core.hash.call(null, k), k);
        if(new_root === self__.root) {
          return coll__$1
        }else {
          return new cljs.core.PersistentHashMap(self__.meta, self__.cnt - 1, new_root, self__.has_nil_QMARK_, self__.nil_val, null)
        }
      }else {
        return null
      }
    }
  }
};
cljs.core.__GT_PersistentHashMap = function __GT_PersistentHashMap(meta, cnt, root, has_nil_QMARK_, nil_val, __hash) {
  return new cljs.core.PersistentHashMap(meta, cnt, root, has_nil_QMARK_, nil_val, __hash)
};
cljs.core.PersistentHashMap.EMPTY = new cljs.core.PersistentHashMap(null, 0, null, false, null, 0);
cljs.core.PersistentHashMap.fromArrays = function(ks, vs) {
  var len = ks.length;
  var i = 0;
  var out = cljs.core.transient$.call(null, cljs.core.PersistentHashMap.EMPTY);
  while(true) {
    if(i < len) {
      var G__529509 = i + 1;
      var G__529510 = cljs.core._assoc_BANG_.call(null, out, ks[i], vs[i]);
      i = G__529509;
      out = G__529510;
      continue
    }else {
      return cljs.core.persistent_BANG_.call(null, out)
    }
    break
  }
};
cljs.core.TransientHashMap = function(edit, root, count, has_nil_QMARK_, nil_val) {
  this.edit = edit;
  this.root = root;
  this.count = count;
  this.has_nil_QMARK_ = has_nil_QMARK_;
  this.nil_val = nil_val;
  this.cljs$lang$protocol_mask$partition1$ = 56;
  this.cljs$lang$protocol_mask$partition0$ = 258
};
cljs.core.TransientHashMap.cljs$lang$type = true;
cljs.core.TransientHashMap.cljs$lang$ctorStr = "cljs.core/TransientHashMap";
cljs.core.TransientHashMap.cljs$lang$ctorPrWriter = function(this__3829__auto__, writer__3830__auto__, opt__3831__auto__) {
  return cljs.core._write.call(null, writer__3830__auto__, "cljs.core/TransientHashMap")
};
cljs.core.TransientHashMap.prototype.cljs$core$ITransientMap$_dissoc_BANG_$arity$2 = function(tcoll, key) {
  var self__ = this;
  var tcoll__$1 = this;
  return tcoll__$1.without_BANG_(key)
};
cljs.core.TransientHashMap.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = function(tcoll, key, val) {
  var self__ = this;
  var tcoll__$1 = this;
  return tcoll__$1.assoc_BANG_(key, val)
};
cljs.core.TransientHashMap.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = function(tcoll, val) {
  var self__ = this;
  var tcoll__$1 = this;
  return tcoll__$1.conj_BANG_(val)
};
cljs.core.TransientHashMap.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = function(tcoll) {
  var self__ = this;
  var tcoll__$1 = this;
  return tcoll__$1.persistent_BANG_()
};
cljs.core.TransientHashMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(tcoll, k) {
  var self__ = this;
  var tcoll__$1 = this;
  if(k == null) {
    if(self__.has_nil_QMARK_) {
      return self__.nil_val
    }else {
      return null
    }
  }else {
    if(self__.root == null) {
      return null
    }else {
      return self__.root.inode_lookup(0, cljs.core.hash.call(null, k), k)
    }
  }
};
cljs.core.TransientHashMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(tcoll, k, not_found) {
  var self__ = this;
  var tcoll__$1 = this;
  if(k == null) {
    if(self__.has_nil_QMARK_) {
      return self__.nil_val
    }else {
      return not_found
    }
  }else {
    if(self__.root == null) {
      return not_found
    }else {
      return self__.root.inode_lookup(0, cljs.core.hash.call(null, k), k, not_found)
    }
  }
};
cljs.core.TransientHashMap.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if(self__.edit) {
    return self__.count
  }else {
    throw new Error("count after persistent!");
  }
};
cljs.core.TransientHashMap.prototype.conj_BANG_ = function(o) {
  var self__ = this;
  var tcoll = this;
  if(self__.edit) {
    if(function() {
      var G__529511 = o;
      if(G__529511) {
        var bit__3911__auto__ = G__529511.cljs$lang$protocol_mask$partition0$ & 2048;
        if(bit__3911__auto__ || G__529511.cljs$core$IMapEntry$) {
          return true
        }else {
          if(!G__529511.cljs$lang$protocol_mask$partition0$) {
            return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IMapEntry, G__529511)
          }else {
            return false
          }
        }
      }else {
        return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IMapEntry, G__529511)
      }
    }()) {
      return tcoll.assoc_BANG_(cljs.core.key.call(null, o), cljs.core.val.call(null, o))
    }else {
      var es = cljs.core.seq.call(null, o);
      var tcoll__$1 = tcoll;
      while(true) {
        var temp__4090__auto__ = cljs.core.first.call(null, es);
        if(cljs.core.truth_(temp__4090__auto__)) {
          var e = temp__4090__auto__;
          var G__529512 = cljs.core.next.call(null, es);
          var G__529513 = tcoll__$1.assoc_BANG_(cljs.core.key.call(null, e), cljs.core.val.call(null, e));
          es = G__529512;
          tcoll__$1 = G__529513;
          continue
        }else {
          return tcoll__$1
        }
        break
      }
    }
  }else {
    throw new Error("conj! after persistent");
  }
};
cljs.core.TransientHashMap.prototype.assoc_BANG_ = function(k, v) {
  var self__ = this;
  var tcoll = this;
  if(self__.edit) {
    if(k == null) {
      if(self__.nil_val === v) {
      }else {
        self__.nil_val = v
      }
      if(self__.has_nil_QMARK_) {
      }else {
        self__.count = self__.count + 1;
        self__.has_nil_QMARK_ = true
      }
      return tcoll
    }else {
      var added_leaf_QMARK_ = new cljs.core.Box(false);
      var node = (self__.root == null ? cljs.core.BitmapIndexedNode.EMPTY : self__.root).inode_assoc_BANG_(self__.edit, 0, cljs.core.hash.call(null, k), k, v, added_leaf_QMARK_);
      if(node === self__.root) {
      }else {
        self__.root = node
      }
      if(added_leaf_QMARK_.val) {
        self__.count = self__.count + 1
      }else {
      }
      return tcoll
    }
  }else {
    throw new Error("assoc! after persistent!");
  }
};
cljs.core.TransientHashMap.prototype.without_BANG_ = function(k) {
  var self__ = this;
  var tcoll = this;
  if(self__.edit) {
    if(k == null) {
      if(self__.has_nil_QMARK_) {
        self__.has_nil_QMARK_ = false;
        self__.nil_val = null;
        self__.count = self__.count - 1;
        return tcoll
      }else {
        return tcoll
      }
    }else {
      if(self__.root == null) {
        return tcoll
      }else {
        var removed_leaf_QMARK_ = new cljs.core.Box(false);
        var node = self__.root.inode_without_BANG_(self__.edit, 0, cljs.core.hash.call(null, k), k, removed_leaf_QMARK_);
        if(node === self__.root) {
        }else {
          self__.root = node
        }
        if(cljs.core.truth_(removed_leaf_QMARK_[0])) {
          self__.count = self__.count - 1
        }else {
        }
        return tcoll
      }
    }
  }else {
    throw new Error("dissoc! after persistent!");
  }
};
cljs.core.TransientHashMap.prototype.persistent_BANG_ = function() {
  var self__ = this;
  var tcoll = this;
  if(self__.edit) {
    self__.edit = null;
    return new cljs.core.PersistentHashMap(null, self__.count, self__.root, self__.has_nil_QMARK_, self__.nil_val, null)
  }else {
    throw new Error("persistent! called twice");
  }
};
cljs.core.__GT_TransientHashMap = function __GT_TransientHashMap(edit, root, count, has_nil_QMARK_, nil_val) {
  return new cljs.core.TransientHashMap(edit, root, count, has_nil_QMARK_, nil_val)
};
cljs.core.tree_map_seq_push = function tree_map_seq_push(node, stack, ascending_QMARK_) {
  var t = node;
  var stack__$1 = stack;
  while(true) {
    if(!(t == null)) {
      var G__529514 = ascending_QMARK_ ? t.left : t.right;
      var G__529515 = cljs.core.conj.call(null, stack__$1, t);
      t = G__529514;
      stack__$1 = G__529515;
      continue
    }else {
      return stack__$1
    }
    break
  }
};
cljs.core.PersistentTreeMapSeq = function(meta, stack, ascending_QMARK_, cnt, __hash) {
  this.meta = meta;
  this.stack = stack;
  this.ascending_QMARK_ = ascending_QMARK_;
  this.cnt = cnt;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32374862
};
cljs.core.PersistentTreeMapSeq.cljs$lang$type = true;
cljs.core.PersistentTreeMapSeq.cljs$lang$ctorStr = "cljs.core/PersistentTreeMapSeq";
cljs.core.PersistentTreeMapSeq.cljs$lang$ctorPrWriter = function(this__3829__auto__, writer__3830__auto__, opt__3831__auto__) {
  return cljs.core._write.call(null, writer__3830__auto__, "cljs.core/PersistentTreeMapSeq")
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__3696__auto__ = self__.__hash;
  if(!(h__3696__auto__ == null)) {
    return h__3696__auto__
  }else {
    var h__3696__auto____$1 = cljs.core.hash_coll.call(null, coll__$1);
    self__.__hash = h__3696__auto____$1;
    return h__3696__auto____$1
  }
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons.call(null, o, coll__$1)
};
cljs.core.PersistentTreeMapSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll)
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, coll__$1)
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, start, coll__$1)
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return this$__$1
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if(self__.cnt < 0) {
    return cljs.core.count.call(null, cljs.core.next.call(null, coll__$1)) + 1
  }else {
    return self__.cnt
  }
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core.peek.call(null, self__.stack)
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  var t = cljs.core.first.call(null, self__.stack);
  var next_stack = cljs.core.tree_map_seq_push.call(null, self__.ascending_QMARK_ ? t.right : t.left, cljs.core.next.call(null, self__.stack), self__.ascending_QMARK_);
  if(!(next_stack == null)) {
    return new cljs.core.PersistentTreeMapSeq(null, next_stack, self__.ascending_QMARK_, self__.cnt - 1, null)
  }else {
    return cljs.core.List.EMPTY
  }
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other)
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentTreeMapSeq(meta__$1, self__.stack, self__.ascending_QMARK_, self__.cnt, self__.__hash)
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, self__.meta)
};
cljs.core.__GT_PersistentTreeMapSeq = function __GT_PersistentTreeMapSeq(meta, stack, ascending_QMARK_, cnt, __hash) {
  return new cljs.core.PersistentTreeMapSeq(meta, stack, ascending_QMARK_, cnt, __hash)
};
cljs.core.create_tree_map_seq = function create_tree_map_seq(tree, ascending_QMARK_, cnt) {
  return new cljs.core.PersistentTreeMapSeq(null, cljs.core.tree_map_seq_push.call(null, tree, null, ascending_QMARK_), ascending_QMARK_, cnt, null)
};
cljs.core.balance_left = function balance_left(key, val, ins, right) {
  if(ins instanceof cljs.core.RedNode) {
    if(ins.left instanceof cljs.core.RedNode) {
      return new cljs.core.RedNode(ins.key, ins.val, ins.left.blacken(), new cljs.core.BlackNode(key, val, ins.right, right, null), null)
    }else {
      if(ins.right instanceof cljs.core.RedNode) {
        return new cljs.core.RedNode(ins.right.key, ins.right.val, new cljs.core.BlackNode(ins.key, ins.val, ins.left, ins.right.left, null), new cljs.core.BlackNode(key, val, ins.right.right, right, null), null)
      }else {
        if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          return new cljs.core.BlackNode(key, val, ins, right, null)
        }else {
          return null
        }
      }
    }
  }else {
    return new cljs.core.BlackNode(key, val, ins, right, null)
  }
};
cljs.core.balance_right = function balance_right(key, val, left, ins) {
  if(ins instanceof cljs.core.RedNode) {
    if(ins.right instanceof cljs.core.RedNode) {
      return new cljs.core.RedNode(ins.key, ins.val, new cljs.core.BlackNode(key, val, left, ins.left, null), ins.right.blacken(), null)
    }else {
      if(ins.left instanceof cljs.core.RedNode) {
        return new cljs.core.RedNode(ins.left.key, ins.left.val, new cljs.core.BlackNode(key, val, left, ins.left.left, null), new cljs.core.BlackNode(ins.key, ins.val, ins.left.right, ins.right, null), null)
      }else {
        if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          return new cljs.core.BlackNode(key, val, left, ins, null)
        }else {
          return null
        }
      }
    }
  }else {
    return new cljs.core.BlackNode(key, val, left, ins, null)
  }
};
cljs.core.balance_left_del = function balance_left_del(key, val, del, right) {
  if(del instanceof cljs.core.RedNode) {
    return new cljs.core.RedNode(key, val, del.blacken(), right, null)
  }else {
    if(right instanceof cljs.core.BlackNode) {
      return cljs.core.balance_right.call(null, key, val, del, right.redden())
    }else {
      if(right instanceof cljs.core.RedNode && right.left instanceof cljs.core.BlackNode) {
        return new cljs.core.RedNode(right.left.key, right.left.val, new cljs.core.BlackNode(key, val, del, right.left.left, null), cljs.core.balance_right.call(null, right.key, right.val, right.left.right, right.right.redden()), null)
      }else {
        if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          throw new Error("red-black tree invariant violation");
        }else {
          return null
        }
      }
    }
  }
};
cljs.core.balance_right_del = function balance_right_del(key, val, left, del) {
  if(del instanceof cljs.core.RedNode) {
    return new cljs.core.RedNode(key, val, left, del.blacken(), null)
  }else {
    if(left instanceof cljs.core.BlackNode) {
      return cljs.core.balance_left.call(null, key, val, left.redden(), del)
    }else {
      if(left instanceof cljs.core.RedNode && left.right instanceof cljs.core.BlackNode) {
        return new cljs.core.RedNode(left.right.key, left.right.val, cljs.core.balance_left.call(null, left.key, left.val, left.left.redden(), left.right.left), new cljs.core.BlackNode(key, val, left.right.right, del, null), null)
      }else {
        if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          throw new Error("red-black tree invariant violation");
        }else {
          return null
        }
      }
    }
  }
};
cljs.core.tree_map_kv_reduce = function tree_map_kv_reduce(node, f, init) {
  var init__$1 = !(node.left == null) ? tree_map_kv_reduce.call(null, node.left, f, init) : init;
  if(cljs.core.reduced_QMARK_.call(null, init__$1)) {
    return cljs.core.deref.call(null, init__$1)
  }else {
    var init__$2 = f.call(null, init__$1, node.key, node.val);
    if(cljs.core.reduced_QMARK_.call(null, init__$2)) {
      return cljs.core.deref.call(null, init__$2)
    }else {
      var init__$3 = !(node.right == null) ? tree_map_kv_reduce.call(null, node.right, f, init__$2) : init__$2;
      if(cljs.core.reduced_QMARK_.call(null, init__$3)) {
        return cljs.core.deref.call(null, init__$3)
      }else {
        return init__$3
      }
    }
  }
};
cljs.core.BlackNode = function(key, val, left, right, __hash) {
  this.key = key;
  this.val = val;
  this.left = left;
  this.right = right;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32402207
};
cljs.core.BlackNode.cljs$lang$type = true;
cljs.core.BlackNode.cljs$lang$ctorStr = "cljs.core/BlackNode";
cljs.core.BlackNode.cljs$lang$ctorPrWriter = function(this__3829__auto__, writer__3830__auto__, opt__3831__auto__) {
  return cljs.core._write.call(null, writer__3830__auto__, "cljs.core/BlackNode")
};
cljs.core.BlackNode.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__3696__auto__ = self__.__hash;
  if(!(h__3696__auto__ == null)) {
    return h__3696__auto__
  }else {
    var h__3696__auto____$1 = cljs.core.hash_coll.call(null, coll__$1);
    self__.__hash = h__3696__auto____$1;
    return h__3696__auto____$1
  }
};
cljs.core.BlackNode.prototype.cljs$core$ILookup$_lookup$arity$2 = function(node, k) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core._nth.call(null, node__$1, k, null)
};
cljs.core.BlackNode.prototype.cljs$core$ILookup$_lookup$arity$3 = function(node, k, not_found) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core._nth.call(null, node__$1, k, not_found)
};
cljs.core.BlackNode.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(node, k, v) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.assoc.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val], null), k, v)
};
cljs.core.BlackNode.prototype.call = function() {
  var G__529517 = null;
  var G__529517__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var node = self____$1;
    return node.cljs$core$ILookup$_lookup$arity$2(null, k)
  };
  var G__529517__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var node = self____$1;
    return node.cljs$core$ILookup$_lookup$arity$3(null, k, not_found)
  };
  G__529517 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__529517__2.call(this, self__, k);
      case 3:
        return G__529517__3.call(this, self__, k, not_found)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  return G__529517
}();
cljs.core.BlackNode.prototype.apply = function(self__, args529516) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone.call(null, args529516)))
};
cljs.core.BlackNode.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var node = this;
  return node.cljs$core$ILookup$_lookup$arity$2(null, k)
};
cljs.core.BlackNode.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var node = this;
  return node.cljs$core$ILookup$_lookup$arity$3(null, k, not_found)
};
cljs.core.BlackNode.prototype.cljs$core$ICollection$_conj$arity$2 = function(node, o) {
  var self__ = this;
  var node__$1 = this;
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val, o], null)
};
cljs.core.BlackNode.prototype.cljs$core$IMapEntry$_key$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return self__.key
};
cljs.core.BlackNode.prototype.cljs$core$IMapEntry$_val$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return self__.val
};
cljs.core.BlackNode.prototype.add_right = function(ins) {
  var self__ = this;
  var node = this;
  return ins.balance_right(node)
};
cljs.core.BlackNode.prototype.redden = function() {
  var self__ = this;
  var node = this;
  return new cljs.core.RedNode(self__.key, self__.val, self__.left, self__.right, null)
};
cljs.core.BlackNode.prototype.remove_right = function(del) {
  var self__ = this;
  var node = this;
  return cljs.core.balance_right_del.call(null, self__.key, self__.val, self__.left, del)
};
cljs.core.BlackNode.prototype.replace = function(key__$1, val__$1, left__$1, right__$1) {
  var self__ = this;
  var node = this;
  return new cljs.core.BlackNode(key__$1, val__$1, left__$1, right__$1, null)
};
cljs.core.BlackNode.prototype.kv_reduce = function(f, init) {
  var self__ = this;
  var node = this;
  return cljs.core.tree_map_kv_reduce.call(null, node, f, init)
};
cljs.core.BlackNode.prototype.remove_left = function(del) {
  var self__ = this;
  var node = this;
  return cljs.core.balance_left_del.call(null, self__.key, self__.val, del, self__.right)
};
cljs.core.BlackNode.prototype.add_left = function(ins) {
  var self__ = this;
  var node = this;
  return ins.balance_left(node)
};
cljs.core.BlackNode.prototype.balance_left = function(parent) {
  var self__ = this;
  var node = this;
  return new cljs.core.BlackNode(parent.key, parent.val, node, parent.right, null)
};
cljs.core.BlackNode.prototype.balance_right = function(parent) {
  var self__ = this;
  var node = this;
  return new cljs.core.BlackNode(parent.key, parent.val, parent.left, node, null)
};
cljs.core.BlackNode.prototype.blacken = function() {
  var self__ = this;
  var node = this;
  return node
};
cljs.core.BlackNode.prototype.cljs$core$IReduce$_reduce$arity$2 = function(node, f) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.ci_reduce.call(null, node__$1, f)
};
cljs.core.BlackNode.prototype.cljs$core$IReduce$_reduce$arity$3 = function(node, f, start) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.ci_reduce.call(null, node__$1, f, start)
};
cljs.core.BlackNode.prototype.cljs$core$ISeqable$_seq$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, self__.val), self__.key)
};
cljs.core.BlackNode.prototype.cljs$core$ICounted$_count$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return 2
};
cljs.core.BlackNode.prototype.cljs$core$IStack$_peek$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return self__.val
};
cljs.core.BlackNode.prototype.cljs$core$IStack$_pop$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key], null)
};
cljs.core.BlackNode.prototype.cljs$core$IVector$_assoc_n$arity$3 = function(node, n, v) {
  var self__ = this;
  var node__$1 = this;
  return(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val], null)).cljs$core$IVector$_assoc_n$arity$3(null, n, v)
};
cljs.core.BlackNode.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other)
};
cljs.core.BlackNode.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(node, meta) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.with_meta.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val], null), meta)
};
cljs.core.BlackNode.prototype.cljs$core$IMeta$_meta$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return null
};
cljs.core.BlackNode.prototype.cljs$core$IIndexed$_nth$arity$2 = function(node, n) {
  var self__ = this;
  var node__$1 = this;
  if(n === 0) {
    return self__.key
  }else {
    if(n === 1) {
      return self__.val
    }else {
      if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        return null
      }else {
        return null
      }
    }
  }
};
cljs.core.BlackNode.prototype.cljs$core$IIndexed$_nth$arity$3 = function(node, n, not_found) {
  var self__ = this;
  var node__$1 = this;
  if(n === 0) {
    return self__.key
  }else {
    if(n === 1) {
      return self__.val
    }else {
      if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        return not_found
      }else {
        return null
      }
    }
  }
};
cljs.core.BlackNode.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.PersistentVector.EMPTY
};
cljs.core.__GT_BlackNode = function __GT_BlackNode(key, val, left, right, __hash) {
  return new cljs.core.BlackNode(key, val, left, right, __hash)
};
cljs.core.RedNode = function(key, val, left, right, __hash) {
  this.key = key;
  this.val = val;
  this.left = left;
  this.right = right;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32402207
};
cljs.core.RedNode.cljs$lang$type = true;
cljs.core.RedNode.cljs$lang$ctorStr = "cljs.core/RedNode";
cljs.core.RedNode.cljs$lang$ctorPrWriter = function(this__3829__auto__, writer__3830__auto__, opt__3831__auto__) {
  return cljs.core._write.call(null, writer__3830__auto__, "cljs.core/RedNode")
};
cljs.core.RedNode.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__3696__auto__ = self__.__hash;
  if(!(h__3696__auto__ == null)) {
    return h__3696__auto__
  }else {
    var h__3696__auto____$1 = cljs.core.hash_coll.call(null, coll__$1);
    self__.__hash = h__3696__auto____$1;
    return h__3696__auto____$1
  }
};
cljs.core.RedNode.prototype.cljs$core$ILookup$_lookup$arity$2 = function(node, k) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core._nth.call(null, node__$1, k, null)
};
cljs.core.RedNode.prototype.cljs$core$ILookup$_lookup$arity$3 = function(node, k, not_found) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core._nth.call(null, node__$1, k, not_found)
};
cljs.core.RedNode.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(node, k, v) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.assoc.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val], null), k, v)
};
cljs.core.RedNode.prototype.call = function() {
  var G__529519 = null;
  var G__529519__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var node = self____$1;
    return node.cljs$core$ILookup$_lookup$arity$2(null, k)
  };
  var G__529519__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var node = self____$1;
    return node.cljs$core$ILookup$_lookup$arity$3(null, k, not_found)
  };
  G__529519 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__529519__2.call(this, self__, k);
      case 3:
        return G__529519__3.call(this, self__, k, not_found)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  return G__529519
}();
cljs.core.RedNode.prototype.apply = function(self__, args529518) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone.call(null, args529518)))
};
cljs.core.RedNode.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var node = this;
  return node.cljs$core$ILookup$_lookup$arity$2(null, k)
};
cljs.core.RedNode.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var node = this;
  return node.cljs$core$ILookup$_lookup$arity$3(null, k, not_found)
};
cljs.core.RedNode.prototype.cljs$core$ICollection$_conj$arity$2 = function(node, o) {
  var self__ = this;
  var node__$1 = this;
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val, o], null)
};
cljs.core.RedNode.prototype.cljs$core$IMapEntry$_key$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return self__.key
};
cljs.core.RedNode.prototype.cljs$core$IMapEntry$_val$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return self__.val
};
cljs.core.RedNode.prototype.add_right = function(ins) {
  var self__ = this;
  var node = this;
  return new cljs.core.RedNode(self__.key, self__.val, self__.left, ins, null)
};
cljs.core.RedNode.prototype.redden = function() {
  var self__ = this;
  var node = this;
  throw new Error("red-black tree invariant violation");
};
cljs.core.RedNode.prototype.remove_right = function(del) {
  var self__ = this;
  var node = this;
  return new cljs.core.RedNode(self__.key, self__.val, self__.left, del, null)
};
cljs.core.RedNode.prototype.replace = function(key__$1, val__$1, left__$1, right__$1) {
  var self__ = this;
  var node = this;
  return new cljs.core.RedNode(key__$1, val__$1, left__$1, right__$1, null)
};
cljs.core.RedNode.prototype.kv_reduce = function(f, init) {
  var self__ = this;
  var node = this;
  return cljs.core.tree_map_kv_reduce.call(null, node, f, init)
};
cljs.core.RedNode.prototype.remove_left = function(del) {
  var self__ = this;
  var node = this;
  return new cljs.core.RedNode(self__.key, self__.val, del, self__.right, null)
};
cljs.core.RedNode.prototype.add_left = function(ins) {
  var self__ = this;
  var node = this;
  return new cljs.core.RedNode(self__.key, self__.val, ins, self__.right, null)
};
cljs.core.RedNode.prototype.balance_left = function(parent) {
  var self__ = this;
  var node = this;
  if(self__.left instanceof cljs.core.RedNode) {
    return new cljs.core.RedNode(self__.key, self__.val, self__.left.blacken(), new cljs.core.BlackNode(parent.key, parent.val, self__.right, parent.right, null), null)
  }else {
    if(self__.right instanceof cljs.core.RedNode) {
      return new cljs.core.RedNode(self__.right.key, self__.right.val, new cljs.core.BlackNode(self__.key, self__.val, self__.left, self__.right.left, null), new cljs.core.BlackNode(parent.key, parent.val, self__.right.right, parent.right, null), null)
    }else {
      if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        return new cljs.core.BlackNode(parent.key, parent.val, node, parent.right, null)
      }else {
        return null
      }
    }
  }
};
cljs.core.RedNode.prototype.balance_right = function(parent) {
  var self__ = this;
  var node = this;
  if(self__.right instanceof cljs.core.RedNode) {
    return new cljs.core.RedNode(self__.key, self__.val, new cljs.core.BlackNode(parent.key, parent.val, parent.left, self__.left, null), self__.right.blacken(), null)
  }else {
    if(self__.left instanceof cljs.core.RedNode) {
      return new cljs.core.RedNode(self__.left.key, self__.left.val, new cljs.core.BlackNode(parent.key, parent.val, parent.left, self__.left.left, null), new cljs.core.BlackNode(self__.key, self__.val, self__.left.right, self__.right, null), null)
    }else {
      if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        return new cljs.core.BlackNode(parent.key, parent.val, parent.left, node, null)
      }else {
        return null
      }
    }
  }
};
cljs.core.RedNode.prototype.blacken = function() {
  var self__ = this;
  var node = this;
  return new cljs.core.BlackNode(self__.key, self__.val, self__.left, self__.right, null)
};
cljs.core.RedNode.prototype.cljs$core$IReduce$_reduce$arity$2 = function(node, f) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.ci_reduce.call(null, node__$1, f)
};
cljs.core.RedNode.prototype.cljs$core$IReduce$_reduce$arity$3 = function(node, f, start) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.ci_reduce.call(null, node__$1, f, start)
};
cljs.core.RedNode.prototype.cljs$core$ISeqable$_seq$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, self__.val), self__.key)
};
cljs.core.RedNode.prototype.cljs$core$ICounted$_count$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return 2
};
cljs.core.RedNode.prototype.cljs$core$IStack$_peek$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return self__.val
};
cljs.core.RedNode.prototype.cljs$core$IStack$_pop$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key], null)
};
cljs.core.RedNode.prototype.cljs$core$IVector$_assoc_n$arity$3 = function(node, n, v) {
  var self__ = this;
  var node__$1 = this;
  return(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val], null)).cljs$core$IVector$_assoc_n$arity$3(null, n, v)
};
cljs.core.RedNode.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other)
};
cljs.core.RedNode.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(node, meta) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.with_meta.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val], null), meta)
};
cljs.core.RedNode.prototype.cljs$core$IMeta$_meta$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return null
};
cljs.core.RedNode.prototype.cljs$core$IIndexed$_nth$arity$2 = function(node, n) {
  var self__ = this;
  var node__$1 = this;
  if(n === 0) {
    return self__.key
  }else {
    if(n === 1) {
      return self__.val
    }else {
      if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        return null
      }else {
        return null
      }
    }
  }
};
cljs.core.RedNode.prototype.cljs$core$IIndexed$_nth$arity$3 = function(node, n, not_found) {
  var self__ = this;
  var node__$1 = this;
  if(n === 0) {
    return self__.key
  }else {
    if(n === 1) {
      return self__.val
    }else {
      if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        return not_found
      }else {
        return null
      }
    }
  }
};
cljs.core.RedNode.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.PersistentVector.EMPTY
};
cljs.core.__GT_RedNode = function __GT_RedNode(key, val, left, right, __hash) {
  return new cljs.core.RedNode(key, val, left, right, __hash)
};
cljs.core.tree_map_add = function tree_map_add(comp, tree, k, v, found) {
  if(tree == null) {
    return new cljs.core.RedNode(k, v, null, null, null)
  }else {
    var c = comp.call(null, k, tree.key);
    if(c === 0) {
      found[0] = tree;
      return null
    }else {
      if(c < 0) {
        var ins = tree_map_add.call(null, comp, tree.left, k, v, found);
        if(!(ins == null)) {
          return tree.add_left(ins)
        }else {
          return null
        }
      }else {
        if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          var ins = tree_map_add.call(null, comp, tree.right, k, v, found);
          if(!(ins == null)) {
            return tree.add_right(ins)
          }else {
            return null
          }
        }else {
          return null
        }
      }
    }
  }
};
cljs.core.tree_map_append = function tree_map_append(left, right) {
  if(left == null) {
    return right
  }else {
    if(right == null) {
      return left
    }else {
      if(left instanceof cljs.core.RedNode) {
        if(right instanceof cljs.core.RedNode) {
          var app = tree_map_append.call(null, left.right, right.left);
          if(app instanceof cljs.core.RedNode) {
            return new cljs.core.RedNode(app.key, app.val, new cljs.core.RedNode(left.key, left.val, left.left, app.left, null), new cljs.core.RedNode(right.key, right.val, app.right, right.right, null), null)
          }else {
            return new cljs.core.RedNode(left.key, left.val, left.left, new cljs.core.RedNode(right.key, right.val, app, right.right, null), null)
          }
        }else {
          return new cljs.core.RedNode(left.key, left.val, left.left, tree_map_append.call(null, left.right, right), null)
        }
      }else {
        if(right instanceof cljs.core.RedNode) {
          return new cljs.core.RedNode(right.key, right.val, tree_map_append.call(null, left, right.left), right.right, null)
        }else {
          if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
            var app = tree_map_append.call(null, left.right, right.left);
            if(app instanceof cljs.core.RedNode) {
              return new cljs.core.RedNode(app.key, app.val, new cljs.core.BlackNode(left.key, left.val, left.left, app.left, null), new cljs.core.BlackNode(right.key, right.val, app.right, right.right, null), null)
            }else {
              return cljs.core.balance_left_del.call(null, left.key, left.val, left.left, new cljs.core.BlackNode(right.key, right.val, app, right.right, null))
            }
          }else {
            return null
          }
        }
      }
    }
  }
};
cljs.core.tree_map_remove = function tree_map_remove(comp, tree, k, found) {
  if(!(tree == null)) {
    var c = comp.call(null, k, tree.key);
    if(c === 0) {
      found[0] = tree;
      return cljs.core.tree_map_append.call(null, tree.left, tree.right)
    }else {
      if(c < 0) {
        var del = tree_map_remove.call(null, comp, tree.left, k, found);
        if(!(del == null) || !(found[0] == null)) {
          if(tree.left instanceof cljs.core.BlackNode) {
            return cljs.core.balance_left_del.call(null, tree.key, tree.val, del, tree.right)
          }else {
            return new cljs.core.RedNode(tree.key, tree.val, del, tree.right, null)
          }
        }else {
          return null
        }
      }else {
        if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          var del = tree_map_remove.call(null, comp, tree.right, k, found);
          if(!(del == null) || !(found[0] == null)) {
            if(tree.right instanceof cljs.core.BlackNode) {
              return cljs.core.balance_right_del.call(null, tree.key, tree.val, tree.left, del)
            }else {
              return new cljs.core.RedNode(tree.key, tree.val, tree.left, del, null)
            }
          }else {
            return null
          }
        }else {
          return null
        }
      }
    }
  }else {
    return null
  }
};
cljs.core.tree_map_replace = function tree_map_replace(comp, tree, k, v) {
  var tk = tree.key;
  var c = comp.call(null, k, tk);
  if(c === 0) {
    return tree.replace(tk, v, tree.left, tree.right)
  }else {
    if(c < 0) {
      return tree.replace(tk, tree.val, tree_map_replace.call(null, comp, tree.left, k, v), tree.right)
    }else {
      if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        return tree.replace(tk, tree.val, tree.left, tree_map_replace.call(null, comp, tree.right, k, v))
      }else {
        return null
      }
    }
  }
};
cljs.core.PersistentTreeMap = function(comp, tree, cnt, meta, __hash) {
  this.comp = comp;
  this.tree = tree;
  this.cnt = cnt;
  this.meta = meta;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 418776847
};
cljs.core.PersistentTreeMap.cljs$lang$type = true;
cljs.core.PersistentTreeMap.cljs$lang$ctorStr = "cljs.core/PersistentTreeMap";
cljs.core.PersistentTreeMap.cljs$lang$ctorPrWriter = function(this__3829__auto__, writer__3830__auto__, opt__3831__auto__) {
  return cljs.core._write.call(null, writer__3830__auto__, "cljs.core/PersistentTreeMap")
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__3696__auto__ = self__.__hash;
  if(!(h__3696__auto__ == null)) {
    return h__3696__auto__
  }else {
    var h__3696__auto____$1 = cljs.core.hash_imap.call(null, coll__$1);
    self__.__hash = h__3696__auto____$1;
    return h__3696__auto____$1
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._lookup.call(null, coll__$1, k, null)
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  var coll__$1 = this;
  var n = coll__$1.entry_at(k);
  if(!(n == null)) {
    return n.val
  }else {
    return not_found
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var self__ = this;
  var coll__$1 = this;
  var found = [null];
  var t = cljs.core.tree_map_add.call(null, self__.comp, self__.tree, k, v, found);
  if(t == null) {
    var found_node = cljs.core.nth.call(null, found, 0);
    if(cljs.core._EQ_.call(null, v, found_node.val)) {
      return coll__$1
    }else {
      return new cljs.core.PersistentTreeMap(self__.comp, cljs.core.tree_map_replace.call(null, self__.comp, self__.tree, k, v), self__.cnt, self__.meta, null)
    }
  }else {
    return new cljs.core.PersistentTreeMap(self__.comp, t.blacken(), self__.cnt + 1, self__.meta, null)
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return!(coll__$1.entry_at(k) == null)
};
cljs.core.PersistentTreeMap.prototype.call = function() {
  var G__529521 = null;
  var G__529521__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$2(null, k)
  };
  var G__529521__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found)
  };
  G__529521 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__529521__2.call(this, self__, k);
      case 3:
        return G__529521__3.call(this, self__, k, not_found)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  return G__529521
}();
cljs.core.PersistentTreeMap.prototype.apply = function(self__, args529520) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone.call(null, args529520)))
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$2(null, k)
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found)
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(coll, f, init) {
  var self__ = this;
  var coll__$1 = this;
  if(!(self__.tree == null)) {
    return cljs.core.tree_map_kv_reduce.call(null, self__.tree, f, init)
  }else {
    return init
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, entry) {
  var self__ = this;
  var coll__$1 = this;
  if(cljs.core.vector_QMARK_.call(null, entry)) {
    return cljs.core._assoc.call(null, coll__$1, cljs.core._nth.call(null, entry, 0), cljs.core._nth.call(null, entry, 1))
  }else {
    return cljs.core.reduce.call(null, cljs.core._conj, coll__$1, entry)
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IReversible$_rseq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if(self__.cnt > 0) {
    return cljs.core.create_tree_map_seq.call(null, self__.tree, false, self__.cnt)
  }else {
    return null
  }
};
cljs.core.PersistentTreeMap.prototype.entry_at = function(k) {
  var self__ = this;
  var coll = this;
  var t = self__.tree;
  while(true) {
    if(!(t == null)) {
      var c = self__.comp.call(null, k, t.key);
      if(c === 0) {
        return t
      }else {
        if(c < 0) {
          var G__529522 = t.left;
          t = G__529522;
          continue
        }else {
          if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
            var G__529523 = t.right;
            t = G__529523;
            continue
          }else {
            return null
          }
        }
      }
    }else {
      return null
    }
    break
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_sorted_seq$arity$2 = function(coll, ascending_QMARK_) {
  var self__ = this;
  var coll__$1 = this;
  if(self__.cnt > 0) {
    return cljs.core.create_tree_map_seq.call(null, self__.tree, ascending_QMARK_, self__.cnt)
  }else {
    return null
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_sorted_seq_from$arity$3 = function(coll, k, ascending_QMARK_) {
  var self__ = this;
  var coll__$1 = this;
  if(self__.cnt > 0) {
    var stack = null;
    var t = self__.tree;
    while(true) {
      if(!(t == null)) {
        var c = self__.comp.call(null, k, t.key);
        if(c === 0) {
          return new cljs.core.PersistentTreeMapSeq(null, cljs.core.conj.call(null, stack, t), ascending_QMARK_, -1, null)
        }else {
          if(cljs.core.truth_(ascending_QMARK_)) {
            if(c < 0) {
              var G__529524 = cljs.core.conj.call(null, stack, t);
              var G__529525 = t.left;
              stack = G__529524;
              t = G__529525;
              continue
            }else {
              var G__529526 = stack;
              var G__529527 = t.right;
              stack = G__529526;
              t = G__529527;
              continue
            }
          }else {
            if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
              if(c > 0) {
                var G__529528 = cljs.core.conj.call(null, stack, t);
                var G__529529 = t.right;
                stack = G__529528;
                t = G__529529;
                continue
              }else {
                var G__529530 = stack;
                var G__529531 = t.left;
                stack = G__529530;
                t = G__529531;
                continue
              }
            }else {
              return null
            }
          }
        }
      }else {
        if(stack == null) {
          return null
        }else {
          return new cljs.core.PersistentTreeMapSeq(null, stack, ascending_QMARK_, -1, null)
        }
      }
      break
    }
  }else {
    return null
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_entry_key$arity$2 = function(coll, entry) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.key.call(null, entry)
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_comparator$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.comp
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if(self__.cnt > 0) {
    return cljs.core.create_tree_map_seq.call(null, self__.tree, true, self__.cnt)
  }else {
    return null
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.cnt
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_map.call(null, coll__$1, other)
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentTreeMap(self__.comp, self__.tree, self__.cnt, meta__$1, self__.__hash)
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta.call(null, cljs.core.PersistentTreeMap.EMPTY, self__.meta)
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IMap$_dissoc$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  var found = [null];
  var t = cljs.core.tree_map_remove.call(null, self__.comp, self__.tree, k, found);
  if(t == null) {
    if(cljs.core.nth.call(null, found, 0) == null) {
      return coll__$1
    }else {
      return new cljs.core.PersistentTreeMap(self__.comp, null, 0, self__.meta, null)
    }
  }else {
    return new cljs.core.PersistentTreeMap(self__.comp, t.blacken(), self__.cnt - 1, self__.meta, null)
  }
};
cljs.core.__GT_PersistentTreeMap = function __GT_PersistentTreeMap(comp, tree, cnt, meta, __hash) {
  return new cljs.core.PersistentTreeMap(comp, tree, cnt, meta, __hash)
};
cljs.core.PersistentTreeMap.EMPTY = new cljs.core.PersistentTreeMap(cljs.core.compare, null, 0, null, 0);
cljs.core.hash_map = function() {
  var hash_map__delegate = function(keyvals) {
    var in$ = cljs.core.seq.call(null, keyvals);
    var out = cljs.core.transient$.call(null, cljs.core.PersistentHashMap.EMPTY);
    while(true) {
      if(in$) {
        var G__529532 = cljs.core.nnext.call(null, in$);
        var G__529533 = cljs.core.assoc_BANG_.call(null, out, cljs.core.first.call(null, in$), cljs.core.second.call(null, in$));
        in$ = G__529532;
        out = G__529533;
        continue
      }else {
        return cljs.core.persistent_BANG_.call(null, out)
      }
      break
    }
  };
  var hash_map = function(var_args) {
    var keyvals = null;
    if(arguments.length > 0) {
      keyvals = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return hash_map__delegate.call(this, keyvals)
  };
  hash_map.cljs$lang$maxFixedArity = 0;
  hash_map.cljs$lang$applyTo = function(arglist__529534) {
    var keyvals = cljs.core.seq(arglist__529534);
    return hash_map__delegate(keyvals)
  };
  hash_map.cljs$core$IFn$_invoke$arity$variadic = hash_map__delegate;
  return hash_map
}();
cljs.core.array_map = function() {
  var array_map__delegate = function(keyvals) {
    return new cljs.core.PersistentArrayMap(null, cljs.core.quot.call(null, cljs.core.count.call(null, keyvals), 2), cljs.core.apply.call(null, cljs.core.array, keyvals), null)
  };
  var array_map = function(var_args) {
    var keyvals = null;
    if(arguments.length > 0) {
      keyvals = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return array_map__delegate.call(this, keyvals)
  };
  array_map.cljs$lang$maxFixedArity = 0;
  array_map.cljs$lang$applyTo = function(arglist__529535) {
    var keyvals = cljs.core.seq(arglist__529535);
    return array_map__delegate(keyvals)
  };
  array_map.cljs$core$IFn$_invoke$arity$variadic = array_map__delegate;
  return array_map
}();
cljs.core.obj_map = function() {
  var obj_map__delegate = function(keyvals) {
    var ks = [];
    var obj = function() {
      var obj529539 = {};
      return obj529539
    }();
    var kvs = cljs.core.seq.call(null, keyvals);
    while(true) {
      if(kvs) {
        ks.push(cljs.core.first.call(null, kvs));
        obj[cljs.core.first.call(null, kvs)] = cljs.core.second.call(null, kvs);
        var G__529540 = cljs.core.nnext.call(null, kvs);
        kvs = G__529540;
        continue
      }else {
        return cljs.core.ObjMap.fromObject.call(null, ks, obj)
      }
      break
    }
  };
  var obj_map = function(var_args) {
    var keyvals = null;
    if(arguments.length > 0) {
      keyvals = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return obj_map__delegate.call(this, keyvals)
  };
  obj_map.cljs$lang$maxFixedArity = 0;
  obj_map.cljs$lang$applyTo = function(arglist__529541) {
    var keyvals = cljs.core.seq(arglist__529541);
    return obj_map__delegate(keyvals)
  };
  obj_map.cljs$core$IFn$_invoke$arity$variadic = obj_map__delegate;
  return obj_map
}();
cljs.core.sorted_map = function() {
  var sorted_map__delegate = function(keyvals) {
    var in$ = cljs.core.seq.call(null, keyvals);
    var out = cljs.core.PersistentTreeMap.EMPTY;
    while(true) {
      if(in$) {
        var G__529542 = cljs.core.nnext.call(null, in$);
        var G__529543 = cljs.core.assoc.call(null, out, cljs.core.first.call(null, in$), cljs.core.second.call(null, in$));
        in$ = G__529542;
        out = G__529543;
        continue
      }else {
        return out
      }
      break
    }
  };
  var sorted_map = function(var_args) {
    var keyvals = null;
    if(arguments.length > 0) {
      keyvals = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return sorted_map__delegate.call(this, keyvals)
  };
  sorted_map.cljs$lang$maxFixedArity = 0;
  sorted_map.cljs$lang$applyTo = function(arglist__529544) {
    var keyvals = cljs.core.seq(arglist__529544);
    return sorted_map__delegate(keyvals)
  };
  sorted_map.cljs$core$IFn$_invoke$arity$variadic = sorted_map__delegate;
  return sorted_map
}();
cljs.core.sorted_map_by = function() {
  var sorted_map_by__delegate = function(comparator, keyvals) {
    var in$ = cljs.core.seq.call(null, keyvals);
    var out = new cljs.core.PersistentTreeMap(cljs.core.fn__GT_comparator.call(null, comparator), null, 0, null, 0);
    while(true) {
      if(in$) {
        var G__529545 = cljs.core.nnext.call(null, in$);
        var G__529546 = cljs.core.assoc.call(null, out, cljs.core.first.call(null, in$), cljs.core.second.call(null, in$));
        in$ = G__529545;
        out = G__529546;
        continue
      }else {
        return out
      }
      break
    }
  };
  var sorted_map_by = function(comparator, var_args) {
    var keyvals = null;
    if(arguments.length > 1) {
      keyvals = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
    }
    return sorted_map_by__delegate.call(this, comparator, keyvals)
  };
  sorted_map_by.cljs$lang$maxFixedArity = 1;
  sorted_map_by.cljs$lang$applyTo = function(arglist__529547) {
    var comparator = cljs.core.first(arglist__529547);
    var keyvals = cljs.core.rest(arglist__529547);
    return sorted_map_by__delegate(comparator, keyvals)
  };
  sorted_map_by.cljs$core$IFn$_invoke$arity$variadic = sorted_map_by__delegate;
  return sorted_map_by
}();
cljs.core.KeySeq = function(mseq, _meta) {
  this.mseq = mseq;
  this._meta = _meta;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32374988
};
cljs.core.KeySeq.cljs$lang$type = true;
cljs.core.KeySeq.cljs$lang$ctorStr = "cljs.core/KeySeq";
cljs.core.KeySeq.cljs$lang$ctorPrWriter = function(this__3829__auto__, writer__3830__auto__, opt__3831__auto__) {
  return cljs.core._write.call(null, writer__3830__auto__, "cljs.core/KeySeq")
};
cljs.core.KeySeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.hash_coll.call(null, coll__$1)
};
cljs.core.KeySeq.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var nseq = function() {
    var G__529548 = self__.mseq;
    if(G__529548) {
      var bit__3911__auto__ = G__529548.cljs$lang$protocol_mask$partition0$ & 128;
      if(bit__3911__auto__ || G__529548.cljs$core$INext$) {
        return true
      }else {
        if(!G__529548.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.INext, G__529548)
        }else {
          return false
        }
      }
    }else {
      return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.INext, G__529548)
    }
  }() ? cljs.core._next.call(null, self__.mseq) : cljs.core.next.call(null, self__.mseq);
  if(nseq == null) {
    return null
  }else {
    return new cljs.core.KeySeq(nseq, self__._meta)
  }
};
cljs.core.KeySeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons.call(null, o, coll__$1)
};
cljs.core.KeySeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll)
};
cljs.core.KeySeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, coll__$1)
};
cljs.core.KeySeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, start, coll__$1)
};
cljs.core.KeySeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1
};
cljs.core.KeySeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var me = cljs.core._first.call(null, self__.mseq);
  return cljs.core._key.call(null, me)
};
cljs.core.KeySeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var nseq = function() {
    var G__529549 = self__.mseq;
    if(G__529549) {
      var bit__3911__auto__ = G__529549.cljs$lang$protocol_mask$partition0$ & 128;
      if(bit__3911__auto__ || G__529549.cljs$core$INext$) {
        return true
      }else {
        if(!G__529549.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.INext, G__529549)
        }else {
          return false
        }
      }
    }else {
      return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.INext, G__529549)
    }
  }() ? cljs.core._next.call(null, self__.mseq) : cljs.core.next.call(null, self__.mseq);
  if(!(nseq == null)) {
    return new cljs.core.KeySeq(nseq, self__._meta)
  }else {
    return cljs.core.List.EMPTY
  }
};
cljs.core.KeySeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other)
};
cljs.core.KeySeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, new_meta) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.KeySeq(self__.mseq, new_meta)
};
cljs.core.KeySeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__._meta
};
cljs.core.KeySeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, self__._meta)
};
cljs.core.__GT_KeySeq = function __GT_KeySeq(mseq, _meta) {
  return new cljs.core.KeySeq(mseq, _meta)
};
cljs.core.keys = function keys(hash_map) {
  var temp__4092__auto__ = cljs.core.seq.call(null, hash_map);
  if(temp__4092__auto__) {
    var mseq = temp__4092__auto__;
    return new cljs.core.KeySeq(mseq, null)
  }else {
    return null
  }
};
cljs.core.key = function key(map_entry) {
  return cljs.core._key.call(null, map_entry)
};
cljs.core.ValSeq = function(mseq, _meta) {
  this.mseq = mseq;
  this._meta = _meta;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32374988
};
cljs.core.ValSeq.cljs$lang$type = true;
cljs.core.ValSeq.cljs$lang$ctorStr = "cljs.core/ValSeq";
cljs.core.ValSeq.cljs$lang$ctorPrWriter = function(this__3829__auto__, writer__3830__auto__, opt__3831__auto__) {
  return cljs.core._write.call(null, writer__3830__auto__, "cljs.core/ValSeq")
};
cljs.core.ValSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.hash_coll.call(null, coll__$1)
};
cljs.core.ValSeq.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var nseq = function() {
    var G__529550 = self__.mseq;
    if(G__529550) {
      var bit__3911__auto__ = G__529550.cljs$lang$protocol_mask$partition0$ & 128;
      if(bit__3911__auto__ || G__529550.cljs$core$INext$) {
        return true
      }else {
        if(!G__529550.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.INext, G__529550)
        }else {
          return false
        }
      }
    }else {
      return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.INext, G__529550)
    }
  }() ? cljs.core._next.call(null, self__.mseq) : cljs.core.next.call(null, self__.mseq);
  if(nseq == null) {
    return null
  }else {
    return new cljs.core.ValSeq(nseq, self__._meta)
  }
};
cljs.core.ValSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons.call(null, o, coll__$1)
};
cljs.core.ValSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll)
};
cljs.core.ValSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, coll__$1)
};
cljs.core.ValSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, start, coll__$1)
};
cljs.core.ValSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1
};
cljs.core.ValSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var me = cljs.core._first.call(null, self__.mseq);
  return cljs.core._val.call(null, me)
};
cljs.core.ValSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var nseq = function() {
    var G__529551 = self__.mseq;
    if(G__529551) {
      var bit__3911__auto__ = G__529551.cljs$lang$protocol_mask$partition0$ & 128;
      if(bit__3911__auto__ || G__529551.cljs$core$INext$) {
        return true
      }else {
        if(!G__529551.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.INext, G__529551)
        }else {
          return false
        }
      }
    }else {
      return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.INext, G__529551)
    }
  }() ? cljs.core._next.call(null, self__.mseq) : cljs.core.next.call(null, self__.mseq);
  if(!(nseq == null)) {
    return new cljs.core.ValSeq(nseq, self__._meta)
  }else {
    return cljs.core.List.EMPTY
  }
};
cljs.core.ValSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other)
};
cljs.core.ValSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, new_meta) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.ValSeq(self__.mseq, new_meta)
};
cljs.core.ValSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__._meta
};
cljs.core.ValSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, self__._meta)
};
cljs.core.__GT_ValSeq = function __GT_ValSeq(mseq, _meta) {
  return new cljs.core.ValSeq(mseq, _meta)
};
cljs.core.vals = function vals(hash_map) {
  var temp__4092__auto__ = cljs.core.seq.call(null, hash_map);
  if(temp__4092__auto__) {
    var mseq = temp__4092__auto__;
    return new cljs.core.ValSeq(mseq, null)
  }else {
    return null
  }
};
cljs.core.val = function val(map_entry) {
  return cljs.core._val.call(null, map_entry)
};
cljs.core.merge = function() {
  var merge__delegate = function(maps) {
    if(cljs.core.truth_(cljs.core.some.call(null, cljs.core.identity, maps))) {
      return cljs.core.reduce.call(null, function(p1__529552_SHARP_, p2__529553_SHARP_) {
        return cljs.core.conj.call(null, function() {
          var or__3285__auto__ = p1__529552_SHARP_;
          if(cljs.core.truth_(or__3285__auto__)) {
            return or__3285__auto__
          }else {
            return cljs.core.PersistentArrayMap.EMPTY
          }
        }(), p2__529553_SHARP_)
      }, maps)
    }else {
      return null
    }
  };
  var merge = function(var_args) {
    var maps = null;
    if(arguments.length > 0) {
      maps = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return merge__delegate.call(this, maps)
  };
  merge.cljs$lang$maxFixedArity = 0;
  merge.cljs$lang$applyTo = function(arglist__529554) {
    var maps = cljs.core.seq(arglist__529554);
    return merge__delegate(maps)
  };
  merge.cljs$core$IFn$_invoke$arity$variadic = merge__delegate;
  return merge
}();
cljs.core.merge_with = function() {
  var merge_with__delegate = function(f, maps) {
    if(cljs.core.truth_(cljs.core.some.call(null, cljs.core.identity, maps))) {
      var merge_entry = function(m, e) {
        var k = cljs.core.first.call(null, e);
        var v = cljs.core.second.call(null, e);
        if(cljs.core.contains_QMARK_.call(null, m, k)) {
          return cljs.core.assoc.call(null, m, k, f.call(null, cljs.core.get.call(null, m, k), v))
        }else {
          return cljs.core.assoc.call(null, m, k, v)
        }
      };
      var merge2 = function(merge_entry) {
        return function(m1, m2) {
          return cljs.core.reduce.call(null, merge_entry, function() {
            var or__3285__auto__ = m1;
            if(cljs.core.truth_(or__3285__auto__)) {
              return or__3285__auto__
            }else {
              return cljs.core.PersistentArrayMap.EMPTY
            }
          }(), cljs.core.seq.call(null, m2))
        }
      }(merge_entry);
      return cljs.core.reduce.call(null, merge2, maps)
    }else {
      return null
    }
  };
  var merge_with = function(f, var_args) {
    var maps = null;
    if(arguments.length > 1) {
      maps = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
    }
    return merge_with__delegate.call(this, f, maps)
  };
  merge_with.cljs$lang$maxFixedArity = 1;
  merge_with.cljs$lang$applyTo = function(arglist__529555) {
    var f = cljs.core.first(arglist__529555);
    var maps = cljs.core.rest(arglist__529555);
    return merge_with__delegate(f, maps)
  };
  merge_with.cljs$core$IFn$_invoke$arity$variadic = merge_with__delegate;
  return merge_with
}();
cljs.core.select_keys = function select_keys(map, keyseq) {
  var ret = cljs.core.PersistentArrayMap.EMPTY;
  var keys = cljs.core.seq.call(null, keyseq);
  while(true) {
    if(keys) {
      var key = cljs.core.first.call(null, keys);
      var entry = cljs.core.get.call(null, map, key, new cljs.core.Keyword("cljs.core", "not-found", "cljs.core/not-found", 4155500789));
      var G__529556 = cljs.core.not_EQ_.call(null, entry, new cljs.core.Keyword("cljs.core", "not-found", "cljs.core/not-found", 4155500789)) ? cljs.core.assoc.call(null, ret, key, entry) : ret;
      var G__529557 = cljs.core.next.call(null, keys);
      ret = G__529556;
      keys = G__529557;
      continue
    }else {
      return ret
    }
    break
  }
};
cljs.core.PersistentHashSet = function(meta, hash_map, __hash) {
  this.meta = meta;
  this.hash_map = hash_map;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 4;
  this.cljs$lang$protocol_mask$partition0$ = 15077647
};
cljs.core.PersistentHashSet.cljs$lang$type = true;
cljs.core.PersistentHashSet.cljs$lang$ctorStr = "cljs.core/PersistentHashSet";
cljs.core.PersistentHashSet.cljs$lang$ctorPrWriter = function(this__3829__auto__, writer__3830__auto__, opt__3831__auto__) {
  return cljs.core._write.call(null, writer__3830__auto__, "cljs.core/PersistentHashSet")
};
cljs.core.PersistentHashSet.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.TransientHashSet(cljs.core._as_transient.call(null, self__.hash_map))
};
cljs.core.PersistentHashSet.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__3696__auto__ = self__.__hash;
  if(!(h__3696__auto__ == null)) {
    return h__3696__auto__
  }else {
    var h__3696__auto____$1 = cljs.core.hash_iset.call(null, coll__$1);
    self__.__hash = h__3696__auto____$1;
    return h__3696__auto____$1
  }
};
cljs.core.PersistentHashSet.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, v) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._lookup.call(null, coll__$1, v, null)
};
cljs.core.PersistentHashSet.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, v, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if(cljs.core._contains_key_QMARK_.call(null, self__.hash_map, v)) {
    return v
  }else {
    return not_found
  }
};
cljs.core.PersistentHashSet.prototype.call = function() {
  var G__529560 = null;
  var G__529560__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$2(null, k)
  };
  var G__529560__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found)
  };
  G__529560 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__529560__2.call(this, self__, k);
      case 3:
        return G__529560__3.call(this, self__, k, not_found)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  return G__529560
}();
cljs.core.PersistentHashSet.prototype.apply = function(self__, args529559) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone.call(null, args529559)))
};
cljs.core.PersistentHashSet.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$2(null, k)
};
cljs.core.PersistentHashSet.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found)
};
cljs.core.PersistentHashSet.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentHashSet(self__.meta, cljs.core.assoc.call(null, self__.hash_map, o, null), null)
};
cljs.core.PersistentHashSet.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll)
};
cljs.core.PersistentHashSet.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.keys.call(null, self__.hash_map)
};
cljs.core.PersistentHashSet.prototype.cljs$core$ISet$_disjoin$arity$2 = function(coll, v) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentHashSet(self__.meta, cljs.core._dissoc.call(null, self__.hash_map, v), null)
};
cljs.core.PersistentHashSet.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._count.call(null, self__.hash_map)
};
cljs.core.PersistentHashSet.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.set_QMARK_.call(null, other) && cljs.core.count.call(null, coll__$1) === cljs.core.count.call(null, other) && cljs.core.every_QMARK_.call(null, function(p1__529558_SHARP_) {
    return cljs.core.contains_QMARK_.call(null, coll__$1, p1__529558_SHARP_)
  }, other)
};
cljs.core.PersistentHashSet.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentHashSet(meta__$1, self__.hash_map, self__.__hash)
};
cljs.core.PersistentHashSet.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta
};
cljs.core.PersistentHashSet.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta.call(null, cljs.core.PersistentHashSet.EMPTY, self__.meta)
};
cljs.core.__GT_PersistentHashSet = function __GT_PersistentHashSet(meta, hash_map, __hash) {
  return new cljs.core.PersistentHashSet(meta, hash_map, __hash)
};
cljs.core.PersistentHashSet.EMPTY = new cljs.core.PersistentHashSet(null, cljs.core.PersistentArrayMap.EMPTY, 0);
cljs.core.PersistentHashSet.fromArray = function(items, no_clone) {
  var len = items.length;
  if(len <= cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD) {
    var arr = no_clone ? items : cljs.core.aclone.call(null, items);
    var i = 0;
    var out = cljs.core.transient$.call(null, cljs.core.PersistentArrayMap.EMPTY);
    while(true) {
      if(i < len) {
        var G__529561 = i + 1;
        var G__529562 = cljs.core._assoc_BANG_.call(null, out, items[i], null);
        i = G__529561;
        out = G__529562;
        continue
      }else {
        return new cljs.core.PersistentHashSet(null, cljs.core._persistent_BANG_.call(null, out), null)
      }
      break
    }
  }else {
    var i = 0;
    var out = cljs.core.transient$.call(null, cljs.core.PersistentHashSet.EMPTY);
    while(true) {
      if(i < len) {
        var G__529563 = i + 2;
        var G__529564 = cljs.core._conj_BANG_.call(null, out, items[i]);
        i = G__529563;
        out = G__529564;
        continue
      }else {
        return cljs.core._persistent_BANG_.call(null, out)
      }
      break
    }
  }
};
cljs.core.TransientHashSet = function(transient_map) {
  this.transient_map = transient_map;
  this.cljs$lang$protocol_mask$partition0$ = 259;
  this.cljs$lang$protocol_mask$partition1$ = 136
};
cljs.core.TransientHashSet.cljs$lang$type = true;
cljs.core.TransientHashSet.cljs$lang$ctorStr = "cljs.core/TransientHashSet";
cljs.core.TransientHashSet.cljs$lang$ctorPrWriter = function(this__3829__auto__, writer__3830__auto__, opt__3831__auto__) {
  return cljs.core._write.call(null, writer__3830__auto__, "cljs.core/TransientHashSet")
};
cljs.core.TransientHashSet.prototype.call = function() {
  var G__529566 = null;
  var G__529566__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var tcoll = self____$1;
    if(cljs.core._lookup.call(null, self__.transient_map, k, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
      return null
    }else {
      return k
    }
  };
  var G__529566__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var tcoll = self____$1;
    if(cljs.core._lookup.call(null, self__.transient_map, k, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
      return not_found
    }else {
      return k
    }
  };
  G__529566 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__529566__2.call(this, self__, k);
      case 3:
        return G__529566__3.call(this, self__, k, not_found)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  return G__529566
}();
cljs.core.TransientHashSet.prototype.apply = function(self__, args529565) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone.call(null, args529565)))
};
cljs.core.TransientHashSet.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var tcoll = this;
  if(cljs.core._lookup.call(null, self__.transient_map, k, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
    return null
  }else {
    return k
  }
};
cljs.core.TransientHashSet.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var tcoll = this;
  if(cljs.core._lookup.call(null, self__.transient_map, k, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
    return not_found
  }else {
    return k
  }
};
cljs.core.TransientHashSet.prototype.cljs$core$ILookup$_lookup$arity$2 = function(tcoll, v) {
  var self__ = this;
  var tcoll__$1 = this;
  return cljs.core._lookup.call(null, tcoll__$1, v, null)
};
cljs.core.TransientHashSet.prototype.cljs$core$ILookup$_lookup$arity$3 = function(tcoll, v, not_found) {
  var self__ = this;
  var tcoll__$1 = this;
  if(cljs.core._lookup.call(null, self__.transient_map, v, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
    return not_found
  }else {
    return v
  }
};
cljs.core.TransientHashSet.prototype.cljs$core$ICounted$_count$arity$1 = function(tcoll) {
  var self__ = this;
  var tcoll__$1 = this;
  return cljs.core.count.call(null, self__.transient_map)
};
cljs.core.TransientHashSet.prototype.cljs$core$ITransientSet$_disjoin_BANG_$arity$2 = function(tcoll, v) {
  var self__ = this;
  var tcoll__$1 = this;
  self__.transient_map = cljs.core.dissoc_BANG_.call(null, self__.transient_map, v);
  return tcoll__$1
};
cljs.core.TransientHashSet.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = function(tcoll, o) {
  var self__ = this;
  var tcoll__$1 = this;
  self__.transient_map = cljs.core.assoc_BANG_.call(null, self__.transient_map, o, null);
  return tcoll__$1
};
cljs.core.TransientHashSet.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = function(tcoll) {
  var self__ = this;
  var tcoll__$1 = this;
  return new cljs.core.PersistentHashSet(null, cljs.core.persistent_BANG_.call(null, self__.transient_map), null)
};
cljs.core.__GT_TransientHashSet = function __GT_TransientHashSet(transient_map) {
  return new cljs.core.TransientHashSet(transient_map)
};
cljs.core.PersistentTreeSet = function(meta, tree_map, __hash) {
  this.meta = meta;
  this.tree_map = tree_map;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 417730831
};
cljs.core.PersistentTreeSet.cljs$lang$type = true;
cljs.core.PersistentTreeSet.cljs$lang$ctorStr = "cljs.core/PersistentTreeSet";
cljs.core.PersistentTreeSet.cljs$lang$ctorPrWriter = function(this__3829__auto__, writer__3830__auto__, opt__3831__auto__) {
  return cljs.core._write.call(null, writer__3830__auto__, "cljs.core/PersistentTreeSet")
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__3696__auto__ = self__.__hash;
  if(!(h__3696__auto__ == null)) {
    return h__3696__auto__
  }else {
    var h__3696__auto____$1 = cljs.core.hash_iset.call(null, coll__$1);
    self__.__hash = h__3696__auto____$1;
    return h__3696__auto____$1
  }
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, v) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._lookup.call(null, coll__$1, v, null)
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, v, not_found) {
  var self__ = this;
  var coll__$1 = this;
  var n = self__.tree_map.entry_at(v);
  if(!(n == null)) {
    return n.key
  }else {
    return not_found
  }
};
cljs.core.PersistentTreeSet.prototype.call = function() {
  var G__529569 = null;
  var G__529569__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$2(null, k)
  };
  var G__529569__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found)
  };
  G__529569 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__529569__2.call(this, self__, k);
      case 3:
        return G__529569__3.call(this, self__, k, not_found)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  return G__529569
}();
cljs.core.PersistentTreeSet.prototype.apply = function(self__, args529568) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone.call(null, args529568)))
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$2(null, k)
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found)
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentTreeSet(self__.meta, cljs.core.assoc.call(null, self__.tree_map, o, null), null)
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IReversible$_rseq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if(cljs.core.count.call(null, self__.tree_map) > 0) {
    return cljs.core.map.call(null, cljs.core.key, cljs.core.rseq.call(null, self__.tree_map))
  }else {
    return null
  }
};
cljs.core.PersistentTreeSet.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll)
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_sorted_seq$arity$2 = function(coll, ascending_QMARK_) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.map.call(null, cljs.core.key, cljs.core._sorted_seq.call(null, self__.tree_map, ascending_QMARK_))
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_sorted_seq_from$arity$3 = function(coll, k, ascending_QMARK_) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.map.call(null, cljs.core.key, cljs.core._sorted_seq_from.call(null, self__.tree_map, k, ascending_QMARK_))
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_entry_key$arity$2 = function(coll, entry) {
  var self__ = this;
  var coll__$1 = this;
  return entry
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_comparator$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._comparator.call(null, self__.tree_map)
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.keys.call(null, self__.tree_map)
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISet$_disjoin$arity$2 = function(coll, v) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentTreeSet(self__.meta, cljs.core.dissoc.call(null, self__.tree_map, v), null)
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.count.call(null, self__.tree_map)
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.set_QMARK_.call(null, other) && cljs.core.count.call(null, coll__$1) === cljs.core.count.call(null, other) && cljs.core.every_QMARK_.call(null, function(p1__529567_SHARP_) {
    return cljs.core.contains_QMARK_.call(null, coll__$1, p1__529567_SHARP_)
  }, other)
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentTreeSet(meta__$1, self__.tree_map, self__.__hash)
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta.call(null, cljs.core.PersistentTreeSet.EMPTY, self__.meta)
};
cljs.core.__GT_PersistentTreeSet = function __GT_PersistentTreeSet(meta, tree_map, __hash) {
  return new cljs.core.PersistentTreeSet(meta, tree_map, __hash)
};
cljs.core.PersistentTreeSet.EMPTY = new cljs.core.PersistentTreeSet(null, cljs.core.PersistentTreeMap.EMPTY, 0);
cljs.core.set_from_indexed_seq = function set_from_indexed_seq(iseq) {
  var arr = iseq.arr;
  var ret = function() {
    var a__4102__auto__ = arr;
    var i = 0;
    var res = cljs.core._as_transient.call(null, cljs.core.PersistentHashSet.EMPTY);
    while(true) {
      if(i < a__4102__auto__.length) {
        var G__529570 = i + 1;
        var G__529571 = cljs.core._conj_BANG_.call(null, res, arr[i]);
        i = G__529570;
        res = G__529571;
        continue
      }else {
        return res
      }
      break
    }
  }();
  return cljs.core._persistent_BANG_.call(null, ret)
};
cljs.core.set = function set(coll) {
  var in$ = cljs.core.seq.call(null, coll);
  if(in$ == null) {
    return cljs.core.PersistentHashSet.EMPTY
  }else {
    if(in$ instanceof cljs.core.IndexedSeq) {
      return cljs.core.set_from_indexed_seq.call(null, in$)
    }else {
      if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        var in$__$1 = in$;
        var out = cljs.core._as_transient.call(null, cljs.core.PersistentHashSet.EMPTY);
        while(true) {
          if(!(in$__$1 == null)) {
            var G__529572 = cljs.core._next.call(null, in$__$1);
            var G__529573 = cljs.core._conj_BANG_.call(null, out, cljs.core._first.call(null, in$__$1));
            in$__$1 = G__529572;
            out = G__529573;
            continue
          }else {
            return cljs.core._persistent_BANG_.call(null, out)
          }
          break
        }
      }else {
        return null
      }
    }
  }
};
cljs.core.hash_set = function() {
  var hash_set = null;
  var hash_set__0 = function() {
    return cljs.core.PersistentHashSet.EMPTY
  };
  var hash_set__1 = function() {
    var G__529574__delegate = function(keys) {
      return cljs.core.set.call(null, keys)
    };
    var G__529574 = function(var_args) {
      var keys = null;
      if(arguments.length > 0) {
        keys = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
      }
      return G__529574__delegate.call(this, keys)
    };
    G__529574.cljs$lang$maxFixedArity = 0;
    G__529574.cljs$lang$applyTo = function(arglist__529575) {
      var keys = cljs.core.seq(arglist__529575);
      return G__529574__delegate(keys)
    };
    G__529574.cljs$core$IFn$_invoke$arity$variadic = G__529574__delegate;
    return G__529574
  }();
  hash_set = function(var_args) {
    var keys = var_args;
    switch(arguments.length) {
      case 0:
        return hash_set__0.call(this);
      default:
        return hash_set__1.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq(arguments, 0))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  hash_set.cljs$lang$maxFixedArity = 0;
  hash_set.cljs$lang$applyTo = hash_set__1.cljs$lang$applyTo;
  hash_set.cljs$core$IFn$_invoke$arity$0 = hash_set__0;
  hash_set.cljs$core$IFn$_invoke$arity$variadic = hash_set__1.cljs$core$IFn$_invoke$arity$variadic;
  return hash_set
}();
cljs.core.sorted_set = function() {
  var sorted_set__delegate = function(keys) {
    return cljs.core.reduce.call(null, cljs.core._conj, cljs.core.PersistentTreeSet.EMPTY, keys)
  };
  var sorted_set = function(var_args) {
    var keys = null;
    if(arguments.length > 0) {
      keys = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return sorted_set__delegate.call(this, keys)
  };
  sorted_set.cljs$lang$maxFixedArity = 0;
  sorted_set.cljs$lang$applyTo = function(arglist__529576) {
    var keys = cljs.core.seq(arglist__529576);
    return sorted_set__delegate(keys)
  };
  sorted_set.cljs$core$IFn$_invoke$arity$variadic = sorted_set__delegate;
  return sorted_set
}();
cljs.core.sorted_set_by = function() {
  var sorted_set_by__delegate = function(comparator, keys) {
    return cljs.core.reduce.call(null, cljs.core._conj, new cljs.core.PersistentTreeSet(null, cljs.core.sorted_map_by.call(null, comparator), 0), keys)
  };
  var sorted_set_by = function(comparator, var_args) {
    var keys = null;
    if(arguments.length > 1) {
      keys = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
    }
    return sorted_set_by__delegate.call(this, comparator, keys)
  };
  sorted_set_by.cljs$lang$maxFixedArity = 1;
  sorted_set_by.cljs$lang$applyTo = function(arglist__529577) {
    var comparator = cljs.core.first(arglist__529577);
    var keys = cljs.core.rest(arglist__529577);
    return sorted_set_by__delegate(comparator, keys)
  };
  sorted_set_by.cljs$core$IFn$_invoke$arity$variadic = sorted_set_by__delegate;
  return sorted_set_by
}();
cljs.core.replace = function replace(smap, coll) {
  if(cljs.core.vector_QMARK_.call(null, coll)) {
    var n = cljs.core.count.call(null, coll);
    return cljs.core.reduce.call(null, function(v, i) {
      var temp__4090__auto__ = cljs.core.find.call(null, smap, cljs.core.nth.call(null, v, i));
      if(cljs.core.truth_(temp__4090__auto__)) {
        var e = temp__4090__auto__;
        return cljs.core.assoc.call(null, v, i, cljs.core.second.call(null, e))
      }else {
        return v
      }
    }, coll, cljs.core.take.call(null, n, cljs.core.iterate.call(null, cljs.core.inc, 0)))
  }else {
    return cljs.core.map.call(null, function(p1__529578_SHARP_) {
      var temp__4090__auto__ = cljs.core.find.call(null, smap, p1__529578_SHARP_);
      if(cljs.core.truth_(temp__4090__auto__)) {
        var e = temp__4090__auto__;
        return cljs.core.second.call(null, e)
      }else {
        return p1__529578_SHARP_
      }
    }, coll)
  }
};
cljs.core.distinct = function distinct(coll) {
  var step = function step(xs, seen) {
    return new cljs.core.LazySeq(null, function() {
      return function(p__529585, seen__$1) {
        while(true) {
          var vec__529586 = p__529585;
          var f = cljs.core.nth.call(null, vec__529586, 0, null);
          var xs__$1 = vec__529586;
          var temp__4092__auto__ = cljs.core.seq.call(null, xs__$1);
          if(temp__4092__auto__) {
            var s = temp__4092__auto__;
            if(cljs.core.contains_QMARK_.call(null, seen__$1, f)) {
              var G__529587 = cljs.core.rest.call(null, s);
              var G__529588 = seen__$1;
              p__529585 = G__529587;
              seen__$1 = G__529588;
              continue
            }else {
              return cljs.core.cons.call(null, f, step.call(null, cljs.core.rest.call(null, s), cljs.core.conj.call(null, seen__$1, f)))
            }
          }else {
            return null
          }
          break
        }
      }.call(null, xs, seen)
    }, null, null)
  };
  return step.call(null, coll, cljs.core.PersistentHashSet.EMPTY)
};
cljs.core.butlast = function butlast(s) {
  var ret = cljs.core.PersistentVector.EMPTY;
  var s__$1 = s;
  while(true) {
    if(cljs.core.next.call(null, s__$1)) {
      var G__529589 = cljs.core.conj.call(null, ret, cljs.core.first.call(null, s__$1));
      var G__529590 = cljs.core.next.call(null, s__$1);
      ret = G__529589;
      s__$1 = G__529590;
      continue
    }else {
      return cljs.core.seq.call(null, ret)
    }
    break
  }
};
cljs.core.name = function name(x) {
  if(function() {
    var G__529592 = x;
    if(G__529592) {
      var bit__3904__auto__ = G__529592.cljs$lang$protocol_mask$partition1$ & 4096;
      if(bit__3904__auto__ || G__529592.cljs$core$INamed$) {
        return true
      }else {
        return false
      }
    }else {
      return false
    }
  }()) {
    return cljs.core._name.call(null, x)
  }else {
    if(typeof x === "string") {
      return x
    }else {
      throw new Error([cljs.core.str("Doesn't support name: "), cljs.core.str(x)].join(""));
    }
  }
};
cljs.core.zipmap = function zipmap(keys, vals) {
  var map = cljs.core.transient$.call(null, cljs.core.PersistentArrayMap.EMPTY);
  var ks = cljs.core.seq.call(null, keys);
  var vs = cljs.core.seq.call(null, vals);
  while(true) {
    if(ks && vs) {
      var G__529593 = cljs.core.assoc_BANG_.call(null, map, cljs.core.first.call(null, ks), cljs.core.first.call(null, vs));
      var G__529594 = cljs.core.next.call(null, ks);
      var G__529595 = cljs.core.next.call(null, vs);
      map = G__529593;
      ks = G__529594;
      vs = G__529595;
      continue
    }else {
      return cljs.core.persistent_BANG_.call(null, map)
    }
    break
  }
};
cljs.core.max_key = function() {
  var max_key = null;
  var max_key__2 = function(k, x) {
    return x
  };
  var max_key__3 = function(k, x, y) {
    if(k.call(null, x) > k.call(null, y)) {
      return x
    }else {
      return y
    }
  };
  var max_key__4 = function() {
    var G__529598__delegate = function(k, x, y, more) {
      return cljs.core.reduce.call(null, function(p1__529596_SHARP_, p2__529597_SHARP_) {
        return max_key.call(null, k, p1__529596_SHARP_, p2__529597_SHARP_)
      }, max_key.call(null, k, x, y), more)
    };
    var G__529598 = function(k, x, y, var_args) {
      var more = null;
      if(arguments.length > 3) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
      }
      return G__529598__delegate.call(this, k, x, y, more)
    };
    G__529598.cljs$lang$maxFixedArity = 3;
    G__529598.cljs$lang$applyTo = function(arglist__529599) {
      var k = cljs.core.first(arglist__529599);
      arglist__529599 = cljs.core.next(arglist__529599);
      var x = cljs.core.first(arglist__529599);
      arglist__529599 = cljs.core.next(arglist__529599);
      var y = cljs.core.first(arglist__529599);
      var more = cljs.core.rest(arglist__529599);
      return G__529598__delegate(k, x, y, more)
    };
    G__529598.cljs$core$IFn$_invoke$arity$variadic = G__529598__delegate;
    return G__529598
  }();
  max_key = function(k, x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 2:
        return max_key__2.call(this, k, x);
      case 3:
        return max_key__3.call(this, k, x, y);
      default:
        return max_key__4.cljs$core$IFn$_invoke$arity$variadic(k, x, y, cljs.core.array_seq(arguments, 3))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  max_key.cljs$lang$maxFixedArity = 3;
  max_key.cljs$lang$applyTo = max_key__4.cljs$lang$applyTo;
  max_key.cljs$core$IFn$_invoke$arity$2 = max_key__2;
  max_key.cljs$core$IFn$_invoke$arity$3 = max_key__3;
  max_key.cljs$core$IFn$_invoke$arity$variadic = max_key__4.cljs$core$IFn$_invoke$arity$variadic;
  return max_key
}();
cljs.core.min_key = function() {
  var min_key = null;
  var min_key__2 = function(k, x) {
    return x
  };
  var min_key__3 = function(k, x, y) {
    if(k.call(null, x) < k.call(null, y)) {
      return x
    }else {
      return y
    }
  };
  var min_key__4 = function() {
    var G__529602__delegate = function(k, x, y, more) {
      return cljs.core.reduce.call(null, function(p1__529600_SHARP_, p2__529601_SHARP_) {
        return min_key.call(null, k, p1__529600_SHARP_, p2__529601_SHARP_)
      }, min_key.call(null, k, x, y), more)
    };
    var G__529602 = function(k, x, y, var_args) {
      var more = null;
      if(arguments.length > 3) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
      }
      return G__529602__delegate.call(this, k, x, y, more)
    };
    G__529602.cljs$lang$maxFixedArity = 3;
    G__529602.cljs$lang$applyTo = function(arglist__529603) {
      var k = cljs.core.first(arglist__529603);
      arglist__529603 = cljs.core.next(arglist__529603);
      var x = cljs.core.first(arglist__529603);
      arglist__529603 = cljs.core.next(arglist__529603);
      var y = cljs.core.first(arglist__529603);
      var more = cljs.core.rest(arglist__529603);
      return G__529602__delegate(k, x, y, more)
    };
    G__529602.cljs$core$IFn$_invoke$arity$variadic = G__529602__delegate;
    return G__529602
  }();
  min_key = function(k, x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 2:
        return min_key__2.call(this, k, x);
      case 3:
        return min_key__3.call(this, k, x, y);
      default:
        return min_key__4.cljs$core$IFn$_invoke$arity$variadic(k, x, y, cljs.core.array_seq(arguments, 3))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  min_key.cljs$lang$maxFixedArity = 3;
  min_key.cljs$lang$applyTo = min_key__4.cljs$lang$applyTo;
  min_key.cljs$core$IFn$_invoke$arity$2 = min_key__2;
  min_key.cljs$core$IFn$_invoke$arity$3 = min_key__3;
  min_key.cljs$core$IFn$_invoke$arity$variadic = min_key__4.cljs$core$IFn$_invoke$arity$variadic;
  return min_key
}();
cljs.core.partition_all = function() {
  var partition_all = null;
  var partition_all__2 = function(n, coll) {
    return partition_all.call(null, n, n, coll)
  };
  var partition_all__3 = function(n, step, coll) {
    return new cljs.core.LazySeq(null, function() {
      var temp__4092__auto__ = cljs.core.seq.call(null, coll);
      if(temp__4092__auto__) {
        var s = temp__4092__auto__;
        return cljs.core.cons.call(null, cljs.core.take.call(null, n, s), partition_all.call(null, n, step, cljs.core.drop.call(null, step, s)))
      }else {
        return null
      }
    }, null, null)
  };
  partition_all = function(n, step, coll) {
    switch(arguments.length) {
      case 2:
        return partition_all__2.call(this, n, step);
      case 3:
        return partition_all__3.call(this, n, step, coll)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  partition_all.cljs$core$IFn$_invoke$arity$2 = partition_all__2;
  partition_all.cljs$core$IFn$_invoke$arity$3 = partition_all__3;
  return partition_all
}();
cljs.core.take_while = function take_while(pred, coll) {
  return new cljs.core.LazySeq(null, function() {
    var temp__4092__auto__ = cljs.core.seq.call(null, coll);
    if(temp__4092__auto__) {
      var s = temp__4092__auto__;
      if(cljs.core.truth_(pred.call(null, cljs.core.first.call(null, s)))) {
        return cljs.core.cons.call(null, cljs.core.first.call(null, s), take_while.call(null, pred, cljs.core.rest.call(null, s)))
      }else {
        return null
      }
    }else {
      return null
    }
  }, null, null)
};
cljs.core.mk_bound_fn = function mk_bound_fn(sc, test, key) {
  return function(e) {
    var comp = cljs.core._comparator.call(null, sc);
    return test.call(null, comp.call(null, cljs.core._entry_key.call(null, sc, e), key), 0)
  }
};
cljs.core.subseq = function() {
  var subseq = null;
  var subseq__3 = function(sc, test, key) {
    var include = cljs.core.mk_bound_fn.call(null, sc, test, key);
    if(cljs.core.truth_(cljs.core.PersistentHashSet.fromArray([cljs.core._GT_, cljs.core._GT__EQ_], true).call(null, test))) {
      var temp__4092__auto__ = cljs.core._sorted_seq_from.call(null, sc, key, true);
      if(cljs.core.truth_(temp__4092__auto__)) {
        var vec__529606 = temp__4092__auto__;
        var e = cljs.core.nth.call(null, vec__529606, 0, null);
        var s = vec__529606;
        if(cljs.core.truth_(include.call(null, e))) {
          return s
        }else {
          return cljs.core.next.call(null, s)
        }
      }else {
        return null
      }
    }else {
      return cljs.core.take_while.call(null, include, cljs.core._sorted_seq.call(null, sc, true))
    }
  };
  var subseq__5 = function(sc, start_test, start_key, end_test, end_key) {
    var temp__4092__auto__ = cljs.core._sorted_seq_from.call(null, sc, start_key, true);
    if(cljs.core.truth_(temp__4092__auto__)) {
      var vec__529607 = temp__4092__auto__;
      var e = cljs.core.nth.call(null, vec__529607, 0, null);
      var s = vec__529607;
      return cljs.core.take_while.call(null, cljs.core.mk_bound_fn.call(null, sc, end_test, end_key), cljs.core.truth_(cljs.core.mk_bound_fn.call(null, sc, start_test, start_key).call(null, e)) ? s : cljs.core.next.call(null, s))
    }else {
      return null
    }
  };
  subseq = function(sc, start_test, start_key, end_test, end_key) {
    switch(arguments.length) {
      case 3:
        return subseq__3.call(this, sc, start_test, start_key);
      case 5:
        return subseq__5.call(this, sc, start_test, start_key, end_test, end_key)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  subseq.cljs$core$IFn$_invoke$arity$3 = subseq__3;
  subseq.cljs$core$IFn$_invoke$arity$5 = subseq__5;
  return subseq
}();
cljs.core.rsubseq = function() {
  var rsubseq = null;
  var rsubseq__3 = function(sc, test, key) {
    var include = cljs.core.mk_bound_fn.call(null, sc, test, key);
    if(cljs.core.truth_(cljs.core.PersistentHashSet.fromArray([cljs.core._LT_, cljs.core._LT__EQ_], true).call(null, test))) {
      var temp__4092__auto__ = cljs.core._sorted_seq_from.call(null, sc, key, false);
      if(cljs.core.truth_(temp__4092__auto__)) {
        var vec__529610 = temp__4092__auto__;
        var e = cljs.core.nth.call(null, vec__529610, 0, null);
        var s = vec__529610;
        if(cljs.core.truth_(include.call(null, e))) {
          return s
        }else {
          return cljs.core.next.call(null, s)
        }
      }else {
        return null
      }
    }else {
      return cljs.core.take_while.call(null, include, cljs.core._sorted_seq.call(null, sc, false))
    }
  };
  var rsubseq__5 = function(sc, start_test, start_key, end_test, end_key) {
    var temp__4092__auto__ = cljs.core._sorted_seq_from.call(null, sc, end_key, false);
    if(cljs.core.truth_(temp__4092__auto__)) {
      var vec__529611 = temp__4092__auto__;
      var e = cljs.core.nth.call(null, vec__529611, 0, null);
      var s = vec__529611;
      return cljs.core.take_while.call(null, cljs.core.mk_bound_fn.call(null, sc, start_test, start_key), cljs.core.truth_(cljs.core.mk_bound_fn.call(null, sc, end_test, end_key).call(null, e)) ? s : cljs.core.next.call(null, s))
    }else {
      return null
    }
  };
  rsubseq = function(sc, start_test, start_key, end_test, end_key) {
    switch(arguments.length) {
      case 3:
        return rsubseq__3.call(this, sc, start_test, start_key);
      case 5:
        return rsubseq__5.call(this, sc, start_test, start_key, end_test, end_key)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  rsubseq.cljs$core$IFn$_invoke$arity$3 = rsubseq__3;
  rsubseq.cljs$core$IFn$_invoke$arity$5 = rsubseq__5;
  return rsubseq
}();
cljs.core.Range = function(meta, start, end, step, __hash) {
  this.meta = meta;
  this.start = start;
  this.end = end;
  this.step = step;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32375006
};
cljs.core.Range.cljs$lang$type = true;
cljs.core.Range.cljs$lang$ctorStr = "cljs.core/Range";
cljs.core.Range.cljs$lang$ctorPrWriter = function(this__3829__auto__, writer__3830__auto__, opt__3831__auto__) {
  return cljs.core._write.call(null, writer__3830__auto__, "cljs.core/Range")
};
cljs.core.Range.prototype.cljs$core$IHash$_hash$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  var h__3696__auto__ = self__.__hash;
  if(!(h__3696__auto__ == null)) {
    return h__3696__auto__
  }else {
    var h__3696__auto____$1 = cljs.core.hash_coll.call(null, rng__$1);
    self__.__hash = h__3696__auto____$1;
    return h__3696__auto____$1
  }
};
cljs.core.Range.prototype.cljs$core$INext$_next$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  if(self__.step > 0) {
    if(self__.start + self__.step < self__.end) {
      return new cljs.core.Range(self__.meta, self__.start + self__.step, self__.end, self__.step, null)
    }else {
      return null
    }
  }else {
    if(self__.start + self__.step > self__.end) {
      return new cljs.core.Range(self__.meta, self__.start + self__.step, self__.end, self__.step, null)
    }else {
      return null
    }
  }
};
cljs.core.Range.prototype.cljs$core$ICollection$_conj$arity$2 = function(rng, o) {
  var self__ = this;
  var rng__$1 = this;
  return cljs.core.cons.call(null, o, rng__$1)
};
cljs.core.Range.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll)
};
cljs.core.Range.prototype.cljs$core$IReduce$_reduce$arity$2 = function(rng, f) {
  var self__ = this;
  var rng__$1 = this;
  return cljs.core.ci_reduce.call(null, rng__$1, f)
};
cljs.core.Range.prototype.cljs$core$IReduce$_reduce$arity$3 = function(rng, f, s) {
  var self__ = this;
  var rng__$1 = this;
  return cljs.core.ci_reduce.call(null, rng__$1, f, s)
};
cljs.core.Range.prototype.cljs$core$ISeqable$_seq$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  if(self__.step > 0) {
    if(self__.start < self__.end) {
      return rng__$1
    }else {
      return null
    }
  }else {
    if(self__.start > self__.end) {
      return rng__$1
    }else {
      return null
    }
  }
};
cljs.core.Range.prototype.cljs$core$ICounted$_count$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  if(cljs.core.not.call(null, cljs.core._seq.call(null, rng__$1))) {
    return 0
  }else {
    return Math.ceil((self__.end - self__.start) / self__.step)
  }
};
cljs.core.Range.prototype.cljs$core$ISeq$_first$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  return self__.start
};
cljs.core.Range.prototype.cljs$core$ISeq$_rest$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  if(!(cljs.core._seq.call(null, rng__$1) == null)) {
    return new cljs.core.Range(self__.meta, self__.start + self__.step, self__.end, self__.step, null)
  }else {
    return cljs.core.List.EMPTY
  }
};
cljs.core.Range.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(rng, other) {
  var self__ = this;
  var rng__$1 = this;
  return cljs.core.equiv_sequential.call(null, rng__$1, other)
};
cljs.core.Range.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(rng, meta__$1) {
  var self__ = this;
  var rng__$1 = this;
  return new cljs.core.Range(meta__$1, self__.start, self__.end, self__.step, self__.__hash)
};
cljs.core.Range.prototype.cljs$core$IMeta$_meta$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  return self__.meta
};
cljs.core.Range.prototype.cljs$core$IIndexed$_nth$arity$2 = function(rng, n) {
  var self__ = this;
  var rng__$1 = this;
  if(n < cljs.core._count.call(null, rng__$1)) {
    return self__.start + n * self__.step
  }else {
    if(self__.start > self__.end && self__.step === 0) {
      return self__.start
    }else {
      throw new Error("Index out of bounds");
    }
  }
};
cljs.core.Range.prototype.cljs$core$IIndexed$_nth$arity$3 = function(rng, n, not_found) {
  var self__ = this;
  var rng__$1 = this;
  if(n < cljs.core._count.call(null, rng__$1)) {
    return self__.start + n * self__.step
  }else {
    if(self__.start > self__.end && self__.step === 0) {
      return self__.start
    }else {
      return not_found
    }
  }
};
cljs.core.Range.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, self__.meta)
};
cljs.core.__GT_Range = function __GT_Range(meta, start, end, step, __hash) {
  return new cljs.core.Range(meta, start, end, step, __hash)
};
cljs.core.range = function() {
  var range = null;
  var range__0 = function() {
    return range.call(null, 0, Number.MAX_VALUE, 1)
  };
  var range__1 = function(end) {
    return range.call(null, 0, end, 1)
  };
  var range__2 = function(start, end) {
    return range.call(null, start, end, 1)
  };
  var range__3 = function(start, end, step) {
    return new cljs.core.Range(null, start, end, step, null)
  };
  range = function(start, end, step) {
    switch(arguments.length) {
      case 0:
        return range__0.call(this);
      case 1:
        return range__1.call(this, start);
      case 2:
        return range__2.call(this, start, end);
      case 3:
        return range__3.call(this, start, end, step)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  range.cljs$core$IFn$_invoke$arity$0 = range__0;
  range.cljs$core$IFn$_invoke$arity$1 = range__1;
  range.cljs$core$IFn$_invoke$arity$2 = range__2;
  range.cljs$core$IFn$_invoke$arity$3 = range__3;
  return range
}();
cljs.core.take_nth = function take_nth(n, coll) {
  return new cljs.core.LazySeq(null, function() {
    var temp__4092__auto__ = cljs.core.seq.call(null, coll);
    if(temp__4092__auto__) {
      var s = temp__4092__auto__;
      return cljs.core.cons.call(null, cljs.core.first.call(null, s), take_nth.call(null, n, cljs.core.drop.call(null, n, s)))
    }else {
      return null
    }
  }, null, null)
};
cljs.core.split_with = function split_with(pred, coll) {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.take_while.call(null, pred, coll), cljs.core.drop_while.call(null, pred, coll)], null)
};
cljs.core.partition_by = function partition_by(f, coll) {
  return new cljs.core.LazySeq(null, function() {
    var temp__4092__auto__ = cljs.core.seq.call(null, coll);
    if(temp__4092__auto__) {
      var s = temp__4092__auto__;
      var fst = cljs.core.first.call(null, s);
      var fv = f.call(null, fst);
      var run = cljs.core.cons.call(null, fst, cljs.core.take_while.call(null, function(fst, fv) {
        return function(p1__529612_SHARP_) {
          return cljs.core._EQ_.call(null, fv, f.call(null, p1__529612_SHARP_))
        }
      }(fst, fv), cljs.core.next.call(null, s)));
      return cljs.core.cons.call(null, run, partition_by.call(null, f, cljs.core.seq.call(null, cljs.core.drop.call(null, cljs.core.count.call(null, run), s))))
    }else {
      return null
    }
  }, null, null)
};
cljs.core.frequencies = function frequencies(coll) {
  return cljs.core.persistent_BANG_.call(null, cljs.core.reduce.call(null, function(counts, x) {
    return cljs.core.assoc_BANG_.call(null, counts, x, cljs.core.get.call(null, counts, x, 0) + 1)
  }, cljs.core.transient$.call(null, cljs.core.PersistentArrayMap.EMPTY), coll))
};
cljs.core.reductions = function() {
  var reductions = null;
  var reductions__2 = function(f, coll) {
    return new cljs.core.LazySeq(null, function() {
      var temp__4090__auto__ = cljs.core.seq.call(null, coll);
      if(temp__4090__auto__) {
        var s = temp__4090__auto__;
        return reductions.call(null, f, cljs.core.first.call(null, s), cljs.core.rest.call(null, s))
      }else {
        return cljs.core._conj.call(null, cljs.core.List.EMPTY, f.call(null))
      }
    }, null, null)
  };
  var reductions__3 = function(f, init, coll) {
    return cljs.core.cons.call(null, init, new cljs.core.LazySeq(null, function() {
      var temp__4092__auto__ = cljs.core.seq.call(null, coll);
      if(temp__4092__auto__) {
        var s = temp__4092__auto__;
        return reductions.call(null, f, f.call(null, init, cljs.core.first.call(null, s)), cljs.core.rest.call(null, s))
      }else {
        return null
      }
    }, null, null))
  };
  reductions = function(f, init, coll) {
    switch(arguments.length) {
      case 2:
        return reductions__2.call(this, f, init);
      case 3:
        return reductions__3.call(this, f, init, coll)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  reductions.cljs$core$IFn$_invoke$arity$2 = reductions__2;
  reductions.cljs$core$IFn$_invoke$arity$3 = reductions__3;
  return reductions
}();
cljs.core.juxt = function() {
  var juxt = null;
  var juxt__1 = function(f) {
    return function() {
      var G__529623 = null;
      var G__529623__0 = function() {
        return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.call(null)], null)
      };
      var G__529623__1 = function(x) {
        return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.call(null, x)], null)
      };
      var G__529623__2 = function(x, y) {
        return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.call(null, x, y)], null)
      };
      var G__529623__3 = function(x, y, z) {
        return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.call(null, x, y, z)], null)
      };
      var G__529623__4 = function() {
        var G__529624__delegate = function(x, y, z, args) {
          return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.apply.call(null, f, x, y, z, args)], null)
        };
        var G__529624 = function(x, y, z, var_args) {
          var args = null;
          if(arguments.length > 3) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
          }
          return G__529624__delegate.call(this, x, y, z, args)
        };
        G__529624.cljs$lang$maxFixedArity = 3;
        G__529624.cljs$lang$applyTo = function(arglist__529625) {
          var x = cljs.core.first(arglist__529625);
          arglist__529625 = cljs.core.next(arglist__529625);
          var y = cljs.core.first(arglist__529625);
          arglist__529625 = cljs.core.next(arglist__529625);
          var z = cljs.core.first(arglist__529625);
          var args = cljs.core.rest(arglist__529625);
          return G__529624__delegate(x, y, z, args)
        };
        G__529624.cljs$core$IFn$_invoke$arity$variadic = G__529624__delegate;
        return G__529624
      }();
      G__529623 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return G__529623__0.call(this);
          case 1:
            return G__529623__1.call(this, x);
          case 2:
            return G__529623__2.call(this, x, y);
          case 3:
            return G__529623__3.call(this, x, y, z);
          default:
            return G__529623__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3))
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__529623.cljs$lang$maxFixedArity = 3;
      G__529623.cljs$lang$applyTo = G__529623__4.cljs$lang$applyTo;
      return G__529623
    }()
  };
  var juxt__2 = function(f, g) {
    return function() {
      var G__529626 = null;
      var G__529626__0 = function() {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.call(null), g.call(null)], null)
      };
      var G__529626__1 = function(x) {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.call(null, x), g.call(null, x)], null)
      };
      var G__529626__2 = function(x, y) {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.call(null, x, y), g.call(null, x, y)], null)
      };
      var G__529626__3 = function(x, y, z) {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.call(null, x, y, z), g.call(null, x, y, z)], null)
      };
      var G__529626__4 = function() {
        var G__529627__delegate = function(x, y, z, args) {
          return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.apply.call(null, f, x, y, z, args), cljs.core.apply.call(null, g, x, y, z, args)], null)
        };
        var G__529627 = function(x, y, z, var_args) {
          var args = null;
          if(arguments.length > 3) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
          }
          return G__529627__delegate.call(this, x, y, z, args)
        };
        G__529627.cljs$lang$maxFixedArity = 3;
        G__529627.cljs$lang$applyTo = function(arglist__529628) {
          var x = cljs.core.first(arglist__529628);
          arglist__529628 = cljs.core.next(arglist__529628);
          var y = cljs.core.first(arglist__529628);
          arglist__529628 = cljs.core.next(arglist__529628);
          var z = cljs.core.first(arglist__529628);
          var args = cljs.core.rest(arglist__529628);
          return G__529627__delegate(x, y, z, args)
        };
        G__529627.cljs$core$IFn$_invoke$arity$variadic = G__529627__delegate;
        return G__529627
      }();
      G__529626 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return G__529626__0.call(this);
          case 1:
            return G__529626__1.call(this, x);
          case 2:
            return G__529626__2.call(this, x, y);
          case 3:
            return G__529626__3.call(this, x, y, z);
          default:
            return G__529626__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3))
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__529626.cljs$lang$maxFixedArity = 3;
      G__529626.cljs$lang$applyTo = G__529626__4.cljs$lang$applyTo;
      return G__529626
    }()
  };
  var juxt__3 = function(f, g, h) {
    return function() {
      var G__529629 = null;
      var G__529629__0 = function() {
        return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.call(null), g.call(null), h.call(null)], null)
      };
      var G__529629__1 = function(x) {
        return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.call(null, x), g.call(null, x), h.call(null, x)], null)
      };
      var G__529629__2 = function(x, y) {
        return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.call(null, x, y), g.call(null, x, y), h.call(null, x, y)], null)
      };
      var G__529629__3 = function(x, y, z) {
        return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.call(null, x, y, z), g.call(null, x, y, z), h.call(null, x, y, z)], null)
      };
      var G__529629__4 = function() {
        var G__529630__delegate = function(x, y, z, args) {
          return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.apply.call(null, f, x, y, z, args), cljs.core.apply.call(null, g, x, y, z, args), cljs.core.apply.call(null, h, x, y, z, args)], null)
        };
        var G__529630 = function(x, y, z, var_args) {
          var args = null;
          if(arguments.length > 3) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
          }
          return G__529630__delegate.call(this, x, y, z, args)
        };
        G__529630.cljs$lang$maxFixedArity = 3;
        G__529630.cljs$lang$applyTo = function(arglist__529631) {
          var x = cljs.core.first(arglist__529631);
          arglist__529631 = cljs.core.next(arglist__529631);
          var y = cljs.core.first(arglist__529631);
          arglist__529631 = cljs.core.next(arglist__529631);
          var z = cljs.core.first(arglist__529631);
          var args = cljs.core.rest(arglist__529631);
          return G__529630__delegate(x, y, z, args)
        };
        G__529630.cljs$core$IFn$_invoke$arity$variadic = G__529630__delegate;
        return G__529630
      }();
      G__529629 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return G__529629__0.call(this);
          case 1:
            return G__529629__1.call(this, x);
          case 2:
            return G__529629__2.call(this, x, y);
          case 3:
            return G__529629__3.call(this, x, y, z);
          default:
            return G__529629__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3))
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__529629.cljs$lang$maxFixedArity = 3;
      G__529629.cljs$lang$applyTo = G__529629__4.cljs$lang$applyTo;
      return G__529629
    }()
  };
  var juxt__4 = function() {
    var G__529632__delegate = function(f, g, h, fs) {
      var fs__$1 = cljs.core.list_STAR_.call(null, f, g, h, fs);
      return function() {
        var G__529633 = null;
        var G__529633__0 = function() {
          return cljs.core.reduce.call(null, function(p1__529613_SHARP_, p2__529614_SHARP_) {
            return cljs.core.conj.call(null, p1__529613_SHARP_, p2__529614_SHARP_.call(null))
          }, cljs.core.PersistentVector.EMPTY, fs__$1)
        };
        var G__529633__1 = function(x) {
          return cljs.core.reduce.call(null, function(p1__529615_SHARP_, p2__529616_SHARP_) {
            return cljs.core.conj.call(null, p1__529615_SHARP_, p2__529616_SHARP_.call(null, x))
          }, cljs.core.PersistentVector.EMPTY, fs__$1)
        };
        var G__529633__2 = function(x, y) {
          return cljs.core.reduce.call(null, function(p1__529617_SHARP_, p2__529618_SHARP_) {
            return cljs.core.conj.call(null, p1__529617_SHARP_, p2__529618_SHARP_.call(null, x, y))
          }, cljs.core.PersistentVector.EMPTY, fs__$1)
        };
        var G__529633__3 = function(x, y, z) {
          return cljs.core.reduce.call(null, function(p1__529619_SHARP_, p2__529620_SHARP_) {
            return cljs.core.conj.call(null, p1__529619_SHARP_, p2__529620_SHARP_.call(null, x, y, z))
          }, cljs.core.PersistentVector.EMPTY, fs__$1)
        };
        var G__529633__4 = function() {
          var G__529634__delegate = function(x, y, z, args) {
            return cljs.core.reduce.call(null, function(p1__529621_SHARP_, p2__529622_SHARP_) {
              return cljs.core.conj.call(null, p1__529621_SHARP_, cljs.core.apply.call(null, p2__529622_SHARP_, x, y, z, args))
            }, cljs.core.PersistentVector.EMPTY, fs__$1)
          };
          var G__529634 = function(x, y, z, var_args) {
            var args = null;
            if(arguments.length > 3) {
              args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
            }
            return G__529634__delegate.call(this, x, y, z, args)
          };
          G__529634.cljs$lang$maxFixedArity = 3;
          G__529634.cljs$lang$applyTo = function(arglist__529635) {
            var x = cljs.core.first(arglist__529635);
            arglist__529635 = cljs.core.next(arglist__529635);
            var y = cljs.core.first(arglist__529635);
            arglist__529635 = cljs.core.next(arglist__529635);
            var z = cljs.core.first(arglist__529635);
            var args = cljs.core.rest(arglist__529635);
            return G__529634__delegate(x, y, z, args)
          };
          G__529634.cljs$core$IFn$_invoke$arity$variadic = G__529634__delegate;
          return G__529634
        }();
        G__529633 = function(x, y, z, var_args) {
          var args = var_args;
          switch(arguments.length) {
            case 0:
              return G__529633__0.call(this);
            case 1:
              return G__529633__1.call(this, x);
            case 2:
              return G__529633__2.call(this, x, y);
            case 3:
              return G__529633__3.call(this, x, y, z);
            default:
              return G__529633__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3))
          }
          throw new Error("Invalid arity: " + arguments.length);
        };
        G__529633.cljs$lang$maxFixedArity = 3;
        G__529633.cljs$lang$applyTo = G__529633__4.cljs$lang$applyTo;
        return G__529633
      }()
    };
    var G__529632 = function(f, g, h, var_args) {
      var fs = null;
      if(arguments.length > 3) {
        fs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
      }
      return G__529632__delegate.call(this, f, g, h, fs)
    };
    G__529632.cljs$lang$maxFixedArity = 3;
    G__529632.cljs$lang$applyTo = function(arglist__529636) {
      var f = cljs.core.first(arglist__529636);
      arglist__529636 = cljs.core.next(arglist__529636);
      var g = cljs.core.first(arglist__529636);
      arglist__529636 = cljs.core.next(arglist__529636);
      var h = cljs.core.first(arglist__529636);
      var fs = cljs.core.rest(arglist__529636);
      return G__529632__delegate(f, g, h, fs)
    };
    G__529632.cljs$core$IFn$_invoke$arity$variadic = G__529632__delegate;
    return G__529632
  }();
  juxt = function(f, g, h, var_args) {
    var fs = var_args;
    switch(arguments.length) {
      case 1:
        return juxt__1.call(this, f);
      case 2:
        return juxt__2.call(this, f, g);
      case 3:
        return juxt__3.call(this, f, g, h);
      default:
        return juxt__4.cljs$core$IFn$_invoke$arity$variadic(f, g, h, cljs.core.array_seq(arguments, 3))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  juxt.cljs$lang$maxFixedArity = 3;
  juxt.cljs$lang$applyTo = juxt__4.cljs$lang$applyTo;
  juxt.cljs$core$IFn$_invoke$arity$1 = juxt__1;
  juxt.cljs$core$IFn$_invoke$arity$2 = juxt__2;
  juxt.cljs$core$IFn$_invoke$arity$3 = juxt__3;
  juxt.cljs$core$IFn$_invoke$arity$variadic = juxt__4.cljs$core$IFn$_invoke$arity$variadic;
  return juxt
}();
cljs.core.dorun = function() {
  var dorun = null;
  var dorun__1 = function(coll) {
    while(true) {
      if(cljs.core.seq.call(null, coll)) {
        var G__529637 = cljs.core.next.call(null, coll);
        coll = G__529637;
        continue
      }else {
        return null
      }
      break
    }
  };
  var dorun__2 = function(n, coll) {
    while(true) {
      if(cljs.core.seq.call(null, coll) && n > 0) {
        var G__529638 = n - 1;
        var G__529639 = cljs.core.next.call(null, coll);
        n = G__529638;
        coll = G__529639;
        continue
      }else {
        return null
      }
      break
    }
  };
  dorun = function(n, coll) {
    switch(arguments.length) {
      case 1:
        return dorun__1.call(this, n);
      case 2:
        return dorun__2.call(this, n, coll)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  dorun.cljs$core$IFn$_invoke$arity$1 = dorun__1;
  dorun.cljs$core$IFn$_invoke$arity$2 = dorun__2;
  return dorun
}();
cljs.core.doall = function() {
  var doall = null;
  var doall__1 = function(coll) {
    cljs.core.dorun.call(null, coll);
    return coll
  };
  var doall__2 = function(n, coll) {
    cljs.core.dorun.call(null, n, coll);
    return coll
  };
  doall = function(n, coll) {
    switch(arguments.length) {
      case 1:
        return doall__1.call(this, n);
      case 2:
        return doall__2.call(this, n, coll)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  doall.cljs$core$IFn$_invoke$arity$1 = doall__1;
  doall.cljs$core$IFn$_invoke$arity$2 = doall__2;
  return doall
}();
cljs.core.regexp_QMARK_ = function regexp_QMARK_(o) {
  return o instanceof RegExp
};
cljs.core.re_matches = function re_matches(re, s) {
  var matches = re.exec(s);
  if(cljs.core._EQ_.call(null, cljs.core.first.call(null, matches), s)) {
    if(cljs.core.count.call(null, matches) === 1) {
      return cljs.core.first.call(null, matches)
    }else {
      return cljs.core.vec.call(null, matches)
    }
  }else {
    return null
  }
};
cljs.core.re_find = function re_find(re, s) {
  var matches = re.exec(s);
  if(matches == null) {
    return null
  }else {
    if(cljs.core.count.call(null, matches) === 1) {
      return cljs.core.first.call(null, matches)
    }else {
      return cljs.core.vec.call(null, matches)
    }
  }
};
cljs.core.re_seq = function re_seq(re, s) {
  var match_data = cljs.core.re_find.call(null, re, s);
  var match_idx = s.search(re);
  var match_str = cljs.core.coll_QMARK_.call(null, match_data) ? cljs.core.first.call(null, match_data) : match_data;
  var post_match = cljs.core.subs.call(null, s, match_idx + cljs.core.count.call(null, match_str));
  if(cljs.core.truth_(match_data)) {
    return new cljs.core.LazySeq(null, function() {
      return cljs.core.cons.call(null, match_data, cljs.core.seq.call(null, post_match) ? re_seq.call(null, re, post_match) : null)
    }, null, null)
  }else {
    return null
  }
};
cljs.core.re_pattern = function re_pattern(s) {
  var vec__529641 = cljs.core.re_find.call(null, /^(?:\(\?([idmsux]*)\))?(.*)/, s);
  var _ = cljs.core.nth.call(null, vec__529641, 0, null);
  var flags = cljs.core.nth.call(null, vec__529641, 1, null);
  var pattern = cljs.core.nth.call(null, vec__529641, 2, null);
  return new RegExp(pattern, flags)
};
cljs.core.pr_sequential_writer = function pr_sequential_writer(writer, print_one, begin, sep, end, opts, coll) {
  cljs.core._write.call(null, writer, begin);
  if(cljs.core.seq.call(null, coll)) {
    print_one.call(null, cljs.core.first.call(null, coll), writer, opts)
  }else {
  }
  var coll_529642__$1 = cljs.core.next.call(null, coll);
  var n_529643 = (new cljs.core.Keyword(null, "print-length", "print-length", 3960797560)).cljs$core$IFn$_invoke$arity$1(opts);
  while(true) {
    if(coll_529642__$1 && (n_529643 == null || !(n_529643 === 0))) {
      cljs.core._write.call(null, writer, sep);
      print_one.call(null, cljs.core.first.call(null, coll_529642__$1), writer, opts);
      var G__529644 = cljs.core.next.call(null, coll_529642__$1);
      var G__529645 = n_529643 - 1;
      coll_529642__$1 = G__529644;
      n_529643 = G__529645;
      continue
    }else {
    }
    break
  }
  if(cljs.core.truth_((new cljs.core.Keyword(null, "print-length", "print-length", 3960797560)).cljs$core$IFn$_invoke$arity$1(opts))) {
    cljs.core._write.call(null, writer, sep);
    print_one.call(null, "...", writer, opts)
  }else {
  }
  return cljs.core._write.call(null, writer, end)
};
cljs.core.write_all = function() {
  var write_all__delegate = function(writer, ss) {
    var seq__529650 = cljs.core.seq.call(null, ss);
    var chunk__529651 = null;
    var count__529652 = 0;
    var i__529653 = 0;
    while(true) {
      if(i__529653 < count__529652) {
        var s = cljs.core._nth.call(null, chunk__529651, i__529653);
        cljs.core._write.call(null, writer, s);
        var G__529654 = seq__529650;
        var G__529655 = chunk__529651;
        var G__529656 = count__529652;
        var G__529657 = i__529653 + 1;
        seq__529650 = G__529654;
        chunk__529651 = G__529655;
        count__529652 = G__529656;
        i__529653 = G__529657;
        continue
      }else {
        var temp__4092__auto__ = cljs.core.seq.call(null, seq__529650);
        if(temp__4092__auto__) {
          var seq__529650__$1 = temp__4092__auto__;
          if(cljs.core.chunked_seq_QMARK_.call(null, seq__529650__$1)) {
            var c__4009__auto__ = cljs.core.chunk_first.call(null, seq__529650__$1);
            var G__529658 = cljs.core.chunk_rest.call(null, seq__529650__$1);
            var G__529659 = c__4009__auto__;
            var G__529660 = cljs.core.count.call(null, c__4009__auto__);
            var G__529661 = 0;
            seq__529650 = G__529658;
            chunk__529651 = G__529659;
            count__529652 = G__529660;
            i__529653 = G__529661;
            continue
          }else {
            var s = cljs.core.first.call(null, seq__529650__$1);
            cljs.core._write.call(null, writer, s);
            var G__529662 = cljs.core.next.call(null, seq__529650__$1);
            var G__529663 = null;
            var G__529664 = 0;
            var G__529665 = 0;
            seq__529650 = G__529662;
            chunk__529651 = G__529663;
            count__529652 = G__529664;
            i__529653 = G__529665;
            continue
          }
        }else {
          return null
        }
      }
      break
    }
  };
  var write_all = function(writer, var_args) {
    var ss = null;
    if(arguments.length > 1) {
      ss = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
    }
    return write_all__delegate.call(this, writer, ss)
  };
  write_all.cljs$lang$maxFixedArity = 1;
  write_all.cljs$lang$applyTo = function(arglist__529666) {
    var writer = cljs.core.first(arglist__529666);
    var ss = cljs.core.rest(arglist__529666);
    return write_all__delegate(writer, ss)
  };
  write_all.cljs$core$IFn$_invoke$arity$variadic = write_all__delegate;
  return write_all
}();
cljs.core.string_print = function string_print(x) {
  cljs.core._STAR_print_fn_STAR_.call(null, x);
  return null
};
cljs.core.flush = function flush() {
  return null
};
cljs.core.char_escapes = function() {
  var obj529668 = {'"':'\\"', "\\":"\\\\", "\u0008":"\\b", "\u000c":"\\f", "\n":"\\n", "\r":"\\r", "\t":"\\t"};
  return obj529668
}();
cljs.core.quote_string = function quote_string(s) {
  return[cljs.core.str('"'), cljs.core.str(s.replace(RegExp('[\\\\"\u0008\u000c\n\r\t]', "g"), function(match) {
    return cljs.core.char_escapes[match]
  })), cljs.core.str('"')].join("")
};
cljs.core.pr_writer = function pr_writer(obj, writer, opts) {
  if(obj == null) {
    return cljs.core._write.call(null, writer, "nil")
  }else {
    if(void 0 === obj) {
      return cljs.core._write.call(null, writer, "#<undefined>")
    }else {
      if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        if(cljs.core.truth_(function() {
          var and__3273__auto__ = cljs.core.get.call(null, opts, new cljs.core.Keyword(null, "meta", "meta", 1017252215));
          if(cljs.core.truth_(and__3273__auto__)) {
            var and__3273__auto____$1 = function() {
              var G__529674 = obj;
              if(G__529674) {
                var bit__3911__auto__ = G__529674.cljs$lang$protocol_mask$partition0$ & 131072;
                if(bit__3911__auto__ || G__529674.cljs$core$IMeta$) {
                  return true
                }else {
                  if(!G__529674.cljs$lang$protocol_mask$partition0$) {
                    return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IMeta, G__529674)
                  }else {
                    return false
                  }
                }
              }else {
                return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IMeta, G__529674)
              }
            }();
            if(and__3273__auto____$1) {
              return cljs.core.meta.call(null, obj)
            }else {
              return and__3273__auto____$1
            }
          }else {
            return and__3273__auto__
          }
        }())) {
          cljs.core._write.call(null, writer, "^");
          pr_writer.call(null, cljs.core.meta.call(null, obj), writer, opts);
          cljs.core._write.call(null, writer, " ")
        }else {
        }
        if(obj == null) {
          return cljs.core._write.call(null, writer, "nil")
        }else {
          if(obj.cljs$lang$type) {
            return obj.cljs$lang$ctorPrWriter(obj, writer, opts)
          }else {
            if(function() {
              var G__529675 = obj;
              if(G__529675) {
                var bit__3904__auto__ = G__529675.cljs$lang$protocol_mask$partition0$ & 2147483648;
                if(bit__3904__auto__ || G__529675.cljs$core$IPrintWithWriter$) {
                  return true
                }else {
                  return false
                }
              }else {
                return false
              }
            }()) {
              return cljs.core._pr_writer.call(null, obj, writer, opts)
            }else {
              if(cljs.core.type.call(null, obj) === Boolean || typeof obj === "number") {
                return cljs.core._write.call(null, writer, [cljs.core.str(obj)].join(""))
              }else {
                if(obj instanceof Array) {
                  return cljs.core.pr_sequential_writer.call(null, writer, pr_writer, "#<Array [", ", ", "]>", opts, obj)
                }else {
                  if(goog.isString(obj)) {
                    if(cljs.core.truth_((new cljs.core.Keyword(null, "readably", "readably", 4441712502)).cljs$core$IFn$_invoke$arity$1(opts))) {
                      return cljs.core._write.call(null, writer, cljs.core.quote_string.call(null, obj))
                    }else {
                      return cljs.core._write.call(null, writer, obj)
                    }
                  }else {
                    if(cljs.core.fn_QMARK_.call(null, obj)) {
                      return cljs.core.write_all.call(null, writer, "#<", [cljs.core.str(obj)].join(""), ">")
                    }else {
                      if(obj instanceof Date) {
                        var normalize = function(n, len) {
                          var ns = [cljs.core.str(n)].join("");
                          while(true) {
                            if(cljs.core.count.call(null, ns) < len) {
                              var G__529677 = [cljs.core.str("0"), cljs.core.str(ns)].join("");
                              ns = G__529677;
                              continue
                            }else {
                              return ns
                            }
                            break
                          }
                        };
                        return cljs.core.write_all.call(null, writer, '#inst "', [cljs.core.str(obj.getUTCFullYear())].join(""), "-", normalize.call(null, obj.getUTCMonth() + 1, 2), "-", normalize.call(null, obj.getUTCDate(), 2), "T", normalize.call(null, obj.getUTCHours(), 2), ":", normalize.call(null, obj.getUTCMinutes(), 2), ":", normalize.call(null, obj.getUTCSeconds(), 2), ".", normalize.call(null, obj.getUTCMilliseconds(), 3), "-", '00:00"')
                      }else {
                        if(cljs.core.regexp_QMARK_.call(null, obj)) {
                          return cljs.core.write_all.call(null, writer, '#"', obj.source, '"')
                        }else {
                          if(function() {
                            var G__529676 = obj;
                            if(G__529676) {
                              var bit__3911__auto__ = G__529676.cljs$lang$protocol_mask$partition0$ & 2147483648;
                              if(bit__3911__auto__ || G__529676.cljs$core$IPrintWithWriter$) {
                                return true
                              }else {
                                if(!G__529676.cljs$lang$protocol_mask$partition0$) {
                                  return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IPrintWithWriter, G__529676)
                                }else {
                                  return false
                                }
                              }
                            }else {
                              return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IPrintWithWriter, G__529676)
                            }
                          }()) {
                            return cljs.core._pr_writer.call(null, obj, writer, opts)
                          }else {
                            if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                              return cljs.core.write_all.call(null, writer, "#<", [cljs.core.str(obj)].join(""), ">")
                            }else {
                              return null
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }else {
        return null
      }
    }
  }
};
cljs.core.pr_seq_writer = function pr_seq_writer(objs, writer, opts) {
  cljs.core.pr_writer.call(null, cljs.core.first.call(null, objs), writer, opts);
  var seq__529682 = cljs.core.seq.call(null, cljs.core.next.call(null, objs));
  var chunk__529683 = null;
  var count__529684 = 0;
  var i__529685 = 0;
  while(true) {
    if(i__529685 < count__529684) {
      var obj = cljs.core._nth.call(null, chunk__529683, i__529685);
      cljs.core._write.call(null, writer, " ");
      cljs.core.pr_writer.call(null, obj, writer, opts);
      var G__529686 = seq__529682;
      var G__529687 = chunk__529683;
      var G__529688 = count__529684;
      var G__529689 = i__529685 + 1;
      seq__529682 = G__529686;
      chunk__529683 = G__529687;
      count__529684 = G__529688;
      i__529685 = G__529689;
      continue
    }else {
      var temp__4092__auto__ = cljs.core.seq.call(null, seq__529682);
      if(temp__4092__auto__) {
        var seq__529682__$1 = temp__4092__auto__;
        if(cljs.core.chunked_seq_QMARK_.call(null, seq__529682__$1)) {
          var c__4009__auto__ = cljs.core.chunk_first.call(null, seq__529682__$1);
          var G__529690 = cljs.core.chunk_rest.call(null, seq__529682__$1);
          var G__529691 = c__4009__auto__;
          var G__529692 = cljs.core.count.call(null, c__4009__auto__);
          var G__529693 = 0;
          seq__529682 = G__529690;
          chunk__529683 = G__529691;
          count__529684 = G__529692;
          i__529685 = G__529693;
          continue
        }else {
          var obj = cljs.core.first.call(null, seq__529682__$1);
          cljs.core._write.call(null, writer, " ");
          cljs.core.pr_writer.call(null, obj, writer, opts);
          var G__529694 = cljs.core.next.call(null, seq__529682__$1);
          var G__529695 = null;
          var G__529696 = 0;
          var G__529697 = 0;
          seq__529682 = G__529694;
          chunk__529683 = G__529695;
          count__529684 = G__529696;
          i__529685 = G__529697;
          continue
        }
      }else {
        return null
      }
    }
    break
  }
};
cljs.core.pr_sb_with_opts = function pr_sb_with_opts(objs, opts) {
  var sb = new goog.string.StringBuffer;
  var writer = new cljs.core.StringBufferWriter(sb);
  cljs.core.pr_seq_writer.call(null, objs, writer, opts);
  cljs.core._flush.call(null, writer);
  return sb
};
cljs.core.pr_str_with_opts = function pr_str_with_opts(objs, opts) {
  if(cljs.core.empty_QMARK_.call(null, objs)) {
    return""
  }else {
    return[cljs.core.str(cljs.core.pr_sb_with_opts.call(null, objs, opts))].join("")
  }
};
cljs.core.prn_str_with_opts = function prn_str_with_opts(objs, opts) {
  if(cljs.core.empty_QMARK_.call(null, objs)) {
    return"\n"
  }else {
    var sb = cljs.core.pr_sb_with_opts.call(null, objs, opts);
    sb.append("\n");
    return[cljs.core.str(sb)].join("")
  }
};
cljs.core.pr_with_opts = function pr_with_opts(objs, opts) {
  return cljs.core.string_print.call(null, cljs.core.pr_str_with_opts.call(null, objs, opts))
};
cljs.core.newline = function newline(opts) {
  cljs.core.string_print.call(null, "\n");
  if(cljs.core.truth_(cljs.core.get.call(null, opts, new cljs.core.Keyword(null, "flush-on-newline", "flush-on-newline", 4338025857)))) {
    return cljs.core.flush.call(null)
  }else {
    return null
  }
};
cljs.core.pr_str = function() {
  var pr_str__delegate = function(objs) {
    return cljs.core.pr_str_with_opts.call(null, objs, cljs.core.pr_opts.call(null))
  };
  var pr_str = function(var_args) {
    var objs = null;
    if(arguments.length > 0) {
      objs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return pr_str__delegate.call(this, objs)
  };
  pr_str.cljs$lang$maxFixedArity = 0;
  pr_str.cljs$lang$applyTo = function(arglist__529698) {
    var objs = cljs.core.seq(arglist__529698);
    return pr_str__delegate(objs)
  };
  pr_str.cljs$core$IFn$_invoke$arity$variadic = pr_str__delegate;
  return pr_str
}();
cljs.core.prn_str = function() {
  var prn_str__delegate = function(objs) {
    return cljs.core.prn_str_with_opts.call(null, objs, cljs.core.pr_opts.call(null))
  };
  var prn_str = function(var_args) {
    var objs = null;
    if(arguments.length > 0) {
      objs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return prn_str__delegate.call(this, objs)
  };
  prn_str.cljs$lang$maxFixedArity = 0;
  prn_str.cljs$lang$applyTo = function(arglist__529699) {
    var objs = cljs.core.seq(arglist__529699);
    return prn_str__delegate(objs)
  };
  prn_str.cljs$core$IFn$_invoke$arity$variadic = prn_str__delegate;
  return prn_str
}();
cljs.core.pr = function() {
  var pr__delegate = function(objs) {
    return cljs.core.pr_with_opts.call(null, objs, cljs.core.pr_opts.call(null))
  };
  var pr = function(var_args) {
    var objs = null;
    if(arguments.length > 0) {
      objs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return pr__delegate.call(this, objs)
  };
  pr.cljs$lang$maxFixedArity = 0;
  pr.cljs$lang$applyTo = function(arglist__529700) {
    var objs = cljs.core.seq(arglist__529700);
    return pr__delegate(objs)
  };
  pr.cljs$core$IFn$_invoke$arity$variadic = pr__delegate;
  return pr
}();
cljs.core.print = function() {
  var cljs_core_print__delegate = function(objs) {
    return cljs.core.pr_with_opts.call(null, objs, cljs.core.assoc.call(null, cljs.core.pr_opts.call(null), new cljs.core.Keyword(null, "readably", "readably", 4441712502), false))
  };
  var cljs_core_print = function(var_args) {
    var objs = null;
    if(arguments.length > 0) {
      objs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return cljs_core_print__delegate.call(this, objs)
  };
  cljs_core_print.cljs$lang$maxFixedArity = 0;
  cljs_core_print.cljs$lang$applyTo = function(arglist__529701) {
    var objs = cljs.core.seq(arglist__529701);
    return cljs_core_print__delegate(objs)
  };
  cljs_core_print.cljs$core$IFn$_invoke$arity$variadic = cljs_core_print__delegate;
  return cljs_core_print
}();
cljs.core.print_str = function() {
  var print_str__delegate = function(objs) {
    return cljs.core.pr_str_with_opts.call(null, objs, cljs.core.assoc.call(null, cljs.core.pr_opts.call(null), new cljs.core.Keyword(null, "readably", "readably", 4441712502), false))
  };
  var print_str = function(var_args) {
    var objs = null;
    if(arguments.length > 0) {
      objs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return print_str__delegate.call(this, objs)
  };
  print_str.cljs$lang$maxFixedArity = 0;
  print_str.cljs$lang$applyTo = function(arglist__529702) {
    var objs = cljs.core.seq(arglist__529702);
    return print_str__delegate(objs)
  };
  print_str.cljs$core$IFn$_invoke$arity$variadic = print_str__delegate;
  return print_str
}();
cljs.core.println = function() {
  var println__delegate = function(objs) {
    cljs.core.pr_with_opts.call(null, objs, cljs.core.assoc.call(null, cljs.core.pr_opts.call(null), new cljs.core.Keyword(null, "readably", "readably", 4441712502), false));
    if(cljs.core.truth_(cljs.core._STAR_print_newline_STAR_)) {
      return cljs.core.newline.call(null, cljs.core.pr_opts.call(null))
    }else {
      return null
    }
  };
  var println = function(var_args) {
    var objs = null;
    if(arguments.length > 0) {
      objs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return println__delegate.call(this, objs)
  };
  println.cljs$lang$maxFixedArity = 0;
  println.cljs$lang$applyTo = function(arglist__529703) {
    var objs = cljs.core.seq(arglist__529703);
    return println__delegate(objs)
  };
  println.cljs$core$IFn$_invoke$arity$variadic = println__delegate;
  return println
}();
cljs.core.println_str = function() {
  var println_str__delegate = function(objs) {
    return cljs.core.prn_str_with_opts.call(null, objs, cljs.core.assoc.call(null, cljs.core.pr_opts.call(null), new cljs.core.Keyword(null, "readably", "readably", 4441712502), false))
  };
  var println_str = function(var_args) {
    var objs = null;
    if(arguments.length > 0) {
      objs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return println_str__delegate.call(this, objs)
  };
  println_str.cljs$lang$maxFixedArity = 0;
  println_str.cljs$lang$applyTo = function(arglist__529704) {
    var objs = cljs.core.seq(arglist__529704);
    return println_str__delegate(objs)
  };
  println_str.cljs$core$IFn$_invoke$arity$variadic = println_str__delegate;
  return println_str
}();
cljs.core.prn = function() {
  var prn__delegate = function(objs) {
    cljs.core.pr_with_opts.call(null, objs, cljs.core.pr_opts.call(null));
    if(cljs.core.truth_(cljs.core._STAR_print_newline_STAR_)) {
      return cljs.core.newline.call(null, cljs.core.pr_opts.call(null))
    }else {
      return null
    }
  };
  var prn = function(var_args) {
    var objs = null;
    if(arguments.length > 0) {
      objs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return prn__delegate.call(this, objs)
  };
  prn.cljs$lang$maxFixedArity = 0;
  prn.cljs$lang$applyTo = function(arglist__529705) {
    var objs = cljs.core.seq(arglist__529705);
    return prn__delegate(objs)
  };
  prn.cljs$core$IFn$_invoke$arity$variadic = prn__delegate;
  return prn
}();
cljs.core.KeySeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.KeySeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1)
};
cljs.core.IndexedSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.IndexedSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1)
};
cljs.core.Subvec.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.Subvec.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "[", " ", "]", opts, coll__$1)
};
cljs.core.ChunkedCons.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.ChunkedCons.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1)
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentTreeMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  var pr_pair = function(keyval) {
    return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "", " ", "", opts, keyval)
  };
  return cljs.core.pr_sequential_writer.call(null, writer, pr_pair, "{", ", ", "}", opts, coll__$1)
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentArrayMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  var pr_pair = function(keyval) {
    return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "", " ", "", opts, keyval)
  };
  return cljs.core.pr_sequential_writer.call(null, writer, pr_pair, "{", ", ", "}", opts, coll__$1)
};
cljs.core.PersistentQueue.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentQueue.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "#queue [", " ", "]", opts, cljs.core.seq.call(null, coll__$1))
};
cljs.core.LazySeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.LazySeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1)
};
cljs.core.RSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.RSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1)
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentTreeSet.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "#{", " ", "}", opts, coll__$1)
};
cljs.core.NodeSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.NodeSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1)
};
cljs.core.RedNode.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.RedNode.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "[", " ", "]", opts, coll__$1)
};
cljs.core.ChunkedSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.ChunkedSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1)
};
cljs.core.PersistentHashMap.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentHashMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  var pr_pair = function(keyval) {
    return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "", " ", "", opts, keyval)
  };
  return cljs.core.pr_sequential_writer.call(null, writer, pr_pair, "{", ", ", "}", opts, coll__$1)
};
cljs.core.PersistentHashSet.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentHashSet.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "#{", " ", "}", opts, coll__$1)
};
cljs.core.PersistentVector.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentVector.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "[", " ", "]", opts, coll__$1)
};
cljs.core.List.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.List.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1)
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1)
};
cljs.core.EmptyList.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.EmptyList.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core._write.call(null, writer, "()")
};
cljs.core.BlackNode.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.BlackNode.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "[", " ", "]", opts, coll__$1)
};
cljs.core.Cons.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.Cons.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1)
};
cljs.core.Range.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.Range.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1)
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.ArrayNodeSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1)
};
cljs.core.ValSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.ValSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1)
};
cljs.core.ObjMap.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.ObjMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  var pr_pair = function(keyval) {
    return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "", " ", "", opts, keyval)
  };
  return cljs.core.pr_sequential_writer.call(null, writer, pr_pair, "{", ", ", "}", opts, coll__$1)
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1)
};
cljs.core.PersistentVector.prototype.cljs$core$IComparable$ = true;
cljs.core.PersistentVector.prototype.cljs$core$IComparable$_compare$arity$2 = function(x, y) {
  var x__$1 = this;
  return cljs.core.compare_indexed.call(null, x__$1, y)
};
cljs.core.Subvec.prototype.cljs$core$IComparable$ = true;
cljs.core.Subvec.prototype.cljs$core$IComparable$_compare$arity$2 = function(x, y) {
  var x__$1 = this;
  return cljs.core.compare_indexed.call(null, x__$1, y)
};
cljs.core.Keyword.prototype.cljs$core$IComparable$ = true;
cljs.core.Keyword.prototype.cljs$core$IComparable$_compare$arity$2 = function(x, y) {
  var x__$1 = this;
  return cljs.core.compare_symbols.call(null, x__$1, y)
};
cljs.core.Symbol.prototype.cljs$core$IComparable$ = true;
cljs.core.Symbol.prototype.cljs$core$IComparable$_compare$arity$2 = function(x, y) {
  var x__$1 = this;
  return cljs.core.compare_symbols.call(null, x__$1, y)
};
cljs.core.Atom = function(state, meta, validator, watches) {
  this.state = state;
  this.meta = meta;
  this.validator = validator;
  this.watches = watches;
  this.cljs$lang$protocol_mask$partition0$ = 2153938944;
  this.cljs$lang$protocol_mask$partition1$ = 2
};
cljs.core.Atom.cljs$lang$type = true;
cljs.core.Atom.cljs$lang$ctorStr = "cljs.core/Atom";
cljs.core.Atom.cljs$lang$ctorPrWriter = function(this__3829__auto__, writer__3830__auto__, opt__3831__auto__) {
  return cljs.core._write.call(null, writer__3830__auto__, "cljs.core/Atom")
};
cljs.core.Atom.prototype.cljs$core$IHash$_hash$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return goog.getUid(this$__$1)
};
cljs.core.Atom.prototype.cljs$core$IWatchable$_notify_watches$arity$3 = function(this$, oldval, newval) {
  var self__ = this;
  var this$__$1 = this;
  var seq__529706 = cljs.core.seq.call(null, self__.watches);
  var chunk__529707 = null;
  var count__529708 = 0;
  var i__529709 = 0;
  while(true) {
    if(i__529709 < count__529708) {
      var vec__529710 = cljs.core._nth.call(null, chunk__529707, i__529709);
      var key = cljs.core.nth.call(null, vec__529710, 0, null);
      var f = cljs.core.nth.call(null, vec__529710, 1, null);
      f.call(null, key, this$__$1, oldval, newval);
      var G__529712 = seq__529706;
      var G__529713 = chunk__529707;
      var G__529714 = count__529708;
      var G__529715 = i__529709 + 1;
      seq__529706 = G__529712;
      chunk__529707 = G__529713;
      count__529708 = G__529714;
      i__529709 = G__529715;
      continue
    }else {
      var temp__4092__auto__ = cljs.core.seq.call(null, seq__529706);
      if(temp__4092__auto__) {
        var seq__529706__$1 = temp__4092__auto__;
        if(cljs.core.chunked_seq_QMARK_.call(null, seq__529706__$1)) {
          var c__4009__auto__ = cljs.core.chunk_first.call(null, seq__529706__$1);
          var G__529716 = cljs.core.chunk_rest.call(null, seq__529706__$1);
          var G__529717 = c__4009__auto__;
          var G__529718 = cljs.core.count.call(null, c__4009__auto__);
          var G__529719 = 0;
          seq__529706 = G__529716;
          chunk__529707 = G__529717;
          count__529708 = G__529718;
          i__529709 = G__529719;
          continue
        }else {
          var vec__529711 = cljs.core.first.call(null, seq__529706__$1);
          var key = cljs.core.nth.call(null, vec__529711, 0, null);
          var f = cljs.core.nth.call(null, vec__529711, 1, null);
          f.call(null, key, this$__$1, oldval, newval);
          var G__529720 = cljs.core.next.call(null, seq__529706__$1);
          var G__529721 = null;
          var G__529722 = 0;
          var G__529723 = 0;
          seq__529706 = G__529720;
          chunk__529707 = G__529721;
          count__529708 = G__529722;
          i__529709 = G__529723;
          continue
        }
      }else {
        return null
      }
    }
    break
  }
};
cljs.core.Atom.prototype.cljs$core$IWatchable$_add_watch$arity$3 = function(this$, key, f) {
  var self__ = this;
  var this$__$1 = this;
  return this$__$1.watches = cljs.core.assoc.call(null, self__.watches, key, f)
};
cljs.core.Atom.prototype.cljs$core$IWatchable$_remove_watch$arity$2 = function(this$, key) {
  var self__ = this;
  var this$__$1 = this;
  return this$__$1.watches = cljs.core.dissoc.call(null, self__.watches, key)
};
cljs.core.Atom.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(a, writer, opts) {
  var self__ = this;
  var a__$1 = this;
  cljs.core._write.call(null, writer, "#<Atom: ");
  cljs.core.pr_writer.call(null, self__.state, writer, opts);
  return cljs.core._write.call(null, writer, ">")
};
cljs.core.Atom.prototype.cljs$core$IMeta$_meta$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.meta
};
cljs.core.Atom.prototype.cljs$core$IDeref$_deref$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.state
};
cljs.core.Atom.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(o, other) {
  var self__ = this;
  var o__$1 = this;
  return o__$1 === other
};
cljs.core.__GT_Atom = function __GT_Atom(state, meta, validator, watches) {
  return new cljs.core.Atom(state, meta, validator, watches)
};
cljs.core.atom = function() {
  var atom = null;
  var atom__1 = function(x) {
    return new cljs.core.Atom(x, null, null, null)
  };
  var atom__2 = function() {
    var G__529727__delegate = function(x, p__529724) {
      var map__529726 = p__529724;
      var map__529726__$1 = cljs.core.seq_QMARK_.call(null, map__529726) ? cljs.core.apply.call(null, cljs.core.hash_map, map__529726) : map__529726;
      var validator = cljs.core.get.call(null, map__529726__$1, new cljs.core.Keyword(null, "validator", "validator", 4199087812));
      var meta = cljs.core.get.call(null, map__529726__$1, new cljs.core.Keyword(null, "meta", "meta", 1017252215));
      return new cljs.core.Atom(x, meta, validator, null)
    };
    var G__529727 = function(x, var_args) {
      var p__529724 = null;
      if(arguments.length > 1) {
        p__529724 = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
      }
      return G__529727__delegate.call(this, x, p__529724)
    };
    G__529727.cljs$lang$maxFixedArity = 1;
    G__529727.cljs$lang$applyTo = function(arglist__529728) {
      var x = cljs.core.first(arglist__529728);
      var p__529724 = cljs.core.rest(arglist__529728);
      return G__529727__delegate(x, p__529724)
    };
    G__529727.cljs$core$IFn$_invoke$arity$variadic = G__529727__delegate;
    return G__529727
  }();
  atom = function(x, var_args) {
    var p__529724 = var_args;
    switch(arguments.length) {
      case 1:
        return atom__1.call(this, x);
      default:
        return atom__2.cljs$core$IFn$_invoke$arity$variadic(x, cljs.core.array_seq(arguments, 1))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  atom.cljs$lang$maxFixedArity = 1;
  atom.cljs$lang$applyTo = atom__2.cljs$lang$applyTo;
  atom.cljs$core$IFn$_invoke$arity$1 = atom__1;
  atom.cljs$core$IFn$_invoke$arity$variadic = atom__2.cljs$core$IFn$_invoke$arity$variadic;
  return atom
}();
cljs.core.reset_BANG_ = function reset_BANG_(a, new_value) {
  var temp__4092__auto___529729 = a.validator;
  if(cljs.core.truth_(temp__4092__auto___529729)) {
    var validate_529730 = temp__4092__auto___529729;
    if(cljs.core.truth_(validate_529730.call(null, new_value))) {
    }else {
      throw new Error([cljs.core.str("Assert failed: "), cljs.core.str("Validator rejected reference state"), cljs.core.str("\n"), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "validate", "validate", 1233162959, null), new cljs.core.Symbol(null, "new-value", "new-value", 972165309, null))))].join(""));
    }
  }else {
  }
  var old_value_529731 = a.state;
  a.state = new_value;
  cljs.core._notify_watches.call(null, a, old_value_529731, new_value);
  return new_value
};
cljs.core.swap_BANG_ = function() {
  var swap_BANG_ = null;
  var swap_BANG___2 = function(a, f) {
    return cljs.core.reset_BANG_.call(null, a, f.call(null, a.state))
  };
  var swap_BANG___3 = function(a, f, x) {
    return cljs.core.reset_BANG_.call(null, a, f.call(null, a.state, x))
  };
  var swap_BANG___4 = function(a, f, x, y) {
    return cljs.core.reset_BANG_.call(null, a, f.call(null, a.state, x, y))
  };
  var swap_BANG___5 = function(a, f, x, y, z) {
    return cljs.core.reset_BANG_.call(null, a, f.call(null, a.state, x, y, z))
  };
  var swap_BANG___6 = function() {
    var G__529732__delegate = function(a, f, x, y, z, more) {
      return cljs.core.reset_BANG_.call(null, a, cljs.core.apply.call(null, f, a.state, x, y, z, more))
    };
    var G__529732 = function(a, f, x, y, z, var_args) {
      var more = null;
      if(arguments.length > 5) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 5), 0)
      }
      return G__529732__delegate.call(this, a, f, x, y, z, more)
    };
    G__529732.cljs$lang$maxFixedArity = 5;
    G__529732.cljs$lang$applyTo = function(arglist__529733) {
      var a = cljs.core.first(arglist__529733);
      arglist__529733 = cljs.core.next(arglist__529733);
      var f = cljs.core.first(arglist__529733);
      arglist__529733 = cljs.core.next(arglist__529733);
      var x = cljs.core.first(arglist__529733);
      arglist__529733 = cljs.core.next(arglist__529733);
      var y = cljs.core.first(arglist__529733);
      arglist__529733 = cljs.core.next(arglist__529733);
      var z = cljs.core.first(arglist__529733);
      var more = cljs.core.rest(arglist__529733);
      return G__529732__delegate(a, f, x, y, z, more)
    };
    G__529732.cljs$core$IFn$_invoke$arity$variadic = G__529732__delegate;
    return G__529732
  }();
  swap_BANG_ = function(a, f, x, y, z, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 2:
        return swap_BANG___2.call(this, a, f);
      case 3:
        return swap_BANG___3.call(this, a, f, x);
      case 4:
        return swap_BANG___4.call(this, a, f, x, y);
      case 5:
        return swap_BANG___5.call(this, a, f, x, y, z);
      default:
        return swap_BANG___6.cljs$core$IFn$_invoke$arity$variadic(a, f, x, y, z, cljs.core.array_seq(arguments, 5))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  swap_BANG_.cljs$lang$maxFixedArity = 5;
  swap_BANG_.cljs$lang$applyTo = swap_BANG___6.cljs$lang$applyTo;
  swap_BANG_.cljs$core$IFn$_invoke$arity$2 = swap_BANG___2;
  swap_BANG_.cljs$core$IFn$_invoke$arity$3 = swap_BANG___3;
  swap_BANG_.cljs$core$IFn$_invoke$arity$4 = swap_BANG___4;
  swap_BANG_.cljs$core$IFn$_invoke$arity$5 = swap_BANG___5;
  swap_BANG_.cljs$core$IFn$_invoke$arity$variadic = swap_BANG___6.cljs$core$IFn$_invoke$arity$variadic;
  return swap_BANG_
}();
cljs.core.compare_and_set_BANG_ = function compare_and_set_BANG_(a, oldval, newval) {
  if(cljs.core._EQ_.call(null, a.state, oldval)) {
    cljs.core.reset_BANG_.call(null, a, newval);
    return true
  }else {
    return false
  }
};
cljs.core.deref = function deref(o) {
  return cljs.core._deref.call(null, o)
};
cljs.core.set_validator_BANG_ = function set_validator_BANG_(iref, val) {
  return iref.validator = val
};
cljs.core.get_validator = function get_validator(iref) {
  return iref.validator
};
cljs.core.alter_meta_BANG_ = function() {
  var alter_meta_BANG___delegate = function(iref, f, args) {
    return iref.meta = cljs.core.apply.call(null, f, iref.meta, args)
  };
  var alter_meta_BANG_ = function(iref, f, var_args) {
    var args = null;
    if(arguments.length > 2) {
      args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
    }
    return alter_meta_BANG___delegate.call(this, iref, f, args)
  };
  alter_meta_BANG_.cljs$lang$maxFixedArity = 2;
  alter_meta_BANG_.cljs$lang$applyTo = function(arglist__529734) {
    var iref = cljs.core.first(arglist__529734);
    arglist__529734 = cljs.core.next(arglist__529734);
    var f = cljs.core.first(arglist__529734);
    var args = cljs.core.rest(arglist__529734);
    return alter_meta_BANG___delegate(iref, f, args)
  };
  alter_meta_BANG_.cljs$core$IFn$_invoke$arity$variadic = alter_meta_BANG___delegate;
  return alter_meta_BANG_
}();
cljs.core.reset_meta_BANG_ = function reset_meta_BANG_(iref, m) {
  return iref.meta = m
};
cljs.core.add_watch = function add_watch(iref, key, f) {
  return cljs.core._add_watch.call(null, iref, key, f)
};
cljs.core.remove_watch = function remove_watch(iref, key) {
  return cljs.core._remove_watch.call(null, iref, key)
};
cljs.core.gensym_counter = null;
cljs.core.gensym = function() {
  var gensym = null;
  var gensym__0 = function() {
    return gensym.call(null, "G__")
  };
  var gensym__1 = function(prefix_string) {
    if(cljs.core.gensym_counter == null) {
      cljs.core.gensym_counter = cljs.core.atom.call(null, 0)
    }else {
    }
    return cljs.core.symbol.call(null, [cljs.core.str(prefix_string), cljs.core.str(cljs.core.swap_BANG_.call(null, cljs.core.gensym_counter, cljs.core.inc))].join(""))
  };
  gensym = function(prefix_string) {
    switch(arguments.length) {
      case 0:
        return gensym__0.call(this);
      case 1:
        return gensym__1.call(this, prefix_string)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  gensym.cljs$core$IFn$_invoke$arity$0 = gensym__0;
  gensym.cljs$core$IFn$_invoke$arity$1 = gensym__1;
  return gensym
}();
cljs.core.fixture1 = 1;
cljs.core.fixture2 = 2;
cljs.core.Delay = function(state, f) {
  this.state = state;
  this.f = f;
  this.cljs$lang$protocol_mask$partition1$ = 1;
  this.cljs$lang$protocol_mask$partition0$ = 32768
};
cljs.core.Delay.cljs$lang$type = true;
cljs.core.Delay.cljs$lang$ctorStr = "cljs.core/Delay";
cljs.core.Delay.cljs$lang$ctorPrWriter = function(this__3829__auto__, writer__3830__auto__, opt__3831__auto__) {
  return cljs.core._write.call(null, writer__3830__auto__, "cljs.core/Delay")
};
cljs.core.Delay.prototype.cljs$core$IPending$_realized_QMARK_$arity$1 = function(d) {
  var self__ = this;
  var d__$1 = this;
  return(new cljs.core.Keyword(null, "done", "done", 1016993524)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, self__.state))
};
cljs.core.Delay.prototype.cljs$core$IDeref$_deref$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return(new cljs.core.Keyword(null, "value", "value", 1125876963)).cljs$core$IFn$_invoke$arity$1(cljs.core.swap_BANG_.call(null, self__.state, function(p__529735) {
    var map__529736 = p__529735;
    var map__529736__$1 = cljs.core.seq_QMARK_.call(null, map__529736) ? cljs.core.apply.call(null, cljs.core.hash_map, map__529736) : map__529736;
    var curr_state = map__529736__$1;
    var done = cljs.core.get.call(null, map__529736__$1, new cljs.core.Keyword(null, "done", "done", 1016993524));
    if(cljs.core.truth_(done)) {
      return curr_state
    }else {
      return new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "done", "done", 1016993524), true, new cljs.core.Keyword(null, "value", "value", 1125876963), self__.f.call(null)], null)
    }
  }))
};
cljs.core.__GT_Delay = function __GT_Delay(state, f) {
  return new cljs.core.Delay(state, f)
};
cljs.core.delay_QMARK_ = function delay_QMARK_(x) {
  return x instanceof cljs.core.Delay
};
cljs.core.force = function force(x) {
  if(cljs.core.delay_QMARK_.call(null, x)) {
    return cljs.core.deref.call(null, x)
  }else {
    return x
  }
};
cljs.core.realized_QMARK_ = function realized_QMARK_(d) {
  return cljs.core._realized_QMARK_.call(null, d)
};
cljs.core.IEncodeJS = function() {
  var obj529738 = {};
  return obj529738
}();
cljs.core._clj__GT_js = function _clj__GT_js(x) {
  if(function() {
    var and__3273__auto__ = x;
    if(and__3273__auto__) {
      return x.cljs$core$IEncodeJS$_clj__GT_js$arity$1
    }else {
      return and__3273__auto__
    }
  }()) {
    return x.cljs$core$IEncodeJS$_clj__GT_js$arity$1(x)
  }else {
    var x__3888__auto__ = x == null ? null : x;
    return function() {
      var or__3285__auto__ = cljs.core._clj__GT_js[goog.typeOf(x__3888__auto__)];
      if(or__3285__auto__) {
        return or__3285__auto__
      }else {
        var or__3285__auto____$1 = cljs.core._clj__GT_js["_"];
        if(or__3285__auto____$1) {
          return or__3285__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "IEncodeJS.-clj->js", x);
        }
      }
    }().call(null, x)
  }
};
cljs.core._key__GT_js = function _key__GT_js(x) {
  if(function() {
    var and__3273__auto__ = x;
    if(and__3273__auto__) {
      return x.cljs$core$IEncodeJS$_key__GT_js$arity$1
    }else {
      return and__3273__auto__
    }
  }()) {
    return x.cljs$core$IEncodeJS$_key__GT_js$arity$1(x)
  }else {
    var x__3888__auto__ = x == null ? null : x;
    return function() {
      var or__3285__auto__ = cljs.core._key__GT_js[goog.typeOf(x__3888__auto__)];
      if(or__3285__auto__) {
        return or__3285__auto__
      }else {
        var or__3285__auto____$1 = cljs.core._key__GT_js["_"];
        if(or__3285__auto____$1) {
          return or__3285__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "IEncodeJS.-key->js", x);
        }
      }
    }().call(null, x)
  }
};
cljs.core.key__GT_js = function key__GT_js(k) {
  if(function() {
    var G__529740 = k;
    if(G__529740) {
      var bit__3911__auto__ = null;
      if(cljs.core.truth_(function() {
        var or__3285__auto__ = bit__3911__auto__;
        if(cljs.core.truth_(or__3285__auto__)) {
          return or__3285__auto__
        }else {
          return G__529740.cljs$core$IEncodeJS$
        }
      }())) {
        return true
      }else {
        if(!G__529740.cljs$lang$protocol_mask$partition$) {
          return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IEncodeJS, G__529740)
        }else {
          return false
        }
      }
    }else {
      return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IEncodeJS, G__529740)
    }
  }()) {
    return cljs.core._clj__GT_js.call(null, k)
  }else {
    if(typeof k === "string" || typeof k === "number" || k instanceof cljs.core.Keyword || k instanceof cljs.core.Symbol) {
      return cljs.core.clj__GT_js.call(null, k)
    }else {
      return cljs.core.pr_str.call(null, k)
    }
  }
};
cljs.core.clj__GT_js = function clj__GT_js(x) {
  if(x == null) {
    return null
  }else {
    if(function() {
      var G__529750 = x;
      if(G__529750) {
        var bit__3911__auto__ = null;
        if(cljs.core.truth_(function() {
          var or__3285__auto__ = bit__3911__auto__;
          if(cljs.core.truth_(or__3285__auto__)) {
            return or__3285__auto__
          }else {
            return G__529750.cljs$core$IEncodeJS$
          }
        }())) {
          return true
        }else {
          if(!G__529750.cljs$lang$protocol_mask$partition$) {
            return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IEncodeJS, G__529750)
          }else {
            return false
          }
        }
      }else {
        return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IEncodeJS, G__529750)
      }
    }()) {
      return cljs.core._clj__GT_js.call(null, x)
    }else {
      if(x instanceof cljs.core.Keyword) {
        return cljs.core.name.call(null, x)
      }else {
        if(x instanceof cljs.core.Symbol) {
          return[cljs.core.str(x)].join("")
        }else {
          if(cljs.core.map_QMARK_.call(null, x)) {
            var m = function() {
              var obj529752 = {};
              return obj529752
            }();
            var seq__529753_529759 = cljs.core.seq.call(null, x);
            var chunk__529754_529760 = null;
            var count__529755_529761 = 0;
            var i__529756_529762 = 0;
            while(true) {
              if(i__529756_529762 < count__529755_529761) {
                var vec__529757_529763 = cljs.core._nth.call(null, chunk__529754_529760, i__529756_529762);
                var k_529764 = cljs.core.nth.call(null, vec__529757_529763, 0, null);
                var v_529765 = cljs.core.nth.call(null, vec__529757_529763, 1, null);
                m[cljs.core.key__GT_js.call(null, k_529764)] = clj__GT_js.call(null, v_529765);
                var G__529766 = seq__529753_529759;
                var G__529767 = chunk__529754_529760;
                var G__529768 = count__529755_529761;
                var G__529769 = i__529756_529762 + 1;
                seq__529753_529759 = G__529766;
                chunk__529754_529760 = G__529767;
                count__529755_529761 = G__529768;
                i__529756_529762 = G__529769;
                continue
              }else {
                var temp__4092__auto___529770 = cljs.core.seq.call(null, seq__529753_529759);
                if(temp__4092__auto___529770) {
                  var seq__529753_529771__$1 = temp__4092__auto___529770;
                  if(cljs.core.chunked_seq_QMARK_.call(null, seq__529753_529771__$1)) {
                    var c__4009__auto___529772 = cljs.core.chunk_first.call(null, seq__529753_529771__$1);
                    var G__529773 = cljs.core.chunk_rest.call(null, seq__529753_529771__$1);
                    var G__529774 = c__4009__auto___529772;
                    var G__529775 = cljs.core.count.call(null, c__4009__auto___529772);
                    var G__529776 = 0;
                    seq__529753_529759 = G__529773;
                    chunk__529754_529760 = G__529774;
                    count__529755_529761 = G__529775;
                    i__529756_529762 = G__529776;
                    continue
                  }else {
                    var vec__529758_529777 = cljs.core.first.call(null, seq__529753_529771__$1);
                    var k_529778 = cljs.core.nth.call(null, vec__529758_529777, 0, null);
                    var v_529779 = cljs.core.nth.call(null, vec__529758_529777, 1, null);
                    m[cljs.core.key__GT_js.call(null, k_529778)] = clj__GT_js.call(null, v_529779);
                    var G__529780 = cljs.core.next.call(null, seq__529753_529771__$1);
                    var G__529781 = null;
                    var G__529782 = 0;
                    var G__529783 = 0;
                    seq__529753_529759 = G__529780;
                    chunk__529754_529760 = G__529781;
                    count__529755_529761 = G__529782;
                    i__529756_529762 = G__529783;
                    continue
                  }
                }else {
                }
              }
              break
            }
            return m
          }else {
            if(cljs.core.coll_QMARK_.call(null, x)) {
              return cljs.core.apply.call(null, cljs.core.array, cljs.core.map.call(null, clj__GT_js, x))
            }else {
              if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                return x
              }else {
                return null
              }
            }
          }
        }
      }
    }
  }
};
cljs.core.IEncodeClojure = function() {
  var obj529785 = {};
  return obj529785
}();
cljs.core._js__GT_clj = function _js__GT_clj(x, options) {
  if(function() {
    var and__3273__auto__ = x;
    if(and__3273__auto__) {
      return x.cljs$core$IEncodeClojure$_js__GT_clj$arity$2
    }else {
      return and__3273__auto__
    }
  }()) {
    return x.cljs$core$IEncodeClojure$_js__GT_clj$arity$2(x, options)
  }else {
    var x__3888__auto__ = x == null ? null : x;
    return function() {
      var or__3285__auto__ = cljs.core._js__GT_clj[goog.typeOf(x__3888__auto__)];
      if(or__3285__auto__) {
        return or__3285__auto__
      }else {
        var or__3285__auto____$1 = cljs.core._js__GT_clj["_"];
        if(or__3285__auto____$1) {
          return or__3285__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "IEncodeClojure.-js->clj", x);
        }
      }
    }().call(null, x, options)
  }
};
cljs.core.js__GT_clj = function() {
  var js__GT_clj = null;
  var js__GT_clj__1 = function(x) {
    return js__GT_clj.call(null, x, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "keywordize-keys", "keywordize-keys", 4191781672), false], null))
  };
  var js__GT_clj__2 = function() {
    var G__529806__delegate = function(x, opts) {
      if(function() {
        var G__529796 = x;
        if(G__529796) {
          var bit__3911__auto__ = null;
          if(cljs.core.truth_(function() {
            var or__3285__auto__ = bit__3911__auto__;
            if(cljs.core.truth_(or__3285__auto__)) {
              return or__3285__auto__
            }else {
              return G__529796.cljs$core$IEncodeClojure$
            }
          }())) {
            return true
          }else {
            if(!G__529796.cljs$lang$protocol_mask$partition$) {
              return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IEncodeClojure, G__529796)
            }else {
              return false
            }
          }
        }else {
          return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IEncodeClojure, G__529796)
        }
      }()) {
        return cljs.core._js__GT_clj.call(null, x, cljs.core.apply.call(null, cljs.core.array_map, opts))
      }else {
        if(cljs.core.seq.call(null, opts)) {
          var map__529797 = opts;
          var map__529797__$1 = cljs.core.seq_QMARK_.call(null, map__529797) ? cljs.core.apply.call(null, cljs.core.hash_map, map__529797) : map__529797;
          var keywordize_keys = cljs.core.get.call(null, map__529797__$1, new cljs.core.Keyword(null, "keywordize-keys", "keywordize-keys", 4191781672));
          var keyfn = cljs.core.truth_(keywordize_keys) ? cljs.core.keyword : cljs.core.str;
          var f = function(map__529797, map__529797__$1, keywordize_keys, keyfn) {
            return function thisfn(x__$1) {
              if(cljs.core.seq_QMARK_.call(null, x__$1)) {
                return cljs.core.doall.call(null, cljs.core.map.call(null, thisfn, x__$1))
              }else {
                if(cljs.core.coll_QMARK_.call(null, x__$1)) {
                  return cljs.core.into.call(null, cljs.core.empty.call(null, x__$1), cljs.core.map.call(null, thisfn, x__$1))
                }else {
                  if(x__$1 instanceof Array) {
                    return cljs.core.vec.call(null, cljs.core.map.call(null, thisfn, x__$1))
                  }else {
                    if(cljs.core.type.call(null, x__$1) === Object) {
                      return cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, function() {
                        var iter__3978__auto__ = function(map__529797, map__529797__$1, keywordize_keys, keyfn) {
                          return function iter__529802(s__529803) {
                            return new cljs.core.LazySeq(null, function(map__529797, map__529797__$1, keywordize_keys, keyfn) {
                              return function() {
                                var s__529803__$1 = s__529803;
                                while(true) {
                                  var temp__4092__auto__ = cljs.core.seq.call(null, s__529803__$1);
                                  if(temp__4092__auto__) {
                                    var s__529803__$2 = temp__4092__auto__;
                                    if(cljs.core.chunked_seq_QMARK_.call(null, s__529803__$2)) {
                                      var c__3976__auto__ = cljs.core.chunk_first.call(null, s__529803__$2);
                                      var size__3977__auto__ = cljs.core.count.call(null, c__3976__auto__);
                                      var b__529805 = cljs.core.chunk_buffer.call(null, size__3977__auto__);
                                      if(function() {
                                        var i__529804 = 0;
                                        while(true) {
                                          if(i__529804 < size__3977__auto__) {
                                            var k = cljs.core._nth.call(null, c__3976__auto__, i__529804);
                                            cljs.core.chunk_append.call(null, b__529805, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [keyfn.call(null, k), thisfn.call(null, x__$1[k])], null));
                                            var G__529807 = i__529804 + 1;
                                            i__529804 = G__529807;
                                            continue
                                          }else {
                                            return true
                                          }
                                          break
                                        }
                                      }()) {
                                        return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__529805), iter__529802.call(null, cljs.core.chunk_rest.call(null, s__529803__$2)))
                                      }else {
                                        return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__529805), null)
                                      }
                                    }else {
                                      var k = cljs.core.first.call(null, s__529803__$2);
                                      return cljs.core.cons.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [keyfn.call(null, k), thisfn.call(null, x__$1[k])], null), iter__529802.call(null, cljs.core.rest.call(null, s__529803__$2)))
                                    }
                                  }else {
                                    return null
                                  }
                                  break
                                }
                              }
                            }(map__529797, map__529797__$1, keywordize_keys, keyfn), null, null)
                          }
                        }(map__529797, map__529797__$1, keywordize_keys, keyfn);
                        return iter__3978__auto__.call(null, cljs.core.js_keys.call(null, x__$1))
                      }())
                    }else {
                      if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                        return x__$1
                      }else {
                        return null
                      }
                    }
                  }
                }
              }
            }
          }(map__529797, map__529797__$1, keywordize_keys, keyfn);
          return f.call(null, x)
        }else {
          return null
        }
      }
    };
    var G__529806 = function(x, var_args) {
      var opts = null;
      if(arguments.length > 1) {
        opts = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
      }
      return G__529806__delegate.call(this, x, opts)
    };
    G__529806.cljs$lang$maxFixedArity = 1;
    G__529806.cljs$lang$applyTo = function(arglist__529808) {
      var x = cljs.core.first(arglist__529808);
      var opts = cljs.core.rest(arglist__529808);
      return G__529806__delegate(x, opts)
    };
    G__529806.cljs$core$IFn$_invoke$arity$variadic = G__529806__delegate;
    return G__529806
  }();
  js__GT_clj = function(x, var_args) {
    var opts = var_args;
    switch(arguments.length) {
      case 1:
        return js__GT_clj__1.call(this, x);
      default:
        return js__GT_clj__2.cljs$core$IFn$_invoke$arity$variadic(x, cljs.core.array_seq(arguments, 1))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  js__GT_clj.cljs$lang$maxFixedArity = 1;
  js__GT_clj.cljs$lang$applyTo = js__GT_clj__2.cljs$lang$applyTo;
  js__GT_clj.cljs$core$IFn$_invoke$arity$1 = js__GT_clj__1;
  js__GT_clj.cljs$core$IFn$_invoke$arity$variadic = js__GT_clj__2.cljs$core$IFn$_invoke$arity$variadic;
  return js__GT_clj
}();
cljs.core.memoize = function memoize(f) {
  var mem = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
  return function() {
    var G__529809__delegate = function(args) {
      var temp__4090__auto__ = cljs.core.get.call(null, cljs.core.deref.call(null, mem), args);
      if(cljs.core.truth_(temp__4090__auto__)) {
        var v = temp__4090__auto__;
        return v
      }else {
        var ret = cljs.core.apply.call(null, f, args);
        cljs.core.swap_BANG_.call(null, mem, cljs.core.assoc, args, ret);
        return ret
      }
    };
    var G__529809 = function(var_args) {
      var args = null;
      if(arguments.length > 0) {
        args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
      }
      return G__529809__delegate.call(this, args)
    };
    G__529809.cljs$lang$maxFixedArity = 0;
    G__529809.cljs$lang$applyTo = function(arglist__529810) {
      var args = cljs.core.seq(arglist__529810);
      return G__529809__delegate(args)
    };
    G__529809.cljs$core$IFn$_invoke$arity$variadic = G__529809__delegate;
    return G__529809
  }()
};
cljs.core.trampoline = function() {
  var trampoline = null;
  var trampoline__1 = function(f) {
    while(true) {
      var ret = f.call(null);
      if(cljs.core.fn_QMARK_.call(null, ret)) {
        var G__529811 = ret;
        f = G__529811;
        continue
      }else {
        return ret
      }
      break
    }
  };
  var trampoline__2 = function() {
    var G__529812__delegate = function(f, args) {
      return trampoline.call(null, function() {
        return cljs.core.apply.call(null, f, args)
      })
    };
    var G__529812 = function(f, var_args) {
      var args = null;
      if(arguments.length > 1) {
        args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
      }
      return G__529812__delegate.call(this, f, args)
    };
    G__529812.cljs$lang$maxFixedArity = 1;
    G__529812.cljs$lang$applyTo = function(arglist__529813) {
      var f = cljs.core.first(arglist__529813);
      var args = cljs.core.rest(arglist__529813);
      return G__529812__delegate(f, args)
    };
    G__529812.cljs$core$IFn$_invoke$arity$variadic = G__529812__delegate;
    return G__529812
  }();
  trampoline = function(f, var_args) {
    var args = var_args;
    switch(arguments.length) {
      case 1:
        return trampoline__1.call(this, f);
      default:
        return trampoline__2.cljs$core$IFn$_invoke$arity$variadic(f, cljs.core.array_seq(arguments, 1))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  trampoline.cljs$lang$maxFixedArity = 1;
  trampoline.cljs$lang$applyTo = trampoline__2.cljs$lang$applyTo;
  trampoline.cljs$core$IFn$_invoke$arity$1 = trampoline__1;
  trampoline.cljs$core$IFn$_invoke$arity$variadic = trampoline__2.cljs$core$IFn$_invoke$arity$variadic;
  return trampoline
}();
cljs.core.rand = function() {
  var rand = null;
  var rand__0 = function() {
    return rand.call(null, 1)
  };
  var rand__1 = function(n) {
    return Math.random.call(null) * n
  };
  rand = function(n) {
    switch(arguments.length) {
      case 0:
        return rand__0.call(this);
      case 1:
        return rand__1.call(this, n)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  rand.cljs$core$IFn$_invoke$arity$0 = rand__0;
  rand.cljs$core$IFn$_invoke$arity$1 = rand__1;
  return rand
}();
cljs.core.rand_int = function rand_int(n) {
  return Math.floor.call(null, Math.random.call(null) * n)
};
cljs.core.rand_nth = function rand_nth(coll) {
  return cljs.core.nth.call(null, coll, cljs.core.rand_int.call(null, cljs.core.count.call(null, coll)))
};
cljs.core.group_by = function group_by(f, coll) {
  return cljs.core.reduce.call(null, function(ret, x) {
    var k = f.call(null, x);
    return cljs.core.assoc.call(null, ret, k, cljs.core.conj.call(null, cljs.core.get.call(null, ret, k, cljs.core.PersistentVector.EMPTY), x))
  }, cljs.core.PersistentArrayMap.EMPTY, coll)
};
cljs.core.make_hierarchy = function make_hierarchy() {
  return new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "parents", "parents", 4515496059), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "descendants", "descendants", 768214664), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "ancestors", "ancestors", 889955442), cljs.core.PersistentArrayMap.EMPTY], null)
};
cljs.core._global_hierarchy = null;
cljs.core.get_global_hierarchy = function get_global_hierarchy() {
  if(cljs.core._global_hierarchy == null) {
    cljs.core._global_hierarchy = cljs.core.atom.call(null, cljs.core.make_hierarchy.call(null))
  }else {
  }
  return cljs.core._global_hierarchy
};
cljs.core.swap_global_hierarchy_BANG_ = function() {
  var swap_global_hierarchy_BANG___delegate = function(f, args) {
    return cljs.core.apply.call(null, cljs.core.swap_BANG_, cljs.core.get_global_hierarchy.call(null), f, args)
  };
  var swap_global_hierarchy_BANG_ = function(f, var_args) {
    var args = null;
    if(arguments.length > 1) {
      args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
    }
    return swap_global_hierarchy_BANG___delegate.call(this, f, args)
  };
  swap_global_hierarchy_BANG_.cljs$lang$maxFixedArity = 1;
  swap_global_hierarchy_BANG_.cljs$lang$applyTo = function(arglist__529814) {
    var f = cljs.core.first(arglist__529814);
    var args = cljs.core.rest(arglist__529814);
    return swap_global_hierarchy_BANG___delegate(f, args)
  };
  swap_global_hierarchy_BANG_.cljs$core$IFn$_invoke$arity$variadic = swap_global_hierarchy_BANG___delegate;
  return swap_global_hierarchy_BANG_
}();
cljs.core.isa_QMARK_ = function() {
  var isa_QMARK_ = null;
  var isa_QMARK___2 = function(child, parent) {
    return isa_QMARK_.call(null, cljs.core.deref.call(null, cljs.core.get_global_hierarchy.call(null)), child, parent)
  };
  var isa_QMARK___3 = function(h, child, parent) {
    var or__3285__auto__ = cljs.core._EQ_.call(null, child, parent);
    if(or__3285__auto__) {
      return or__3285__auto__
    }else {
      var or__3285__auto____$1 = cljs.core.contains_QMARK_.call(null, (new cljs.core.Keyword(null, "ancestors", "ancestors", 889955442)).cljs$core$IFn$_invoke$arity$1(h).call(null, child), parent);
      if(or__3285__auto____$1) {
        return or__3285__auto____$1
      }else {
        var and__3273__auto__ = cljs.core.vector_QMARK_.call(null, parent);
        if(and__3273__auto__) {
          var and__3273__auto____$1 = cljs.core.vector_QMARK_.call(null, child);
          if(and__3273__auto____$1) {
            var and__3273__auto____$2 = cljs.core.count.call(null, parent) === cljs.core.count.call(null, child);
            if(and__3273__auto____$2) {
              var ret = true;
              var i = 0;
              while(true) {
                if(!ret || i === cljs.core.count.call(null, parent)) {
                  return ret
                }else {
                  var G__529815 = isa_QMARK_.call(null, h, child.call(null, i), parent.call(null, i));
                  var G__529816 = i + 1;
                  ret = G__529815;
                  i = G__529816;
                  continue
                }
                break
              }
            }else {
              return and__3273__auto____$2
            }
          }else {
            return and__3273__auto____$1
          }
        }else {
          return and__3273__auto__
        }
      }
    }
  };
  isa_QMARK_ = function(h, child, parent) {
    switch(arguments.length) {
      case 2:
        return isa_QMARK___2.call(this, h, child);
      case 3:
        return isa_QMARK___3.call(this, h, child, parent)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  isa_QMARK_.cljs$core$IFn$_invoke$arity$2 = isa_QMARK___2;
  isa_QMARK_.cljs$core$IFn$_invoke$arity$3 = isa_QMARK___3;
  return isa_QMARK_
}();
cljs.core.parents = function() {
  var parents = null;
  var parents__1 = function(tag) {
    return parents.call(null, cljs.core.deref.call(null, cljs.core.get_global_hierarchy.call(null)), tag)
  };
  var parents__2 = function(h, tag) {
    return cljs.core.not_empty.call(null, cljs.core.get.call(null, (new cljs.core.Keyword(null, "parents", "parents", 4515496059)).cljs$core$IFn$_invoke$arity$1(h), tag))
  };
  parents = function(h, tag) {
    switch(arguments.length) {
      case 1:
        return parents__1.call(this, h);
      case 2:
        return parents__2.call(this, h, tag)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  parents.cljs$core$IFn$_invoke$arity$1 = parents__1;
  parents.cljs$core$IFn$_invoke$arity$2 = parents__2;
  return parents
}();
cljs.core.ancestors = function() {
  var ancestors = null;
  var ancestors__1 = function(tag) {
    return ancestors.call(null, cljs.core.deref.call(null, cljs.core.get_global_hierarchy.call(null)), tag)
  };
  var ancestors__2 = function(h, tag) {
    return cljs.core.not_empty.call(null, cljs.core.get.call(null, (new cljs.core.Keyword(null, "ancestors", "ancestors", 889955442)).cljs$core$IFn$_invoke$arity$1(h), tag))
  };
  ancestors = function(h, tag) {
    switch(arguments.length) {
      case 1:
        return ancestors__1.call(this, h);
      case 2:
        return ancestors__2.call(this, h, tag)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  ancestors.cljs$core$IFn$_invoke$arity$1 = ancestors__1;
  ancestors.cljs$core$IFn$_invoke$arity$2 = ancestors__2;
  return ancestors
}();
cljs.core.descendants = function() {
  var descendants = null;
  var descendants__1 = function(tag) {
    return descendants.call(null, cljs.core.deref.call(null, cljs.core.get_global_hierarchy.call(null)), tag)
  };
  var descendants__2 = function(h, tag) {
    return cljs.core.not_empty.call(null, cljs.core.get.call(null, (new cljs.core.Keyword(null, "descendants", "descendants", 768214664)).cljs$core$IFn$_invoke$arity$1(h), tag))
  };
  descendants = function(h, tag) {
    switch(arguments.length) {
      case 1:
        return descendants__1.call(this, h);
      case 2:
        return descendants__2.call(this, h, tag)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  descendants.cljs$core$IFn$_invoke$arity$1 = descendants__1;
  descendants.cljs$core$IFn$_invoke$arity$2 = descendants__2;
  return descendants
}();
cljs.core.derive = function() {
  var derive = null;
  var derive__2 = function(tag, parent) {
    if(cljs.core.truth_(cljs.core.namespace.call(null, parent))) {
    }else {
      throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "namespace", "namespace", -388313324, null), new cljs.core.Symbol(null, "parent", "parent", 1659011683, null))))].join(""));
    }
    cljs.core.swap_global_hierarchy_BANG_.call(null, derive, tag, parent);
    return null
  };
  var derive__3 = function(h, tag, parent) {
    if(cljs.core.not_EQ_.call(null, tag, parent)) {
    }else {
      throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "not=", "not=", -1637144189, null), new cljs.core.Symbol(null, "tag", "tag", -1640416941, null), new cljs.core.Symbol(null, "parent", "parent", 1659011683, null))))].join(""));
    }
    var tp = (new cljs.core.Keyword(null, "parents", "parents", 4515496059)).cljs$core$IFn$_invoke$arity$1(h);
    var td = (new cljs.core.Keyword(null, "descendants", "descendants", 768214664)).cljs$core$IFn$_invoke$arity$1(h);
    var ta = (new cljs.core.Keyword(null, "ancestors", "ancestors", 889955442)).cljs$core$IFn$_invoke$arity$1(h);
    var tf = function(tp, td, ta) {
      return function(m, source, sources, target, targets) {
        return cljs.core.reduce.call(null, function(tp, td, ta) {
          return function(ret, k) {
            return cljs.core.assoc.call(null, ret, k, cljs.core.reduce.call(null, cljs.core.conj, cljs.core.get.call(null, targets, k, cljs.core.PersistentHashSet.EMPTY), cljs.core.cons.call(null, target, targets.call(null, target))))
          }
        }(tp, td, ta), m, cljs.core.cons.call(null, source, sources.call(null, source)))
      }
    }(tp, td, ta);
    var or__3285__auto__ = cljs.core.contains_QMARK_.call(null, tp.call(null, tag), parent) ? null : function() {
      if(cljs.core.contains_QMARK_.call(null, ta.call(null, tag), parent)) {
        throw new Error([cljs.core.str(tag), cljs.core.str("already has"), cljs.core.str(parent), cljs.core.str("as ancestor")].join(""));
      }else {
      }
      if(cljs.core.contains_QMARK_.call(null, ta.call(null, parent), tag)) {
        throw new Error([cljs.core.str("Cyclic derivation:"), cljs.core.str(parent), cljs.core.str("has"), cljs.core.str(tag), cljs.core.str("as ancestor")].join(""));
      }else {
      }
      return new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "parents", "parents", 4515496059), cljs.core.assoc.call(null, (new cljs.core.Keyword(null, "parents", "parents", 4515496059)).cljs$core$IFn$_invoke$arity$1(h), tag, cljs.core.conj.call(null, cljs.core.get.call(null, tp, tag, cljs.core.PersistentHashSet.EMPTY), parent)), new cljs.core.Keyword(null, "ancestors", "ancestors", 889955442), tf.call(null, (new cljs.core.Keyword(null, "ancestors", "ancestors", 889955442)).cljs$core$IFn$_invoke$arity$1(h), 
      tag, td, parent, ta), new cljs.core.Keyword(null, "descendants", "descendants", 768214664), tf.call(null, (new cljs.core.Keyword(null, "descendants", "descendants", 768214664)).cljs$core$IFn$_invoke$arity$1(h), parent, ta, tag, td)], null)
    }();
    if(cljs.core.truth_(or__3285__auto__)) {
      return or__3285__auto__
    }else {
      return h
    }
  };
  derive = function(h, tag, parent) {
    switch(arguments.length) {
      case 2:
        return derive__2.call(this, h, tag);
      case 3:
        return derive__3.call(this, h, tag, parent)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  derive.cljs$core$IFn$_invoke$arity$2 = derive__2;
  derive.cljs$core$IFn$_invoke$arity$3 = derive__3;
  return derive
}();
cljs.core.underive = function() {
  var underive = null;
  var underive__2 = function(tag, parent) {
    cljs.core.swap_global_hierarchy_BANG_.call(null, underive, tag, parent);
    return null
  };
  var underive__3 = function(h, tag, parent) {
    var parentMap = (new cljs.core.Keyword(null, "parents", "parents", 4515496059)).cljs$core$IFn$_invoke$arity$1(h);
    var childsParents = cljs.core.truth_(parentMap.call(null, tag)) ? cljs.core.disj.call(null, parentMap.call(null, tag), parent) : cljs.core.PersistentHashSet.EMPTY;
    var newParents = cljs.core.truth_(cljs.core.not_empty.call(null, childsParents)) ? cljs.core.assoc.call(null, parentMap, tag, childsParents) : cljs.core.dissoc.call(null, parentMap, tag);
    var deriv_seq = cljs.core.flatten.call(null, cljs.core.map.call(null, function(parentMap, childsParents, newParents) {
      return function(p1__529817_SHARP_) {
        return cljs.core.cons.call(null, cljs.core.first.call(null, p1__529817_SHARP_), cljs.core.interpose.call(null, cljs.core.first.call(null, p1__529817_SHARP_), cljs.core.second.call(null, p1__529817_SHARP_)))
      }
    }(parentMap, childsParents, newParents), cljs.core.seq.call(null, newParents)));
    if(cljs.core.contains_QMARK_.call(null, parentMap.call(null, tag), parent)) {
      return cljs.core.reduce.call(null, function(p1__529818_SHARP_, p2__529819_SHARP_) {
        return cljs.core.apply.call(null, cljs.core.derive, p1__529818_SHARP_, p2__529819_SHARP_)
      }, cljs.core.make_hierarchy.call(null), cljs.core.partition.call(null, 2, deriv_seq))
    }else {
      return h
    }
  };
  underive = function(h, tag, parent) {
    switch(arguments.length) {
      case 2:
        return underive__2.call(this, h, tag);
      case 3:
        return underive__3.call(this, h, tag, parent)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  underive.cljs$core$IFn$_invoke$arity$2 = underive__2;
  underive.cljs$core$IFn$_invoke$arity$3 = underive__3;
  return underive
}();
cljs.core.reset_cache = function reset_cache(method_cache, method_table, cached_hierarchy, hierarchy) {
  cljs.core.swap_BANG_.call(null, method_cache, function(_) {
    return cljs.core.deref.call(null, method_table)
  });
  return cljs.core.swap_BANG_.call(null, cached_hierarchy, function(_) {
    return cljs.core.deref.call(null, hierarchy)
  })
};
cljs.core.prefers_STAR_ = function prefers_STAR_(x, y, prefer_table) {
  var xprefs = cljs.core.deref.call(null, prefer_table).call(null, x);
  var or__3285__auto__ = cljs.core.truth_(function() {
    var and__3273__auto__ = xprefs;
    if(cljs.core.truth_(and__3273__auto__)) {
      return xprefs.call(null, y)
    }else {
      return and__3273__auto__
    }
  }()) ? true : null;
  if(cljs.core.truth_(or__3285__auto__)) {
    return or__3285__auto__
  }else {
    var or__3285__auto____$1 = function() {
      var ps = cljs.core.parents.call(null, y);
      while(true) {
        if(cljs.core.count.call(null, ps) > 0) {
          if(cljs.core.truth_(prefers_STAR_.call(null, x, cljs.core.first.call(null, ps), prefer_table))) {
          }else {
          }
          var G__529820 = cljs.core.rest.call(null, ps);
          ps = G__529820;
          continue
        }else {
          return null
        }
        break
      }
    }();
    if(cljs.core.truth_(or__3285__auto____$1)) {
      return or__3285__auto____$1
    }else {
      var or__3285__auto____$2 = function() {
        var ps = cljs.core.parents.call(null, x);
        while(true) {
          if(cljs.core.count.call(null, ps) > 0) {
            if(cljs.core.truth_(prefers_STAR_.call(null, cljs.core.first.call(null, ps), y, prefer_table))) {
            }else {
            }
            var G__529821 = cljs.core.rest.call(null, ps);
            ps = G__529821;
            continue
          }else {
            return null
          }
          break
        }
      }();
      if(cljs.core.truth_(or__3285__auto____$2)) {
        return or__3285__auto____$2
      }else {
        return false
      }
    }
  }
};
cljs.core.dominates = function dominates(x, y, prefer_table) {
  var or__3285__auto__ = cljs.core.prefers_STAR_.call(null, x, y, prefer_table);
  if(cljs.core.truth_(or__3285__auto__)) {
    return or__3285__auto__
  }else {
    return cljs.core.isa_QMARK_.call(null, x, y)
  }
};
cljs.core.find_and_cache_best_method = function find_and_cache_best_method(name, dispatch_val, hierarchy, method_table, prefer_table, method_cache, cached_hierarchy) {
  var best_entry = cljs.core.reduce.call(null, function(be, p__529824) {
    var vec__529825 = p__529824;
    var k = cljs.core.nth.call(null, vec__529825, 0, null);
    var _ = cljs.core.nth.call(null, vec__529825, 1, null);
    var e = vec__529825;
    if(cljs.core.isa_QMARK_.call(null, cljs.core.deref.call(null, hierarchy), dispatch_val, k)) {
      var be2 = cljs.core.truth_(function() {
        var or__3285__auto__ = be == null;
        if(or__3285__auto__) {
          return or__3285__auto__
        }else {
          return cljs.core.dominates.call(null, k, cljs.core.first.call(null, be), prefer_table)
        }
      }()) ? e : be;
      if(cljs.core.truth_(cljs.core.dominates.call(null, cljs.core.first.call(null, be2), k, prefer_table))) {
      }else {
        throw new Error([cljs.core.str("Multiple methods in multimethod '"), cljs.core.str(name), cljs.core.str("' match dispatch value: "), cljs.core.str(dispatch_val), cljs.core.str(" -> "), cljs.core.str(k), cljs.core.str(" and "), cljs.core.str(cljs.core.first.call(null, be2)), cljs.core.str(", and neither is preferred")].join(""));
      }
      return be2
    }else {
      return be
    }
  }, null, cljs.core.deref.call(null, method_table));
  if(cljs.core.truth_(best_entry)) {
    if(cljs.core._EQ_.call(null, cljs.core.deref.call(null, cached_hierarchy), cljs.core.deref.call(null, hierarchy))) {
      cljs.core.swap_BANG_.call(null, method_cache, cljs.core.assoc, dispatch_val, cljs.core.second.call(null, best_entry));
      return cljs.core.second.call(null, best_entry)
    }else {
      cljs.core.reset_cache.call(null, method_cache, method_table, cached_hierarchy, hierarchy);
      return find_and_cache_best_method.call(null, name, dispatch_val, hierarchy, method_table, prefer_table, method_cache, cached_hierarchy)
    }
  }else {
    return null
  }
};
cljs.core.IMultiFn = function() {
  var obj529827 = {};
  return obj529827
}();
cljs.core._reset = function _reset(mf) {
  if(function() {
    var and__3273__auto__ = mf;
    if(and__3273__auto__) {
      return mf.cljs$core$IMultiFn$_reset$arity$1
    }else {
      return and__3273__auto__
    }
  }()) {
    return mf.cljs$core$IMultiFn$_reset$arity$1(mf)
  }else {
    var x__3888__auto__ = mf == null ? null : mf;
    return function() {
      var or__3285__auto__ = cljs.core._reset[goog.typeOf(x__3888__auto__)];
      if(or__3285__auto__) {
        return or__3285__auto__
      }else {
        var or__3285__auto____$1 = cljs.core._reset["_"];
        if(or__3285__auto____$1) {
          return or__3285__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "IMultiFn.-reset", mf);
        }
      }
    }().call(null, mf)
  }
};
cljs.core._add_method = function _add_method(mf, dispatch_val, method) {
  if(function() {
    var and__3273__auto__ = mf;
    if(and__3273__auto__) {
      return mf.cljs$core$IMultiFn$_add_method$arity$3
    }else {
      return and__3273__auto__
    }
  }()) {
    return mf.cljs$core$IMultiFn$_add_method$arity$3(mf, dispatch_val, method)
  }else {
    var x__3888__auto__ = mf == null ? null : mf;
    return function() {
      var or__3285__auto__ = cljs.core._add_method[goog.typeOf(x__3888__auto__)];
      if(or__3285__auto__) {
        return or__3285__auto__
      }else {
        var or__3285__auto____$1 = cljs.core._add_method["_"];
        if(or__3285__auto____$1) {
          return or__3285__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "IMultiFn.-add-method", mf);
        }
      }
    }().call(null, mf, dispatch_val, method)
  }
};
cljs.core._remove_method = function _remove_method(mf, dispatch_val) {
  if(function() {
    var and__3273__auto__ = mf;
    if(and__3273__auto__) {
      return mf.cljs$core$IMultiFn$_remove_method$arity$2
    }else {
      return and__3273__auto__
    }
  }()) {
    return mf.cljs$core$IMultiFn$_remove_method$arity$2(mf, dispatch_val)
  }else {
    var x__3888__auto__ = mf == null ? null : mf;
    return function() {
      var or__3285__auto__ = cljs.core._remove_method[goog.typeOf(x__3888__auto__)];
      if(or__3285__auto__) {
        return or__3285__auto__
      }else {
        var or__3285__auto____$1 = cljs.core._remove_method["_"];
        if(or__3285__auto____$1) {
          return or__3285__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "IMultiFn.-remove-method", mf);
        }
      }
    }().call(null, mf, dispatch_val)
  }
};
cljs.core._prefer_method = function _prefer_method(mf, dispatch_val, dispatch_val_y) {
  if(function() {
    var and__3273__auto__ = mf;
    if(and__3273__auto__) {
      return mf.cljs$core$IMultiFn$_prefer_method$arity$3
    }else {
      return and__3273__auto__
    }
  }()) {
    return mf.cljs$core$IMultiFn$_prefer_method$arity$3(mf, dispatch_val, dispatch_val_y)
  }else {
    var x__3888__auto__ = mf == null ? null : mf;
    return function() {
      var or__3285__auto__ = cljs.core._prefer_method[goog.typeOf(x__3888__auto__)];
      if(or__3285__auto__) {
        return or__3285__auto__
      }else {
        var or__3285__auto____$1 = cljs.core._prefer_method["_"];
        if(or__3285__auto____$1) {
          return or__3285__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "IMultiFn.-prefer-method", mf);
        }
      }
    }().call(null, mf, dispatch_val, dispatch_val_y)
  }
};
cljs.core._get_method = function _get_method(mf, dispatch_val) {
  if(function() {
    var and__3273__auto__ = mf;
    if(and__3273__auto__) {
      return mf.cljs$core$IMultiFn$_get_method$arity$2
    }else {
      return and__3273__auto__
    }
  }()) {
    return mf.cljs$core$IMultiFn$_get_method$arity$2(mf, dispatch_val)
  }else {
    var x__3888__auto__ = mf == null ? null : mf;
    return function() {
      var or__3285__auto__ = cljs.core._get_method[goog.typeOf(x__3888__auto__)];
      if(or__3285__auto__) {
        return or__3285__auto__
      }else {
        var or__3285__auto____$1 = cljs.core._get_method["_"];
        if(or__3285__auto____$1) {
          return or__3285__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "IMultiFn.-get-method", mf);
        }
      }
    }().call(null, mf, dispatch_val)
  }
};
cljs.core._methods = function _methods(mf) {
  if(function() {
    var and__3273__auto__ = mf;
    if(and__3273__auto__) {
      return mf.cljs$core$IMultiFn$_methods$arity$1
    }else {
      return and__3273__auto__
    }
  }()) {
    return mf.cljs$core$IMultiFn$_methods$arity$1(mf)
  }else {
    var x__3888__auto__ = mf == null ? null : mf;
    return function() {
      var or__3285__auto__ = cljs.core._methods[goog.typeOf(x__3888__auto__)];
      if(or__3285__auto__) {
        return or__3285__auto__
      }else {
        var or__3285__auto____$1 = cljs.core._methods["_"];
        if(or__3285__auto____$1) {
          return or__3285__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "IMultiFn.-methods", mf);
        }
      }
    }().call(null, mf)
  }
};
cljs.core._prefers = function _prefers(mf) {
  if(function() {
    var and__3273__auto__ = mf;
    if(and__3273__auto__) {
      return mf.cljs$core$IMultiFn$_prefers$arity$1
    }else {
      return and__3273__auto__
    }
  }()) {
    return mf.cljs$core$IMultiFn$_prefers$arity$1(mf)
  }else {
    var x__3888__auto__ = mf == null ? null : mf;
    return function() {
      var or__3285__auto__ = cljs.core._prefers[goog.typeOf(x__3888__auto__)];
      if(or__3285__auto__) {
        return or__3285__auto__
      }else {
        var or__3285__auto____$1 = cljs.core._prefers["_"];
        if(or__3285__auto____$1) {
          return or__3285__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "IMultiFn.-prefers", mf);
        }
      }
    }().call(null, mf)
  }
};
cljs.core._dispatch = function _dispatch(mf, args) {
  if(function() {
    var and__3273__auto__ = mf;
    if(and__3273__auto__) {
      return mf.cljs$core$IMultiFn$_dispatch$arity$2
    }else {
      return and__3273__auto__
    }
  }()) {
    return mf.cljs$core$IMultiFn$_dispatch$arity$2(mf, args)
  }else {
    var x__3888__auto__ = mf == null ? null : mf;
    return function() {
      var or__3285__auto__ = cljs.core._dispatch[goog.typeOf(x__3888__auto__)];
      if(or__3285__auto__) {
        return or__3285__auto__
      }else {
        var or__3285__auto____$1 = cljs.core._dispatch["_"];
        if(or__3285__auto____$1) {
          return or__3285__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "IMultiFn.-dispatch", mf);
        }
      }
    }().call(null, mf, args)
  }
};
cljs.core.do_dispatch = function do_dispatch(mf, name, dispatch_fn, args) {
  var dispatch_val = cljs.core.apply.call(null, dispatch_fn, args);
  var target_fn = cljs.core._get_method.call(null, mf, dispatch_val);
  if(cljs.core.truth_(target_fn)) {
  }else {
    throw new Error([cljs.core.str("No method in multimethod '"), cljs.core.str(name), cljs.core.str("' for dispatch value: "), cljs.core.str(dispatch_val)].join(""));
  }
  return cljs.core.apply.call(null, target_fn, args)
};
cljs.core.MultiFn = function(name, dispatch_fn, default_dispatch_val, hierarchy, method_table, prefer_table, method_cache, cached_hierarchy) {
  this.name = name;
  this.dispatch_fn = dispatch_fn;
  this.default_dispatch_val = default_dispatch_val;
  this.hierarchy = hierarchy;
  this.method_table = method_table;
  this.prefer_table = prefer_table;
  this.method_cache = method_cache;
  this.cached_hierarchy = cached_hierarchy;
  this.cljs$lang$protocol_mask$partition0$ = 4194304;
  this.cljs$lang$protocol_mask$partition1$ = 256
};
cljs.core.MultiFn.cljs$lang$type = true;
cljs.core.MultiFn.cljs$lang$ctorStr = "cljs.core/MultiFn";
cljs.core.MultiFn.cljs$lang$ctorPrWriter = function(this__3829__auto__, writer__3830__auto__, opt__3831__auto__) {
  return cljs.core._write.call(null, writer__3830__auto__, "cljs.core/MultiFn")
};
cljs.core.MultiFn.prototype.cljs$core$IHash$_hash$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return goog.getUid(this$__$1)
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_reset$arity$1 = function(mf) {
  var self__ = this;
  var mf__$1 = this;
  cljs.core.swap_BANG_.call(null, self__.method_table, function(mf__$2) {
    return cljs.core.PersistentArrayMap.EMPTY
  });
  cljs.core.swap_BANG_.call(null, self__.method_cache, function(mf__$2) {
    return cljs.core.PersistentArrayMap.EMPTY
  });
  cljs.core.swap_BANG_.call(null, self__.prefer_table, function(mf__$2) {
    return cljs.core.PersistentArrayMap.EMPTY
  });
  cljs.core.swap_BANG_.call(null, self__.cached_hierarchy, function(mf__$2) {
    return null
  });
  return mf__$1
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_add_method$arity$3 = function(mf, dispatch_val, method) {
  var self__ = this;
  var mf__$1 = this;
  cljs.core.swap_BANG_.call(null, self__.method_table, cljs.core.assoc, dispatch_val, method);
  cljs.core.reset_cache.call(null, self__.method_cache, self__.method_table, self__.cached_hierarchy, self__.hierarchy);
  return mf__$1
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_remove_method$arity$2 = function(mf, dispatch_val) {
  var self__ = this;
  var mf__$1 = this;
  cljs.core.swap_BANG_.call(null, self__.method_table, cljs.core.dissoc, dispatch_val);
  cljs.core.reset_cache.call(null, self__.method_cache, self__.method_table, self__.cached_hierarchy, self__.hierarchy);
  return mf__$1
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_get_method$arity$2 = function(mf, dispatch_val) {
  var self__ = this;
  var mf__$1 = this;
  if(cljs.core._EQ_.call(null, cljs.core.deref.call(null, self__.cached_hierarchy), cljs.core.deref.call(null, self__.hierarchy))) {
  }else {
    cljs.core.reset_cache.call(null, self__.method_cache, self__.method_table, self__.cached_hierarchy, self__.hierarchy)
  }
  var temp__4090__auto__ = cljs.core.deref.call(null, self__.method_cache).call(null, dispatch_val);
  if(cljs.core.truth_(temp__4090__auto__)) {
    var target_fn = temp__4090__auto__;
    return target_fn
  }else {
    var temp__4090__auto____$1 = cljs.core.find_and_cache_best_method.call(null, self__.name, dispatch_val, self__.hierarchy, self__.method_table, self__.prefer_table, self__.method_cache, self__.cached_hierarchy);
    if(cljs.core.truth_(temp__4090__auto____$1)) {
      var target_fn = temp__4090__auto____$1;
      return target_fn
    }else {
      return cljs.core.deref.call(null, self__.method_table).call(null, self__.default_dispatch_val)
    }
  }
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_prefer_method$arity$3 = function(mf, dispatch_val_x, dispatch_val_y) {
  var self__ = this;
  var mf__$1 = this;
  if(cljs.core.truth_(cljs.core.prefers_STAR_.call(null, dispatch_val_x, dispatch_val_y, self__.prefer_table))) {
    throw new Error([cljs.core.str("Preference conflict in multimethod '"), cljs.core.str(self__.name), cljs.core.str("': "), cljs.core.str(dispatch_val_y), cljs.core.str(" is already preferred to "), cljs.core.str(dispatch_val_x)].join(""));
  }else {
  }
  cljs.core.swap_BANG_.call(null, self__.prefer_table, function(old) {
    return cljs.core.assoc.call(null, old, dispatch_val_x, cljs.core.conj.call(null, cljs.core.get.call(null, old, dispatch_val_x, cljs.core.PersistentHashSet.EMPTY), dispatch_val_y))
  });
  return cljs.core.reset_cache.call(null, self__.method_cache, self__.method_table, self__.cached_hierarchy, self__.hierarchy)
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_methods$arity$1 = function(mf) {
  var self__ = this;
  var mf__$1 = this;
  return cljs.core.deref.call(null, self__.method_table)
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_prefers$arity$1 = function(mf) {
  var self__ = this;
  var mf__$1 = this;
  return cljs.core.deref.call(null, self__.prefer_table)
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_dispatch$arity$2 = function(mf, args) {
  var self__ = this;
  var mf__$1 = this;
  return cljs.core.do_dispatch.call(null, mf__$1, self__.name, self__.dispatch_fn, args)
};
cljs.core.__GT_MultiFn = function __GT_MultiFn(name, dispatch_fn, default_dispatch_val, hierarchy, method_table, prefer_table, method_cache, cached_hierarchy) {
  return new cljs.core.MultiFn(name, dispatch_fn, default_dispatch_val, hierarchy, method_table, prefer_table, method_cache, cached_hierarchy)
};
cljs.core.MultiFn.prototype.call = function() {
  var G__529828__delegate = function(_, args) {
    var self = this;
    return cljs.core._dispatch.call(null, self, args)
  };
  var G__529828 = function(_, var_args) {
    var args = null;
    if(arguments.length > 1) {
      args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
    }
    return G__529828__delegate.call(this, _, args)
  };
  G__529828.cljs$lang$maxFixedArity = 1;
  G__529828.cljs$lang$applyTo = function(arglist__529829) {
    var _ = cljs.core.first(arglist__529829);
    var args = cljs.core.rest(arglist__529829);
    return G__529828__delegate(_, args)
  };
  G__529828.cljs$core$IFn$_invoke$arity$variadic = G__529828__delegate;
  return G__529828
}();
cljs.core.MultiFn.prototype.apply = function(_, args) {
  var self = this;
  return cljs.core._dispatch.call(null, self, args)
};
cljs.core.remove_all_methods = function remove_all_methods(multifn) {
  return cljs.core._reset.call(null, multifn)
};
cljs.core.remove_method = function remove_method(multifn, dispatch_val) {
  return cljs.core._remove_method.call(null, multifn, dispatch_val)
};
cljs.core.prefer_method = function prefer_method(multifn, dispatch_val_x, dispatch_val_y) {
  return cljs.core._prefer_method.call(null, multifn, dispatch_val_x, dispatch_val_y)
};
cljs.core.methods$ = function methods$(multifn) {
  return cljs.core._methods.call(null, multifn)
};
cljs.core.get_method = function get_method(multifn, dispatch_val) {
  return cljs.core._get_method.call(null, multifn, dispatch_val)
};
cljs.core.prefers = function prefers(multifn) {
  return cljs.core._prefers.call(null, multifn)
};
cljs.core.UUID = function(uuid) {
  this.uuid = uuid;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 2153775104
};
cljs.core.UUID.cljs$lang$type = true;
cljs.core.UUID.cljs$lang$ctorStr = "cljs.core/UUID";
cljs.core.UUID.cljs$lang$ctorPrWriter = function(this__3829__auto__, writer__3830__auto__, opt__3831__auto__) {
  return cljs.core._write.call(null, writer__3830__auto__, "cljs.core/UUID")
};
cljs.core.UUID.prototype.cljs$core$IHash$_hash$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return goog.string.hashCode(cljs.core.pr_str.call(null, this$__$1))
};
cljs.core.UUID.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(_, writer, ___$1) {
  var self__ = this;
  var ___$2 = this;
  return cljs.core._write.call(null, writer, [cljs.core.str('#uuid "'), cljs.core.str(self__.uuid), cljs.core.str('"')].join(""))
};
cljs.core.UUID.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(_, other) {
  var self__ = this;
  var ___$1 = this;
  return other instanceof cljs.core.UUID && self__.uuid === other.uuid
};
cljs.core.__GT_UUID = function __GT_UUID(uuid) {
  return new cljs.core.UUID(uuid)
};
cljs.core.ExceptionInfo = function(message, data, cause) {
  this.message = message;
  this.data = data;
  this.cause = cause
};
cljs.core.ExceptionInfo.cljs$lang$type = true;
cljs.core.ExceptionInfo.cljs$lang$ctorStr = "cljs.core/ExceptionInfo";
cljs.core.ExceptionInfo.cljs$lang$ctorPrWriter = function(this__3832__auto__, writer__3833__auto__, opts__3834__auto__) {
  return cljs.core._write.call(null, writer__3833__auto__, "cljs.core/ExceptionInfo")
};
cljs.core.__GT_ExceptionInfo = function __GT_ExceptionInfo(message, data, cause) {
  return new cljs.core.ExceptionInfo(message, data, cause)
};
cljs.core.ExceptionInfo.prototype = new Error;
cljs.core.ExceptionInfo.prototype.constructor = cljs.core.ExceptionInfo;
cljs.core.ex_info = function() {
  var ex_info = null;
  var ex_info__2 = function(msg, map) {
    return new cljs.core.ExceptionInfo(msg, map, null)
  };
  var ex_info__3 = function(msg, map, cause) {
    return new cljs.core.ExceptionInfo(msg, map, cause)
  };
  ex_info = function(msg, map, cause) {
    switch(arguments.length) {
      case 2:
        return ex_info__2.call(this, msg, map);
      case 3:
        return ex_info__3.call(this, msg, map, cause)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  ex_info.cljs$core$IFn$_invoke$arity$2 = ex_info__2;
  ex_info.cljs$core$IFn$_invoke$arity$3 = ex_info__3;
  return ex_info
}();
cljs.core.ex_data = function ex_data(ex) {
  if(ex instanceof cljs.core.ExceptionInfo) {
    return ex.data
  }else {
    return null
  }
};
cljs.core.ex_message = function ex_message(ex) {
  if(ex instanceof Error) {
    return ex.message
  }else {
    return null
  }
};
cljs.core.ex_cause = function ex_cause(ex) {
  if(ex instanceof cljs.core.ExceptionInfo) {
    return ex.cause
  }else {
    return null
  }
};
cljs.core.comparator = function comparator(pred) {
  return function(x, y) {
    if(cljs.core.truth_(pred.call(null, x, y))) {
      return-1
    }else {
      if(cljs.core.truth_(pred.call(null, y, x))) {
        return 1
      }else {
        if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          return 0
        }else {
          return null
        }
      }
    }
  }
};
cljs.core.special_symbol_QMARK_ = function special_symbol_QMARK_(x) {
  return cljs.core.contains_QMARK_.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 19, [new cljs.core.Symbol(null, "deftype*", "deftype*", -978581244, null), null, new cljs.core.Symbol(null, "new", "new", -1640422567, null), null, new cljs.core.Symbol(null, "quote", "quote", -1532577739, null), null, new cljs.core.Symbol(null, "&", "&", -1640531489, null), null, new cljs.core.Symbol(null, "set!", "set!", -1637004872, null), null, new cljs.core.Symbol(null, 
  "recur", "recur", -1532142362, null), null, new cljs.core.Symbol(null, ".", ".", -1640531481, null), null, new cljs.core.Symbol(null, "ns", "ns", -1640528002, null), null, new cljs.core.Symbol(null, "do", "do", -1640528316, null), null, new cljs.core.Symbol(null, "fn*", "fn*", -1640430053, null), null, new cljs.core.Symbol(null, "throw", "throw", -1530191713, null), null, new cljs.core.Symbol(null, "letfn*", "letfn*", 1548249632, null), null, new cljs.core.Symbol(null, "js*", "js*", -1640426054, 
  null), null, new cljs.core.Symbol(null, "defrecord*", "defrecord*", 774272013, null), null, new cljs.core.Symbol(null, "let*", "let*", -1637213400, null), null, new cljs.core.Symbol(null, "loop*", "loop*", -1537374273, null), null, new cljs.core.Symbol(null, "try", "try", -1640416396, null), null, new cljs.core.Symbol(null, "if", "if", -1640528170, null), null, new cljs.core.Symbol(null, "def", "def", -1640432194, null), null], null), null), x)
};
goog.provide("cljs_uuid.core");
goog.require("cljs.core");
goog.require("goog.string.StringBuffer");
cljs_uuid.core.make_random = function make_random() {
  var f = function f() {
    return cljs.core.rand_int.call(null, 16).toString(16)
  };
  var g = function g() {
    return(8 | 3 & cljs.core.rand_int.call(null, 15)).toString(16)
  };
  return new cljs.core.UUID((new goog.string.StringBuffer(f.call(null), f.call(null), f.call(null), f.call(null), f.call(null), f.call(null), f.call(null), f.call(null), "-", f.call(null), f.call(null), f.call(null), f.call(null), "-4", f.call(null), f.call(null), f.call(null), "-", g.call(null), f.call(null), f.call(null), f.call(null), "-", f.call(null), f.call(null), f.call(null), f.call(null), f.call(null), f.call(null), f.call(null), f.call(null), f.call(null), f.call(null), f.call(null), f.call(null))).toString())
};
cljs_uuid.core.make_v4 = cljs_uuid.core.make_random;
cljs_uuid.core.make_random_string = function make_random_string() {
  return cljs_uuid.core.make_random.call(null).uuid
};
goog.provide("chaperone.crossover.user");
goog.require("cljs.core");
goog.require("cljs_uuid.core");
goog.require("cljs_uuid.core");
chaperone.crossover.user.User = function(id, firstname, lastname, password, email, photo, last_logged_in, __meta, __extmap) {
  this.id = id;
  this.firstname = firstname;
  this.lastname = lastname;
  this.password = password;
  this.email = email;
  this.photo = photo;
  this.last_logged_in = last_logged_in;
  this.__meta = __meta;
  this.__extmap = __extmap;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 2229667594;
  if(arguments.length > 7) {
    this.__meta = __meta;
    this.__extmap = __extmap
  }else {
    this.__meta = null;
    this.__extmap = null
  }
};
chaperone.crossover.user.User.prototype.cljs$core$IHash$_hash$arity$1 = function(this__3842__auto__) {
  var self__ = this;
  var this__3842__auto____$1 = this;
  var h__3696__auto__ = self__.__hash;
  if(!(h__3696__auto__ == null)) {
    return h__3696__auto__
  }else {
    var h__3696__auto____$1 = cljs.core.hash_imap.call(null, this__3842__auto____$1);
    self__.__hash = h__3696__auto____$1;
    return h__3696__auto____$1
  }
};
chaperone.crossover.user.User.prototype.cljs$core$ILookup$_lookup$arity$2 = function(this__3847__auto__, k__3848__auto__) {
  var self__ = this;
  var this__3847__auto____$1 = this;
  return cljs.core._lookup.call(null, this__3847__auto____$1, k__3848__auto__, null)
};
chaperone.crossover.user.User.prototype.cljs$core$ILookup$_lookup$arity$3 = function(this__3849__auto__, k532207, else__3850__auto__) {
  var self__ = this;
  var this__3849__auto____$1 = this;
  if(cljs.core.keyword_identical_QMARK_.call(null, k532207, new cljs.core.Keyword(null, "id", "id", 1013907597))) {
    return self__.id
  }else {
    if(cljs.core.keyword_identical_QMARK_.call(null, k532207, new cljs.core.Keyword(null, "firstname", "firstname", 1147693229))) {
      return self__.firstname
    }else {
      if(cljs.core.keyword_identical_QMARK_.call(null, k532207, new cljs.core.Keyword(null, "lastname", "lastname", 3850225043))) {
        return self__.lastname
      }else {
        if(cljs.core.keyword_identical_QMARK_.call(null, k532207, new cljs.core.Keyword(null, "password", "password", 2230889997))) {
          return self__.password
        }else {
          if(cljs.core.keyword_identical_QMARK_.call(null, k532207, new cljs.core.Keyword(null, "email", "email", 1110523662))) {
            return self__.email
          }else {
            if(cljs.core.keyword_identical_QMARK_.call(null, k532207, new cljs.core.Keyword(null, "photo", "photo", 1120547236))) {
              return self__.photo
            }else {
              if(cljs.core.keyword_identical_QMARK_.call(null, k532207, new cljs.core.Keyword(null, "last-logged-in", "last-logged-in", 1486904907))) {
                return self__.last_logged_in
              }else {
                if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                  return cljs.core.get.call(null, self__.__extmap, k532207, else__3850__auto__)
                }else {
                  return null
                }
              }
            }
          }
        }
      }
    }
  }
};
chaperone.crossover.user.User.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(this__3854__auto__, k__3855__auto__, G__532206) {
  var self__ = this;
  var this__3854__auto____$1 = this;
  var pred__532209 = cljs.core.keyword_identical_QMARK_;
  var expr__532210 = k__3855__auto__;
  if(cljs.core.truth_(pred__532209.call(null, new cljs.core.Keyword(null, "id", "id", 1013907597), expr__532210))) {
    return new chaperone.crossover.user.User(G__532206, self__.firstname, self__.lastname, self__.password, self__.email, self__.photo, self__.last_logged_in, self__.__meta, self__.__extmap, null)
  }else {
    if(cljs.core.truth_(pred__532209.call(null, new cljs.core.Keyword(null, "firstname", "firstname", 1147693229), expr__532210))) {
      return new chaperone.crossover.user.User(self__.id, G__532206, self__.lastname, self__.password, self__.email, self__.photo, self__.last_logged_in, self__.__meta, self__.__extmap, null)
    }else {
      if(cljs.core.truth_(pred__532209.call(null, new cljs.core.Keyword(null, "lastname", "lastname", 3850225043), expr__532210))) {
        return new chaperone.crossover.user.User(self__.id, self__.firstname, G__532206, self__.password, self__.email, self__.photo, self__.last_logged_in, self__.__meta, self__.__extmap, null)
      }else {
        if(cljs.core.truth_(pred__532209.call(null, new cljs.core.Keyword(null, "password", "password", 2230889997), expr__532210))) {
          return new chaperone.crossover.user.User(self__.id, self__.firstname, self__.lastname, G__532206, self__.email, self__.photo, self__.last_logged_in, self__.__meta, self__.__extmap, null)
        }else {
          if(cljs.core.truth_(pred__532209.call(null, new cljs.core.Keyword(null, "email", "email", 1110523662), expr__532210))) {
            return new chaperone.crossover.user.User(self__.id, self__.firstname, self__.lastname, self__.password, G__532206, self__.photo, self__.last_logged_in, self__.__meta, self__.__extmap, null)
          }else {
            if(cljs.core.truth_(pred__532209.call(null, new cljs.core.Keyword(null, "photo", "photo", 1120547236), expr__532210))) {
              return new chaperone.crossover.user.User(self__.id, self__.firstname, self__.lastname, self__.password, self__.email, G__532206, self__.last_logged_in, self__.__meta, self__.__extmap, null)
            }else {
              if(cljs.core.truth_(pred__532209.call(null, new cljs.core.Keyword(null, "last-logged-in", "last-logged-in", 1486904907), expr__532210))) {
                return new chaperone.crossover.user.User(self__.id, self__.firstname, self__.lastname, self__.password, self__.email, self__.photo, G__532206, self__.__meta, self__.__extmap, null)
              }else {
                return new chaperone.crossover.user.User(self__.id, self__.firstname, self__.lastname, self__.password, self__.email, self__.photo, self__.last_logged_in, self__.__meta, cljs.core.assoc.call(null, self__.__extmap, k__3855__auto__, G__532206), null)
              }
            }
          }
        }
      }
    }
  }
};
chaperone.crossover.user.User.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(this__3861__auto__, writer__3862__auto__, opts__3863__auto__) {
  var self__ = this;
  var this__3861__auto____$1 = this;
  var pr_pair__3864__auto__ = function(keyval__3865__auto__) {
    return cljs.core.pr_sequential_writer.call(null, writer__3862__auto__, cljs.core.pr_writer, "", " ", "", opts__3863__auto__, keyval__3865__auto__)
  };
  return cljs.core.pr_sequential_writer.call(null, writer__3862__auto__, pr_pair__3864__auto__, "#chaperone.crossover.user.User{", ", ", "}", opts__3863__auto__, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 7, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "id", "id", 1013907597), self__.id], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
  [new cljs.core.Keyword(null, "firstname", "firstname", 1147693229), self__.firstname], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "lastname", "lastname", 3850225043), self__.lastname], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "password", "password", 2230889997), self__.password], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
  [new cljs.core.Keyword(null, "email", "email", 1110523662), self__.email], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "photo", "photo", 1120547236), self__.photo], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "last-logged-in", "last-logged-in", 1486904907), self__.last_logged_in], null)], null), self__.__extmap))
};
chaperone.crossover.user.User.prototype.cljs$core$ICollection$_conj$arity$2 = function(this__3852__auto__, entry__3853__auto__) {
  var self__ = this;
  var this__3852__auto____$1 = this;
  if(cljs.core.vector_QMARK_.call(null, entry__3853__auto__)) {
    return cljs.core._assoc.call(null, this__3852__auto____$1, cljs.core._nth.call(null, entry__3853__auto__, 0), cljs.core._nth.call(null, entry__3853__auto__, 1))
  }else {
    return cljs.core.reduce.call(null, cljs.core._conj, this__3852__auto____$1, entry__3853__auto__)
  }
};
chaperone.crossover.user.User.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this__3859__auto__) {
  var self__ = this;
  var this__3859__auto____$1 = this;
  return cljs.core.seq.call(null, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 7, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "id", "id", 1013907597), self__.id], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "firstname", "firstname", 1147693229), self__.firstname], null), new cljs.core.PersistentVector(null, 
  2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "lastname", "lastname", 3850225043), self__.lastname], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "password", "password", 2230889997), self__.password], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "email", "email", 1110523662), self__.email], null), new cljs.core.PersistentVector(null, 
  2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "photo", "photo", 1120547236), self__.photo], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "last-logged-in", "last-logged-in", 1486904907), self__.last_logged_in], null)], null), self__.__extmap))
};
chaperone.crossover.user.User.prototype.cljs$core$ICounted$_count$arity$1 = function(this__3851__auto__) {
  var self__ = this;
  var this__3851__auto____$1 = this;
  return 7 + cljs.core.count.call(null, self__.__extmap)
};
chaperone.crossover.user.User.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(this__3843__auto__, other__3844__auto__) {
  var self__ = this;
  var this__3843__auto____$1 = this;
  if(cljs.core.truth_(function() {
    var and__3273__auto__ = other__3844__auto__;
    if(cljs.core.truth_(and__3273__auto__)) {
      return this__3843__auto____$1.constructor === other__3844__auto__.constructor && cljs.core.equiv_map.call(null, this__3843__auto____$1, other__3844__auto__)
    }else {
      return and__3273__auto__
    }
  }())) {
    return true
  }else {
    return false
  }
};
chaperone.crossover.user.User.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(this__3846__auto__, G__532206) {
  var self__ = this;
  var this__3846__auto____$1 = this;
  return new chaperone.crossover.user.User(self__.id, self__.firstname, self__.lastname, self__.password, self__.email, self__.photo, self__.last_logged_in, G__532206, self__.__extmap, self__.__hash)
};
chaperone.crossover.user.User.prototype.cljs$core$IMeta$_meta$arity$1 = function(this__3845__auto__) {
  var self__ = this;
  var this__3845__auto____$1 = this;
  return self__.__meta
};
chaperone.crossover.user.User.prototype.cljs$core$IMap$_dissoc$arity$2 = function(this__3856__auto__, k__3857__auto__) {
  var self__ = this;
  var this__3856__auto____$1 = this;
  if(cljs.core.contains_QMARK_.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 7, [new cljs.core.Keyword(null, "last-logged-in", "last-logged-in", 1486904907), null, new cljs.core.Keyword(null, "photo", "photo", 1120547236), null, new cljs.core.Keyword(null, "email", "email", 1110523662), null, new cljs.core.Keyword(null, "firstname", "firstname", 1147693229), null, new cljs.core.Keyword(null, "lastname", "lastname", 3850225043), null, new cljs.core.Keyword(null, 
  "id", "id", 1013907597), null, new cljs.core.Keyword(null, "password", "password", 2230889997), null], null), null), k__3857__auto__)) {
    return cljs.core.dissoc.call(null, cljs.core.with_meta.call(null, cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, this__3856__auto____$1), self__.__meta), k__3857__auto__)
  }else {
    return new chaperone.crossover.user.User(self__.id, self__.firstname, self__.lastname, self__.password, self__.email, self__.photo, self__.last_logged_in, self__.__meta, cljs.core.not_empty.call(null, cljs.core.dissoc.call(null, self__.__extmap, k__3857__auto__)), null)
  }
};
chaperone.crossover.user.User.cljs$lang$type = true;
chaperone.crossover.user.User.cljs$lang$ctorPrSeq = function(this__3881__auto__) {
  return cljs.core._conj.call(null, cljs.core.List.EMPTY, "chaperone.crossover.user/User")
};
chaperone.crossover.user.User.cljs$lang$ctorPrWriter = function(this__3881__auto__, writer__3882__auto__) {
  return cljs.core._write.call(null, writer__3882__auto__, "chaperone.crossover.user/User")
};
chaperone.crossover.user.__GT_User = function __GT_User(id, firstname, lastname, password, email, photo, last_logged_in) {
  return new chaperone.crossover.user.User(id, firstname, lastname, password, email, photo, last_logged_in)
};
chaperone.crossover.user.map__GT_User = function map__GT_User(G__532208) {
  return new chaperone.crossover.user.User((new cljs.core.Keyword(null, "id", "id", 1013907597)).cljs$core$IFn$_invoke$arity$1(G__532208), (new cljs.core.Keyword(null, "firstname", "firstname", 1147693229)).cljs$core$IFn$_invoke$arity$1(G__532208), (new cljs.core.Keyword(null, "lastname", "lastname", 3850225043)).cljs$core$IFn$_invoke$arity$1(G__532208), (new cljs.core.Keyword(null, "password", "password", 2230889997)).cljs$core$IFn$_invoke$arity$1(G__532208), (new cljs.core.Keyword(null, "email", 
  "email", 1110523662)).cljs$core$IFn$_invoke$arity$1(G__532208), (new cljs.core.Keyword(null, "photo", "photo", 1120547236)).cljs$core$IFn$_invoke$arity$1(G__532208), (new cljs.core.Keyword(null, "last-logged-in", "last-logged-in", 1486904907)).cljs$core$IFn$_invoke$arity$1(G__532208), null, cljs.core.dissoc.call(null, G__532208, new cljs.core.Keyword(null, "id", "id", 1013907597), new cljs.core.Keyword(null, "firstname", "firstname", 1147693229), new cljs.core.Keyword(null, "lastname", "lastname", 
  3850225043), new cljs.core.Keyword(null, "password", "password", 2230889997), new cljs.core.Keyword(null, "email", "email", 1110523662), new cljs.core.Keyword(null, "photo", "photo", 1120547236), new cljs.core.Keyword(null, "last-logged-in", "last-logged-in", 1486904907)))
};
chaperone.crossover.user.new_user = function() {
  var new_user__delegate = function(firstname, lastname, email, password, p__532212) {
    var map__532214 = p__532212;
    var map__532214__$1 = cljs.core.seq_QMARK_.call(null, map__532214) ? cljs.core.apply.call(null, cljs.core.hash_map, map__532214) : map__532214;
    var last_logged_in = cljs.core.get.call(null, map__532214__$1, new cljs.core.Keyword(null, "last-logged-in", "last-logged-in", 1486904907));
    var photo = cljs.core.get.call(null, map__532214__$1, new cljs.core.Keyword(null, "photo", "photo", 1120547236));
    return chaperone.crossover.user.__GT_User.call(null, cljs_uuid.core.make_random_string.call(null), firstname, lastname, password, email, photo, last_logged_in)
  };
  var new_user = function(firstname, lastname, email, password, var_args) {
    var p__532212 = null;
    if(arguments.length > 4) {
      p__532212 = cljs.core.array_seq(Array.prototype.slice.call(arguments, 4), 0)
    }
    return new_user__delegate.call(this, firstname, lastname, email, password, p__532212)
  };
  new_user.cljs$lang$maxFixedArity = 4;
  new_user.cljs$lang$applyTo = function(arglist__532215) {
    var firstname = cljs.core.first(arglist__532215);
    arglist__532215 = cljs.core.next(arglist__532215);
    var lastname = cljs.core.first(arglist__532215);
    arglist__532215 = cljs.core.next(arglist__532215);
    var email = cljs.core.first(arglist__532215);
    arglist__532215 = cljs.core.next(arglist__532215);
    var password = cljs.core.first(arglist__532215);
    var p__532212 = cljs.core.rest(arglist__532215);
    return new_user__delegate(firstname, lastname, email, password, p__532212)
  };
  new_user.cljs$core$IFn$_invoke$arity$variadic = new_user__delegate;
  return new_user
}();
goog.provide("chaperone.crossover.rpc");
goog.require("cljs.core");
goog.require("cljs_uuid.core");
goog.require("cljs_uuid.core");
chaperone.crossover.rpc.Request = function(id, category, action, data, __meta, __extmap) {
  this.id = id;
  this.category = category;
  this.action = action;
  this.data = data;
  this.__meta = __meta;
  this.__extmap = __extmap;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 2229667594;
  if(arguments.length > 4) {
    this.__meta = __meta;
    this.__extmap = __extmap
  }else {
    this.__meta = null;
    this.__extmap = null
  }
};
chaperone.crossover.rpc.Request.prototype.cljs$core$IHash$_hash$arity$1 = function(this__3842__auto__) {
  var self__ = this;
  var this__3842__auto____$1 = this;
  var h__3696__auto__ = self__.__hash;
  if(!(h__3696__auto__ == null)) {
    return h__3696__auto__
  }else {
    var h__3696__auto____$1 = cljs.core.hash_imap.call(null, this__3842__auto____$1);
    self__.__hash = h__3696__auto____$1;
    return h__3696__auto____$1
  }
};
chaperone.crossover.rpc.Request.prototype.cljs$core$ILookup$_lookup$arity$2 = function(this__3847__auto__, k__3848__auto__) {
  var self__ = this;
  var this__3847__auto____$1 = this;
  return cljs.core._lookup.call(null, this__3847__auto____$1, k__3848__auto__, null)
};
chaperone.crossover.rpc.Request.prototype.cljs$core$ILookup$_lookup$arity$3 = function(this__3849__auto__, k531825, else__3850__auto__) {
  var self__ = this;
  var this__3849__auto____$1 = this;
  if(cljs.core.keyword_identical_QMARK_.call(null, k531825, new cljs.core.Keyword(null, "id", "id", 1013907597))) {
    return self__.id
  }else {
    if(cljs.core.keyword_identical_QMARK_.call(null, k531825, new cljs.core.Keyword(null, "category", "category", 1064415344))) {
      return self__.category
    }else {
      if(cljs.core.keyword_identical_QMARK_.call(null, k531825, new cljs.core.Keyword(null, "action", "action", 3885920680))) {
        return self__.action
      }else {
        if(cljs.core.keyword_identical_QMARK_.call(null, k531825, new cljs.core.Keyword(null, "data", "data", 1016980252))) {
          return self__.data
        }else {
          if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
            return cljs.core.get.call(null, self__.__extmap, k531825, else__3850__auto__)
          }else {
            return null
          }
        }
      }
    }
  }
};
chaperone.crossover.rpc.Request.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(this__3854__auto__, k__3855__auto__, G__531824) {
  var self__ = this;
  var this__3854__auto____$1 = this;
  var pred__531827 = cljs.core.keyword_identical_QMARK_;
  var expr__531828 = k__3855__auto__;
  if(cljs.core.truth_(pred__531827.call(null, new cljs.core.Keyword(null, "id", "id", 1013907597), expr__531828))) {
    return new chaperone.crossover.rpc.Request(G__531824, self__.category, self__.action, self__.data, self__.__meta, self__.__extmap, null)
  }else {
    if(cljs.core.truth_(pred__531827.call(null, new cljs.core.Keyword(null, "category", "category", 1064415344), expr__531828))) {
      return new chaperone.crossover.rpc.Request(self__.id, G__531824, self__.action, self__.data, self__.__meta, self__.__extmap, null)
    }else {
      if(cljs.core.truth_(pred__531827.call(null, new cljs.core.Keyword(null, "action", "action", 3885920680), expr__531828))) {
        return new chaperone.crossover.rpc.Request(self__.id, self__.category, G__531824, self__.data, self__.__meta, self__.__extmap, null)
      }else {
        if(cljs.core.truth_(pred__531827.call(null, new cljs.core.Keyword(null, "data", "data", 1016980252), expr__531828))) {
          return new chaperone.crossover.rpc.Request(self__.id, self__.category, self__.action, G__531824, self__.__meta, self__.__extmap, null)
        }else {
          return new chaperone.crossover.rpc.Request(self__.id, self__.category, self__.action, self__.data, self__.__meta, cljs.core.assoc.call(null, self__.__extmap, k__3855__auto__, G__531824), null)
        }
      }
    }
  }
};
chaperone.crossover.rpc.Request.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(this__3861__auto__, writer__3862__auto__, opts__3863__auto__) {
  var self__ = this;
  var this__3861__auto____$1 = this;
  var pr_pair__3864__auto__ = function(keyval__3865__auto__) {
    return cljs.core.pr_sequential_writer.call(null, writer__3862__auto__, cljs.core.pr_writer, "", " ", "", opts__3863__auto__, keyval__3865__auto__)
  };
  return cljs.core.pr_sequential_writer.call(null, writer__3862__auto__, pr_pair__3864__auto__, "#chaperone.crossover.rpc.Request{", ", ", "}", opts__3863__auto__, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "id", "id", 1013907597), self__.id], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
  [new cljs.core.Keyword(null, "category", "category", 1064415344), self__.category], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "action", "action", 3885920680), self__.action], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "data", "data", 1016980252), self__.data], null)], null), self__.__extmap))
};
chaperone.crossover.rpc.Request.prototype.cljs$core$ICollection$_conj$arity$2 = function(this__3852__auto__, entry__3853__auto__) {
  var self__ = this;
  var this__3852__auto____$1 = this;
  if(cljs.core.vector_QMARK_.call(null, entry__3853__auto__)) {
    return cljs.core._assoc.call(null, this__3852__auto____$1, cljs.core._nth.call(null, entry__3853__auto__, 0), cljs.core._nth.call(null, entry__3853__auto__, 1))
  }else {
    return cljs.core.reduce.call(null, cljs.core._conj, this__3852__auto____$1, entry__3853__auto__)
  }
};
chaperone.crossover.rpc.Request.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this__3859__auto__) {
  var self__ = this;
  var this__3859__auto____$1 = this;
  return cljs.core.seq.call(null, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "id", "id", 1013907597), self__.id], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "category", "category", 1064415344), self__.category], null), new cljs.core.PersistentVector(null, 
  2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "action", "action", 3885920680), self__.action], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "data", "data", 1016980252), self__.data], null)], null), self__.__extmap))
};
chaperone.crossover.rpc.Request.prototype.cljs$core$ICounted$_count$arity$1 = function(this__3851__auto__) {
  var self__ = this;
  var this__3851__auto____$1 = this;
  return 4 + cljs.core.count.call(null, self__.__extmap)
};
chaperone.crossover.rpc.Request.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(this__3843__auto__, other__3844__auto__) {
  var self__ = this;
  var this__3843__auto____$1 = this;
  if(cljs.core.truth_(function() {
    var and__3273__auto__ = other__3844__auto__;
    if(cljs.core.truth_(and__3273__auto__)) {
      return this__3843__auto____$1.constructor === other__3844__auto__.constructor && cljs.core.equiv_map.call(null, this__3843__auto____$1, other__3844__auto__)
    }else {
      return and__3273__auto__
    }
  }())) {
    return true
  }else {
    return false
  }
};
chaperone.crossover.rpc.Request.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(this__3846__auto__, G__531824) {
  var self__ = this;
  var this__3846__auto____$1 = this;
  return new chaperone.crossover.rpc.Request(self__.id, self__.category, self__.action, self__.data, G__531824, self__.__extmap, self__.__hash)
};
chaperone.crossover.rpc.Request.prototype.cljs$core$IMeta$_meta$arity$1 = function(this__3845__auto__) {
  var self__ = this;
  var this__3845__auto____$1 = this;
  return self__.__meta
};
chaperone.crossover.rpc.Request.prototype.cljs$core$IMap$_dissoc$arity$2 = function(this__3856__auto__, k__3857__auto__) {
  var self__ = this;
  var this__3856__auto____$1 = this;
  if(cljs.core.contains_QMARK_.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "data", "data", 1016980252), null, new cljs.core.Keyword(null, "action", "action", 3885920680), null, new cljs.core.Keyword(null, "id", "id", 1013907597), null, new cljs.core.Keyword(null, "category", "category", 1064415344), null], null), null), k__3857__auto__)) {
    return cljs.core.dissoc.call(null, cljs.core.with_meta.call(null, cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, this__3856__auto____$1), self__.__meta), k__3857__auto__)
  }else {
    return new chaperone.crossover.rpc.Request(self__.id, self__.category, self__.action, self__.data, self__.__meta, cljs.core.not_empty.call(null, cljs.core.dissoc.call(null, self__.__extmap, k__3857__auto__)), null)
  }
};
chaperone.crossover.rpc.Request.cljs$lang$type = true;
chaperone.crossover.rpc.Request.cljs$lang$ctorPrSeq = function(this__3881__auto__) {
  return cljs.core._conj.call(null, cljs.core.List.EMPTY, "chaperone.crossover.rpc/Request")
};
chaperone.crossover.rpc.Request.cljs$lang$ctorPrWriter = function(this__3881__auto__, writer__3882__auto__) {
  return cljs.core._write.call(null, writer__3882__auto__, "chaperone.crossover.rpc/Request")
};
chaperone.crossover.rpc.__GT_Request = function __GT_Request(id, category, action, data) {
  return new chaperone.crossover.rpc.Request(id, category, action, data)
};
chaperone.crossover.rpc.map__GT_Request = function map__GT_Request(G__531826) {
  return new chaperone.crossover.rpc.Request((new cljs.core.Keyword(null, "id", "id", 1013907597)).cljs$core$IFn$_invoke$arity$1(G__531826), (new cljs.core.Keyword(null, "category", "category", 1064415344)).cljs$core$IFn$_invoke$arity$1(G__531826), (new cljs.core.Keyword(null, "action", "action", 3885920680)).cljs$core$IFn$_invoke$arity$1(G__531826), (new cljs.core.Keyword(null, "data", "data", 1016980252)).cljs$core$IFn$_invoke$arity$1(G__531826), null, cljs.core.dissoc.call(null, G__531826, new cljs.core.Keyword(null, 
  "id", "id", 1013907597), new cljs.core.Keyword(null, "category", "category", 1064415344), new cljs.core.Keyword(null, "action", "action", 3885920680), new cljs.core.Keyword(null, "data", "data", 1016980252)))
};
chaperone.crossover.rpc.Response = function(request, data, __meta, __extmap) {
  this.request = request;
  this.data = data;
  this.__meta = __meta;
  this.__extmap = __extmap;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 2229667594;
  if(arguments.length > 2) {
    this.__meta = __meta;
    this.__extmap = __extmap
  }else {
    this.__meta = null;
    this.__extmap = null
  }
};
chaperone.crossover.rpc.Response.prototype.cljs$core$IHash$_hash$arity$1 = function(this__3842__auto__) {
  var self__ = this;
  var this__3842__auto____$1 = this;
  var h__3696__auto__ = self__.__hash;
  if(!(h__3696__auto__ == null)) {
    return h__3696__auto__
  }else {
    var h__3696__auto____$1 = cljs.core.hash_imap.call(null, this__3842__auto____$1);
    self__.__hash = h__3696__auto____$1;
    return h__3696__auto____$1
  }
};
chaperone.crossover.rpc.Response.prototype.cljs$core$ILookup$_lookup$arity$2 = function(this__3847__auto__, k__3848__auto__) {
  var self__ = this;
  var this__3847__auto____$1 = this;
  return cljs.core._lookup.call(null, this__3847__auto____$1, k__3848__auto__, null)
};
chaperone.crossover.rpc.Response.prototype.cljs$core$ILookup$_lookup$arity$3 = function(this__3849__auto__, k531831, else__3850__auto__) {
  var self__ = this;
  var this__3849__auto____$1 = this;
  if(cljs.core.keyword_identical_QMARK_.call(null, k531831, new cljs.core.Keyword(null, "request", "request", 2109597185))) {
    return self__.request
  }else {
    if(cljs.core.keyword_identical_QMARK_.call(null, k531831, new cljs.core.Keyword(null, "data", "data", 1016980252))) {
      return self__.data
    }else {
      if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        return cljs.core.get.call(null, self__.__extmap, k531831, else__3850__auto__)
      }else {
        return null
      }
    }
  }
};
chaperone.crossover.rpc.Response.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(this__3854__auto__, k__3855__auto__, G__531830) {
  var self__ = this;
  var this__3854__auto____$1 = this;
  var pred__531833 = cljs.core.keyword_identical_QMARK_;
  var expr__531834 = k__3855__auto__;
  if(cljs.core.truth_(pred__531833.call(null, new cljs.core.Keyword(null, "request", "request", 2109597185), expr__531834))) {
    return new chaperone.crossover.rpc.Response(G__531830, self__.data, self__.__meta, self__.__extmap, null)
  }else {
    if(cljs.core.truth_(pred__531833.call(null, new cljs.core.Keyword(null, "data", "data", 1016980252), expr__531834))) {
      return new chaperone.crossover.rpc.Response(self__.request, G__531830, self__.__meta, self__.__extmap, null)
    }else {
      return new chaperone.crossover.rpc.Response(self__.request, self__.data, self__.__meta, cljs.core.assoc.call(null, self__.__extmap, k__3855__auto__, G__531830), null)
    }
  }
};
chaperone.crossover.rpc.Response.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(this__3861__auto__, writer__3862__auto__, opts__3863__auto__) {
  var self__ = this;
  var this__3861__auto____$1 = this;
  var pr_pair__3864__auto__ = function(keyval__3865__auto__) {
    return cljs.core.pr_sequential_writer.call(null, writer__3862__auto__, cljs.core.pr_writer, "", " ", "", opts__3863__auto__, keyval__3865__auto__)
  };
  return cljs.core.pr_sequential_writer.call(null, writer__3862__auto__, pr_pair__3864__auto__, "#chaperone.crossover.rpc.Response{", ", ", "}", opts__3863__auto__, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "request", "request", 2109597185), self__.request], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
  [new cljs.core.Keyword(null, "data", "data", 1016980252), self__.data], null)], null), self__.__extmap))
};
chaperone.crossover.rpc.Response.prototype.cljs$core$ICollection$_conj$arity$2 = function(this__3852__auto__, entry__3853__auto__) {
  var self__ = this;
  var this__3852__auto____$1 = this;
  if(cljs.core.vector_QMARK_.call(null, entry__3853__auto__)) {
    return cljs.core._assoc.call(null, this__3852__auto____$1, cljs.core._nth.call(null, entry__3853__auto__, 0), cljs.core._nth.call(null, entry__3853__auto__, 1))
  }else {
    return cljs.core.reduce.call(null, cljs.core._conj, this__3852__auto____$1, entry__3853__auto__)
  }
};
chaperone.crossover.rpc.Response.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this__3859__auto__) {
  var self__ = this;
  var this__3859__auto____$1 = this;
  return cljs.core.seq.call(null, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "request", "request", 2109597185), self__.request], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "data", "data", 1016980252), self__.data], null)], null), self__.__extmap))
};
chaperone.crossover.rpc.Response.prototype.cljs$core$ICounted$_count$arity$1 = function(this__3851__auto__) {
  var self__ = this;
  var this__3851__auto____$1 = this;
  return 2 + cljs.core.count.call(null, self__.__extmap)
};
chaperone.crossover.rpc.Response.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(this__3843__auto__, other__3844__auto__) {
  var self__ = this;
  var this__3843__auto____$1 = this;
  if(cljs.core.truth_(function() {
    var and__3273__auto__ = other__3844__auto__;
    if(cljs.core.truth_(and__3273__auto__)) {
      return this__3843__auto____$1.constructor === other__3844__auto__.constructor && cljs.core.equiv_map.call(null, this__3843__auto____$1, other__3844__auto__)
    }else {
      return and__3273__auto__
    }
  }())) {
    return true
  }else {
    return false
  }
};
chaperone.crossover.rpc.Response.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(this__3846__auto__, G__531830) {
  var self__ = this;
  var this__3846__auto____$1 = this;
  return new chaperone.crossover.rpc.Response(self__.request, self__.data, G__531830, self__.__extmap, self__.__hash)
};
chaperone.crossover.rpc.Response.prototype.cljs$core$IMeta$_meta$arity$1 = function(this__3845__auto__) {
  var self__ = this;
  var this__3845__auto____$1 = this;
  return self__.__meta
};
chaperone.crossover.rpc.Response.prototype.cljs$core$IMap$_dissoc$arity$2 = function(this__3856__auto__, k__3857__auto__) {
  var self__ = this;
  var this__3856__auto____$1 = this;
  if(cljs.core.contains_QMARK_.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "data", "data", 1016980252), null, new cljs.core.Keyword(null, "request", "request", 2109597185), null], null), null), k__3857__auto__)) {
    return cljs.core.dissoc.call(null, cljs.core.with_meta.call(null, cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, this__3856__auto____$1), self__.__meta), k__3857__auto__)
  }else {
    return new chaperone.crossover.rpc.Response(self__.request, self__.data, self__.__meta, cljs.core.not_empty.call(null, cljs.core.dissoc.call(null, self__.__extmap, k__3857__auto__)), null)
  }
};
chaperone.crossover.rpc.Response.cljs$lang$type = true;
chaperone.crossover.rpc.Response.cljs$lang$ctorPrSeq = function(this__3881__auto__) {
  return cljs.core._conj.call(null, cljs.core.List.EMPTY, "chaperone.crossover.rpc/Response")
};
chaperone.crossover.rpc.Response.cljs$lang$ctorPrWriter = function(this__3881__auto__, writer__3882__auto__) {
  return cljs.core._write.call(null, writer__3882__auto__, "chaperone.crossover.rpc/Response")
};
chaperone.crossover.rpc.__GT_Response = function __GT_Response(request, data) {
  return new chaperone.crossover.rpc.Response(request, data)
};
chaperone.crossover.rpc.map__GT_Response = function map__GT_Response(G__531832) {
  return new chaperone.crossover.rpc.Response((new cljs.core.Keyword(null, "request", "request", 2109597185)).cljs$core$IFn$_invoke$arity$1(G__531832), (new cljs.core.Keyword(null, "data", "data", 1016980252)).cljs$core$IFn$_invoke$arity$1(G__531832), null, cljs.core.dissoc.call(null, G__531832, new cljs.core.Keyword(null, "request", "request", 2109597185), new cljs.core.Keyword(null, "data", "data", 1016980252)))
};
chaperone.crossover.rpc.new_request = function new_request(category, action, data) {
  return chaperone.crossover.rpc.__GT_Request.call(null, cljs_uuid.core.make_random.call(null), category, action, data)
};
chaperone.crossover.rpc.new_response = function new_response(request, data) {
  return chaperone.crossover.rpc.__GT_Response.call(null, request, data)
};
chaperone.crossover.rpc.edn_readers = function edn_readers() {
  return new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Symbol(null, "chaperone.crossover.rpc.Request", "chaperone.crossover.rpc.Request", -174529060, null), chaperone.crossover.rpc.map__GT_Request, new cljs.core.Symbol(null, "chaperone.crossover.rpc.Response", "chaperone.crossover.rpc.Response", 908805862, null), chaperone.crossover.rpc.map__GT_Response], null)
};
goog.provide("cljs.reader");
goog.require("cljs.core");
goog.require("goog.string");
goog.require("goog.string");
cljs.reader.PushbackReader = function() {
  var obj531837 = {};
  return obj531837
}();
cljs.reader.read_char = function read_char(reader) {
  if(function() {
    var and__3273__auto__ = reader;
    if(and__3273__auto__) {
      return reader.cljs$reader$PushbackReader$read_char$arity$1
    }else {
      return and__3273__auto__
    }
  }()) {
    return reader.cljs$reader$PushbackReader$read_char$arity$1(reader)
  }else {
    var x__3888__auto__ = reader == null ? null : reader;
    return function() {
      var or__3285__auto__ = cljs.reader.read_char[goog.typeOf(x__3888__auto__)];
      if(or__3285__auto__) {
        return or__3285__auto__
      }else {
        var or__3285__auto____$1 = cljs.reader.read_char["_"];
        if(or__3285__auto____$1) {
          return or__3285__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "PushbackReader.read-char", reader);
        }
      }
    }().call(null, reader)
  }
};
cljs.reader.unread = function unread(reader, ch) {
  if(function() {
    var and__3273__auto__ = reader;
    if(and__3273__auto__) {
      return reader.cljs$reader$PushbackReader$unread$arity$2
    }else {
      return and__3273__auto__
    }
  }()) {
    return reader.cljs$reader$PushbackReader$unread$arity$2(reader, ch)
  }else {
    var x__3888__auto__ = reader == null ? null : reader;
    return function() {
      var or__3285__auto__ = cljs.reader.unread[goog.typeOf(x__3888__auto__)];
      if(or__3285__auto__) {
        return or__3285__auto__
      }else {
        var or__3285__auto____$1 = cljs.reader.unread["_"];
        if(or__3285__auto____$1) {
          return or__3285__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "PushbackReader.unread", reader);
        }
      }
    }().call(null, reader, ch)
  }
};
cljs.reader.StringPushbackReader = function(s, buffer, idx) {
  this.s = s;
  this.buffer = buffer;
  this.idx = idx
};
cljs.reader.StringPushbackReader.cljs$lang$type = true;
cljs.reader.StringPushbackReader.cljs$lang$ctorStr = "cljs.reader/StringPushbackReader";
cljs.reader.StringPushbackReader.cljs$lang$ctorPrWriter = function(this__3829__auto__, writer__3830__auto__, opt__3831__auto__) {
  return cljs.core._write.call(null, writer__3830__auto__, "cljs.reader/StringPushbackReader")
};
cljs.reader.StringPushbackReader.prototype.cljs$reader$PushbackReader$ = true;
cljs.reader.StringPushbackReader.prototype.cljs$reader$PushbackReader$read_char$arity$1 = function(reader) {
  var self__ = this;
  var reader__$1 = this;
  if(self__.buffer.length === 0) {
    self__.idx = self__.idx + 1;
    return self__.s[self__.idx]
  }else {
    return self__.buffer.pop()
  }
};
cljs.reader.StringPushbackReader.prototype.cljs$reader$PushbackReader$unread$arity$2 = function(reader, ch) {
  var self__ = this;
  var reader__$1 = this;
  return self__.buffer.push(ch)
};
cljs.reader.__GT_StringPushbackReader = function __GT_StringPushbackReader(s, buffer, idx) {
  return new cljs.reader.StringPushbackReader(s, buffer, idx)
};
cljs.reader.push_back_reader = function push_back_reader(s) {
  return new cljs.reader.StringPushbackReader(s, [], -1)
};
cljs.reader.whitespace_QMARK_ = function whitespace_QMARK_(ch) {
  var or__3285__auto__ = goog.string.isBreakingWhitespace(ch);
  if(cljs.core.truth_(or__3285__auto__)) {
    return or__3285__auto__
  }else {
    return"," === ch
  }
};
cljs.reader.numeric_QMARK_ = function numeric_QMARK_(ch) {
  return goog.string.isNumeric(ch)
};
cljs.reader.comment_prefix_QMARK_ = function comment_prefix_QMARK_(ch) {
  return";" === ch
};
cljs.reader.number_literal_QMARK_ = function number_literal_QMARK_(reader, initch) {
  return cljs.reader.numeric_QMARK_.call(null, initch) || ("+" === initch || "-" === initch) && cljs.reader.numeric_QMARK_.call(null, function() {
    var next_ch = cljs.reader.read_char.call(null, reader);
    cljs.reader.unread.call(null, reader, next_ch);
    return next_ch
  }())
};
cljs.reader.reader_error = function() {
  var reader_error__delegate = function(rdr, msg) {
    throw new Error(cljs.core.apply.call(null, cljs.core.str, msg));
  };
  var reader_error = function(rdr, var_args) {
    var msg = null;
    if(arguments.length > 1) {
      msg = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
    }
    return reader_error__delegate.call(this, rdr, msg)
  };
  reader_error.cljs$lang$maxFixedArity = 1;
  reader_error.cljs$lang$applyTo = function(arglist__531838) {
    var rdr = cljs.core.first(arglist__531838);
    var msg = cljs.core.rest(arglist__531838);
    return reader_error__delegate(rdr, msg)
  };
  reader_error.cljs$core$IFn$_invoke$arity$variadic = reader_error__delegate;
  return reader_error
}();
cljs.reader.macro_terminating_QMARK_ = function macro_terminating_QMARK_(ch) {
  var and__3273__auto__ = !(ch === "#");
  if(and__3273__auto__) {
    var and__3273__auto____$1 = !(ch === "'");
    if(and__3273__auto____$1) {
      var and__3273__auto____$2 = !(ch === ":");
      if(and__3273__auto____$2) {
        return cljs.reader.macros.call(null, ch)
      }else {
        return and__3273__auto____$2
      }
    }else {
      return and__3273__auto____$1
    }
  }else {
    return and__3273__auto__
  }
};
cljs.reader.read_token = function read_token(rdr, initch) {
  var sb = new goog.string.StringBuffer(initch);
  var ch = cljs.reader.read_char.call(null, rdr);
  while(true) {
    if(ch == null || cljs.reader.whitespace_QMARK_.call(null, ch) || cljs.reader.macro_terminating_QMARK_.call(null, ch)) {
      cljs.reader.unread.call(null, rdr, ch);
      return sb.toString()
    }else {
      var G__531839 = function() {
        sb.append(ch);
        return sb
      }();
      var G__531840 = cljs.reader.read_char.call(null, rdr);
      sb = G__531839;
      ch = G__531840;
      continue
    }
    break
  }
};
cljs.reader.skip_line = function skip_line(reader, _) {
  while(true) {
    var ch = cljs.reader.read_char.call(null, reader);
    if(ch === "\n" || ch === "\r" || ch == null) {
      return reader
    }else {
      continue
    }
    break
  }
};
cljs.reader.int_pattern = cljs.core.re_pattern.call(null, "([-+]?)(?:(0)|([1-9][0-9]*)|0[xX]([0-9A-Fa-f]+)|0([0-7]+)|([1-9][0-9]?)[rR]([0-9A-Za-z]+)|0[0-9]+)(N)?");
cljs.reader.ratio_pattern = cljs.core.re_pattern.call(null, "([-+]?[0-9]+)/([0-9]+)");
cljs.reader.float_pattern = cljs.core.re_pattern.call(null, "([-+]?[0-9]+(\\.[0-9]*)?([eE][-+]?[0-9]+)?)(M)?");
cljs.reader.symbol_pattern = cljs.core.re_pattern.call(null, "[:]?([^0-9/].*/)?([^0-9/][^/]*)");
cljs.reader.re_find_STAR_ = function re_find_STAR_(re, s) {
  var matches = re.exec(s);
  if(matches == null) {
    return null
  }else {
    if(matches.length === 1) {
      return matches[0]
    }else {
      return matches
    }
  }
};
cljs.reader.match_int = function match_int(s) {
  var groups = cljs.reader.re_find_STAR_.call(null, cljs.reader.int_pattern, s);
  var group3 = groups[2];
  if(!(group3 == null || group3.length < 1)) {
    return 0
  }else {
    var negate = "-" === groups[1] ? -1 : 1;
    var a = cljs.core.truth_(groups[3]) ? [groups[3], 10] : cljs.core.truth_(groups[4]) ? [groups[4], 16] : cljs.core.truth_(groups[5]) ? [groups[5], 8] : cljs.core.truth_(groups[7]) ? [groups[7], parseInt(groups[7])] : new cljs.core.Keyword(null, "default", "default", 2558708147) ? [null, null] : null;
    var n = a[0];
    var radix = a[1];
    if(n == null) {
      return null
    }else {
      return negate * parseInt(n, radix)
    }
  }
};
cljs.reader.match_ratio = function match_ratio(s) {
  var groups = cljs.reader.re_find_STAR_.call(null, cljs.reader.ratio_pattern, s);
  var numinator = groups[1];
  var denominator = groups[2];
  return parseInt(numinator) / parseInt(denominator)
};
cljs.reader.match_float = function match_float(s) {
  return parseFloat(s)
};
cljs.reader.re_matches_STAR_ = function re_matches_STAR_(re, s) {
  var matches = re.exec(s);
  if(!(matches == null) && matches[0] === s) {
    if(matches.length === 1) {
      return matches[0]
    }else {
      return matches
    }
  }else {
    return null
  }
};
cljs.reader.match_number = function match_number(s) {
  if(cljs.core.truth_(cljs.reader.re_matches_STAR_.call(null, cljs.reader.int_pattern, s))) {
    return cljs.reader.match_int.call(null, s)
  }else {
    if(cljs.core.truth_(cljs.reader.re_matches_STAR_.call(null, cljs.reader.ratio_pattern, s))) {
      return cljs.reader.match_ratio.call(null, s)
    }else {
      if(cljs.core.truth_(cljs.reader.re_matches_STAR_.call(null, cljs.reader.float_pattern, s))) {
        return cljs.reader.match_float.call(null, s)
      }else {
        return null
      }
    }
  }
};
cljs.reader.escape_char_map = function escape_char_map(c) {
  if(c === "t") {
    return"\t"
  }else {
    if(c === "r") {
      return"\r"
    }else {
      if(c === "n") {
        return"\n"
      }else {
        if(c === "\\") {
          return"\\"
        }else {
          if(c === '"') {
            return'"'
          }else {
            if(c === "b") {
              return"\u0008"
            }else {
              if(c === "f") {
                return"\u000c"
              }else {
                if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                  return null
                }else {
                  return null
                }
              }
            }
          }
        }
      }
    }
  }
};
cljs.reader.read_2_chars = function read_2_chars(reader) {
  return(new goog.string.StringBuffer(cljs.reader.read_char.call(null, reader), cljs.reader.read_char.call(null, reader))).toString()
};
cljs.reader.read_4_chars = function read_4_chars(reader) {
  return(new goog.string.StringBuffer(cljs.reader.read_char.call(null, reader), cljs.reader.read_char.call(null, reader), cljs.reader.read_char.call(null, reader), cljs.reader.read_char.call(null, reader))).toString()
};
cljs.reader.unicode_2_pattern = cljs.core.re_pattern.call(null, "[0-9A-Fa-f]{2}");
cljs.reader.unicode_4_pattern = cljs.core.re_pattern.call(null, "[0-9A-Fa-f]{4}");
cljs.reader.validate_unicode_escape = function validate_unicode_escape(unicode_pattern, reader, escape_char, unicode_str) {
  if(cljs.core.truth_(cljs.core.re_matches.call(null, unicode_pattern, unicode_str))) {
    return unicode_str
  }else {
    return cljs.reader.reader_error.call(null, reader, "Unexpected unicode escape \\", escape_char, unicode_str)
  }
};
cljs.reader.make_unicode_char = function make_unicode_char(code_str) {
  var code = parseInt(code_str, 16);
  return String.fromCharCode(code)
};
cljs.reader.escape_char = function escape_char(buffer, reader) {
  var ch = cljs.reader.read_char.call(null, reader);
  var mapresult = cljs.reader.escape_char_map.call(null, ch);
  if(cljs.core.truth_(mapresult)) {
    return mapresult
  }else {
    if(ch === "x") {
      return cljs.reader.make_unicode_char.call(null, cljs.reader.validate_unicode_escape.call(null, cljs.reader.unicode_2_pattern, reader, ch, cljs.reader.read_2_chars.call(null, reader)))
    }else {
      if(ch === "u") {
        return cljs.reader.make_unicode_char.call(null, cljs.reader.validate_unicode_escape.call(null, cljs.reader.unicode_4_pattern, reader, ch, cljs.reader.read_4_chars.call(null, reader)))
      }else {
        if(cljs.reader.numeric_QMARK_.call(null, ch)) {
          return String.fromCharCode(ch)
        }else {
          if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
            return cljs.reader.reader_error.call(null, reader, "Unexpected unicode escape \\", ch)
          }else {
            return null
          }
        }
      }
    }
  }
};
cljs.reader.read_past = function read_past(pred, rdr) {
  var ch = cljs.reader.read_char.call(null, rdr);
  while(true) {
    if(cljs.core.truth_(pred.call(null, ch))) {
      var G__531841 = cljs.reader.read_char.call(null, rdr);
      ch = G__531841;
      continue
    }else {
      return ch
    }
    break
  }
};
cljs.reader.read_delimited_list = function read_delimited_list(delim, rdr, recursive_QMARK_) {
  var a = cljs.core.transient$.call(null, cljs.core.PersistentVector.EMPTY);
  while(true) {
    var ch = cljs.reader.read_past.call(null, cljs.reader.whitespace_QMARK_, rdr);
    if(cljs.core.truth_(ch)) {
    }else {
      cljs.reader.reader_error.call(null, rdr, "EOF while reading")
    }
    if(delim === ch) {
      return cljs.core.persistent_BANG_.call(null, a)
    }else {
      var temp__4090__auto__ = cljs.reader.macros.call(null, ch);
      if(cljs.core.truth_(temp__4090__auto__)) {
        var macrofn = temp__4090__auto__;
        var mret = macrofn.call(null, rdr, ch);
        var G__531842 = mret === rdr ? a : cljs.core.conj_BANG_.call(null, a, mret);
        a = G__531842;
        continue
      }else {
        cljs.reader.unread.call(null, rdr, ch);
        var o = cljs.reader.read.call(null, rdr, true, null, recursive_QMARK_);
        var G__531843 = o === rdr ? a : cljs.core.conj_BANG_.call(null, a, o);
        a = G__531843;
        continue
      }
    }
    break
  }
};
cljs.reader.not_implemented = function not_implemented(rdr, ch) {
  return cljs.reader.reader_error.call(null, rdr, "Reader for ", ch, " not implemented yet")
};
cljs.reader.read_dispatch = function read_dispatch(rdr, _) {
  var ch = cljs.reader.read_char.call(null, rdr);
  var dm = cljs.reader.dispatch_macros.call(null, ch);
  if(cljs.core.truth_(dm)) {
    return dm.call(null, rdr, _)
  }else {
    var temp__4090__auto__ = cljs.reader.maybe_read_tagged_type.call(null, rdr, ch);
    if(cljs.core.truth_(temp__4090__auto__)) {
      var obj = temp__4090__auto__;
      return obj
    }else {
      return cljs.reader.reader_error.call(null, rdr, "No dispatch macro for ", ch)
    }
  }
};
cljs.reader.read_unmatched_delimiter = function read_unmatched_delimiter(rdr, ch) {
  return cljs.reader.reader_error.call(null, rdr, "Unmached delimiter ", ch)
};
cljs.reader.read_list = function read_list(rdr, _) {
  return cljs.core.apply.call(null, cljs.core.list, cljs.reader.read_delimited_list.call(null, ")", rdr, true))
};
cljs.reader.read_comment = cljs.reader.skip_line;
cljs.reader.read_vector = function read_vector(rdr, _) {
  return cljs.reader.read_delimited_list.call(null, "]", rdr, true)
};
cljs.reader.read_map = function read_map(rdr, _) {
  var l = cljs.reader.read_delimited_list.call(null, "}", rdr, true);
  if(cljs.core.odd_QMARK_.call(null, cljs.core.count.call(null, l))) {
    cljs.reader.reader_error.call(null, rdr, "Map literal must contain an even number of forms")
  }else {
  }
  return cljs.core.apply.call(null, cljs.core.hash_map, l)
};
cljs.reader.read_number = function read_number(reader, initch) {
  var buffer = new goog.string.StringBuffer(initch);
  var ch = cljs.reader.read_char.call(null, reader);
  while(true) {
    if(cljs.core.truth_(function() {
      var or__3285__auto__ = ch == null;
      if(or__3285__auto__) {
        return or__3285__auto__
      }else {
        var or__3285__auto____$1 = cljs.reader.whitespace_QMARK_.call(null, ch);
        if(or__3285__auto____$1) {
          return or__3285__auto____$1
        }else {
          return cljs.reader.macros.call(null, ch)
        }
      }
    }())) {
      cljs.reader.unread.call(null, reader, ch);
      var s = buffer.toString();
      var or__3285__auto__ = cljs.reader.match_number.call(null, s);
      if(cljs.core.truth_(or__3285__auto__)) {
        return or__3285__auto__
      }else {
        return cljs.reader.reader_error.call(null, reader, "Invalid number format [", s, "]")
      }
    }else {
      var G__531844 = function() {
        buffer.append(ch);
        return buffer
      }();
      var G__531845 = cljs.reader.read_char.call(null, reader);
      buffer = G__531844;
      ch = G__531845;
      continue
    }
    break
  }
};
cljs.reader.read_string_STAR_ = function read_string_STAR_(reader, _) {
  var buffer = new goog.string.StringBuffer;
  var ch = cljs.reader.read_char.call(null, reader);
  while(true) {
    if(ch == null) {
      return cljs.reader.reader_error.call(null, reader, "EOF while reading")
    }else {
      if("\\" === ch) {
        var G__531846 = function() {
          buffer.append(cljs.reader.escape_char.call(null, buffer, reader));
          return buffer
        }();
        var G__531847 = cljs.reader.read_char.call(null, reader);
        buffer = G__531846;
        ch = G__531847;
        continue
      }else {
        if('"' === ch) {
          return buffer.toString()
        }else {
          if(new cljs.core.Keyword(null, "default", "default", 2558708147)) {
            var G__531848 = function() {
              buffer.append(ch);
              return buffer
            }();
            var G__531849 = cljs.reader.read_char.call(null, reader);
            buffer = G__531848;
            ch = G__531849;
            continue
          }else {
            return null
          }
        }
      }
    }
    break
  }
};
cljs.reader.special_symbols = function special_symbols(t, not_found) {
  if(t === "nil") {
    return null
  }else {
    if(t === "true") {
      return true
    }else {
      if(t === "false") {
        return false
      }else {
        if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          return not_found
        }else {
          return null
        }
      }
    }
  }
};
cljs.reader.read_symbol = function read_symbol(reader, initch) {
  var token = cljs.reader.read_token.call(null, reader, initch);
  if(cljs.core.truth_(goog.string.contains(token, "/"))) {
    return cljs.core.symbol.call(null, cljs.core.subs.call(null, token, 0, token.indexOf("/")), cljs.core.subs.call(null, token, token.indexOf("/") + 1, token.length))
  }else {
    return cljs.reader.special_symbols.call(null, token, cljs.core.symbol.call(null, token))
  }
};
cljs.reader.read_keyword = function read_keyword(reader, initch) {
  var token = cljs.reader.read_token.call(null, reader, cljs.reader.read_char.call(null, reader));
  var a = cljs.reader.re_matches_STAR_.call(null, cljs.reader.symbol_pattern, token);
  var token__$1 = a[0];
  var ns = a[1];
  var name = a[2];
  if(!(void 0 === ns) && ns.substring(ns.length - 2, ns.length) === ":/" || name[name.length - 1] === ":" || !(token__$1.indexOf("::", 1) === -1)) {
    return cljs.reader.reader_error.call(null, reader, "Invalid token: ", token__$1)
  }else {
    if(!(ns == null) && ns.length > 0) {
      return cljs.core.keyword.call(null, ns.substring(0, ns.indexOf("/")), name)
    }else {
      return cljs.core.keyword.call(null, token__$1)
    }
  }
};
cljs.reader.desugar_meta = function desugar_meta(f) {
  if(f instanceof cljs.core.Symbol) {
    return new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "tag", "tag", 1014018828), f], null)
  }else {
    if(typeof f === "string") {
      return new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "tag", "tag", 1014018828), f], null)
    }else {
      if(f instanceof cljs.core.Keyword) {
        return new cljs.core.PersistentArrayMap.fromArray([f, true], true, false)
      }else {
        if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          return f
        }else {
          return null
        }
      }
    }
  }
};
cljs.reader.wrapping_reader = function wrapping_reader(sym) {
  return function(rdr, _) {
    return cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.reader.read.call(null, rdr, true, null, true)), sym)
  }
};
cljs.reader.throwing_reader = function throwing_reader(msg) {
  return function(rdr, _) {
    return cljs.reader.reader_error.call(null, rdr, msg)
  }
};
cljs.reader.read_meta = function read_meta(rdr, _) {
  var m = cljs.reader.desugar_meta.call(null, cljs.reader.read.call(null, rdr, true, null, true));
  if(cljs.core.map_QMARK_.call(null, m)) {
  }else {
    cljs.reader.reader_error.call(null, rdr, "Metadata must be Symbol,Keyword,String or Map")
  }
  var o = cljs.reader.read.call(null, rdr, true, null, true);
  if(function() {
    var G__531851 = o;
    if(G__531851) {
      var bit__3911__auto__ = G__531851.cljs$lang$protocol_mask$partition0$ & 262144;
      if(bit__3911__auto__ || G__531851.cljs$core$IWithMeta$) {
        return true
      }else {
        if(!G__531851.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IWithMeta, G__531851)
        }else {
          return false
        }
      }
    }else {
      return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IWithMeta, G__531851)
    }
  }()) {
    return cljs.core.with_meta.call(null, o, cljs.core.merge.call(null, cljs.core.meta.call(null, o), m))
  }else {
    return cljs.reader.reader_error.call(null, rdr, "Metadata can only be applied to IWithMetas")
  }
};
cljs.reader.read_set = function read_set(rdr, _) {
  return cljs.core.set.call(null, cljs.reader.read_delimited_list.call(null, "}", rdr, true))
};
cljs.reader.read_regex = function read_regex(rdr, ch) {
  return cljs.core.re_pattern.call(null, cljs.reader.read_string_STAR_.call(null, rdr, ch))
};
cljs.reader.read_discard = function read_discard(rdr, _) {
  cljs.reader.read.call(null, rdr, true, null, true);
  return rdr
};
cljs.reader.macros = function macros(c) {
  if(c === '"') {
    return cljs.reader.read_string_STAR_
  }else {
    if(c === ":") {
      return cljs.reader.read_keyword
    }else {
      if(c === ";") {
        return cljs.reader.not_implemented
      }else {
        if(c === "'") {
          return cljs.reader.wrapping_reader.call(null, new cljs.core.Symbol(null, "quote", "quote", -1532577739, null))
        }else {
          if(c === "@") {
            return cljs.reader.wrapping_reader.call(null, new cljs.core.Symbol(null, "deref", "deref", -1545057749, null))
          }else {
            if(c === "^") {
              return cljs.reader.read_meta
            }else {
              if(c === "`") {
                return cljs.reader.not_implemented
              }else {
                if(c === "~") {
                  return cljs.reader.not_implemented
                }else {
                  if(c === "(") {
                    return cljs.reader.read_list
                  }else {
                    if(c === ")") {
                      return cljs.reader.read_unmatched_delimiter
                    }else {
                      if(c === "[") {
                        return cljs.reader.read_vector
                      }else {
                        if(c === "]") {
                          return cljs.reader.read_unmatched_delimiter
                        }else {
                          if(c === "{") {
                            return cljs.reader.read_map
                          }else {
                            if(c === "}") {
                              return cljs.reader.read_unmatched_delimiter
                            }else {
                              if(c === "\\") {
                                return cljs.reader.read_char
                              }else {
                                if(c === "#") {
                                  return cljs.reader.read_dispatch
                                }else {
                                  if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                                    return null
                                  }else {
                                    return null
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
};
cljs.reader.dispatch_macros = function dispatch_macros(s) {
  if(s === "{") {
    return cljs.reader.read_set
  }else {
    if(s === "<") {
      return cljs.reader.throwing_reader.call(null, "Unreadable form")
    }else {
      if(s === '"') {
        return cljs.reader.read_regex
      }else {
        if(s === "!") {
          return cljs.reader.read_comment
        }else {
          if(s === "_") {
            return cljs.reader.read_discard
          }else {
            if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
              return null
            }else {
              return null
            }
          }
        }
      }
    }
  }
};
cljs.reader.read = function read(reader, eof_is_error, sentinel, is_recursive) {
  while(true) {
    var ch = cljs.reader.read_char.call(null, reader);
    if(ch == null) {
      if(cljs.core.truth_(eof_is_error)) {
        return cljs.reader.reader_error.call(null, reader, "EOF while reading")
      }else {
        return sentinel
      }
    }else {
      if(cljs.reader.whitespace_QMARK_.call(null, ch)) {
        var G__531852 = reader;
        var G__531853 = eof_is_error;
        var G__531854 = sentinel;
        var G__531855 = is_recursive;
        reader = G__531852;
        eof_is_error = G__531853;
        sentinel = G__531854;
        is_recursive = G__531855;
        continue
      }else {
        if(cljs.reader.comment_prefix_QMARK_.call(null, ch)) {
          var G__531856 = cljs.reader.read_comment.call(null, reader, ch);
          var G__531857 = eof_is_error;
          var G__531858 = sentinel;
          var G__531859 = is_recursive;
          reader = G__531856;
          eof_is_error = G__531857;
          sentinel = G__531858;
          is_recursive = G__531859;
          continue
        }else {
          if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
            var f = cljs.reader.macros.call(null, ch);
            var res = cljs.core.truth_(f) ? f.call(null, reader, ch) : cljs.reader.number_literal_QMARK_.call(null, reader, ch) ? cljs.reader.read_number.call(null, reader, ch) : new cljs.core.Keyword(null, "else", "else", 1017020587) ? cljs.reader.read_symbol.call(null, reader, ch) : null;
            if(res === reader) {
              var G__531860 = reader;
              var G__531861 = eof_is_error;
              var G__531862 = sentinel;
              var G__531863 = is_recursive;
              reader = G__531860;
              eof_is_error = G__531861;
              sentinel = G__531862;
              is_recursive = G__531863;
              continue
            }else {
              return res
            }
          }else {
            return null
          }
        }
      }
    }
    break
  }
};
cljs.reader.read_string = function read_string(s) {
  var r = cljs.reader.push_back_reader.call(null, s);
  return cljs.reader.read.call(null, r, true, null, false)
};
cljs.reader.zero_fill_right_and_truncate = function zero_fill_right_and_truncate(s, width) {
  if(cljs.core._EQ_.call(null, width, cljs.core.count.call(null, s))) {
    return s
  }else {
    if(width < cljs.core.count.call(null, s)) {
      return cljs.core.subs.call(null, s, 0, width)
    }else {
      if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        var b = new goog.string.StringBuffer(s);
        while(true) {
          if(b.getLength() < width) {
            var G__531864 = b.append("0");
            b = G__531864;
            continue
          }else {
            return b.toString()
          }
          break
        }
      }else {
        return null
      }
    }
  }
};
cljs.reader.divisible_QMARK_ = function divisible_QMARK_(num, div) {
  return cljs.core.mod.call(null, num, div) === 0
};
cljs.reader.indivisible_QMARK_ = function indivisible_QMARK_(num, div) {
  return!cljs.reader.divisible_QMARK_.call(null, num, div)
};
cljs.reader.leap_year_QMARK_ = function leap_year_QMARK_(year) {
  return cljs.reader.divisible_QMARK_.call(null, year, 4) && (cljs.reader.indivisible_QMARK_.call(null, year, 100) || cljs.reader.divisible_QMARK_.call(null, year, 400))
};
cljs.reader.days_in_month = function() {
  var dim_norm = new cljs.core.PersistentVector(null, 13, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, 31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31], null);
  var dim_leap = new cljs.core.PersistentVector(null, 13, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, 31, 29, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31], null);
  return function(month, leap_year_QMARK_) {
    return cljs.core.get.call(null, cljs.core.truth_(leap_year_QMARK_) ? dim_leap : dim_norm, month)
  }
}();
cljs.reader.timestamp_regex = /(\d\d\d\d)(?:-(\d\d)(?:-(\d\d)(?:[T](\d\d)(?::(\d\d)(?::(\d\d)(?:[.](\d+))?)?)?)?)?)?(?:[Z]|([-+])(\d\d):(\d\d))?/;
cljs.reader.parse_int = function parse_int(s) {
  var n = parseInt(s);
  if(cljs.core.not.call(null, isNaN(n))) {
    return n
  }else {
    return null
  }
};
cljs.reader.check = function check(low, n, high, msg) {
  if(low <= n && n <= high) {
  }else {
    cljs.reader.reader_error.call(null, null, [cljs.core.str(msg), cljs.core.str(" Failed:  "), cljs.core.str(low), cljs.core.str("<="), cljs.core.str(n), cljs.core.str("<="), cljs.core.str(high)].join(""))
  }
  return n
};
cljs.reader.parse_and_validate_timestamp = function parse_and_validate_timestamp(s) {
  var vec__531866 = cljs.core.re_matches.call(null, cljs.reader.timestamp_regex, s);
  var _ = cljs.core.nth.call(null, vec__531866, 0, null);
  var years = cljs.core.nth.call(null, vec__531866, 1, null);
  var months = cljs.core.nth.call(null, vec__531866, 2, null);
  var days = cljs.core.nth.call(null, vec__531866, 3, null);
  var hours = cljs.core.nth.call(null, vec__531866, 4, null);
  var minutes = cljs.core.nth.call(null, vec__531866, 5, null);
  var seconds = cljs.core.nth.call(null, vec__531866, 6, null);
  var fraction = cljs.core.nth.call(null, vec__531866, 7, null);
  var offset_sign = cljs.core.nth.call(null, vec__531866, 8, null);
  var offset_hours = cljs.core.nth.call(null, vec__531866, 9, null);
  var offset_minutes = cljs.core.nth.call(null, vec__531866, 10, null);
  var v = vec__531866;
  if(cljs.core.not.call(null, v)) {
    return cljs.reader.reader_error.call(null, null, [cljs.core.str("Unrecognized date/time syntax: "), cljs.core.str(s)].join(""))
  }else {
    var years__$1 = cljs.reader.parse_int.call(null, years);
    var months__$1 = function() {
      var or__3285__auto__ = cljs.reader.parse_int.call(null, months);
      if(cljs.core.truth_(or__3285__auto__)) {
        return or__3285__auto__
      }else {
        return 1
      }
    }();
    var days__$1 = function() {
      var or__3285__auto__ = cljs.reader.parse_int.call(null, days);
      if(cljs.core.truth_(or__3285__auto__)) {
        return or__3285__auto__
      }else {
        return 1
      }
    }();
    var hours__$1 = function() {
      var or__3285__auto__ = cljs.reader.parse_int.call(null, hours);
      if(cljs.core.truth_(or__3285__auto__)) {
        return or__3285__auto__
      }else {
        return 0
      }
    }();
    var minutes__$1 = function() {
      var or__3285__auto__ = cljs.reader.parse_int.call(null, minutes);
      if(cljs.core.truth_(or__3285__auto__)) {
        return or__3285__auto__
      }else {
        return 0
      }
    }();
    var seconds__$1 = function() {
      var or__3285__auto__ = cljs.reader.parse_int.call(null, seconds);
      if(cljs.core.truth_(or__3285__auto__)) {
        return or__3285__auto__
      }else {
        return 0
      }
    }();
    var fraction__$1 = function() {
      var or__3285__auto__ = cljs.reader.parse_int.call(null, cljs.reader.zero_fill_right_and_truncate.call(null, fraction, 3));
      if(cljs.core.truth_(or__3285__auto__)) {
        return or__3285__auto__
      }else {
        return 0
      }
    }();
    var offset_sign__$1 = cljs.core._EQ_.call(null, offset_sign, "-") ? -1 : 1;
    var offset_hours__$1 = function() {
      var or__3285__auto__ = cljs.reader.parse_int.call(null, offset_hours);
      if(cljs.core.truth_(or__3285__auto__)) {
        return or__3285__auto__
      }else {
        return 0
      }
    }();
    var offset_minutes__$1 = function() {
      var or__3285__auto__ = cljs.reader.parse_int.call(null, offset_minutes);
      if(cljs.core.truth_(or__3285__auto__)) {
        return or__3285__auto__
      }else {
        return 0
      }
    }();
    var offset = offset_sign__$1 * (offset_hours__$1 * 60 + offset_minutes__$1);
    return new cljs.core.PersistentVector(null, 8, 5, cljs.core.PersistentVector.EMPTY_NODE, [years__$1, cljs.reader.check.call(null, 1, months__$1, 12, "timestamp month field must be in range 1..12"), cljs.reader.check.call(null, 1, days__$1, cljs.reader.days_in_month.call(null, months__$1, cljs.reader.leap_year_QMARK_.call(null, years__$1)), "timestamp day field must be in range 1..last day in month"), cljs.reader.check.call(null, 0, hours__$1, 23, "timestamp hour field must be in range 0..23"), 
    cljs.reader.check.call(null, 0, minutes__$1, 59, "timestamp minute field must be in range 0..59"), cljs.reader.check.call(null, 0, seconds__$1, cljs.core._EQ_.call(null, minutes__$1, 59) ? 60 : 59, "timestamp second field must be in range 0..60"), cljs.reader.check.call(null, 0, fraction__$1, 999, "timestamp millisecond field must be in range 0..999"), offset], null)
  }
};
cljs.reader.parse_timestamp = function parse_timestamp(ts) {
  var temp__4090__auto__ = cljs.reader.parse_and_validate_timestamp.call(null, ts);
  if(cljs.core.truth_(temp__4090__auto__)) {
    var vec__531868 = temp__4090__auto__;
    var years = cljs.core.nth.call(null, vec__531868, 0, null);
    var months = cljs.core.nth.call(null, vec__531868, 1, null);
    var days = cljs.core.nth.call(null, vec__531868, 2, null);
    var hours = cljs.core.nth.call(null, vec__531868, 3, null);
    var minutes = cljs.core.nth.call(null, vec__531868, 4, null);
    var seconds = cljs.core.nth.call(null, vec__531868, 5, null);
    var ms = cljs.core.nth.call(null, vec__531868, 6, null);
    var offset = cljs.core.nth.call(null, vec__531868, 7, null);
    return new Date(Date.UTC(years, months - 1, days, hours, minutes, seconds, ms) - offset * 60 * 1E3)
  }else {
    return cljs.reader.reader_error.call(null, null, [cljs.core.str("Unrecognized date/time syntax: "), cljs.core.str(ts)].join(""))
  }
};
cljs.reader.read_date = function read_date(s) {
  if(typeof s === "string") {
    return cljs.reader.parse_timestamp.call(null, s)
  }else {
    return cljs.reader.reader_error.call(null, null, "Instance literal expects a string for its timestamp.")
  }
};
cljs.reader.read_queue = function read_queue(elems) {
  if(cljs.core.vector_QMARK_.call(null, elems)) {
    return cljs.core.into.call(null, cljs.core.PersistentQueue.EMPTY, elems)
  }else {
    return cljs.reader.reader_error.call(null, null, "Queue literal expects a vector for its elements.")
  }
};
cljs.reader.read_uuid = function read_uuid(uuid) {
  if(typeof uuid === "string") {
    return new cljs.core.UUID(uuid)
  }else {
    return cljs.reader.reader_error.call(null, null, "UUID literal expects a string as its representation.")
  }
};
cljs.reader._STAR_tag_table_STAR_ = cljs.core.atom.call(null, new cljs.core.PersistentArrayMap(null, 3, ["inst", cljs.reader.read_date, "uuid", cljs.reader.read_uuid, "queue", cljs.reader.read_queue], null));
cljs.reader._STAR_default_data_reader_fn_STAR_ = cljs.core.atom.call(null, null);
cljs.reader.maybe_read_tagged_type = function maybe_read_tagged_type(rdr, initch) {
  var tag = cljs.reader.read_symbol.call(null, rdr, initch);
  var pfn = cljs.core.get.call(null, cljs.core.deref.call(null, cljs.reader._STAR_tag_table_STAR_), [cljs.core.str(tag)].join(""));
  var dfn = cljs.core.deref.call(null, cljs.reader._STAR_default_data_reader_fn_STAR_);
  if(cljs.core.truth_(pfn)) {
    return pfn.call(null, cljs.reader.read.call(null, rdr, true, null, false))
  }else {
    if(cljs.core.truth_(dfn)) {
      return dfn.call(null, tag, cljs.reader.read.call(null, rdr, true, null, false))
    }else {
      if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        return cljs.reader.reader_error.call(null, rdr, "Could not find tag parser for ", [cljs.core.str(tag)].join(""), " in ", cljs.core.pr_str.call(null, cljs.core.keys.call(null, cljs.core.deref.call(null, cljs.reader._STAR_tag_table_STAR_))))
      }else {
        return null
      }
    }
  }
};
cljs.reader.register_tag_parser_BANG_ = function register_tag_parser_BANG_(tag, f) {
  var tag__$1 = [cljs.core.str(tag)].join("");
  var old_parser = cljs.core.get.call(null, cljs.core.deref.call(null, cljs.reader._STAR_tag_table_STAR_), tag__$1);
  cljs.core.swap_BANG_.call(null, cljs.reader._STAR_tag_table_STAR_, cljs.core.assoc, tag__$1, f);
  return old_parser
};
cljs.reader.deregister_tag_parser_BANG_ = function deregister_tag_parser_BANG_(tag) {
  var tag__$1 = [cljs.core.str(tag)].join("");
  var old_parser = cljs.core.get.call(null, cljs.core.deref.call(null, cljs.reader._STAR_tag_table_STAR_), tag__$1);
  cljs.core.swap_BANG_.call(null, cljs.reader._STAR_tag_table_STAR_, cljs.core.dissoc, tag__$1);
  return old_parser
};
cljs.reader.register_default_tag_parser_BANG_ = function register_default_tag_parser_BANG_(f) {
  var old_parser = cljs.core.deref.call(null, cljs.reader._STAR_default_data_reader_fn_STAR_);
  cljs.core.swap_BANG_.call(null, cljs.reader._STAR_default_data_reader_fn_STAR_, function(_) {
    return f
  });
  return old_parser
};
cljs.reader.deregister_default_tag_parser_BANG_ = function deregister_default_tag_parser_BANG_() {
  var old_parser = cljs.core.deref.call(null, cljs.reader._STAR_default_data_reader_fn_STAR_);
  cljs.core.swap_BANG_.call(null, cljs.reader._STAR_default_data_reader_fn_STAR_, function(_) {
    return null
  });
  return old_parser
};
goog.provide("cljs.core.async.impl.protocols");
goog.require("cljs.core");
cljs.core.async.impl.protocols.MAX_QUEUE_SIZE = 1024;
cljs.core.async.impl.protocols.ReadPort = function() {
  var obj531768 = {};
  return obj531768
}();
cljs.core.async.impl.protocols.take_BANG_ = function take_BANG_(port, fn1_handler) {
  if(function() {
    var and__3273__auto__ = port;
    if(and__3273__auto__) {
      return port.cljs$core$async$impl$protocols$ReadPort$take_BANG_$arity$2
    }else {
      return and__3273__auto__
    }
  }()) {
    return port.cljs$core$async$impl$protocols$ReadPort$take_BANG_$arity$2(port, fn1_handler)
  }else {
    var x__3888__auto__ = port == null ? null : port;
    return function() {
      var or__3285__auto__ = cljs.core.async.impl.protocols.take_BANG_[goog.typeOf(x__3888__auto__)];
      if(or__3285__auto__) {
        return or__3285__auto__
      }else {
        var or__3285__auto____$1 = cljs.core.async.impl.protocols.take_BANG_["_"];
        if(or__3285__auto____$1) {
          return or__3285__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "ReadPort.take!", port);
        }
      }
    }().call(null, port, fn1_handler)
  }
};
cljs.core.async.impl.protocols.WritePort = function() {
  var obj531770 = {};
  return obj531770
}();
cljs.core.async.impl.protocols.put_BANG_ = function put_BANG_(port, val, fn0_handler) {
  if(function() {
    var and__3273__auto__ = port;
    if(and__3273__auto__) {
      return port.cljs$core$async$impl$protocols$WritePort$put_BANG_$arity$3
    }else {
      return and__3273__auto__
    }
  }()) {
    return port.cljs$core$async$impl$protocols$WritePort$put_BANG_$arity$3(port, val, fn0_handler)
  }else {
    var x__3888__auto__ = port == null ? null : port;
    return function() {
      var or__3285__auto__ = cljs.core.async.impl.protocols.put_BANG_[goog.typeOf(x__3888__auto__)];
      if(or__3285__auto__) {
        return or__3285__auto__
      }else {
        var or__3285__auto____$1 = cljs.core.async.impl.protocols.put_BANG_["_"];
        if(or__3285__auto____$1) {
          return or__3285__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "WritePort.put!", port);
        }
      }
    }().call(null, port, val, fn0_handler)
  }
};
cljs.core.async.impl.protocols.Channel = function() {
  var obj531772 = {};
  return obj531772
}();
cljs.core.async.impl.protocols.close_BANG_ = function close_BANG_(chan) {
  if(function() {
    var and__3273__auto__ = chan;
    if(and__3273__auto__) {
      return chan.cljs$core$async$impl$protocols$Channel$close_BANG_$arity$1
    }else {
      return and__3273__auto__
    }
  }()) {
    return chan.cljs$core$async$impl$protocols$Channel$close_BANG_$arity$1(chan)
  }else {
    var x__3888__auto__ = chan == null ? null : chan;
    return function() {
      var or__3285__auto__ = cljs.core.async.impl.protocols.close_BANG_[goog.typeOf(x__3888__auto__)];
      if(or__3285__auto__) {
        return or__3285__auto__
      }else {
        var or__3285__auto____$1 = cljs.core.async.impl.protocols.close_BANG_["_"];
        if(or__3285__auto____$1) {
          return or__3285__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "Channel.close!", chan);
        }
      }
    }().call(null, chan)
  }
};
cljs.core.async.impl.protocols.Handler = function() {
  var obj531774 = {};
  return obj531774
}();
cljs.core.async.impl.protocols.active_QMARK_ = function active_QMARK_(h) {
  if(function() {
    var and__3273__auto__ = h;
    if(and__3273__auto__) {
      return h.cljs$core$async$impl$protocols$Handler$active_QMARK_$arity$1
    }else {
      return and__3273__auto__
    }
  }()) {
    return h.cljs$core$async$impl$protocols$Handler$active_QMARK_$arity$1(h)
  }else {
    var x__3888__auto__ = h == null ? null : h;
    return function() {
      var or__3285__auto__ = cljs.core.async.impl.protocols.active_QMARK_[goog.typeOf(x__3888__auto__)];
      if(or__3285__auto__) {
        return or__3285__auto__
      }else {
        var or__3285__auto____$1 = cljs.core.async.impl.protocols.active_QMARK_["_"];
        if(or__3285__auto____$1) {
          return or__3285__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "Handler.active?", h);
        }
      }
    }().call(null, h)
  }
};
cljs.core.async.impl.protocols.commit = function commit(h) {
  if(function() {
    var and__3273__auto__ = h;
    if(and__3273__auto__) {
      return h.cljs$core$async$impl$protocols$Handler$commit$arity$1
    }else {
      return and__3273__auto__
    }
  }()) {
    return h.cljs$core$async$impl$protocols$Handler$commit$arity$1(h)
  }else {
    var x__3888__auto__ = h == null ? null : h;
    return function() {
      var or__3285__auto__ = cljs.core.async.impl.protocols.commit[goog.typeOf(x__3888__auto__)];
      if(or__3285__auto__) {
        return or__3285__auto__
      }else {
        var or__3285__auto____$1 = cljs.core.async.impl.protocols.commit["_"];
        if(or__3285__auto____$1) {
          return or__3285__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "Handler.commit", h);
        }
      }
    }().call(null, h)
  }
};
cljs.core.async.impl.protocols.Buffer = function() {
  var obj531776 = {};
  return obj531776
}();
cljs.core.async.impl.protocols.full_QMARK_ = function full_QMARK_(b) {
  if(function() {
    var and__3273__auto__ = b;
    if(and__3273__auto__) {
      return b.cljs$core$async$impl$protocols$Buffer$full_QMARK_$arity$1
    }else {
      return and__3273__auto__
    }
  }()) {
    return b.cljs$core$async$impl$protocols$Buffer$full_QMARK_$arity$1(b)
  }else {
    var x__3888__auto__ = b == null ? null : b;
    return function() {
      var or__3285__auto__ = cljs.core.async.impl.protocols.full_QMARK_[goog.typeOf(x__3888__auto__)];
      if(or__3285__auto__) {
        return or__3285__auto__
      }else {
        var or__3285__auto____$1 = cljs.core.async.impl.protocols.full_QMARK_["_"];
        if(or__3285__auto____$1) {
          return or__3285__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "Buffer.full?", b);
        }
      }
    }().call(null, b)
  }
};
cljs.core.async.impl.protocols.remove_BANG_ = function remove_BANG_(b) {
  if(function() {
    var and__3273__auto__ = b;
    if(and__3273__auto__) {
      return b.cljs$core$async$impl$protocols$Buffer$remove_BANG_$arity$1
    }else {
      return and__3273__auto__
    }
  }()) {
    return b.cljs$core$async$impl$protocols$Buffer$remove_BANG_$arity$1(b)
  }else {
    var x__3888__auto__ = b == null ? null : b;
    return function() {
      var or__3285__auto__ = cljs.core.async.impl.protocols.remove_BANG_[goog.typeOf(x__3888__auto__)];
      if(or__3285__auto__) {
        return or__3285__auto__
      }else {
        var or__3285__auto____$1 = cljs.core.async.impl.protocols.remove_BANG_["_"];
        if(or__3285__auto____$1) {
          return or__3285__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "Buffer.remove!", b);
        }
      }
    }().call(null, b)
  }
};
cljs.core.async.impl.protocols.add_BANG_ = function add_BANG_(b, itm) {
  if(function() {
    var and__3273__auto__ = b;
    if(and__3273__auto__) {
      return b.cljs$core$async$impl$protocols$Buffer$add_BANG_$arity$2
    }else {
      return and__3273__auto__
    }
  }()) {
    return b.cljs$core$async$impl$protocols$Buffer$add_BANG_$arity$2(b, itm)
  }else {
    var x__3888__auto__ = b == null ? null : b;
    return function() {
      var or__3285__auto__ = cljs.core.async.impl.protocols.add_BANG_[goog.typeOf(x__3888__auto__)];
      if(or__3285__auto__) {
        return or__3285__auto__
      }else {
        var or__3285__auto____$1 = cljs.core.async.impl.protocols.add_BANG_["_"];
        if(or__3285__auto____$1) {
          return or__3285__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "Buffer.add!", b);
        }
      }
    }().call(null, b, itm)
  }
};
goog.provide("cljs.core.async.impl.ioc_helpers");
goog.require("cljs.core");
goog.require("cljs.core.async.impl.protocols");
goog.require("cljs.core.async.impl.protocols");
cljs.core.async.impl.ioc_helpers.FN_IDX = 0;
cljs.core.async.impl.ioc_helpers.STATE_IDX = 1;
cljs.core.async.impl.ioc_helpers.VALUE_IDX = 2;
cljs.core.async.impl.ioc_helpers.BINDINGS_IDX = 3;
cljs.core.async.impl.ioc_helpers.USER_START_IDX = 4;
cljs.core.async.impl.ioc_helpers.aset_object = function aset_object(arr, idx, o) {
  return arr[idx][o]
};
cljs.core.async.impl.ioc_helpers.aget_object = function aget_object(arr, idx) {
  return arr[idx]
};
cljs.core.async.impl.ioc_helpers.finished_QMARK_ = function finished_QMARK_(state_array) {
  return cljs.core.keyword_identical_QMARK_.call(null, state_array[cljs.core.async.impl.ioc_helpers.STATE_IDX], new cljs.core.Keyword(null, "finished", "finished", 4635210724))
};
cljs.core.async.impl.ioc_helpers.fn_handler = function fn_handler(f) {
  if(typeof cljs.core.async.impl.ioc_helpers.t531794 !== "undefined") {
  }else {
    cljs.core.async.impl.ioc_helpers.t531794 = function(f, fn_handler, meta531795) {
      this.f = f;
      this.fn_handler = fn_handler;
      this.meta531795 = meta531795;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216
    };
    cljs.core.async.impl.ioc_helpers.t531794.cljs$lang$type = true;
    cljs.core.async.impl.ioc_helpers.t531794.cljs$lang$ctorStr = "cljs.core.async.impl.ioc-helpers/t531794";
    cljs.core.async.impl.ioc_helpers.t531794.cljs$lang$ctorPrWriter = function(this__3829__auto__, writer__3830__auto__, opt__3831__auto__) {
      return cljs.core._write.call(null, writer__3830__auto__, "cljs.core.async.impl.ioc-helpers/t531794")
    };
    cljs.core.async.impl.ioc_helpers.t531794.prototype.cljs$core$async$impl$protocols$Handler$ = true;
    cljs.core.async.impl.ioc_helpers.t531794.prototype.cljs$core$async$impl$protocols$Handler$active_QMARK_$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return true
    };
    cljs.core.async.impl.ioc_helpers.t531794.prototype.cljs$core$async$impl$protocols$Handler$commit$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return self__.f
    };
    cljs.core.async.impl.ioc_helpers.t531794.prototype.cljs$core$IMeta$_meta$arity$1 = function(_531796) {
      var self__ = this;
      var _531796__$1 = this;
      return self__.meta531795
    };
    cljs.core.async.impl.ioc_helpers.t531794.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_531796, meta531795__$1) {
      var self__ = this;
      var _531796__$1 = this;
      return new cljs.core.async.impl.ioc_helpers.t531794(self__.f, self__.fn_handler, meta531795__$1)
    };
    cljs.core.async.impl.ioc_helpers.__GT_t531794 = function __GT_t531794(f__$1, fn_handler__$1, meta531795) {
      return new cljs.core.async.impl.ioc_helpers.t531794(f__$1, fn_handler__$1, meta531795)
    }
  }
  return new cljs.core.async.impl.ioc_helpers.t531794(f, fn_handler, null)
};
cljs.core.async.impl.ioc_helpers.run_state_machine = function run_state_machine(state) {
  return cljs.core.async.impl.ioc_helpers.aget_object.call(null, state, cljs.core.async.impl.ioc_helpers.FN_IDX).call(null, state)
};
cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped = function run_state_machine_wrapped(state) {
  try {
    return cljs.core.async.impl.ioc_helpers.run_state_machine.call(null, state)
  }catch(e531798) {
    if(e531798 instanceof Object) {
      var ex = e531798;
      cljs.core.async.impl.protocols.close_BANG_.call(null, cljs.core.async.impl.ioc_helpers.aget_object.call(null, state, cljs.core.async.impl.ioc_helpers.USER_START_IDX));
      throw ex;
    }else {
      if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        throw e531798;
      }else {
        return null
      }
    }
  }
};
cljs.core.async.impl.ioc_helpers.take_BANG_ = function take_BANG_(state, blk, c) {
  var temp__4090__auto__ = cljs.core.async.impl.protocols.take_BANG_.call(null, c, cljs.core.async.impl.ioc_helpers.fn_handler.call(null, function(x) {
    var statearr_531801_531803 = state;
    statearr_531801_531803[cljs.core.async.impl.ioc_helpers.VALUE_IDX] = x;
    statearr_531801_531803[cljs.core.async.impl.ioc_helpers.STATE_IDX] = blk;
    return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state)
  }));
  if(cljs.core.truth_(temp__4090__auto__)) {
    var cb = temp__4090__auto__;
    var statearr_531802_531804 = state;
    statearr_531802_531804[cljs.core.async.impl.ioc_helpers.VALUE_IDX] = cljs.core.deref.call(null, cb);
    statearr_531802_531804[cljs.core.async.impl.ioc_helpers.STATE_IDX] = blk;
    return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
  }else {
    return null
  }
};
cljs.core.async.impl.ioc_helpers.put_BANG_ = function put_BANG_(state, blk, c, val) {
  var temp__4090__auto__ = cljs.core.async.impl.protocols.put_BANG_.call(null, c, val, cljs.core.async.impl.ioc_helpers.fn_handler.call(null, function() {
    var statearr_531807_531809 = state;
    statearr_531807_531809[cljs.core.async.impl.ioc_helpers.VALUE_IDX] = null;
    statearr_531807_531809[cljs.core.async.impl.ioc_helpers.STATE_IDX] = blk;
    return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state)
  }));
  if(cljs.core.truth_(temp__4090__auto__)) {
    var cb = temp__4090__auto__;
    var statearr_531808_531810 = state;
    statearr_531808_531810[cljs.core.async.impl.ioc_helpers.VALUE_IDX] = cljs.core.deref.call(null, cb);
    statearr_531808_531810[cljs.core.async.impl.ioc_helpers.STATE_IDX] = blk;
    return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
  }else {
    return null
  }
};
cljs.core.async.impl.ioc_helpers.ioc_alts_BANG_ = function() {
  var ioc_alts_BANG___delegate = function(state, cont_block, ports, p__531811) {
    var map__531816 = p__531811;
    var map__531816__$1 = cljs.core.seq_QMARK_.call(null, map__531816) ? cljs.core.apply.call(null, cljs.core.hash_map, map__531816) : map__531816;
    var opts = map__531816__$1;
    var statearr_531817_531820 = state;
    statearr_531817_531820[cljs.core.async.impl.ioc_helpers.STATE_IDX] = cont_block;
    var temp__4092__auto__ = cljs.core.async.do_alts.call(null, function(val) {
      var statearr_531818_531821 = state;
      statearr_531818_531821[cljs.core.async.impl.ioc_helpers.VALUE_IDX] = val;
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state)
    }, ports, opts);
    if(cljs.core.truth_(temp__4092__auto__)) {
      var cb = temp__4092__auto__;
      var statearr_531819_531822 = state;
      statearr_531819_531822[cljs.core.async.impl.ioc_helpers.VALUE_IDX] = cljs.core.deref.call(null, cb);
      return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
    }else {
      return null
    }
  };
  var ioc_alts_BANG_ = function(state, cont_block, ports, var_args) {
    var p__531811 = null;
    if(arguments.length > 3) {
      p__531811 = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
    }
    return ioc_alts_BANG___delegate.call(this, state, cont_block, ports, p__531811)
  };
  ioc_alts_BANG_.cljs$lang$maxFixedArity = 3;
  ioc_alts_BANG_.cljs$lang$applyTo = function(arglist__531823) {
    var state = cljs.core.first(arglist__531823);
    arglist__531823 = cljs.core.next(arglist__531823);
    var cont_block = cljs.core.first(arglist__531823);
    arglist__531823 = cljs.core.next(arglist__531823);
    var ports = cljs.core.first(arglist__531823);
    var p__531811 = cljs.core.rest(arglist__531823);
    return ioc_alts_BANG___delegate(state, cont_block, ports, p__531811)
  };
  ioc_alts_BANG_.cljs$core$IFn$_invoke$arity$variadic = ioc_alts_BANG___delegate;
  return ioc_alts_BANG_
}();
cljs.core.async.impl.ioc_helpers.return_chan = function return_chan(state, value) {
  var c = state[cljs.core.async.impl.ioc_helpers.USER_START_IDX];
  if(value == null) {
  }else {
    cljs.core.async.impl.protocols.put_BANG_.call(null, c, value, cljs.core.async.impl.ioc_helpers.fn_handler.call(null, function() {
      return null
    }))
  }
  cljs.core.async.impl.protocols.close_BANG_.call(null, c);
  return c
};
goog.provide("cljs.core.async.impl.buffers");
goog.require("cljs.core");
goog.require("cljs.core.async.impl.protocols");
goog.require("cljs.core.async.impl.protocols");
cljs.core.async.impl.buffers.acopy = function acopy(src, src_start, dest, dest_start, len) {
  var cnt = 0;
  while(true) {
    if(cnt < len) {
      dest[dest_start + cnt] = src[src_start + cnt];
      var G__531788 = cnt + 1;
      cnt = G__531788;
      continue
    }else {
      return null
    }
    break
  }
};
cljs.core.async.impl.buffers.RingBuffer = function(head, tail, length, arr) {
  this.head = head;
  this.tail = tail;
  this.length = length;
  this.arr = arr
};
cljs.core.async.impl.buffers.RingBuffer.cljs$lang$type = true;
cljs.core.async.impl.buffers.RingBuffer.cljs$lang$ctorStr = "cljs.core.async.impl.buffers/RingBuffer";
cljs.core.async.impl.buffers.RingBuffer.cljs$lang$ctorPrWriter = function(this__3829__auto__, writer__3830__auto__, opt__3831__auto__) {
  return cljs.core._write.call(null, writer__3830__auto__, "cljs.core.async.impl.buffers/RingBuffer")
};
cljs.core.async.impl.buffers.RingBuffer.prototype.pop = function() {
  var self__ = this;
  var _ = this;
  if(self__.length === 0) {
    return null
  }else {
    var x = self__.arr[self__.tail];
    self__.arr[self__.tail] = null;
    self__.tail = (self__.tail + 1) % self__.arr.length;
    self__.length = self__.length - 1;
    return x
  }
};
cljs.core.async.impl.buffers.RingBuffer.prototype.unshift = function(x) {
  var self__ = this;
  var _ = this;
  self__.arr[self__.head] = x;
  self__.head = (self__.head + 1) % self__.arr.length;
  self__.length = self__.length + 1;
  return null
};
cljs.core.async.impl.buffers.RingBuffer.prototype.unbounded_unshift = function(x) {
  var self__ = this;
  var this$ = this;
  if(self__.length + 1 === self__.arr.length) {
    this$.resize()
  }else {
  }
  return this$.unshift(x)
};
cljs.core.async.impl.buffers.RingBuffer.prototype.resize = function() {
  var self__ = this;
  var _ = this;
  var new_arr_size = self__.arr.length * 2;
  var new_arr = new Array(new_arr_size);
  if(self__.tail < self__.head) {
    cljs.core.async.impl.buffers.acopy.call(null, self__.arr, self__.tail, new_arr, 0, self__.length);
    self__.tail = 0;
    self__.head = self__.length;
    return self__.arr = new_arr
  }else {
    if(self__.tail > self__.head) {
      cljs.core.async.impl.buffers.acopy.call(null, self__.arr, self__.tail, new_arr, 0, self__.arr.length - self__.tail);
      cljs.core.async.impl.buffers.acopy.call(null, self__.arr, 0, new_arr, self__.arr.length - self__.tail, self__.head);
      self__.tail = 0;
      self__.head = self__.length;
      return self__.arr = new_arr
    }else {
      if(self__.tail === self__.head) {
        self__.tail = 0;
        self__.head = 0;
        return self__.arr = new_arr
      }else {
        return null
      }
    }
  }
};
cljs.core.async.impl.buffers.RingBuffer.prototype.cleanup = function(keep_QMARK_) {
  var self__ = this;
  var this$ = this;
  var n__4108__auto__ = self__.length;
  var x = 0;
  while(true) {
    if(x < n__4108__auto__) {
      var v_531789 = this$.pop();
      if(keep_QMARK_.call(null, v_531789)) {
        this$.unshift(v_531789)
      }else {
      }
      var G__531790 = x + 1;
      x = G__531790;
      continue
    }else {
      return null
    }
    break
  }
};
cljs.core.async.impl.buffers.__GT_RingBuffer = function __GT_RingBuffer(head, tail, length, arr) {
  return new cljs.core.async.impl.buffers.RingBuffer(head, tail, length, arr)
};
cljs.core.async.impl.buffers.ring_buffer = function ring_buffer(n) {
  if(n > 0) {
  }else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str("Can't create a ring buffer of size 0"), cljs.core.str("\n"), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, ">", ">", -1640531465, null), new cljs.core.Symbol(null, "n", "n", -1640531417, null), 0)))].join(""));
  }
  return new cljs.core.async.impl.buffers.RingBuffer(0, 0, 0, new Array(n))
};
cljs.core.async.impl.buffers.FixedBuffer = function(buf, n) {
  this.buf = buf;
  this.n = n;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 2
};
cljs.core.async.impl.buffers.FixedBuffer.cljs$lang$type = true;
cljs.core.async.impl.buffers.FixedBuffer.cljs$lang$ctorStr = "cljs.core.async.impl.buffers/FixedBuffer";
cljs.core.async.impl.buffers.FixedBuffer.cljs$lang$ctorPrWriter = function(this__3829__auto__, writer__3830__auto__, opt__3831__auto__) {
  return cljs.core._write.call(null, writer__3830__auto__, "cljs.core.async.impl.buffers/FixedBuffer")
};
cljs.core.async.impl.buffers.FixedBuffer.prototype.cljs$core$ICounted$_count$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return self__.buf.length
};
cljs.core.async.impl.buffers.FixedBuffer.prototype.cljs$core$async$impl$protocols$Buffer$ = true;
cljs.core.async.impl.buffers.FixedBuffer.prototype.cljs$core$async$impl$protocols$Buffer$full_QMARK_$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return self__.buf.length === self__.n
};
cljs.core.async.impl.buffers.FixedBuffer.prototype.cljs$core$async$impl$protocols$Buffer$remove_BANG_$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return self__.buf.pop()
};
cljs.core.async.impl.buffers.FixedBuffer.prototype.cljs$core$async$impl$protocols$Buffer$add_BANG_$arity$2 = function(this$, itm) {
  var self__ = this;
  var this$__$1 = this;
  if(cljs.core.not.call(null, cljs.core.async.impl.protocols.full_QMARK_.call(null, this$__$1))) {
  }else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str("Can't add to a full buffer"), cljs.core.str("\n"), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "not", "not", -1640422260, null), cljs.core.list(new cljs.core.Symbol("impl", "full?", "impl/full?", -1337857039, null), new cljs.core.Symbol(null, "this", "this", -1636972457, null)))))].join(""));
  }
  return self__.buf.unshift(itm)
};
cljs.core.async.impl.buffers.__GT_FixedBuffer = function __GT_FixedBuffer(buf, n) {
  return new cljs.core.async.impl.buffers.FixedBuffer(buf, n)
};
cljs.core.async.impl.buffers.fixed_buffer = function fixed_buffer(n) {
  return new cljs.core.async.impl.buffers.FixedBuffer(cljs.core.async.impl.buffers.ring_buffer.call(null, n), n)
};
cljs.core.async.impl.buffers.DroppingBuffer = function(buf, n) {
  this.buf = buf;
  this.n = n;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 2
};
cljs.core.async.impl.buffers.DroppingBuffer.cljs$lang$type = true;
cljs.core.async.impl.buffers.DroppingBuffer.cljs$lang$ctorStr = "cljs.core.async.impl.buffers/DroppingBuffer";
cljs.core.async.impl.buffers.DroppingBuffer.cljs$lang$ctorPrWriter = function(this__3829__auto__, writer__3830__auto__, opt__3831__auto__) {
  return cljs.core._write.call(null, writer__3830__auto__, "cljs.core.async.impl.buffers/DroppingBuffer")
};
cljs.core.async.impl.buffers.DroppingBuffer.prototype.cljs$core$ICounted$_count$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return self__.buf.length
};
cljs.core.async.impl.buffers.DroppingBuffer.prototype.cljs$core$async$impl$protocols$Buffer$ = true;
cljs.core.async.impl.buffers.DroppingBuffer.prototype.cljs$core$async$impl$protocols$Buffer$full_QMARK_$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return false
};
cljs.core.async.impl.buffers.DroppingBuffer.prototype.cljs$core$async$impl$protocols$Buffer$remove_BANG_$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return self__.buf.pop()
};
cljs.core.async.impl.buffers.DroppingBuffer.prototype.cljs$core$async$impl$protocols$Buffer$add_BANG_$arity$2 = function(this$, itm) {
  var self__ = this;
  var this$__$1 = this;
  if(self__.buf.length === self__.n) {
    return null
  }else {
    return self__.buf.unshift(itm)
  }
};
cljs.core.async.impl.buffers.__GT_DroppingBuffer = function __GT_DroppingBuffer(buf, n) {
  return new cljs.core.async.impl.buffers.DroppingBuffer(buf, n)
};
cljs.core.async.impl.buffers.dropping_buffer = function dropping_buffer(n) {
  return new cljs.core.async.impl.buffers.DroppingBuffer(cljs.core.async.impl.buffers.ring_buffer.call(null, n), n)
};
cljs.core.async.impl.buffers.SlidingBuffer = function(buf, n) {
  this.buf = buf;
  this.n = n;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 2
};
cljs.core.async.impl.buffers.SlidingBuffer.cljs$lang$type = true;
cljs.core.async.impl.buffers.SlidingBuffer.cljs$lang$ctorStr = "cljs.core.async.impl.buffers/SlidingBuffer";
cljs.core.async.impl.buffers.SlidingBuffer.cljs$lang$ctorPrWriter = function(this__3829__auto__, writer__3830__auto__, opt__3831__auto__) {
  return cljs.core._write.call(null, writer__3830__auto__, "cljs.core.async.impl.buffers/SlidingBuffer")
};
cljs.core.async.impl.buffers.SlidingBuffer.prototype.cljs$core$ICounted$_count$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return self__.buf.length
};
cljs.core.async.impl.buffers.SlidingBuffer.prototype.cljs$core$async$impl$protocols$Buffer$ = true;
cljs.core.async.impl.buffers.SlidingBuffer.prototype.cljs$core$async$impl$protocols$Buffer$full_QMARK_$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return false
};
cljs.core.async.impl.buffers.SlidingBuffer.prototype.cljs$core$async$impl$protocols$Buffer$remove_BANG_$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return self__.buf.pop()
};
cljs.core.async.impl.buffers.SlidingBuffer.prototype.cljs$core$async$impl$protocols$Buffer$add_BANG_$arity$2 = function(this$, itm) {
  var self__ = this;
  var this$__$1 = this;
  if(self__.buf.length === self__.n) {
    cljs.core.async.impl.protocols.remove_BANG_.call(null, this$__$1)
  }else {
  }
  return self__.buf.unshift(itm)
};
cljs.core.async.impl.buffers.__GT_SlidingBuffer = function __GT_SlidingBuffer(buf, n) {
  return new cljs.core.async.impl.buffers.SlidingBuffer(buf, n)
};
cljs.core.async.impl.buffers.sliding_buffer = function sliding_buffer(n) {
  return new cljs.core.async.impl.buffers.SlidingBuffer(cljs.core.async.impl.buffers.ring_buffer.call(null, n), n)
};
goog.provide("cljs.core.async.impl.dispatch");
goog.require("cljs.core");
goog.require("cljs.core.async.impl.buffers");
goog.require("cljs.core.async.impl.buffers");
cljs.core.async.impl.dispatch.message_channel = null;
cljs.core.async.impl.dispatch.tasks = cljs.core.async.impl.buffers.ring_buffer.call(null, 32);
cljs.core.async.impl.dispatch.running_QMARK_ = false;
cljs.core.async.impl.dispatch.queued_QMARK_ = false;
cljs.core.async.impl.dispatch.TASK_BATCH_SIZE = 1024;
cljs.core.async.impl.dispatch.process_messages = function process_messages() {
  cljs.core.async.impl.dispatch.running_QMARK_ = true;
  cljs.core.async.impl.dispatch.queued_QMARK_ = false;
  var count_531777 = 0;
  while(true) {
    var m_531778 = cljs.core.async.impl.dispatch.tasks.pop();
    if(m_531778 == null) {
    }else {
      m_531778.call(null);
      if(count_531777 < cljs.core.async.impl.dispatch.TASK_BATCH_SIZE) {
        var G__531779 = count_531777 + 1;
        count_531777 = G__531779;
        continue
      }else {
      }
    }
    break
  }
  cljs.core.async.impl.dispatch.running_QMARK_ = false;
  if(cljs.core.async.impl.dispatch.tasks.length > 0) {
    return cljs.core.async.impl.dispatch.queue_dispatcher.call(null)
  }else {
    return null
  }
};
if(typeof MessageChannel !== "undefined") {
  cljs.core.async.impl.dispatch.message_channel = new MessageChannel;
  cljs.core.async.impl.dispatch.message_channel.port1.onmessage = function(msg) {
    return cljs.core.async.impl.dispatch.process_messages.call(null)
  }
}else {
}
cljs.core.async.impl.dispatch.queue_dispatcher = function queue_dispatcher() {
  if(cljs.core.truth_(function() {
    var and__3273__auto__ = cljs.core.async.impl.dispatch.queued_QMARK_;
    if(and__3273__auto__) {
      return cljs.core.async.impl.dispatch.running_QMARK_
    }else {
      return and__3273__auto__
    }
  }())) {
    return null
  }else {
    cljs.core.async.impl.dispatch.queued_QMARK_ = true;
    if(typeof MessageChannel !== "undefined") {
      return cljs.core.async.impl.dispatch.message_channel.port2.postMessage(0)
    }else {
      if(typeof setImmediate !== "undefined") {
        return setImmediate(cljs.core.async.impl.dispatch.process_messages)
      }else {
        if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          return setTimeout(cljs.core.async.impl.dispatch.process_messages, 0)
        }else {
          return null
        }
      }
    }
  }
};
cljs.core.async.impl.dispatch.run = function run(f) {
  cljs.core.async.impl.dispatch.tasks.unbounded_unshift(f);
  return cljs.core.async.impl.dispatch.queue_dispatcher.call(null)
};
cljs.core.async.impl.dispatch.queue_delay = function queue_delay(f, delay) {
  return setTimeout(f, delay)
};
goog.provide("cljs.core.async.impl.channels");
goog.require("cljs.core");
goog.require("cljs.core.async.impl.buffers");
goog.require("cljs.core.async.impl.buffers");
goog.require("cljs.core.async.impl.dispatch");
goog.require("cljs.core.async.impl.dispatch");
goog.require("cljs.core.async.impl.protocols");
goog.require("cljs.core.async.impl.protocols");
cljs.core.async.impl.channels.box = function box(val) {
  if(typeof cljs.core.async.impl.channels.t531783 !== "undefined") {
  }else {
    cljs.core.async.impl.channels.t531783 = function(val, box, meta531784) {
      this.val = val;
      this.box = box;
      this.meta531784 = meta531784;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 425984
    };
    cljs.core.async.impl.channels.t531783.cljs$lang$type = true;
    cljs.core.async.impl.channels.t531783.cljs$lang$ctorStr = "cljs.core.async.impl.channels/t531783";
    cljs.core.async.impl.channels.t531783.cljs$lang$ctorPrWriter = function(this__3829__auto__, writer__3830__auto__, opt__3831__auto__) {
      return cljs.core._write.call(null, writer__3830__auto__, "cljs.core.async.impl.channels/t531783")
    };
    cljs.core.async.impl.channels.t531783.prototype.cljs$core$IDeref$_deref$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return self__.val
    };
    cljs.core.async.impl.channels.t531783.prototype.cljs$core$IMeta$_meta$arity$1 = function(_531785) {
      var self__ = this;
      var _531785__$1 = this;
      return self__.meta531784
    };
    cljs.core.async.impl.channels.t531783.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_531785, meta531784__$1) {
      var self__ = this;
      var _531785__$1 = this;
      return new cljs.core.async.impl.channels.t531783(self__.val, self__.box, meta531784__$1)
    };
    cljs.core.async.impl.channels.__GT_t531783 = function __GT_t531783(val__$1, box__$1, meta531784) {
      return new cljs.core.async.impl.channels.t531783(val__$1, box__$1, meta531784)
    }
  }
  return new cljs.core.async.impl.channels.t531783(val, box, null)
};
cljs.core.async.impl.channels.PutBox = function(handler, val) {
  this.handler = handler;
  this.val = val
};
cljs.core.async.impl.channels.PutBox.cljs$lang$type = true;
cljs.core.async.impl.channels.PutBox.cljs$lang$ctorStr = "cljs.core.async.impl.channels/PutBox";
cljs.core.async.impl.channels.PutBox.cljs$lang$ctorPrWriter = function(this__3832__auto__, writer__3833__auto__, opts__3834__auto__) {
  return cljs.core._write.call(null, writer__3833__auto__, "cljs.core.async.impl.channels/PutBox")
};
cljs.core.async.impl.channels.__GT_PutBox = function __GT_PutBox(handler, val) {
  return new cljs.core.async.impl.channels.PutBox(handler, val)
};
cljs.core.async.impl.channels.put_active_QMARK_ = function put_active_QMARK_(box) {
  return cljs.core.async.impl.protocols.active_QMARK_.call(null, box.handler)
};
cljs.core.async.impl.channels.MAX_DIRTY = 64;
cljs.core.async.impl.channels.ManyToManyChannel = function(takes, dirty_takes, puts, dirty_puts, buf, closed) {
  this.takes = takes;
  this.dirty_takes = dirty_takes;
  this.puts = puts;
  this.dirty_puts = dirty_puts;
  this.buf = buf;
  this.closed = closed
};
cljs.core.async.impl.channels.ManyToManyChannel.cljs$lang$type = true;
cljs.core.async.impl.channels.ManyToManyChannel.cljs$lang$ctorStr = "cljs.core.async.impl.channels/ManyToManyChannel";
cljs.core.async.impl.channels.ManyToManyChannel.cljs$lang$ctorPrWriter = function(this__3829__auto__, writer__3830__auto__, opt__3831__auto__) {
  return cljs.core._write.call(null, writer__3830__auto__, "cljs.core.async.impl.channels/ManyToManyChannel")
};
cljs.core.async.impl.channels.ManyToManyChannel.prototype.cljs$core$async$impl$protocols$Channel$ = true;
cljs.core.async.impl.channels.ManyToManyChannel.prototype.cljs$core$async$impl$protocols$Channel$close_BANG_$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  if(self__.closed) {
    return null
  }else {
    self__.closed = true;
    while(true) {
      var taker_531786 = self__.takes.pop();
      if(taker_531786 == null) {
      }else {
        if(cljs.core.async.impl.protocols.active_QMARK_.call(null, taker_531786)) {
          var take_cb_531787 = cljs.core.async.impl.protocols.commit.call(null, taker_531786);
          cljs.core.async.impl.dispatch.run.call(null, function(take_cb_531787, taker_531786) {
            return function() {
              return take_cb_531787.call(null, null)
            }
          }(take_cb_531787, taker_531786))
        }else {
        }
        continue
      }
      break
    }
    return null
  }
};
cljs.core.async.impl.channels.ManyToManyChannel.prototype.cljs$core$async$impl$protocols$ReadPort$ = true;
cljs.core.async.impl.channels.ManyToManyChannel.prototype.cljs$core$async$impl$protocols$ReadPort$take_BANG_$arity$2 = function(this$, handler) {
  var self__ = this;
  var this$__$1 = this;
  if(!cljs.core.async.impl.protocols.active_QMARK_.call(null, handler)) {
    return null
  }else {
    if(!(self__.buf == null) && cljs.core.count.call(null, self__.buf) > 0) {
      var _ = cljs.core.async.impl.protocols.commit.call(null, handler);
      return cljs.core.async.impl.channels.box.call(null, cljs.core.async.impl.protocols.remove_BANG_.call(null, self__.buf))
    }else {
      while(true) {
        var putter = self__.puts.pop();
        if(!(putter == null)) {
          var put_handler = putter.handler;
          var val = putter.val;
          if(cljs.core.async.impl.protocols.active_QMARK_.call(null, put_handler)) {
            var put_cb = cljs.core.async.impl.protocols.commit.call(null, put_handler);
            var _ = cljs.core.async.impl.protocols.commit.call(null, handler);
            cljs.core.async.impl.dispatch.run.call(null, put_cb);
            return cljs.core.async.impl.channels.box.call(null, val)
          }else {
            continue
          }
        }else {
          if(self__.closed) {
            var _ = cljs.core.async.impl.protocols.commit.call(null, handler);
            return cljs.core.async.impl.channels.box.call(null, null)
          }else {
            if(self__.dirty_takes > cljs.core.async.impl.channels.MAX_DIRTY) {
              self__.dirty_takes = 0;
              self__.takes.cleanup(cljs.core.async.impl.protocols.active_QMARK_)
            }else {
              self__.dirty_takes = self__.dirty_takes + 1
            }
            if(self__.takes.length < cljs.core.async.impl.protocols.MAX_QUEUE_SIZE) {
            }else {
              throw new Error([cljs.core.str("Assert failed: "), cljs.core.str([cljs.core.str("No more than "), cljs.core.str(cljs.core.async.impl.protocols.MAX_QUEUE_SIZE), cljs.core.str(" pending takes are allowed on a single channel.")].join("")), cljs.core.str("\n"), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "<", "<", -1640531467, null), cljs.core.list(new cljs.core.Symbol(null, ".-length", ".-length", 1395928862, null), new cljs.core.Symbol(null, "takes", 
              "takes", -1530407291, null)), new cljs.core.Symbol("impl", "MAX-QUEUE-SIZE", "impl/MAX-QUEUE-SIZE", -1989946393, null))))].join(""));
            }
            self__.takes.unbounded_unshift(handler);
            return null
          }
        }
        break
      }
    }
  }
};
cljs.core.async.impl.channels.ManyToManyChannel.prototype.cljs$core$async$impl$protocols$WritePort$ = true;
cljs.core.async.impl.channels.ManyToManyChannel.prototype.cljs$core$async$impl$protocols$WritePort$put_BANG_$arity$3 = function(this$, val, handler) {
  var self__ = this;
  var this$__$1 = this;
  if(!(val == null)) {
  }else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str("Can't put nil in on a channel"), cljs.core.str("\n"), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "not", "not", -1640422260, null), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", -1637150201, null), new cljs.core.Symbol(null, "val", "val", -1640415014, null)))))].join(""));
  }
  var closed__$1 = self__.closed;
  if(closed__$1 || !cljs.core.async.impl.protocols.active_QMARK_.call(null, handler)) {
    return cljs.core.async.impl.channels.box.call(null, null)
  }else {
    while(true) {
      var taker = self__.takes.pop();
      if(!(taker == null)) {
        if(cljs.core.async.impl.protocols.active_QMARK_.call(null, taker)) {
          var take_cb = cljs.core.async.impl.protocols.commit.call(null, taker);
          var _ = cljs.core.async.impl.protocols.commit.call(null, handler);
          cljs.core.async.impl.dispatch.run.call(null, function(take_cb, _, taker) {
            return function() {
              return take_cb.call(null, val)
            }
          }(take_cb, _, taker));
          return cljs.core.async.impl.channels.box.call(null, null)
        }else {
          continue
        }
      }else {
        if(!(self__.buf == null || cljs.core.async.impl.protocols.full_QMARK_.call(null, self__.buf))) {
          var _ = cljs.core.async.impl.protocols.commit.call(null, handler);
          cljs.core.async.impl.protocols.add_BANG_.call(null, self__.buf, val);
          return cljs.core.async.impl.channels.box.call(null, null)
        }else {
          if(self__.dirty_puts > cljs.core.async.impl.channels.MAX_DIRTY) {
            self__.dirty_puts = 0;
            self__.puts.cleanup(cljs.core.async.impl.channels.put_active_QMARK_)
          }else {
            self__.dirty_puts = self__.dirty_puts + 1
          }
          if(self__.puts.length < cljs.core.async.impl.protocols.MAX_QUEUE_SIZE) {
          }else {
            throw new Error([cljs.core.str("Assert failed: "), cljs.core.str([cljs.core.str("No more than "), cljs.core.str(cljs.core.async.impl.protocols.MAX_QUEUE_SIZE), cljs.core.str(" pending puts are allowed on a single channel."), cljs.core.str(" Consider using a windowed buffer.")].join("")), cljs.core.str("\n"), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "<", "<", -1640531467, null), cljs.core.list(new cljs.core.Symbol(null, ".-length", ".-length", 
            1395928862, null), new cljs.core.Symbol(null, "puts", "puts", -1637078787, null)), new cljs.core.Symbol("impl", "MAX-QUEUE-SIZE", "impl/MAX-QUEUE-SIZE", -1989946393, null))))].join(""));
          }
          self__.puts.unbounded_unshift(new cljs.core.async.impl.channels.PutBox(handler, val));
          return null
        }
      }
      break
    }
  }
};
cljs.core.async.impl.channels.__GT_ManyToManyChannel = function __GT_ManyToManyChannel(takes, dirty_takes, puts, dirty_puts, buf, closed) {
  return new cljs.core.async.impl.channels.ManyToManyChannel(takes, dirty_takes, puts, dirty_puts, buf, closed)
};
cljs.core.async.impl.channels.chan = function chan(buf) {
  return new cljs.core.async.impl.channels.ManyToManyChannel(cljs.core.async.impl.buffers.ring_buffer.call(null, 32), 0, cljs.core.async.impl.buffers.ring_buffer.call(null, 32), 0, buf, null)
};
goog.provide("cljs.core.async.impl.timers");
goog.require("cljs.core");
goog.require("cljs.core.async.impl.dispatch");
goog.require("cljs.core.async.impl.dispatch");
goog.require("cljs.core.async.impl.channels");
goog.require("cljs.core.async.impl.channels");
goog.require("cljs.core.async.impl.protocols");
goog.require("cljs.core.async.impl.protocols");
cljs.core.async.impl.timers.MAX_LEVEL = 15;
cljs.core.async.impl.timers.P = 1 / 2;
cljs.core.async.impl.timers.random_level = function() {
  var random_level = null;
  var random_level__0 = function() {
    return random_level.call(null, 0)
  };
  var random_level__1 = function(level) {
    while(true) {
      if(Math.random() < cljs.core.async.impl.timers.P && level < cljs.core.async.impl.timers.MAX_LEVEL) {
        var G__531743 = level + 1;
        level = G__531743;
        continue
      }else {
        return level
      }
      break
    }
  };
  random_level = function(level) {
    switch(arguments.length) {
      case 0:
        return random_level__0.call(this);
      case 1:
        return random_level__1.call(this, level)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  random_level.cljs$core$IFn$_invoke$arity$0 = random_level__0;
  random_level.cljs$core$IFn$_invoke$arity$1 = random_level__1;
  return random_level
}();
cljs.core.async.impl.timers.SkipListNode = function(key, val, forward) {
  this.key = key;
  this.val = val;
  this.forward = forward;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 2155872256
};
cljs.core.async.impl.timers.SkipListNode.cljs$lang$type = true;
cljs.core.async.impl.timers.SkipListNode.cljs$lang$ctorStr = "cljs.core.async.impl.timers/SkipListNode";
cljs.core.async.impl.timers.SkipListNode.cljs$lang$ctorPrWriter = function(this__3829__auto__, writer__3830__auto__, opt__3831__auto__) {
  return cljs.core._write.call(null, writer__3830__auto__, "cljs.core.async.impl.timers/SkipListNode")
};
cljs.core.async.impl.timers.SkipListNode.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "[", " ", "]", opts, coll__$1)
};
cljs.core.async.impl.timers.SkipListNode.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, self__.val), self__.key)
};
cljs.core.async.impl.timers.__GT_SkipListNode = function __GT_SkipListNode(key, val, forward) {
  return new cljs.core.async.impl.timers.SkipListNode(key, val, forward)
};
cljs.core.async.impl.timers.skip_list_node = function() {
  var skip_list_node = null;
  var skip_list_node__1 = function(level) {
    return skip_list_node.call(null, null, null, level)
  };
  var skip_list_node__3 = function(k, v, level) {
    var arr = new Array(level + 1);
    var i_531744 = 0;
    while(true) {
      if(i_531744 < arr.length) {
        arr[i_531744] = null;
        var G__531745 = i_531744 + 1;
        i_531744 = G__531745;
        continue
      }else {
      }
      break
    }
    return new cljs.core.async.impl.timers.SkipListNode(k, v, arr)
  };
  skip_list_node = function(k, v, level) {
    switch(arguments.length) {
      case 1:
        return skip_list_node__1.call(this, k);
      case 3:
        return skip_list_node__3.call(this, k, v, level)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  skip_list_node.cljs$core$IFn$_invoke$arity$1 = skip_list_node__1;
  skip_list_node.cljs$core$IFn$_invoke$arity$3 = skip_list_node__3;
  return skip_list_node
}();
cljs.core.async.impl.timers.least_greater_node = function() {
  var least_greater_node = null;
  var least_greater_node__3 = function(x, k, level) {
    return least_greater_node.call(null, x, k, level, null)
  };
  var least_greater_node__4 = function(x, k, level, update) {
    while(true) {
      if(!(level < 0)) {
        var x__$1 = function() {
          var x__$1 = x;
          while(true) {
            var temp__4090__auto__ = x__$1.forward[level];
            if(cljs.core.truth_(temp__4090__auto__)) {
              var x_SINGLEQUOTE_ = temp__4090__auto__;
              if(x_SINGLEQUOTE_.key < k) {
                var G__531746 = x_SINGLEQUOTE_;
                x__$1 = G__531746;
                continue
              }else {
                return x__$1
              }
            }else {
              return x__$1
            }
            break
          }
        }();
        if(update == null) {
        }else {
          update[level] = x__$1
        }
        var G__531747 = x__$1;
        var G__531748 = k;
        var G__531749 = level - 1;
        var G__531750 = update;
        x = G__531747;
        k = G__531748;
        level = G__531749;
        update = G__531750;
        continue
      }else {
        return x
      }
      break
    }
  };
  least_greater_node = function(x, k, level, update) {
    switch(arguments.length) {
      case 3:
        return least_greater_node__3.call(this, x, k, level);
      case 4:
        return least_greater_node__4.call(this, x, k, level, update)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  least_greater_node.cljs$core$IFn$_invoke$arity$3 = least_greater_node__3;
  least_greater_node.cljs$core$IFn$_invoke$arity$4 = least_greater_node__4;
  return least_greater_node
}();
cljs.core.async.impl.timers.SkipList = function(header, level) {
  this.header = header;
  this.level = level;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 2155872256
};
cljs.core.async.impl.timers.SkipList.cljs$lang$type = true;
cljs.core.async.impl.timers.SkipList.cljs$lang$ctorStr = "cljs.core.async.impl.timers/SkipList";
cljs.core.async.impl.timers.SkipList.cljs$lang$ctorPrWriter = function(this__3829__auto__, writer__3830__auto__, opt__3831__auto__) {
  return cljs.core._write.call(null, writer__3830__auto__, "cljs.core.async.impl.timers/SkipList")
};
cljs.core.async.impl.timers.SkipList.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var self__ = this;
  var coll__$1 = this;
  var pr_pair = function(keyval) {
    return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "", " ", "", opts, keyval)
  };
  return cljs.core.pr_sequential_writer.call(null, writer, pr_pair, "{", ", ", "}", opts, coll__$1)
};
cljs.core.async.impl.timers.SkipList.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var iter = function iter(node) {
    return new cljs.core.LazySeq(null, function() {
      if(node == null) {
        return null
      }else {
        return cljs.core.cons.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [node.key, node.val], null), iter.call(null, node.forward[0]))
      }
    }, null, null)
  };
  return iter.call(null, self__.header.forward[0])
};
cljs.core.async.impl.timers.SkipList.prototype.put = function(k, v) {
  var self__ = this;
  var coll = this;
  var update = new Array(cljs.core.async.impl.timers.MAX_LEVEL);
  var x = cljs.core.async.impl.timers.least_greater_node.call(null, self__.header, k, self__.level, update);
  var x__$1 = x.forward[0];
  if(!(x__$1 == null) && x__$1.key === k) {
    return x__$1.val = v
  }else {
    var new_level = cljs.core.async.impl.timers.random_level.call(null);
    if(new_level > self__.level) {
      var i_531751 = self__.level + 1;
      while(true) {
        if(i_531751 <= new_level + 1) {
          update[i_531751] = self__.header;
          var G__531752 = i_531751 + 1;
          i_531751 = G__531752;
          continue
        }else {
        }
        break
      }
      self__.level = new_level
    }else {
    }
    var x__$2 = cljs.core.async.impl.timers.skip_list_node.call(null, k, v, new Array(new_level));
    var i = 0;
    while(true) {
      if(i <= self__.level) {
        var links = update[i].forward;
        x__$2.forward[i] = links[i];
        return links[i] = x__$2
      }else {
        return null
      }
      break
    }
  }
};
cljs.core.async.impl.timers.SkipList.prototype.remove = function(k) {
  var self__ = this;
  var coll = this;
  var update = new Array(cljs.core.async.impl.timers.MAX_LEVEL);
  var x = cljs.core.async.impl.timers.least_greater_node.call(null, self__.header, k, self__.level, update);
  var x__$1 = x.forward[0];
  if(!(x__$1 == null) && x__$1.key === k) {
    var i_531753 = 0;
    while(true) {
      if(i_531753 <= self__.level) {
        var links_531754 = update[i_531753].forward;
        if(links_531754[i_531753] === x__$1) {
          links_531754[i_531753] = x__$1.forward[i_531753];
          var G__531755 = i_531753 + 1;
          i_531753 = G__531755;
          continue
        }else {
          var G__531756 = i_531753 + 1;
          i_531753 = G__531756;
          continue
        }
      }else {
      }
      break
    }
    while(true) {
      if(self__.level > 0 && self__.header.forward[self__.level] == null) {
        self__.level = self__.level - 1;
        continue
      }else {
        return null
      }
      break
    }
  }else {
    return null
  }
};
cljs.core.async.impl.timers.SkipList.prototype.ceilingEntry = function(k) {
  var self__ = this;
  var coll = this;
  var x = self__.header;
  var level__$1 = self__.level;
  while(true) {
    if(!(level__$1 < 0)) {
      var nx = function() {
        var x__$1 = x;
        while(true) {
          var x_SINGLEQUOTE_ = x__$1.forward[level__$1];
          if(x_SINGLEQUOTE_ == null) {
            return null
          }else {
            if(x_SINGLEQUOTE_.key >= k) {
              return x_SINGLEQUOTE_
            }else {
              var G__531757 = x_SINGLEQUOTE_;
              x__$1 = G__531757;
              continue
            }
          }
          break
        }
      }();
      if(!(nx == null)) {
        var G__531758 = nx;
        var G__531759 = level__$1 - 1;
        x = G__531758;
        level__$1 = G__531759;
        continue
      }else {
        var G__531760 = x;
        var G__531761 = level__$1 - 1;
        x = G__531760;
        level__$1 = G__531761;
        continue
      }
    }else {
      if(x === self__.header) {
        return null
      }else {
        return x
      }
    }
    break
  }
};
cljs.core.async.impl.timers.SkipList.prototype.floorEntry = function(k) {
  var self__ = this;
  var coll = this;
  var x = self__.header;
  var level__$1 = self__.level;
  while(true) {
    if(!(level__$1 < 0)) {
      var nx = function() {
        var x__$1 = x;
        while(true) {
          var x_SINGLEQUOTE_ = x__$1.forward[level__$1];
          if(!(x_SINGLEQUOTE_ == null)) {
            if(x_SINGLEQUOTE_.key > k) {
              return x__$1
            }else {
              var G__531762 = x_SINGLEQUOTE_;
              x__$1 = G__531762;
              continue
            }
          }else {
            if(level__$1 === 0) {
              return x__$1
            }else {
              return null
            }
          }
          break
        }
      }();
      if(cljs.core.truth_(nx)) {
        var G__531763 = nx;
        var G__531764 = level__$1 - 1;
        x = G__531763;
        level__$1 = G__531764;
        continue
      }else {
        var G__531765 = x;
        var G__531766 = level__$1 - 1;
        x = G__531765;
        level__$1 = G__531766;
        continue
      }
    }else {
      if(x === self__.header) {
        return null
      }else {
        return x
      }
    }
    break
  }
};
cljs.core.async.impl.timers.__GT_SkipList = function __GT_SkipList(header, level) {
  return new cljs.core.async.impl.timers.SkipList(header, level)
};
cljs.core.async.impl.timers.skip_list = function skip_list() {
  return new cljs.core.async.impl.timers.SkipList(cljs.core.async.impl.timers.skip_list_node.call(null, 0), 0)
};
cljs.core.async.impl.timers.timeouts_map = cljs.core.async.impl.timers.skip_list.call(null);
cljs.core.async.impl.timers.TIMEOUT_RESOLUTION_MS = 10;
cljs.core.async.impl.timers.timeout = function timeout(msecs) {
  var timeout__$1 = (new Date).valueOf() + msecs;
  var me = cljs.core.async.impl.timers.timeouts_map.ceilingEntry(timeout__$1);
  var or__3285__auto__ = cljs.core.truth_(function() {
    var and__3273__auto__ = me;
    if(cljs.core.truth_(and__3273__auto__)) {
      return me.key < timeout__$1 + cljs.core.async.impl.timers.TIMEOUT_RESOLUTION_MS
    }else {
      return and__3273__auto__
    }
  }()) ? me.val : null;
  if(cljs.core.truth_(or__3285__auto__)) {
    return or__3285__auto__
  }else {
    var timeout_channel = cljs.core.async.impl.channels.chan.call(null, null);
    cljs.core.async.impl.timers.timeouts_map.put(timeout__$1, timeout_channel);
    cljs.core.async.impl.dispatch.queue_delay.call(null, function() {
      cljs.core.async.impl.timers.timeouts_map.remove(timeout__$1);
      return cljs.core.async.impl.protocols.close_BANG_.call(null, timeout_channel)
    }, msecs);
    return timeout_channel
  }
};
goog.provide("cljs.core.async");
goog.require("cljs.core");
goog.require("cljs.core.async.impl.ioc_helpers");
goog.require("cljs.core.async.impl.protocols");
goog.require("cljs.core.async.impl.buffers");
goog.require("cljs.core.async.impl.timers");
goog.require("cljs.core.async.impl.channels");
goog.require("cljs.core.async.impl.dispatch");
goog.require("cljs.core.async.impl.dispatch");
goog.require("cljs.core.async.impl.buffers");
goog.require("cljs.core.async.impl.protocols");
goog.require("cljs.core.async.impl.timers");
goog.require("cljs.core.async.impl.channels");
goog.require("cljs.core.async.impl.ioc_helpers");
cljs.core.async.fn_handler = function fn_handler(f) {
  if(typeof cljs.core.async.t529833 !== "undefined") {
  }else {
    cljs.core.async.t529833 = function(f, fn_handler, meta529834) {
      this.f = f;
      this.fn_handler = fn_handler;
      this.meta529834 = meta529834;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216
    };
    cljs.core.async.t529833.cljs$lang$type = true;
    cljs.core.async.t529833.cljs$lang$ctorStr = "cljs.core.async/t529833";
    cljs.core.async.t529833.cljs$lang$ctorPrWriter = function(this__3829__auto__, writer__3830__auto__, opt__3831__auto__) {
      return cljs.core._write.call(null, writer__3830__auto__, "cljs.core.async/t529833")
    };
    cljs.core.async.t529833.prototype.cljs$core$async$impl$protocols$Handler$ = true;
    cljs.core.async.t529833.prototype.cljs$core$async$impl$protocols$Handler$active_QMARK_$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return true
    };
    cljs.core.async.t529833.prototype.cljs$core$async$impl$protocols$Handler$commit$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return self__.f
    };
    cljs.core.async.t529833.prototype.cljs$core$IMeta$_meta$arity$1 = function(_529835) {
      var self__ = this;
      var _529835__$1 = this;
      return self__.meta529834
    };
    cljs.core.async.t529833.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_529835, meta529834__$1) {
      var self__ = this;
      var _529835__$1 = this;
      return new cljs.core.async.t529833(self__.f, self__.fn_handler, meta529834__$1)
    };
    cljs.core.async.__GT_t529833 = function __GT_t529833(f__$1, fn_handler__$1, meta529834) {
      return new cljs.core.async.t529833(f__$1, fn_handler__$1, meta529834)
    }
  }
  return new cljs.core.async.t529833(f, fn_handler, null)
};
cljs.core.async.buffer = function buffer(n) {
  return cljs.core.async.impl.buffers.fixed_buffer.call(null, n)
};
cljs.core.async.dropping_buffer = function dropping_buffer(n) {
  return cljs.core.async.impl.buffers.dropping_buffer.call(null, n)
};
cljs.core.async.sliding_buffer = function sliding_buffer(n) {
  return cljs.core.async.impl.buffers.sliding_buffer.call(null, n)
};
cljs.core.async.chan = function() {
  var chan = null;
  var chan__0 = function() {
    return chan.call(null, null)
  };
  var chan__1 = function(buf_or_n) {
    var buf_or_n__$1 = cljs.core._EQ_.call(null, buf_or_n, 0) ? null : buf_or_n;
    return cljs.core.async.impl.channels.chan.call(null, typeof buf_or_n__$1 === "number" ? cljs.core.async.buffer.call(null, buf_or_n__$1) : buf_or_n__$1)
  };
  chan = function(buf_or_n) {
    switch(arguments.length) {
      case 0:
        return chan__0.call(this);
      case 1:
        return chan__1.call(this, buf_or_n)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  chan.cljs$core$IFn$_invoke$arity$0 = chan__0;
  chan.cljs$core$IFn$_invoke$arity$1 = chan__1;
  return chan
}();
cljs.core.async.timeout = function timeout(msecs) {
  return cljs.core.async.impl.timers.timeout.call(null, msecs)
};
cljs.core.async._LT__BANG_ = function _LT__BANG_(port) {
  if(null) {
    return null
  }else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str("<! used not in (go ...) block"), cljs.core.str("\n"), cljs.core.str(cljs.core.pr_str.call(null, null))].join(""));
  }
};
cljs.core.async.take_BANG_ = function() {
  var take_BANG_ = null;
  var take_BANG___2 = function(port, fn1) {
    return take_BANG_.call(null, port, fn1, true)
  };
  var take_BANG___3 = function(port, fn1, on_caller_QMARK_) {
    var ret = cljs.core.async.impl.protocols.take_BANG_.call(null, port, cljs.core.async.fn_handler.call(null, fn1));
    if(cljs.core.truth_(ret)) {
      var val_529836 = cljs.core.deref.call(null, ret);
      if(cljs.core.truth_(on_caller_QMARK_)) {
        fn1.call(null, val_529836)
      }else {
        cljs.core.async.impl.dispatch.run.call(null, function() {
          return fn1.call(null, val_529836)
        })
      }
    }else {
    }
    return null
  };
  take_BANG_ = function(port, fn1, on_caller_QMARK_) {
    switch(arguments.length) {
      case 2:
        return take_BANG___2.call(this, port, fn1);
      case 3:
        return take_BANG___3.call(this, port, fn1, on_caller_QMARK_)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  take_BANG_.cljs$core$IFn$_invoke$arity$2 = take_BANG___2;
  take_BANG_.cljs$core$IFn$_invoke$arity$3 = take_BANG___3;
  return take_BANG_
}();
cljs.core.async.nop = function nop() {
  return null
};
cljs.core.async._GT__BANG_ = function _GT__BANG_(port, val) {
  if(null) {
    return null
  }else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(">! used not in (go ...) block"), cljs.core.str("\n"), cljs.core.str(cljs.core.pr_str.call(null, null))].join(""));
  }
};
cljs.core.async.put_BANG_ = function() {
  var put_BANG_ = null;
  var put_BANG___2 = function(port, val) {
    return put_BANG_.call(null, port, val, cljs.core.async.nop)
  };
  var put_BANG___3 = function(port, val, fn0) {
    return put_BANG_.call(null, port, val, fn0, true)
  };
  var put_BANG___4 = function(port, val, fn0, on_caller_QMARK_) {
    var ret = cljs.core.async.impl.protocols.put_BANG_.call(null, port, val, cljs.core.async.fn_handler.call(null, fn0));
    if(cljs.core.truth_(function() {
      var and__3273__auto__ = ret;
      if(cljs.core.truth_(and__3273__auto__)) {
        return cljs.core.not_EQ_.call(null, fn0, cljs.core.async.nop)
      }else {
        return and__3273__auto__
      }
    }())) {
      if(cljs.core.truth_(on_caller_QMARK_)) {
        fn0.call(null)
      }else {
        cljs.core.async.impl.dispatch.run.call(null, fn0)
      }
    }else {
    }
    return null
  };
  put_BANG_ = function(port, val, fn0, on_caller_QMARK_) {
    switch(arguments.length) {
      case 2:
        return put_BANG___2.call(this, port, val);
      case 3:
        return put_BANG___3.call(this, port, val, fn0);
      case 4:
        return put_BANG___4.call(this, port, val, fn0, on_caller_QMARK_)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  put_BANG_.cljs$core$IFn$_invoke$arity$2 = put_BANG___2;
  put_BANG_.cljs$core$IFn$_invoke$arity$3 = put_BANG___3;
  put_BANG_.cljs$core$IFn$_invoke$arity$4 = put_BANG___4;
  return put_BANG_
}();
cljs.core.async.close_BANG_ = function close_BANG_(port) {
  return cljs.core.async.impl.protocols.close_BANG_.call(null, port)
};
cljs.core.async.random_array = function random_array(n) {
  var a = new Array(n);
  var n__4108__auto___529837 = n;
  var x_529838 = 0;
  while(true) {
    if(x_529838 < n__4108__auto___529837) {
      a[x_529838] = 0;
      var G__529839 = x_529838 + 1;
      x_529838 = G__529839;
      continue
    }else {
    }
    break
  }
  var i = 1;
  while(true) {
    if(cljs.core._EQ_.call(null, i, n)) {
      return a
    }else {
      var j = cljs.core.rand_int.call(null, i);
      a[i] = a[j];
      a[j] = i;
      var G__529840 = i + 1;
      i = G__529840;
      continue
    }
    break
  }
};
cljs.core.async.alt_flag = function alt_flag() {
  var flag = cljs.core.atom.call(null, true);
  if(typeof cljs.core.async.t529844 !== "undefined") {
  }else {
    cljs.core.async.t529844 = function(flag, alt_flag, meta529845) {
      this.flag = flag;
      this.alt_flag = alt_flag;
      this.meta529845 = meta529845;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216
    };
    cljs.core.async.t529844.cljs$lang$type = true;
    cljs.core.async.t529844.cljs$lang$ctorStr = "cljs.core.async/t529844";
    cljs.core.async.t529844.cljs$lang$ctorPrWriter = function(this__3829__auto__, writer__3830__auto__, opt__3831__auto__) {
      return cljs.core._write.call(null, writer__3830__auto__, "cljs.core.async/t529844")
    };
    cljs.core.async.t529844.prototype.cljs$core$async$impl$protocols$Handler$ = true;
    cljs.core.async.t529844.prototype.cljs$core$async$impl$protocols$Handler$active_QMARK_$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return cljs.core.deref.call(null, self__.flag)
    };
    cljs.core.async.t529844.prototype.cljs$core$async$impl$protocols$Handler$commit$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      cljs.core.reset_BANG_.call(null, self__.flag, null);
      return true
    };
    cljs.core.async.t529844.prototype.cljs$core$IMeta$_meta$arity$1 = function(_529846) {
      var self__ = this;
      var _529846__$1 = this;
      return self__.meta529845
    };
    cljs.core.async.t529844.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_529846, meta529845__$1) {
      var self__ = this;
      var _529846__$1 = this;
      return new cljs.core.async.t529844(self__.flag, self__.alt_flag, meta529845__$1)
    };
    cljs.core.async.__GT_t529844 = function __GT_t529844(flag__$1, alt_flag__$1, meta529845) {
      return new cljs.core.async.t529844(flag__$1, alt_flag__$1, meta529845)
    }
  }
  return new cljs.core.async.t529844(flag, alt_flag, null)
};
cljs.core.async.alt_handler = function alt_handler(flag, cb) {
  if(typeof cljs.core.async.t529850 !== "undefined") {
  }else {
    cljs.core.async.t529850 = function(cb, flag, alt_handler, meta529851) {
      this.cb = cb;
      this.flag = flag;
      this.alt_handler = alt_handler;
      this.meta529851 = meta529851;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216
    };
    cljs.core.async.t529850.cljs$lang$type = true;
    cljs.core.async.t529850.cljs$lang$ctorStr = "cljs.core.async/t529850";
    cljs.core.async.t529850.cljs$lang$ctorPrWriter = function(this__3829__auto__, writer__3830__auto__, opt__3831__auto__) {
      return cljs.core._write.call(null, writer__3830__auto__, "cljs.core.async/t529850")
    };
    cljs.core.async.t529850.prototype.cljs$core$async$impl$protocols$Handler$ = true;
    cljs.core.async.t529850.prototype.cljs$core$async$impl$protocols$Handler$active_QMARK_$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return cljs.core.async.impl.protocols.active_QMARK_.call(null, self__.flag)
    };
    cljs.core.async.t529850.prototype.cljs$core$async$impl$protocols$Handler$commit$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      cljs.core.async.impl.protocols.commit.call(null, self__.flag);
      return self__.cb
    };
    cljs.core.async.t529850.prototype.cljs$core$IMeta$_meta$arity$1 = function(_529852) {
      var self__ = this;
      var _529852__$1 = this;
      return self__.meta529851
    };
    cljs.core.async.t529850.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_529852, meta529851__$1) {
      var self__ = this;
      var _529852__$1 = this;
      return new cljs.core.async.t529850(self__.cb, self__.flag, self__.alt_handler, meta529851__$1)
    };
    cljs.core.async.__GT_t529850 = function __GT_t529850(cb__$1, flag__$1, alt_handler__$1, meta529851) {
      return new cljs.core.async.t529850(cb__$1, flag__$1, alt_handler__$1, meta529851)
    }
  }
  return new cljs.core.async.t529850(cb, flag, alt_handler, null)
};
cljs.core.async.do_alts = function do_alts(fret, ports, opts) {
  var flag = cljs.core.async.alt_flag.call(null);
  var n = cljs.core.count.call(null, ports);
  var idxs = cljs.core.async.random_array.call(null, n);
  var priority = (new cljs.core.Keyword(null, "priority", "priority", 4143410454)).cljs$core$IFn$_invoke$arity$1(opts);
  var ret = function() {
    var i = 0;
    while(true) {
      if(i < n) {
        var idx = cljs.core.truth_(priority) ? i : idxs[i];
        var port = cljs.core.nth.call(null, ports, idx);
        var wport = cljs.core.vector_QMARK_.call(null, port) ? port.call(null, 0) : null;
        var vbox = cljs.core.truth_(wport) ? function() {
          var val = port.call(null, 1);
          return cljs.core.async.impl.protocols.put_BANG_.call(null, wport, val, cljs.core.async.alt_handler.call(null, flag, function(i, val, idx, port, wport, flag, n, idxs, priority) {
            return function() {
              return fret.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, wport], null))
            }
          }(i, val, idx, port, wport, flag, n, idxs, priority)))
        }() : cljs.core.async.impl.protocols.take_BANG_.call(null, port, cljs.core.async.alt_handler.call(null, flag, function(i, idx, port, wport, flag, n, idxs, priority) {
          return function(p1__529853_SHARP_) {
            return fret.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [p1__529853_SHARP_, port], null))
          }
        }(i, idx, port, wport, flag, n, idxs, priority)));
        if(cljs.core.truth_(vbox)) {
          return cljs.core.async.impl.channels.box.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.deref.call(null, vbox), function() {
            var or__3285__auto__ = wport;
            if(cljs.core.truth_(or__3285__auto__)) {
              return or__3285__auto__
            }else {
              return port
            }
          }()], null))
        }else {
          var G__529854 = i + 1;
          i = G__529854;
          continue
        }
      }else {
        return null
      }
      break
    }
  }();
  var or__3285__auto__ = ret;
  if(cljs.core.truth_(or__3285__auto__)) {
    return or__3285__auto__
  }else {
    if(cljs.core.contains_QMARK_.call(null, opts, new cljs.core.Keyword(null, "default", "default", 2558708147))) {
      var temp__4092__auto__ = function() {
        var and__3273__auto__ = cljs.core.async.impl.protocols.active_QMARK_.call(null, flag);
        if(cljs.core.truth_(and__3273__auto__)) {
          return cljs.core.async.impl.protocols.commit.call(null, flag)
        }else {
          return and__3273__auto__
        }
      }();
      if(cljs.core.truth_(temp__4092__auto__)) {
        var got = temp__4092__auto__;
        return cljs.core.async.impl.channels.box.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(new cljs.core.Keyword(null, "default", "default", 2558708147)).cljs$core$IFn$_invoke$arity$1(opts), new cljs.core.Keyword(null, "default", "default", 2558708147)], null))
      }else {
        return null
      }
    }else {
      return null
    }
  }
};
cljs.core.async.alts_BANG_ = function() {
  var alts_BANG___delegate = function(ports, p__529855) {
    var map__529857 = p__529855;
    var map__529857__$1 = cljs.core.seq_QMARK_.call(null, map__529857) ? cljs.core.apply.call(null, cljs.core.hash_map, map__529857) : map__529857;
    var opts = map__529857__$1;
    if(null) {
      return null
    }else {
      throw new Error([cljs.core.str("Assert failed: "), cljs.core.str("alts! used not in (go ...) block"), cljs.core.str("\n"), cljs.core.str(cljs.core.pr_str.call(null, null))].join(""));
    }
  };
  var alts_BANG_ = function(ports, var_args) {
    var p__529855 = null;
    if(arguments.length > 1) {
      p__529855 = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
    }
    return alts_BANG___delegate.call(this, ports, p__529855)
  };
  alts_BANG_.cljs$lang$maxFixedArity = 1;
  alts_BANG_.cljs$lang$applyTo = function(arglist__529858) {
    var ports = cljs.core.first(arglist__529858);
    var p__529855 = cljs.core.rest(arglist__529858);
    return alts_BANG___delegate(ports, p__529855)
  };
  alts_BANG_.cljs$core$IFn$_invoke$arity$variadic = alts_BANG___delegate;
  return alts_BANG_
}();
cljs.core.async.map_LT_ = function map_LT_(f, ch) {
  if(typeof cljs.core.async.t529866 !== "undefined") {
  }else {
    cljs.core.async.t529866 = function(ch, f, map_LT_, meta529867) {
      this.ch = ch;
      this.f = f;
      this.map_LT_ = map_LT_;
      this.meta529867 = meta529867;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216
    };
    cljs.core.async.t529866.cljs$lang$type = true;
    cljs.core.async.t529866.cljs$lang$ctorStr = "cljs.core.async/t529866";
    cljs.core.async.t529866.cljs$lang$ctorPrWriter = function(this__3829__auto__, writer__3830__auto__, opt__3831__auto__) {
      return cljs.core._write.call(null, writer__3830__auto__, "cljs.core.async/t529866")
    };
    cljs.core.async.t529866.prototype.cljs$core$async$impl$protocols$WritePort$ = true;
    cljs.core.async.t529866.prototype.cljs$core$async$impl$protocols$WritePort$put_BANG_$arity$3 = function(_, val, fn0) {
      var self__ = this;
      var ___$1 = this;
      return cljs.core.async.impl.protocols.put_BANG_.call(null, self__.ch, val, fn0)
    };
    cljs.core.async.t529866.prototype.cljs$core$async$impl$protocols$ReadPort$ = true;
    cljs.core.async.t529866.prototype.cljs$core$async$impl$protocols$ReadPort$take_BANG_$arity$2 = function(_, fn1) {
      var self__ = this;
      var ___$1 = this;
      var ret = cljs.core.async.impl.protocols.take_BANG_.call(null, self__.ch, function() {
        if(typeof cljs.core.async.t529869 !== "undefined") {
        }else {
          cljs.core.async.t529869 = function(fn1, _, meta529867, ch, f, map_LT_, meta529870) {
            this.fn1 = fn1;
            this._ = _;
            this.meta529867 = meta529867;
            this.ch = ch;
            this.f = f;
            this.map_LT_ = map_LT_;
            this.meta529870 = meta529870;
            this.cljs$lang$protocol_mask$partition1$ = 0;
            this.cljs$lang$protocol_mask$partition0$ = 393216
          };
          cljs.core.async.t529869.cljs$lang$type = true;
          cljs.core.async.t529869.cljs$lang$ctorStr = "cljs.core.async/t529869";
          cljs.core.async.t529869.cljs$lang$ctorPrWriter = function(this__3829__auto__, writer__3830__auto__, opt__3831__auto__) {
            return cljs.core._write.call(null, writer__3830__auto__, "cljs.core.async/t529869")
          };
          cljs.core.async.t529869.prototype.cljs$core$async$impl$protocols$Handler$ = true;
          cljs.core.async.t529869.prototype.cljs$core$async$impl$protocols$Handler$active_QMARK_$arity$1 = function(___$3) {
            var self__ = this;
            var ___$4 = this;
            return cljs.core.async.impl.protocols.active_QMARK_.call(null, self__.fn1)
          };
          cljs.core.async.t529869.prototype.cljs$core$async$impl$protocols$Handler$lock_id$arity$1 = function(___$3) {
            var self__ = this;
            var ___$4 = this;
            return cljs.core.async.impl.protocols.lock_id.call(null, self__.fn1)
          };
          cljs.core.async.t529869.prototype.cljs$core$async$impl$protocols$Handler$commit$arity$1 = function(___$3) {
            var self__ = this;
            var ___$4 = this;
            var f1 = cljs.core.async.impl.protocols.commit.call(null, self__.fn1);
            return function(f1, ___$4) {
              return function(p1__529859_SHARP_) {
                return f1.call(null, p1__529859_SHARP_ == null ? null : self__.f.call(null, p1__529859_SHARP_))
              }
            }(f1, ___$4)
          };
          cljs.core.async.t529869.prototype.cljs$core$IMeta$_meta$arity$1 = function(_529871) {
            var self__ = this;
            var _529871__$1 = this;
            return self__.meta529870
          };
          cljs.core.async.t529869.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_529871, meta529870__$1) {
            var self__ = this;
            var _529871__$1 = this;
            return new cljs.core.async.t529869(self__.fn1, self__._, self__.meta529867, self__.ch, self__.f, self__.map_LT_, meta529870__$1)
          };
          cljs.core.async.__GT_t529869 = function __GT_t529869(fn1__$1, ___$2, meta529867__$1, ch__$2, f__$2, map_LT___$2, meta529870) {
            return new cljs.core.async.t529869(fn1__$1, ___$2, meta529867__$1, ch__$2, f__$2, map_LT___$2, meta529870)
          }
        }
        return new cljs.core.async.t529869(fn1, ___$1, self__.meta529867, self__.ch, self__.f, self__.map_LT_, null)
      }());
      if(cljs.core.truth_(function() {
        var and__3273__auto__ = ret;
        if(cljs.core.truth_(and__3273__auto__)) {
          return!(cljs.core.deref.call(null, ret) == null)
        }else {
          return and__3273__auto__
        }
      }())) {
        return cljs.core.async.impl.channels.box.call(null, self__.f.call(null, cljs.core.deref.call(null, ret)))
      }else {
        return ret
      }
    };
    cljs.core.async.t529866.prototype.cljs$core$async$impl$protocols$Channel$ = true;
    cljs.core.async.t529866.prototype.cljs$core$async$impl$protocols$Channel$close_BANG_$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return cljs.core.async.impl.protocols.close_BANG_.call(null, self__.ch)
    };
    cljs.core.async.t529866.prototype.cljs$core$IMeta$_meta$arity$1 = function(_529868) {
      var self__ = this;
      var _529868__$1 = this;
      return self__.meta529867
    };
    cljs.core.async.t529866.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_529868, meta529867__$1) {
      var self__ = this;
      var _529868__$1 = this;
      return new cljs.core.async.t529866(self__.ch, self__.f, self__.map_LT_, meta529867__$1)
    };
    cljs.core.async.__GT_t529866 = function __GT_t529866(ch__$1, f__$1, map_LT___$1, meta529867) {
      return new cljs.core.async.t529866(ch__$1, f__$1, map_LT___$1, meta529867)
    }
  }
  return new cljs.core.async.t529866(ch, f, map_LT_, null)
};
cljs.core.async.map_GT_ = function map_GT_(f, ch) {
  if(typeof cljs.core.async.t529875 !== "undefined") {
  }else {
    cljs.core.async.t529875 = function(ch, f, map_GT_, meta529876) {
      this.ch = ch;
      this.f = f;
      this.map_GT_ = map_GT_;
      this.meta529876 = meta529876;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216
    };
    cljs.core.async.t529875.cljs$lang$type = true;
    cljs.core.async.t529875.cljs$lang$ctorStr = "cljs.core.async/t529875";
    cljs.core.async.t529875.cljs$lang$ctorPrWriter = function(this__3829__auto__, writer__3830__auto__, opt__3831__auto__) {
      return cljs.core._write.call(null, writer__3830__auto__, "cljs.core.async/t529875")
    };
    cljs.core.async.t529875.prototype.cljs$core$async$impl$protocols$WritePort$ = true;
    cljs.core.async.t529875.prototype.cljs$core$async$impl$protocols$WritePort$put_BANG_$arity$3 = function(_, val, fn0) {
      var self__ = this;
      var ___$1 = this;
      return cljs.core.async.impl.protocols.put_BANG_.call(null, self__.ch, self__.f.call(null, val), fn0)
    };
    cljs.core.async.t529875.prototype.cljs$core$async$impl$protocols$ReadPort$ = true;
    cljs.core.async.t529875.prototype.cljs$core$async$impl$protocols$ReadPort$take_BANG_$arity$2 = function(_, fn1) {
      var self__ = this;
      var ___$1 = this;
      return cljs.core.async.impl.protocols.take_BANG_.call(null, self__.ch, fn1)
    };
    cljs.core.async.t529875.prototype.cljs$core$async$impl$protocols$Channel$ = true;
    cljs.core.async.t529875.prototype.cljs$core$async$impl$protocols$Channel$close_BANG_$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return cljs.core.async.impl.protocols.close_BANG_.call(null, self__.ch)
    };
    cljs.core.async.t529875.prototype.cljs$core$IMeta$_meta$arity$1 = function(_529877) {
      var self__ = this;
      var _529877__$1 = this;
      return self__.meta529876
    };
    cljs.core.async.t529875.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_529877, meta529876__$1) {
      var self__ = this;
      var _529877__$1 = this;
      return new cljs.core.async.t529875(self__.ch, self__.f, self__.map_GT_, meta529876__$1)
    };
    cljs.core.async.__GT_t529875 = function __GT_t529875(ch__$1, f__$1, map_GT___$1, meta529876) {
      return new cljs.core.async.t529875(ch__$1, f__$1, map_GT___$1, meta529876)
    }
  }
  return new cljs.core.async.t529875(ch, f, map_GT_, null)
};
cljs.core.async.filter_GT_ = function filter_GT_(p, ch) {
  if(typeof cljs.core.async.t529881 !== "undefined") {
  }else {
    cljs.core.async.t529881 = function(ch, p, filter_GT_, meta529882) {
      this.ch = ch;
      this.p = p;
      this.filter_GT_ = filter_GT_;
      this.meta529882 = meta529882;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216
    };
    cljs.core.async.t529881.cljs$lang$type = true;
    cljs.core.async.t529881.cljs$lang$ctorStr = "cljs.core.async/t529881";
    cljs.core.async.t529881.cljs$lang$ctorPrWriter = function(this__3829__auto__, writer__3830__auto__, opt__3831__auto__) {
      return cljs.core._write.call(null, writer__3830__auto__, "cljs.core.async/t529881")
    };
    cljs.core.async.t529881.prototype.cljs$core$async$impl$protocols$WritePort$ = true;
    cljs.core.async.t529881.prototype.cljs$core$async$impl$protocols$WritePort$put_BANG_$arity$3 = function(_, val, fn0) {
      var self__ = this;
      var ___$1 = this;
      if(cljs.core.truth_(self__.p.call(null, val))) {
        return cljs.core.async.impl.protocols.put_BANG_.call(null, self__.ch, val, fn0)
      }else {
        return cljs.core.async.impl.channels.box.call(null, null)
      }
    };
    cljs.core.async.t529881.prototype.cljs$core$async$impl$protocols$ReadPort$ = true;
    cljs.core.async.t529881.prototype.cljs$core$async$impl$protocols$ReadPort$take_BANG_$arity$2 = function(_, fn1) {
      var self__ = this;
      var ___$1 = this;
      return cljs.core.async.impl.protocols.take_BANG_.call(null, self__.ch, fn1)
    };
    cljs.core.async.t529881.prototype.cljs$core$async$impl$protocols$Channel$ = true;
    cljs.core.async.t529881.prototype.cljs$core$async$impl$protocols$Channel$close_BANG_$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return cljs.core.async.impl.protocols.close_BANG_.call(null, self__.ch)
    };
    cljs.core.async.t529881.prototype.cljs$core$IMeta$_meta$arity$1 = function(_529883) {
      var self__ = this;
      var _529883__$1 = this;
      return self__.meta529882
    };
    cljs.core.async.t529881.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_529883, meta529882__$1) {
      var self__ = this;
      var _529883__$1 = this;
      return new cljs.core.async.t529881(self__.ch, self__.p, self__.filter_GT_, meta529882__$1)
    };
    cljs.core.async.__GT_t529881 = function __GT_t529881(ch__$1, p__$1, filter_GT___$1, meta529882) {
      return new cljs.core.async.t529881(ch__$1, p__$1, filter_GT___$1, meta529882)
    }
  }
  return new cljs.core.async.t529881(ch, p, filter_GT_, null)
};
cljs.core.async.remove_GT_ = function remove_GT_(p, ch) {
  return cljs.core.async.filter_GT_.call(null, cljs.core.complement.call(null, p), ch)
};
cljs.core.async.filter_LT_ = function() {
  var filter_LT_ = null;
  var filter_LT___2 = function(p, ch) {
    return filter_LT_.call(null, p, ch, null)
  };
  var filter_LT___3 = function(p, ch, buf_or_n) {
    var out = cljs.core.async.chan.call(null, buf_or_n);
    var c__5728__auto___529958 = cljs.core.async.chan.call(null, 1);
    cljs.core.async.impl.dispatch.run.call(null, function() {
      var f__5729__auto__ = function() {
        var switch__5678__auto__ = function(state_529941) {
          var state_val_529942 = state_529941[1];
          if(state_val_529942 === 1) {
            var state_529941__$1 = state_529941;
            var statearr_529943_529959 = state_529941__$1;
            statearr_529943_529959[2] = null;
            statearr_529943_529959[1] = 2;
            return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
          }else {
            if(state_val_529942 === 2) {
              var state_529941__$1 = state_529941;
              return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_529941__$1, 4, ch)
            }else {
              if(state_val_529942 === 3) {
                var inst_529939 = state_529941[2];
                var state_529941__$1 = state_529941;
                return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_529941__$1, inst_529939)
              }else {
                if(state_val_529942 === 4) {
                  var inst_529923 = state_529941[5];
                  var inst_529923__$1 = state_529941[2];
                  var inst_529924 = inst_529923__$1 == null;
                  var state_529941__$1 = function() {
                    var statearr_529944 = state_529941;
                    statearr_529944[5] = inst_529923__$1;
                    return statearr_529944
                  }();
                  if(cljs.core.truth_(inst_529924)) {
                    var statearr_529945_529960 = state_529941__$1;
                    statearr_529945_529960[1] = 5
                  }else {
                    var statearr_529946_529961 = state_529941__$1;
                    statearr_529946_529961[1] = 6
                  }
                  return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                }else {
                  if(state_val_529942 === 5) {
                    var inst_529926 = cljs.core.async.close_BANG_.call(null, out);
                    var state_529941__$1 = state_529941;
                    var statearr_529947_529962 = state_529941__$1;
                    statearr_529947_529962[2] = inst_529926;
                    statearr_529947_529962[1] = 7;
                    return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                  }else {
                    if(state_val_529942 === 6) {
                      var inst_529923 = state_529941[5];
                      var inst_529928 = p.call(null, inst_529923);
                      var state_529941__$1 = state_529941;
                      if(cljs.core.truth_(inst_529928)) {
                        var statearr_529948_529963 = state_529941__$1;
                        statearr_529948_529963[1] = 8
                      }else {
                        var statearr_529949_529964 = state_529941__$1;
                        statearr_529949_529964[1] = 9
                      }
                      return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                    }else {
                      if(state_val_529942 === 7) {
                        var inst_529937 = state_529941[2];
                        var state_529941__$1 = state_529941;
                        var statearr_529950_529965 = state_529941__$1;
                        statearr_529950_529965[2] = inst_529937;
                        statearr_529950_529965[1] = 3;
                        return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                      }else {
                        if(state_val_529942 === 8) {
                          var inst_529923 = state_529941[5];
                          var state_529941__$1 = state_529941;
                          return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_529941__$1, 11, out, inst_529923)
                        }else {
                          if(state_val_529942 === 9) {
                            var state_529941__$1 = state_529941;
                            var statearr_529951_529966 = state_529941__$1;
                            statearr_529951_529966[2] = null;
                            statearr_529951_529966[1] = 10;
                            return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                          }else {
                            if(state_val_529942 === 10) {
                              var inst_529934 = state_529941[2];
                              var state_529941__$1 = function() {
                                var statearr_529952 = state_529941;
                                statearr_529952[6] = inst_529934;
                                return statearr_529952
                              }();
                              var statearr_529953_529967 = state_529941__$1;
                              statearr_529953_529967[2] = null;
                              statearr_529953_529967[1] = 2;
                              return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                            }else {
                              if(state_val_529942 === 11) {
                                var inst_529931 = state_529941[2];
                                var state_529941__$1 = state_529941;
                                var statearr_529954_529968 = state_529941__$1;
                                statearr_529954_529968[2] = inst_529931;
                                statearr_529954_529968[1] = 10;
                                return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                              }else {
                                return null
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        };
        return function(switch__5678__auto__) {
          return function() {
            var state_machine__5679__auto__ = null;
            var state_machine__5679__auto____0 = function() {
              var statearr_529956 = new Array(7);
              statearr_529956[0] = state_machine__5679__auto__;
              statearr_529956[1] = 1;
              return statearr_529956
            };
            var state_machine__5679__auto____1 = function(state_529941) {
              while(true) {
                var result__5680__auto__ = switch__5678__auto__.call(null, state_529941);
                if(cljs.core.keyword_identical_QMARK_.call(null, result__5680__auto__, new cljs.core.Keyword(null, "recur", "recur", 1122293407))) {
                  continue
                }else {
                  return result__5680__auto__
                }
                break
              }
            };
            state_machine__5679__auto__ = function(state_529941) {
              switch(arguments.length) {
                case 0:
                  return state_machine__5679__auto____0.call(this);
                case 1:
                  return state_machine__5679__auto____1.call(this, state_529941)
              }
              throw new Error("Invalid arity: " + arguments.length);
            };
            state_machine__5679__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__5679__auto____0;
            state_machine__5679__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__5679__auto____1;
            return state_machine__5679__auto__
          }()
        }(switch__5678__auto__)
      }();
      var state__5730__auto__ = function() {
        var statearr_529957 = f__5729__auto__.call(null);
        statearr_529957[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__5728__auto___529958;
        return statearr_529957
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__5730__auto__)
    });
    return out
  };
  filter_LT_ = function(p, ch, buf_or_n) {
    switch(arguments.length) {
      case 2:
        return filter_LT___2.call(this, p, ch);
      case 3:
        return filter_LT___3.call(this, p, ch, buf_or_n)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  filter_LT_.cljs$core$IFn$_invoke$arity$2 = filter_LT___2;
  filter_LT_.cljs$core$IFn$_invoke$arity$3 = filter_LT___3;
  return filter_LT_
}();
cljs.core.async.remove_LT_ = function() {
  var remove_LT_ = null;
  var remove_LT___2 = function(p, ch) {
    return remove_LT_.call(null, p, ch, null)
  };
  var remove_LT___3 = function(p, ch, buf_or_n) {
    return cljs.core.async.filter_LT_.call(null, cljs.core.complement.call(null, p), ch, buf_or_n)
  };
  remove_LT_ = function(p, ch, buf_or_n) {
    switch(arguments.length) {
      case 2:
        return remove_LT___2.call(this, p, ch);
      case 3:
        return remove_LT___3.call(this, p, ch, buf_or_n)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  remove_LT_.cljs$core$IFn$_invoke$arity$2 = remove_LT___2;
  remove_LT_.cljs$core$IFn$_invoke$arity$3 = remove_LT___3;
  return remove_LT_
}();
cljs.core.async.mapcat_STAR_ = function mapcat_STAR_(f, in$, out) {
  var c__5728__auto__ = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function() {
    var f__5729__auto__ = function() {
      var switch__5678__auto__ = function(state_530116) {
        var state_val_530117 = state_530116[1];
        if(state_val_530117 === 1) {
          var state_530116__$1 = state_530116;
          var statearr_530118_530151 = state_530116__$1;
          statearr_530118_530151[2] = null;
          statearr_530118_530151[1] = 2;
          return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
        }else {
          if(state_val_530117 === 2) {
            var state_530116__$1 = state_530116;
            return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_530116__$1, 4, in$)
          }else {
            if(state_val_530117 === 3) {
              var inst_530114 = state_530116[2];
              var state_530116__$1 = state_530116;
              return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_530116__$1, inst_530114)
            }else {
              if(state_val_530117 === 4) {
                var inst_530062 = state_530116[5];
                var inst_530062__$1 = state_530116[2];
                var inst_530063 = inst_530062__$1 == null;
                var state_530116__$1 = function() {
                  var statearr_530119 = state_530116;
                  statearr_530119[5] = inst_530062__$1;
                  return statearr_530119
                }();
                if(cljs.core.truth_(inst_530063)) {
                  var statearr_530120_530152 = state_530116__$1;
                  statearr_530120_530152[1] = 5
                }else {
                  var statearr_530121_530153 = state_530116__$1;
                  statearr_530121_530153[1] = 6
                }
                return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
              }else {
                if(state_val_530117 === 5) {
                  var inst_530065 = cljs.core.async.close_BANG_.call(null, out);
                  var state_530116__$1 = state_530116;
                  var statearr_530122_530154 = state_530116__$1;
                  statearr_530122_530154[2] = inst_530065;
                  statearr_530122_530154[1] = 7;
                  return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                }else {
                  if(state_val_530117 === 6) {
                    var inst_530062 = state_530116[5];
                    var inst_530067 = f.call(null, inst_530062);
                    var inst_530072 = cljs.core.seq.call(null, inst_530067);
                    var inst_530073 = inst_530072;
                    var inst_530074 = null;
                    var inst_530075 = 0;
                    var inst_530076 = 0;
                    var state_530116__$1 = function() {
                      var statearr_530123 = state_530116;
                      statearr_530123[6] = inst_530076;
                      statearr_530123[7] = inst_530074;
                      statearr_530123[8] = inst_530075;
                      statearr_530123[9] = inst_530073;
                      return statearr_530123
                    }();
                    var statearr_530124_530155 = state_530116__$1;
                    statearr_530124_530155[2] = null;
                    statearr_530124_530155[1] = 8;
                    return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                  }else {
                    if(state_val_530117 === 7) {
                      var inst_530112 = state_530116[2];
                      var state_530116__$1 = state_530116;
                      var statearr_530125_530156 = state_530116__$1;
                      statearr_530125_530156[2] = inst_530112;
                      statearr_530125_530156[1] = 3;
                      return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                    }else {
                      if(state_val_530117 === 8) {
                        var inst_530076 = state_530116[6];
                        var inst_530075 = state_530116[8];
                        var inst_530078 = inst_530076 < inst_530075;
                        var inst_530079 = inst_530078;
                        var state_530116__$1 = state_530116;
                        if(cljs.core.truth_(inst_530079)) {
                          var statearr_530126_530157 = state_530116__$1;
                          statearr_530126_530157[1] = 10
                        }else {
                          var statearr_530127_530158 = state_530116__$1;
                          statearr_530127_530158[1] = 11
                        }
                        return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                      }else {
                        if(state_val_530117 === 9) {
                          var inst_530109 = state_530116[2];
                          var state_530116__$1 = function() {
                            var statearr_530128 = state_530116;
                            statearr_530128[10] = inst_530109;
                            return statearr_530128
                          }();
                          var statearr_530129_530159 = state_530116__$1;
                          statearr_530129_530159[2] = null;
                          statearr_530129_530159[1] = 2;
                          return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                        }else {
                          if(state_val_530117 === 10) {
                            var inst_530076 = state_530116[6];
                            var inst_530074 = state_530116[7];
                            var inst_530081 = cljs.core._nth.call(null, inst_530074, inst_530076);
                            var state_530116__$1 = state_530116;
                            return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_530116__$1, 13, out, inst_530081)
                          }else {
                            if(state_val_530117 === 11) {
                              var inst_530073 = state_530116[9];
                              var inst_530087 = state_530116[11];
                              var inst_530087__$1 = cljs.core.seq.call(null, inst_530073);
                              var state_530116__$1 = function() {
                                var statearr_530133 = state_530116;
                                statearr_530133[11] = inst_530087__$1;
                                return statearr_530133
                              }();
                              if(inst_530087__$1) {
                                var statearr_530134_530160 = state_530116__$1;
                                statearr_530134_530160[1] = 14
                              }else {
                                var statearr_530135_530161 = state_530116__$1;
                                statearr_530135_530161[1] = 15
                              }
                              return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                            }else {
                              if(state_val_530117 === 12) {
                                var inst_530107 = state_530116[2];
                                var state_530116__$1 = state_530116;
                                var statearr_530136_530162 = state_530116__$1;
                                statearr_530136_530162[2] = inst_530107;
                                statearr_530136_530162[1] = 9;
                                return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                              }else {
                                if(state_val_530117 === 13) {
                                  var inst_530076 = state_530116[6];
                                  var inst_530074 = state_530116[7];
                                  var inst_530075 = state_530116[8];
                                  var inst_530073 = state_530116[9];
                                  var inst_530083 = state_530116[2];
                                  var inst_530084 = inst_530076 + 1;
                                  var tmp530130 = inst_530074;
                                  var tmp530131 = inst_530075;
                                  var tmp530132 = inst_530073;
                                  var inst_530073__$1 = tmp530132;
                                  var inst_530074__$1 = tmp530130;
                                  var inst_530075__$1 = tmp530131;
                                  var inst_530076__$1 = inst_530084;
                                  var state_530116__$1 = function() {
                                    var statearr_530137 = state_530116;
                                    statearr_530137[6] = inst_530076__$1;
                                    statearr_530137[7] = inst_530074__$1;
                                    statearr_530137[8] = inst_530075__$1;
                                    statearr_530137[9] = inst_530073__$1;
                                    statearr_530137[12] = inst_530083;
                                    return statearr_530137
                                  }();
                                  var statearr_530138_530163 = state_530116__$1;
                                  statearr_530138_530163[2] = null;
                                  statearr_530138_530163[1] = 8;
                                  return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                                }else {
                                  if(state_val_530117 === 14) {
                                    var inst_530087 = state_530116[11];
                                    var inst_530089 = cljs.core.chunked_seq_QMARK_.call(null, inst_530087);
                                    var state_530116__$1 = state_530116;
                                    if(inst_530089) {
                                      var statearr_530139_530164 = state_530116__$1;
                                      statearr_530139_530164[1] = 17
                                    }else {
                                      var statearr_530140_530165 = state_530116__$1;
                                      statearr_530140_530165[1] = 18
                                    }
                                    return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                                  }else {
                                    if(state_val_530117 === 15) {
                                      var state_530116__$1 = state_530116;
                                      var statearr_530141_530166 = state_530116__$1;
                                      statearr_530141_530166[2] = null;
                                      statearr_530141_530166[1] = 16;
                                      return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                                    }else {
                                      if(state_val_530117 === 16) {
                                        var inst_530105 = state_530116[2];
                                        var state_530116__$1 = state_530116;
                                        var statearr_530142_530167 = state_530116__$1;
                                        statearr_530142_530167[2] = inst_530105;
                                        statearr_530142_530167[1] = 12;
                                        return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                                      }else {
                                        if(state_val_530117 === 17) {
                                          var inst_530087 = state_530116[11];
                                          var inst_530091 = cljs.core.chunk_first.call(null, inst_530087);
                                          var inst_530092 = cljs.core.chunk_rest.call(null, inst_530087);
                                          var inst_530093 = cljs.core.count.call(null, inst_530091);
                                          var inst_530073 = inst_530092;
                                          var inst_530074 = inst_530091;
                                          var inst_530075 = inst_530093;
                                          var inst_530076 = 0;
                                          var state_530116__$1 = function() {
                                            var statearr_530143 = state_530116;
                                            statearr_530143[6] = inst_530076;
                                            statearr_530143[7] = inst_530074;
                                            statearr_530143[8] = inst_530075;
                                            statearr_530143[9] = inst_530073;
                                            return statearr_530143
                                          }();
                                          var statearr_530144_530168 = state_530116__$1;
                                          statearr_530144_530168[2] = null;
                                          statearr_530144_530168[1] = 8;
                                          return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                                        }else {
                                          if(state_val_530117 === 18) {
                                            var inst_530087 = state_530116[11];
                                            var inst_530096 = cljs.core.first.call(null, inst_530087);
                                            var state_530116__$1 = state_530116;
                                            return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_530116__$1, 20, out, inst_530096)
                                          }else {
                                            if(state_val_530117 === 19) {
                                              var inst_530102 = state_530116[2];
                                              var state_530116__$1 = state_530116;
                                              var statearr_530145_530169 = state_530116__$1;
                                              statearr_530145_530169[2] = inst_530102;
                                              statearr_530145_530169[1] = 16;
                                              return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                                            }else {
                                              if(state_val_530117 === 20) {
                                                var inst_530087 = state_530116[11];
                                                var inst_530098 = state_530116[2];
                                                var inst_530099 = cljs.core.next.call(null, inst_530087);
                                                var inst_530073 = inst_530099;
                                                var inst_530074 = null;
                                                var inst_530075 = 0;
                                                var inst_530076 = 0;
                                                var state_530116__$1 = function() {
                                                  var statearr_530146 = state_530116;
                                                  statearr_530146[6] = inst_530076;
                                                  statearr_530146[7] = inst_530074;
                                                  statearr_530146[8] = inst_530075;
                                                  statearr_530146[9] = inst_530073;
                                                  statearr_530146[13] = inst_530098;
                                                  return statearr_530146
                                                }();
                                                var statearr_530147_530170 = state_530116__$1;
                                                statearr_530147_530170[2] = null;
                                                statearr_530147_530170[1] = 8;
                                                return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                                              }else {
                                                return null
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      };
      return function(switch__5678__auto__) {
        return function() {
          var state_machine__5679__auto__ = null;
          var state_machine__5679__auto____0 = function() {
            var statearr_530149 = new Array(14);
            statearr_530149[0] = state_machine__5679__auto__;
            statearr_530149[1] = 1;
            return statearr_530149
          };
          var state_machine__5679__auto____1 = function(state_530116) {
            while(true) {
              var result__5680__auto__ = switch__5678__auto__.call(null, state_530116);
              if(cljs.core.keyword_identical_QMARK_.call(null, result__5680__auto__, new cljs.core.Keyword(null, "recur", "recur", 1122293407))) {
                continue
              }else {
                return result__5680__auto__
              }
              break
            }
          };
          state_machine__5679__auto__ = function(state_530116) {
            switch(arguments.length) {
              case 0:
                return state_machine__5679__auto____0.call(this);
              case 1:
                return state_machine__5679__auto____1.call(this, state_530116)
            }
            throw new Error("Invalid arity: " + arguments.length);
          };
          state_machine__5679__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__5679__auto____0;
          state_machine__5679__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__5679__auto____1;
          return state_machine__5679__auto__
        }()
      }(switch__5678__auto__)
    }();
    var state__5730__auto__ = function() {
      var statearr_530150 = f__5729__auto__.call(null);
      statearr_530150[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__5728__auto__;
      return statearr_530150
    }();
    return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__5730__auto__)
  });
  return c__5728__auto__
};
cljs.core.async.mapcat_LT_ = function() {
  var mapcat_LT_ = null;
  var mapcat_LT___2 = function(f, in$) {
    return mapcat_LT_.call(null, f, in$, null)
  };
  var mapcat_LT___3 = function(f, in$, buf_or_n) {
    var out = cljs.core.async.chan.call(null, buf_or_n);
    cljs.core.async.mapcat_STAR_.call(null, f, in$, out);
    return out
  };
  mapcat_LT_ = function(f, in$, buf_or_n) {
    switch(arguments.length) {
      case 2:
        return mapcat_LT___2.call(this, f, in$);
      case 3:
        return mapcat_LT___3.call(this, f, in$, buf_or_n)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  mapcat_LT_.cljs$core$IFn$_invoke$arity$2 = mapcat_LT___2;
  mapcat_LT_.cljs$core$IFn$_invoke$arity$3 = mapcat_LT___3;
  return mapcat_LT_
}();
cljs.core.async.mapcat_GT_ = function() {
  var mapcat_GT_ = null;
  var mapcat_GT___2 = function(f, out) {
    return mapcat_GT_.call(null, f, out, null)
  };
  var mapcat_GT___3 = function(f, out, buf_or_n) {
    var in$ = cljs.core.async.chan.call(null, buf_or_n);
    cljs.core.async.mapcat_STAR_.call(null, f, in$, out);
    return in$
  };
  mapcat_GT_ = function(f, out, buf_or_n) {
    switch(arguments.length) {
      case 2:
        return mapcat_GT___2.call(this, f, out);
      case 3:
        return mapcat_GT___3.call(this, f, out, buf_or_n)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  mapcat_GT_.cljs$core$IFn$_invoke$arity$2 = mapcat_GT___2;
  mapcat_GT_.cljs$core$IFn$_invoke$arity$3 = mapcat_GT___3;
  return mapcat_GT_
}();
cljs.core.async.pipe = function() {
  var pipe = null;
  var pipe__2 = function(from, to) {
    return pipe.call(null, from, to, true)
  };
  var pipe__3 = function(from, to, close_QMARK_) {
    var c__5728__auto___530243 = cljs.core.async.chan.call(null, 1);
    cljs.core.async.impl.dispatch.run.call(null, function() {
      var f__5729__auto__ = function() {
        var switch__5678__auto__ = function(state_530226) {
          var state_val_530227 = state_530226[1];
          if(state_val_530227 === 1) {
            var state_530226__$1 = state_530226;
            var statearr_530228_530244 = state_530226__$1;
            statearr_530228_530244[2] = null;
            statearr_530228_530244[1] = 2;
            return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
          }else {
            if(state_val_530227 === 2) {
              var state_530226__$1 = state_530226;
              return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_530226__$1, 4, from)
            }else {
              if(state_val_530227 === 3) {
                var inst_530224 = state_530226[2];
                var state_530226__$1 = state_530226;
                return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_530226__$1, inst_530224)
              }else {
                if(state_val_530227 === 4) {
                  var inst_530209 = state_530226[5];
                  var inst_530209__$1 = state_530226[2];
                  var inst_530210 = inst_530209__$1 == null;
                  var state_530226__$1 = function() {
                    var statearr_530229 = state_530226;
                    statearr_530229[5] = inst_530209__$1;
                    return statearr_530229
                  }();
                  if(cljs.core.truth_(inst_530210)) {
                    var statearr_530230_530245 = state_530226__$1;
                    statearr_530230_530245[1] = 5
                  }else {
                    var statearr_530231_530246 = state_530226__$1;
                    statearr_530231_530246[1] = 6
                  }
                  return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                }else {
                  if(state_val_530227 === 5) {
                    var state_530226__$1 = state_530226;
                    if(cljs.core.truth_(close_QMARK_)) {
                      var statearr_530232_530247 = state_530226__$1;
                      statearr_530232_530247[1] = 8
                    }else {
                      var statearr_530233_530248 = state_530226__$1;
                      statearr_530233_530248[1] = 9
                    }
                    return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                  }else {
                    if(state_val_530227 === 6) {
                      var inst_530209 = state_530226[5];
                      var state_530226__$1 = state_530226;
                      return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_530226__$1, 11, to, inst_530209)
                    }else {
                      if(state_val_530227 === 7) {
                        var inst_530222 = state_530226[2];
                        var state_530226__$1 = state_530226;
                        var statearr_530234_530249 = state_530226__$1;
                        statearr_530234_530249[2] = inst_530222;
                        statearr_530234_530249[1] = 3;
                        return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                      }else {
                        if(state_val_530227 === 8) {
                          var inst_530213 = cljs.core.async.close_BANG_.call(null, to);
                          var state_530226__$1 = state_530226;
                          var statearr_530235_530250 = state_530226__$1;
                          statearr_530235_530250[2] = inst_530213;
                          statearr_530235_530250[1] = 10;
                          return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                        }else {
                          if(state_val_530227 === 9) {
                            var state_530226__$1 = state_530226;
                            var statearr_530236_530251 = state_530226__$1;
                            statearr_530236_530251[2] = null;
                            statearr_530236_530251[1] = 10;
                            return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                          }else {
                            if(state_val_530227 === 10) {
                              var inst_530216 = state_530226[2];
                              var state_530226__$1 = state_530226;
                              var statearr_530237_530252 = state_530226__$1;
                              statearr_530237_530252[2] = inst_530216;
                              statearr_530237_530252[1] = 7;
                              return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                            }else {
                              if(state_val_530227 === 11) {
                                var inst_530219 = state_530226[2];
                                var state_530226__$1 = function() {
                                  var statearr_530238 = state_530226;
                                  statearr_530238[6] = inst_530219;
                                  return statearr_530238
                                }();
                                var statearr_530239_530253 = state_530226__$1;
                                statearr_530239_530253[2] = null;
                                statearr_530239_530253[1] = 2;
                                return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                              }else {
                                return null
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        };
        return function(switch__5678__auto__) {
          return function() {
            var state_machine__5679__auto__ = null;
            var state_machine__5679__auto____0 = function() {
              var statearr_530241 = new Array(7);
              statearr_530241[0] = state_machine__5679__auto__;
              statearr_530241[1] = 1;
              return statearr_530241
            };
            var state_machine__5679__auto____1 = function(state_530226) {
              while(true) {
                var result__5680__auto__ = switch__5678__auto__.call(null, state_530226);
                if(cljs.core.keyword_identical_QMARK_.call(null, result__5680__auto__, new cljs.core.Keyword(null, "recur", "recur", 1122293407))) {
                  continue
                }else {
                  return result__5680__auto__
                }
                break
              }
            };
            state_machine__5679__auto__ = function(state_530226) {
              switch(arguments.length) {
                case 0:
                  return state_machine__5679__auto____0.call(this);
                case 1:
                  return state_machine__5679__auto____1.call(this, state_530226)
              }
              throw new Error("Invalid arity: " + arguments.length);
            };
            state_machine__5679__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__5679__auto____0;
            state_machine__5679__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__5679__auto____1;
            return state_machine__5679__auto__
          }()
        }(switch__5678__auto__)
      }();
      var state__5730__auto__ = function() {
        var statearr_530242 = f__5729__auto__.call(null);
        statearr_530242[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__5728__auto___530243;
        return statearr_530242
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__5730__auto__)
    });
    return to
  };
  pipe = function(from, to, close_QMARK_) {
    switch(arguments.length) {
      case 2:
        return pipe__2.call(this, from, to);
      case 3:
        return pipe__3.call(this, from, to, close_QMARK_)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  pipe.cljs$core$IFn$_invoke$arity$2 = pipe__2;
  pipe.cljs$core$IFn$_invoke$arity$3 = pipe__3;
  return pipe
}();
cljs.core.async.split = function() {
  var split = null;
  var split__2 = function(p, ch) {
    return split.call(null, p, ch, null, null)
  };
  var split__4 = function(p, ch, t_buf_or_n, f_buf_or_n) {
    var tc = cljs.core.async.chan.call(null, t_buf_or_n);
    var fc = cljs.core.async.chan.call(null, f_buf_or_n);
    var c__5728__auto___530332 = cljs.core.async.chan.call(null, 1);
    cljs.core.async.impl.dispatch.run.call(null, function() {
      var f__5729__auto__ = function() {
        var switch__5678__auto__ = function(state_530314) {
          var state_val_530315 = state_530314[1];
          if(state_val_530315 === 1) {
            var state_530314__$1 = state_530314;
            var statearr_530316_530333 = state_530314__$1;
            statearr_530316_530333[2] = null;
            statearr_530316_530333[1] = 2;
            return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
          }else {
            if(state_val_530315 === 2) {
              var state_530314__$1 = state_530314;
              return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_530314__$1, 4, ch)
            }else {
              if(state_val_530315 === 3) {
                var inst_530312 = state_530314[2];
                var state_530314__$1 = state_530314;
                return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_530314__$1, inst_530312)
              }else {
                if(state_val_530315 === 4) {
                  var inst_530295 = state_530314[5];
                  var inst_530295__$1 = state_530314[2];
                  var inst_530296 = inst_530295__$1 == null;
                  var state_530314__$1 = function() {
                    var statearr_530317 = state_530314;
                    statearr_530317[5] = inst_530295__$1;
                    return statearr_530317
                  }();
                  if(cljs.core.truth_(inst_530296)) {
                    var statearr_530318_530334 = state_530314__$1;
                    statearr_530318_530334[1] = 5
                  }else {
                    var statearr_530319_530335 = state_530314__$1;
                    statearr_530319_530335[1] = 6
                  }
                  return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                }else {
                  if(state_val_530315 === 5) {
                    var inst_530298 = cljs.core.async.close_BANG_.call(null, tc);
                    var inst_530299 = cljs.core.async.close_BANG_.call(null, fc);
                    var state_530314__$1 = function() {
                      var statearr_530320 = state_530314;
                      statearr_530320[6] = inst_530298;
                      return statearr_530320
                    }();
                    var statearr_530321_530336 = state_530314__$1;
                    statearr_530321_530336[2] = inst_530299;
                    statearr_530321_530336[1] = 7;
                    return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                  }else {
                    if(state_val_530315 === 6) {
                      var inst_530295 = state_530314[5];
                      var inst_530301 = p.call(null, inst_530295);
                      var state_530314__$1 = state_530314;
                      if(cljs.core.truth_(inst_530301)) {
                        var statearr_530322_530337 = state_530314__$1;
                        statearr_530322_530337[1] = 9
                      }else {
                        var statearr_530323_530338 = state_530314__$1;
                        statearr_530323_530338[1] = 10
                      }
                      return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                    }else {
                      if(state_val_530315 === 7) {
                        var inst_530310 = state_530314[2];
                        var state_530314__$1 = state_530314;
                        var statearr_530324_530339 = state_530314__$1;
                        statearr_530324_530339[2] = inst_530310;
                        statearr_530324_530339[1] = 3;
                        return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                      }else {
                        if(state_val_530315 === 8) {
                          var inst_530307 = state_530314[2];
                          var state_530314__$1 = function() {
                            var statearr_530325 = state_530314;
                            statearr_530325[7] = inst_530307;
                            return statearr_530325
                          }();
                          var statearr_530326_530340 = state_530314__$1;
                          statearr_530326_530340[2] = null;
                          statearr_530326_530340[1] = 2;
                          return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                        }else {
                          if(state_val_530315 === 9) {
                            var state_530314__$1 = state_530314;
                            var statearr_530327_530341 = state_530314__$1;
                            statearr_530327_530341[2] = tc;
                            statearr_530327_530341[1] = 11;
                            return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                          }else {
                            if(state_val_530315 === 10) {
                              var state_530314__$1 = state_530314;
                              var statearr_530328_530342 = state_530314__$1;
                              statearr_530328_530342[2] = fc;
                              statearr_530328_530342[1] = 11;
                              return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                            }else {
                              if(state_val_530315 === 11) {
                                var inst_530295 = state_530314[5];
                                var inst_530305 = state_530314[2];
                                var state_530314__$1 = state_530314;
                                return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_530314__$1, 8, inst_530305, inst_530295)
                              }else {
                                return null
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        };
        return function(switch__5678__auto__) {
          return function() {
            var state_machine__5679__auto__ = null;
            var state_machine__5679__auto____0 = function() {
              var statearr_530330 = new Array(8);
              statearr_530330[0] = state_machine__5679__auto__;
              statearr_530330[1] = 1;
              return statearr_530330
            };
            var state_machine__5679__auto____1 = function(state_530314) {
              while(true) {
                var result__5680__auto__ = switch__5678__auto__.call(null, state_530314);
                if(cljs.core.keyword_identical_QMARK_.call(null, result__5680__auto__, new cljs.core.Keyword(null, "recur", "recur", 1122293407))) {
                  continue
                }else {
                  return result__5680__auto__
                }
                break
              }
            };
            state_machine__5679__auto__ = function(state_530314) {
              switch(arguments.length) {
                case 0:
                  return state_machine__5679__auto____0.call(this);
                case 1:
                  return state_machine__5679__auto____1.call(this, state_530314)
              }
              throw new Error("Invalid arity: " + arguments.length);
            };
            state_machine__5679__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__5679__auto____0;
            state_machine__5679__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__5679__auto____1;
            return state_machine__5679__auto__
          }()
        }(switch__5678__auto__)
      }();
      var state__5730__auto__ = function() {
        var statearr_530331 = f__5729__auto__.call(null);
        statearr_530331[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__5728__auto___530332;
        return statearr_530331
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__5730__auto__)
    });
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [tc, fc], null)
  };
  split = function(p, ch, t_buf_or_n, f_buf_or_n) {
    switch(arguments.length) {
      case 2:
        return split__2.call(this, p, ch);
      case 4:
        return split__4.call(this, p, ch, t_buf_or_n, f_buf_or_n)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  split.cljs$core$IFn$_invoke$arity$2 = split__2;
  split.cljs$core$IFn$_invoke$arity$4 = split__4;
  return split
}();
cljs.core.async.reduce = function reduce(f, init, ch) {
  var c__5728__auto__ = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function() {
    var f__5729__auto__ = function() {
      var switch__5678__auto__ = function(state_530385) {
        var state_val_530386 = state_530385[1];
        if(state_val_530386 === 7) {
          var inst_530381 = state_530385[2];
          var state_530385__$1 = state_530385;
          var statearr_530387_530399 = state_530385__$1;
          statearr_530387_530399[2] = inst_530381;
          statearr_530387_530399[1] = 3;
          return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
        }else {
          if(state_val_530386 === 6) {
            var inst_530374 = state_530385[5];
            var inst_530371 = state_530385[6];
            var inst_530378 = f.call(null, inst_530371, inst_530374);
            var inst_530371__$1 = inst_530378;
            var state_530385__$1 = function() {
              var statearr_530388 = state_530385;
              statearr_530388[6] = inst_530371__$1;
              return statearr_530388
            }();
            var statearr_530389_530400 = state_530385__$1;
            statearr_530389_530400[2] = null;
            statearr_530389_530400[1] = 2;
            return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
          }else {
            if(state_val_530386 === 5) {
              var inst_530371 = state_530385[6];
              var state_530385__$1 = state_530385;
              var statearr_530390_530401 = state_530385__$1;
              statearr_530390_530401[2] = inst_530371;
              statearr_530390_530401[1] = 7;
              return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
            }else {
              if(state_val_530386 === 4) {
                var inst_530374 = state_530385[5];
                var inst_530374__$1 = state_530385[2];
                var inst_530375 = inst_530374__$1 == null;
                var state_530385__$1 = function() {
                  var statearr_530391 = state_530385;
                  statearr_530391[5] = inst_530374__$1;
                  return statearr_530391
                }();
                if(cljs.core.truth_(inst_530375)) {
                  var statearr_530392_530402 = state_530385__$1;
                  statearr_530392_530402[1] = 5
                }else {
                  var statearr_530393_530403 = state_530385__$1;
                  statearr_530393_530403[1] = 6
                }
                return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
              }else {
                if(state_val_530386 === 3) {
                  var inst_530383 = state_530385[2];
                  var state_530385__$1 = state_530385;
                  return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_530385__$1, inst_530383)
                }else {
                  if(state_val_530386 === 2) {
                    var state_530385__$1 = state_530385;
                    return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_530385__$1, 4, ch)
                  }else {
                    if(state_val_530386 === 1) {
                      var inst_530371 = init;
                      var state_530385__$1 = function() {
                        var statearr_530394 = state_530385;
                        statearr_530394[6] = inst_530371;
                        return statearr_530394
                      }();
                      var statearr_530395_530404 = state_530385__$1;
                      statearr_530395_530404[2] = null;
                      statearr_530395_530404[1] = 2;
                      return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                    }else {
                      return null
                    }
                  }
                }
              }
            }
          }
        }
      };
      return function(switch__5678__auto__) {
        return function() {
          var state_machine__5679__auto__ = null;
          var state_machine__5679__auto____0 = function() {
            var statearr_530397 = new Array(7);
            statearr_530397[0] = state_machine__5679__auto__;
            statearr_530397[1] = 1;
            return statearr_530397
          };
          var state_machine__5679__auto____1 = function(state_530385) {
            while(true) {
              var result__5680__auto__ = switch__5678__auto__.call(null, state_530385);
              if(cljs.core.keyword_identical_QMARK_.call(null, result__5680__auto__, new cljs.core.Keyword(null, "recur", "recur", 1122293407))) {
                continue
              }else {
                return result__5680__auto__
              }
              break
            }
          };
          state_machine__5679__auto__ = function(state_530385) {
            switch(arguments.length) {
              case 0:
                return state_machine__5679__auto____0.call(this);
              case 1:
                return state_machine__5679__auto____1.call(this, state_530385)
            }
            throw new Error("Invalid arity: " + arguments.length);
          };
          state_machine__5679__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__5679__auto____0;
          state_machine__5679__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__5679__auto____1;
          return state_machine__5679__auto__
        }()
      }(switch__5678__auto__)
    }();
    var state__5730__auto__ = function() {
      var statearr_530398 = f__5729__auto__.call(null);
      statearr_530398[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__5728__auto__;
      return statearr_530398
    }();
    return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__5730__auto__)
  });
  return c__5728__auto__
};
cljs.core.async.onto_chan = function() {
  var onto_chan = null;
  var onto_chan__2 = function(ch, coll) {
    return onto_chan.call(null, ch, coll, true)
  };
  var onto_chan__3 = function(ch, coll, close_QMARK_) {
    var c__5728__auto__ = cljs.core.async.chan.call(null, 1);
    cljs.core.async.impl.dispatch.run.call(null, function() {
      var f__5729__auto__ = function() {
        var switch__5678__auto__ = function(state_530462) {
          var state_val_530463 = state_530462[1];
          if(state_val_530463 === 1) {
            var inst_530442 = cljs.core.seq.call(null, coll);
            var inst_530443 = inst_530442;
            var state_530462__$1 = function() {
              var statearr_530464 = state_530462;
              statearr_530464[5] = inst_530443;
              return statearr_530464
            }();
            var statearr_530465_530479 = state_530462__$1;
            statearr_530465_530479[2] = null;
            statearr_530465_530479[1] = 2;
            return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
          }else {
            if(state_val_530463 === 2) {
              var inst_530443 = state_530462[5];
              var state_530462__$1 = state_530462;
              if(cljs.core.truth_(inst_530443)) {
                var statearr_530466_530480 = state_530462__$1;
                statearr_530466_530480[1] = 4
              }else {
                var statearr_530467_530481 = state_530462__$1;
                statearr_530467_530481[1] = 5
              }
              return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
            }else {
              if(state_val_530463 === 3) {
                var inst_530460 = state_530462[2];
                var state_530462__$1 = state_530462;
                return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_530462__$1, inst_530460)
              }else {
                if(state_val_530463 === 4) {
                  var inst_530443 = state_530462[5];
                  var inst_530446 = cljs.core.first.call(null, inst_530443);
                  var state_530462__$1 = state_530462;
                  return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_530462__$1, 7, ch, inst_530446)
                }else {
                  if(state_val_530463 === 5) {
                    var state_530462__$1 = state_530462;
                    if(cljs.core.truth_(close_QMARK_)) {
                      var statearr_530468_530482 = state_530462__$1;
                      statearr_530468_530482[1] = 8
                    }else {
                      var statearr_530469_530483 = state_530462__$1;
                      statearr_530469_530483[1] = 9
                    }
                    return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                  }else {
                    if(state_val_530463 === 6) {
                      var inst_530458 = state_530462[2];
                      var state_530462__$1 = state_530462;
                      var statearr_530470_530484 = state_530462__$1;
                      statearr_530470_530484[2] = inst_530458;
                      statearr_530470_530484[1] = 3;
                      return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                    }else {
                      if(state_val_530463 === 7) {
                        var inst_530443 = state_530462[5];
                        var inst_530448 = state_530462[2];
                        var inst_530449 = cljs.core.next.call(null, inst_530443);
                        var inst_530443__$1 = inst_530449;
                        var state_530462__$1 = function() {
                          var statearr_530471 = state_530462;
                          statearr_530471[6] = inst_530448;
                          statearr_530471[5] = inst_530443__$1;
                          return statearr_530471
                        }();
                        var statearr_530472_530485 = state_530462__$1;
                        statearr_530472_530485[2] = null;
                        statearr_530472_530485[1] = 2;
                        return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                      }else {
                        if(state_val_530463 === 8) {
                          var inst_530453 = cljs.core.async.close_BANG_.call(null, ch);
                          var state_530462__$1 = state_530462;
                          var statearr_530473_530486 = state_530462__$1;
                          statearr_530473_530486[2] = inst_530453;
                          statearr_530473_530486[1] = 10;
                          return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                        }else {
                          if(state_val_530463 === 9) {
                            var state_530462__$1 = state_530462;
                            var statearr_530474_530487 = state_530462__$1;
                            statearr_530474_530487[2] = null;
                            statearr_530474_530487[1] = 10;
                            return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                          }else {
                            if(state_val_530463 === 10) {
                              var inst_530456 = state_530462[2];
                              var state_530462__$1 = state_530462;
                              var statearr_530475_530488 = state_530462__$1;
                              statearr_530475_530488[2] = inst_530456;
                              statearr_530475_530488[1] = 6;
                              return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                            }else {
                              return null
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        };
        return function(switch__5678__auto__) {
          return function() {
            var state_machine__5679__auto__ = null;
            var state_machine__5679__auto____0 = function() {
              var statearr_530477 = new Array(7);
              statearr_530477[0] = state_machine__5679__auto__;
              statearr_530477[1] = 1;
              return statearr_530477
            };
            var state_machine__5679__auto____1 = function(state_530462) {
              while(true) {
                var result__5680__auto__ = switch__5678__auto__.call(null, state_530462);
                if(cljs.core.keyword_identical_QMARK_.call(null, result__5680__auto__, new cljs.core.Keyword(null, "recur", "recur", 1122293407))) {
                  continue
                }else {
                  return result__5680__auto__
                }
                break
              }
            };
            state_machine__5679__auto__ = function(state_530462) {
              switch(arguments.length) {
                case 0:
                  return state_machine__5679__auto____0.call(this);
                case 1:
                  return state_machine__5679__auto____1.call(this, state_530462)
              }
              throw new Error("Invalid arity: " + arguments.length);
            };
            state_machine__5679__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__5679__auto____0;
            state_machine__5679__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__5679__auto____1;
            return state_machine__5679__auto__
          }()
        }(switch__5678__auto__)
      }();
      var state__5730__auto__ = function() {
        var statearr_530478 = f__5729__auto__.call(null);
        statearr_530478[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__5728__auto__;
        return statearr_530478
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__5730__auto__)
    });
    return c__5728__auto__
  };
  onto_chan = function(ch, coll, close_QMARK_) {
    switch(arguments.length) {
      case 2:
        return onto_chan__2.call(this, ch, coll);
      case 3:
        return onto_chan__3.call(this, ch, coll, close_QMARK_)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  onto_chan.cljs$core$IFn$_invoke$arity$2 = onto_chan__2;
  onto_chan.cljs$core$IFn$_invoke$arity$3 = onto_chan__3;
  return onto_chan
}();
cljs.core.async.to_chan = function to_chan(coll) {
  var ch = cljs.core.async.chan.call(null, cljs.core.bounded_count.call(null, 100, coll));
  cljs.core.async.onto_chan.call(null, ch, coll);
  return ch
};
cljs.core.async.Mux = function() {
  var obj530490 = {};
  return obj530490
}();
cljs.core.async.muxch_STAR_ = function muxch_STAR_(_) {
  if(function() {
    var and__3273__auto__ = _;
    if(and__3273__auto__) {
      return _.cljs$core$async$Mux$muxch_STAR_$arity$1
    }else {
      return and__3273__auto__
    }
  }()) {
    return _.cljs$core$async$Mux$muxch_STAR_$arity$1(_)
  }else {
    var x__3888__auto__ = _ == null ? null : _;
    return function() {
      var or__3285__auto__ = cljs.core.async.muxch_STAR_[goog.typeOf(x__3888__auto__)];
      if(or__3285__auto__) {
        return or__3285__auto__
      }else {
        var or__3285__auto____$1 = cljs.core.async.muxch_STAR_["_"];
        if(or__3285__auto____$1) {
          return or__3285__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "Mux.muxch*", _);
        }
      }
    }().call(null, _)
  }
};
cljs.core.async.Mult = function() {
  var obj530492 = {};
  return obj530492
}();
cljs.core.async.tap_STAR_ = function tap_STAR_(m, ch, close_QMARK_) {
  if(function() {
    var and__3273__auto__ = m;
    if(and__3273__auto__) {
      return m.cljs$core$async$Mult$tap_STAR_$arity$3
    }else {
      return and__3273__auto__
    }
  }()) {
    return m.cljs$core$async$Mult$tap_STAR_$arity$3(m, ch, close_QMARK_)
  }else {
    var x__3888__auto__ = m == null ? null : m;
    return function() {
      var or__3285__auto__ = cljs.core.async.tap_STAR_[goog.typeOf(x__3888__auto__)];
      if(or__3285__auto__) {
        return or__3285__auto__
      }else {
        var or__3285__auto____$1 = cljs.core.async.tap_STAR_["_"];
        if(or__3285__auto____$1) {
          return or__3285__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "Mult.tap*", m);
        }
      }
    }().call(null, m, ch, close_QMARK_)
  }
};
cljs.core.async.untap_STAR_ = function untap_STAR_(m, ch) {
  if(function() {
    var and__3273__auto__ = m;
    if(and__3273__auto__) {
      return m.cljs$core$async$Mult$untap_STAR_$arity$2
    }else {
      return and__3273__auto__
    }
  }()) {
    return m.cljs$core$async$Mult$untap_STAR_$arity$2(m, ch)
  }else {
    var x__3888__auto__ = m == null ? null : m;
    return function() {
      var or__3285__auto__ = cljs.core.async.untap_STAR_[goog.typeOf(x__3888__auto__)];
      if(or__3285__auto__) {
        return or__3285__auto__
      }else {
        var or__3285__auto____$1 = cljs.core.async.untap_STAR_["_"];
        if(or__3285__auto____$1) {
          return or__3285__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "Mult.untap*", m);
        }
      }
    }().call(null, m, ch)
  }
};
cljs.core.async.untap_all_STAR_ = function untap_all_STAR_(m) {
  if(function() {
    var and__3273__auto__ = m;
    if(and__3273__auto__) {
      return m.cljs$core$async$Mult$untap_all_STAR_$arity$1
    }else {
      return and__3273__auto__
    }
  }()) {
    return m.cljs$core$async$Mult$untap_all_STAR_$arity$1(m)
  }else {
    var x__3888__auto__ = m == null ? null : m;
    return function() {
      var or__3285__auto__ = cljs.core.async.untap_all_STAR_[goog.typeOf(x__3888__auto__)];
      if(or__3285__auto__) {
        return or__3285__auto__
      }else {
        var or__3285__auto____$1 = cljs.core.async.untap_all_STAR_["_"];
        if(or__3285__auto____$1) {
          return or__3285__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "Mult.untap-all*", m);
        }
      }
    }().call(null, m)
  }
};
cljs.core.async.mult = function mult(ch) {
  var cs = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
  var m = function() {
    if(typeof cljs.core.async.t530705 !== "undefined") {
    }else {
      cljs.core.async.t530705 = function(cs, ch, mult, meta530706) {
        this.cs = cs;
        this.ch = ch;
        this.mult = mult;
        this.meta530706 = meta530706;
        this.cljs$lang$protocol_mask$partition1$ = 0;
        this.cljs$lang$protocol_mask$partition0$ = 393216
      };
      cljs.core.async.t530705.cljs$lang$type = true;
      cljs.core.async.t530705.cljs$lang$ctorStr = "cljs.core.async/t530705";
      cljs.core.async.t530705.cljs$lang$ctorPrWriter = function(cs) {
        return function(this__3829__auto__, writer__3830__auto__, opt__3831__auto__) {
          return cljs.core._write.call(null, writer__3830__auto__, "cljs.core.async/t530705")
        }
      }(cs);
      cljs.core.async.t530705.prototype.cljs$core$async$Mult$ = true;
      cljs.core.async.t530705.prototype.cljs$core$async$Mult$tap_STAR_$arity$3 = function(cs) {
        return function(_, ch__$2, close_QMARK_) {
          var self__ = this;
          var ___$1 = this;
          cljs.core.swap_BANG_.call(null, self__.cs, cljs.core.assoc, ch__$2, close_QMARK_);
          return null
        }
      }(cs);
      cljs.core.async.t530705.prototype.cljs$core$async$Mult$untap_STAR_$arity$2 = function(cs) {
        return function(_, ch__$2) {
          var self__ = this;
          var ___$1 = this;
          cljs.core.swap_BANG_.call(null, self__.cs, cljs.core.dissoc, ch__$2);
          return null
        }
      }(cs);
      cljs.core.async.t530705.prototype.cljs$core$async$Mult$untap_all_STAR_$arity$1 = function(cs) {
        return function(_) {
          var self__ = this;
          var ___$1 = this;
          cljs.core.reset_BANG_.call(null, self__.cs, cljs.core.PersistentArrayMap.EMPTY);
          return null
        }
      }(cs);
      cljs.core.async.t530705.prototype.cljs$core$async$Mux$ = true;
      cljs.core.async.t530705.prototype.cljs$core$async$Mux$muxch_STAR_$arity$1 = function(cs) {
        return function(_) {
          var self__ = this;
          var ___$1 = this;
          return self__.ch
        }
      }(cs);
      cljs.core.async.t530705.prototype.cljs$core$IMeta$_meta$arity$1 = function(cs) {
        return function(_530707) {
          var self__ = this;
          var _530707__$1 = this;
          return self__.meta530706
        }
      }(cs);
      cljs.core.async.t530705.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(cs) {
        return function(_530707, meta530706__$1) {
          var self__ = this;
          var _530707__$1 = this;
          return new cljs.core.async.t530705(self__.cs, self__.ch, self__.mult, meta530706__$1)
        }
      }(cs);
      cljs.core.async.__GT_t530705 = function(cs) {
        return function __GT_t530705(cs__$1, ch__$1, mult__$1, meta530706) {
          return new cljs.core.async.t530705(cs__$1, ch__$1, mult__$1, meta530706)
        }
      }(cs)
    }
    return new cljs.core.async.t530705(cs, ch, mult, null)
  }();
  var dchan = cljs.core.async.chan.call(null, 1);
  var dctr = cljs.core.atom.call(null, null);
  var done = function(cs, m, dchan, dctr) {
    return function() {
      if(cljs.core.swap_BANG_.call(null, dctr, cljs.core.dec) === 0) {
        return cljs.core.async.put_BANG_.call(null, dchan, true)
      }else {
        return null
      }
    }
  }(cs, m, dchan, dctr);
  var c__5728__auto___530917 = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function() {
    var f__5729__auto__ = function() {
      var switch__5678__auto__ = function(state_530835) {
        var state_val_530836 = state_530835[1];
        if(state_val_530836 === 32) {
          try {
            var inst_530786 = state_530835[5];
            var inst_530710 = state_530835[6];
            var inst_530792 = cljs.core.async.put_BANG_.call(null, inst_530786, inst_530710, done);
            var state_530835__$1 = state_530835;
            var statearr_530839_530918 = state_530835__$1;
            statearr_530839_530918[2] = inst_530792;
            statearr_530839_530918[1] = 30;
            return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
          }catch(e530837) {
            if(e530837 instanceof Object) {
              var ex__5672__auto__ = e530837;
              var statearr_530838_530919 = state_530835;
              statearr_530838_530919[1] = 31;
              statearr_530838_530919[2] = ex__5672__auto__;
              return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
            }else {
              if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                throw e530837;
              }else {
                return null
              }
            }
          }
        }else {
          if(state_val_530836 === 1) {
            var state_530835__$1 = state_530835;
            var statearr_530840_530920 = state_530835__$1;
            statearr_530840_530920[2] = null;
            statearr_530840_530920[1] = 2;
            return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
          }else {
            if(state_val_530836 === 33) {
              var inst_530798 = state_530835[7];
              var inst_530800 = cljs.core.chunked_seq_QMARK_.call(null, inst_530798);
              var state_530835__$1 = state_530835;
              if(inst_530800) {
                var statearr_530841_530921 = state_530835__$1;
                statearr_530841_530921[1] = 36
              }else {
                var statearr_530842_530922 = state_530835__$1;
                statearr_530842_530922[1] = 37
              }
              return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
            }else {
              if(state_val_530836 === 2) {
                var state_530835__$1 = state_530835;
                return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_530835__$1, 4, ch)
              }else {
                if(state_val_530836 === 34) {
                  var state_530835__$1 = state_530835;
                  var statearr_530843_530923 = state_530835__$1;
                  statearr_530843_530923[2] = null;
                  statearr_530843_530923[1] = 35;
                  return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                }else {
                  if(state_val_530836 === 3) {
                    var inst_530833 = state_530835[2];
                    var state_530835__$1 = state_530835;
                    return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_530835__$1, inst_530833)
                  }else {
                    if(state_val_530836 === 35) {
                      var inst_530822 = state_530835[2];
                      var state_530835__$1 = state_530835;
                      var statearr_530844_530924 = state_530835__$1;
                      statearr_530844_530924[2] = inst_530822;
                      statearr_530844_530924[1] = 29;
                      return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                    }else {
                      if(state_val_530836 === 4) {
                        var inst_530710 = state_530835[6];
                        var inst_530710__$1 = state_530835[2];
                        var inst_530711 = inst_530710__$1 == null;
                        var state_530835__$1 = function() {
                          var statearr_530845 = state_530835;
                          statearr_530845[6] = inst_530710__$1;
                          return statearr_530845
                        }();
                        if(cljs.core.truth_(inst_530711)) {
                          var statearr_530846_530925 = state_530835__$1;
                          statearr_530846_530925[1] = 5
                        }else {
                          var statearr_530847_530926 = state_530835__$1;
                          statearr_530847_530926[1] = 6
                        }
                        return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                      }else {
                        if(state_val_530836 === 36) {
                          var inst_530798 = state_530835[7];
                          var inst_530802 = cljs.core.chunk_first.call(null, inst_530798);
                          var inst_530803 = cljs.core.chunk_rest.call(null, inst_530798);
                          var inst_530804 = cljs.core.count.call(null, inst_530802);
                          var inst_530778 = inst_530803;
                          var inst_530779 = inst_530802;
                          var inst_530780 = inst_530804;
                          var inst_530781 = 0;
                          var state_530835__$1 = function() {
                            var statearr_530848 = state_530835;
                            statearr_530848[8] = inst_530780;
                            statearr_530848[9] = inst_530781;
                            statearr_530848[10] = inst_530778;
                            statearr_530848[11] = inst_530779;
                            return statearr_530848
                          }();
                          var statearr_530849_530927 = state_530835__$1;
                          statearr_530849_530927[2] = null;
                          statearr_530849_530927[1] = 25;
                          return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                        }else {
                          if(state_val_530836 === 5) {
                            var inst_530717 = cljs.core.deref.call(null, cs);
                            var inst_530718 = cljs.core.seq.call(null, inst_530717);
                            var inst_530719 = inst_530718;
                            var inst_530720 = null;
                            var inst_530721 = 0;
                            var inst_530722 = 0;
                            var state_530835__$1 = function() {
                              var statearr_530850 = state_530835;
                              statearr_530850[12] = inst_530719;
                              statearr_530850[13] = inst_530720;
                              statearr_530850[14] = inst_530721;
                              statearr_530850[15] = inst_530722;
                              return statearr_530850
                            }();
                            var statearr_530851_530928 = state_530835__$1;
                            statearr_530851_530928[2] = null;
                            statearr_530851_530928[1] = 8;
                            return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                          }else {
                            if(state_val_530836 === 37) {
                              var inst_530798 = state_530835[7];
                              var inst_530807 = cljs.core.first.call(null, inst_530798);
                              var state_530835__$1 = function() {
                                var statearr_530852 = state_530835;
                                statearr_530852[16] = inst_530807;
                                return statearr_530852
                              }();
                              var statearr_530853_530929 = state_530835__$1;
                              statearr_530853_530929[2] = null;
                              statearr_530853_530929[1] = 41;
                              return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                            }else {
                              if(state_val_530836 === 6) {
                                var inst_530769 = cljs.core.deref.call(null, cs);
                                var inst_530770 = cljs.core.keys.call(null, inst_530769);
                                var inst_530771 = cljs.core.count.call(null, inst_530770);
                                var inst_530772 = cljs.core.reset_BANG_.call(null, dctr, inst_530771);
                                var inst_530777 = cljs.core.seq.call(null, inst_530770);
                                var inst_530778 = inst_530777;
                                var inst_530779 = null;
                                var inst_530780 = 0;
                                var inst_530781 = 0;
                                var state_530835__$1 = function() {
                                  var statearr_530854 = state_530835;
                                  statearr_530854[8] = inst_530780;
                                  statearr_530854[9] = inst_530781;
                                  statearr_530854[10] = inst_530778;
                                  statearr_530854[11] = inst_530779;
                                  statearr_530854[17] = inst_530772;
                                  return statearr_530854
                                }();
                                var statearr_530855_530930 = state_530835__$1;
                                statearr_530855_530930[2] = null;
                                statearr_530855_530930[1] = 25;
                                return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                              }else {
                                if(state_val_530836 === 38) {
                                  var inst_530819 = state_530835[2];
                                  var state_530835__$1 = state_530835;
                                  var statearr_530856_530931 = state_530835__$1;
                                  statearr_530856_530931[2] = inst_530819;
                                  statearr_530856_530931[1] = 35;
                                  return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                                }else {
                                  if(state_val_530836 === 7) {
                                    var inst_530831 = state_530835[2];
                                    var state_530835__$1 = state_530835;
                                    var statearr_530857_530932 = state_530835__$1;
                                    statearr_530857_530932[2] = inst_530831;
                                    statearr_530857_530932[1] = 3;
                                    return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                                  }else {
                                    if(state_val_530836 === 39) {
                                      var inst_530798 = state_530835[7];
                                      var inst_530815 = state_530835[2];
                                      var inst_530816 = cljs.core.next.call(null, inst_530798);
                                      var inst_530778 = inst_530816;
                                      var inst_530779 = null;
                                      var inst_530780 = 0;
                                      var inst_530781 = 0;
                                      var state_530835__$1 = function() {
                                        var statearr_530858 = state_530835;
                                        statearr_530858[8] = inst_530780;
                                        statearr_530858[9] = inst_530781;
                                        statearr_530858[10] = inst_530778;
                                        statearr_530858[11] = inst_530779;
                                        statearr_530858[18] = inst_530815;
                                        return statearr_530858
                                      }();
                                      var statearr_530859_530933 = state_530835__$1;
                                      statearr_530859_530933[2] = null;
                                      statearr_530859_530933[1] = 25;
                                      return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                                    }else {
                                      if(state_val_530836 === 8) {
                                        var inst_530721 = state_530835[14];
                                        var inst_530722 = state_530835[15];
                                        var inst_530724 = inst_530722 < inst_530721;
                                        var inst_530725 = inst_530724;
                                        var state_530835__$1 = state_530835;
                                        if(cljs.core.truth_(inst_530725)) {
                                          var statearr_530860_530934 = state_530835__$1;
                                          statearr_530860_530934[1] = 10
                                        }else {
                                          var statearr_530861_530935 = state_530835__$1;
                                          statearr_530861_530935[1] = 11
                                        }
                                        return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                                      }else {
                                        if(state_val_530836 === 40) {
                                          var inst_530807 = state_530835[16];
                                          var inst_530808 = state_530835[2];
                                          var inst_530809 = cljs.core.swap_BANG_.call(null, dctr, cljs.core.dec);
                                          var inst_530810 = cljs.core.async.untap_STAR_.call(null, m, inst_530807);
                                          var state_530835__$1 = function() {
                                            var statearr_530862 = state_530835;
                                            statearr_530862[19] = inst_530809;
                                            statearr_530862[20] = inst_530808;
                                            return statearr_530862
                                          }();
                                          var statearr_530863_530936 = state_530835__$1;
                                          statearr_530863_530936[2] = inst_530810;
                                          statearr_530863_530936[1] = 39;
                                          return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                                        }else {
                                          if(state_val_530836 === 9) {
                                            var inst_530767 = state_530835[2];
                                            var state_530835__$1 = state_530835;
                                            var statearr_530864_530937 = state_530835__$1;
                                            statearr_530864_530937[2] = inst_530767;
                                            statearr_530864_530937[1] = 7;
                                            return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                                          }else {
                                            if(state_val_530836 === 41) {
                                              try {
                                                var inst_530807 = state_530835[16];
                                                var inst_530710 = state_530835[6];
                                                var inst_530813 = cljs.core.async.put_BANG_.call(null, inst_530807, inst_530710, done);
                                                var state_530835__$1 = state_530835;
                                                var statearr_530867_530938 = state_530835__$1;
                                                statearr_530867_530938[2] = inst_530813;
                                                statearr_530867_530938[1] = 39;
                                                return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                                              }catch(e530865) {
                                                if(e530865 instanceof Object) {
                                                  var ex__5672__auto__ = e530865;
                                                  var statearr_530866_530939 = state_530835;
                                                  statearr_530866_530939[1] = 40;
                                                  statearr_530866_530939[2] = ex__5672__auto__;
                                                  return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                                                }else {
                                                  if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                                                    throw e530865;
                                                  }else {
                                                    return null
                                                  }
                                                }
                                              }
                                            }else {
                                              if(state_val_530836 === 10) {
                                                var inst_530720 = state_530835[13];
                                                var inst_530722 = state_530835[15];
                                                var inst_530728 = cljs.core._nth.call(null, inst_530720, inst_530722);
                                                var inst_530729 = cljs.core.nth.call(null, inst_530728, 0, null);
                                                var inst_530730 = cljs.core.nth.call(null, inst_530728, 1, null);
                                                var state_530835__$1 = function() {
                                                  var statearr_530868 = state_530835;
                                                  statearr_530868[21] = inst_530729;
                                                  return statearr_530868
                                                }();
                                                if(cljs.core.truth_(inst_530730)) {
                                                  var statearr_530869_530940 = state_530835__$1;
                                                  statearr_530869_530940[1] = 13
                                                }else {
                                                  var statearr_530870_530941 = state_530835__$1;
                                                  statearr_530870_530941[1] = 14
                                                }
                                                return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                                              }else {
                                                if(state_val_530836 === 42) {
                                                  var inst_530828 = state_530835[2];
                                                  var state_530835__$1 = function() {
                                                    var statearr_530871 = state_530835;
                                                    statearr_530871[22] = inst_530828;
                                                    return statearr_530871
                                                  }();
                                                  var statearr_530872_530942 = state_530835__$1;
                                                  statearr_530872_530942[2] = null;
                                                  statearr_530872_530942[1] = 2;
                                                  return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                                                }else {
                                                  if(state_val_530836 === 11) {
                                                    var inst_530719 = state_530835[12];
                                                    var inst_530739 = state_530835[23];
                                                    var inst_530739__$1 = cljs.core.seq.call(null, inst_530719);
                                                    var state_530835__$1 = function() {
                                                      var statearr_530873 = state_530835;
                                                      statearr_530873[23] = inst_530739__$1;
                                                      return statearr_530873
                                                    }();
                                                    if(inst_530739__$1) {
                                                      var statearr_530874_530943 = state_530835__$1;
                                                      statearr_530874_530943[1] = 16
                                                    }else {
                                                      var statearr_530875_530944 = state_530835__$1;
                                                      statearr_530875_530944[1] = 17
                                                    }
                                                    return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                                                  }else {
                                                    if(state_val_530836 === 12) {
                                                      var inst_530765 = state_530835[2];
                                                      var state_530835__$1 = state_530835;
                                                      var statearr_530876_530945 = state_530835__$1;
                                                      statearr_530876_530945[2] = inst_530765;
                                                      statearr_530876_530945[1] = 9;
                                                      return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                                                    }else {
                                                      if(state_val_530836 === 13) {
                                                        var inst_530729 = state_530835[21];
                                                        var inst_530732 = cljs.core.async.close_BANG_.call(null, inst_530729);
                                                        var state_530835__$1 = state_530835;
                                                        var statearr_530880_530946 = state_530835__$1;
                                                        statearr_530880_530946[2] = inst_530732;
                                                        statearr_530880_530946[1] = 15;
                                                        return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                                                      }else {
                                                        if(state_val_530836 === 14) {
                                                          var state_530835__$1 = state_530835;
                                                          var statearr_530881_530947 = state_530835__$1;
                                                          statearr_530881_530947[2] = null;
                                                          statearr_530881_530947[1] = 15;
                                                          return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                                                        }else {
                                                          if(state_val_530836 === 15) {
                                                            var inst_530719 = state_530835[12];
                                                            var inst_530720 = state_530835[13];
                                                            var inst_530721 = state_530835[14];
                                                            var inst_530722 = state_530835[15];
                                                            var inst_530735 = state_530835[2];
                                                            var inst_530736 = inst_530722 + 1;
                                                            var tmp530877 = inst_530719;
                                                            var tmp530878 = inst_530720;
                                                            var tmp530879 = inst_530721;
                                                            var inst_530719__$1 = tmp530877;
                                                            var inst_530720__$1 = tmp530878;
                                                            var inst_530721__$1 = tmp530879;
                                                            var inst_530722__$1 = inst_530736;
                                                            var state_530835__$1 = function() {
                                                              var statearr_530882 = state_530835;
                                                              statearr_530882[12] = inst_530719__$1;
                                                              statearr_530882[24] = inst_530735;
                                                              statearr_530882[13] = inst_530720__$1;
                                                              statearr_530882[14] = inst_530721__$1;
                                                              statearr_530882[15] = inst_530722__$1;
                                                              return statearr_530882
                                                            }();
                                                            var statearr_530883_530948 = state_530835__$1;
                                                            statearr_530883_530948[2] = null;
                                                            statearr_530883_530948[1] = 8;
                                                            return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                                                          }else {
                                                            if(state_val_530836 === 16) {
                                                              var inst_530739 = state_530835[23];
                                                              var inst_530741 = cljs.core.chunked_seq_QMARK_.call(null, inst_530739);
                                                              var state_530835__$1 = state_530835;
                                                              if(inst_530741) {
                                                                var statearr_530884_530949 = state_530835__$1;
                                                                statearr_530884_530949[1] = 19
                                                              }else {
                                                                var statearr_530885_530950 = state_530835__$1;
                                                                statearr_530885_530950[1] = 20
                                                              }
                                                              return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                                                            }else {
                                                              if(state_val_530836 === 17) {
                                                                var state_530835__$1 = state_530835;
                                                                var statearr_530886_530951 = state_530835__$1;
                                                                statearr_530886_530951[2] = null;
                                                                statearr_530886_530951[1] = 18;
                                                                return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                                                              }else {
                                                                if(state_val_530836 === 18) {
                                                                  var inst_530763 = state_530835[2];
                                                                  var state_530835__$1 = state_530835;
                                                                  var statearr_530887_530952 = state_530835__$1;
                                                                  statearr_530887_530952[2] = inst_530763;
                                                                  statearr_530887_530952[1] = 12;
                                                                  return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                                                                }else {
                                                                  if(state_val_530836 === 19) {
                                                                    var inst_530739 = state_530835[23];
                                                                    var inst_530743 = cljs.core.chunk_first.call(null, inst_530739);
                                                                    var inst_530744 = cljs.core.chunk_rest.call(null, inst_530739);
                                                                    var inst_530745 = cljs.core.count.call(null, inst_530743);
                                                                    var inst_530719 = inst_530744;
                                                                    var inst_530720 = inst_530743;
                                                                    var inst_530721 = inst_530745;
                                                                    var inst_530722 = 0;
                                                                    var state_530835__$1 = function() {
                                                                      var statearr_530888 = state_530835;
                                                                      statearr_530888[12] = inst_530719;
                                                                      statearr_530888[13] = inst_530720;
                                                                      statearr_530888[14] = inst_530721;
                                                                      statearr_530888[15] = inst_530722;
                                                                      return statearr_530888
                                                                    }();
                                                                    var statearr_530889_530953 = state_530835__$1;
                                                                    statearr_530889_530953[2] = null;
                                                                    statearr_530889_530953[1] = 8;
                                                                    return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                                                                  }else {
                                                                    if(state_val_530836 === 20) {
                                                                      var inst_530739 = state_530835[23];
                                                                      var inst_530749 = cljs.core.first.call(null, inst_530739);
                                                                      var inst_530750 = cljs.core.nth.call(null, inst_530749, 0, null);
                                                                      var inst_530751 = cljs.core.nth.call(null, inst_530749, 1, null);
                                                                      var state_530835__$1 = function() {
                                                                        var statearr_530890 = state_530835;
                                                                        statearr_530890[25] = inst_530750;
                                                                        return statearr_530890
                                                                      }();
                                                                      if(cljs.core.truth_(inst_530751)) {
                                                                        var statearr_530891_530954 = state_530835__$1;
                                                                        statearr_530891_530954[1] = 22
                                                                      }else {
                                                                        var statearr_530892_530955 = state_530835__$1;
                                                                        statearr_530892_530955[1] = 23
                                                                      }
                                                                      return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                                                                    }else {
                                                                      if(state_val_530836 === 21) {
                                                                        var inst_530760 = state_530835[2];
                                                                        var state_530835__$1 = state_530835;
                                                                        var statearr_530893_530956 = state_530835__$1;
                                                                        statearr_530893_530956[2] = inst_530760;
                                                                        statearr_530893_530956[1] = 18;
                                                                        return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                                                                      }else {
                                                                        if(state_val_530836 === 22) {
                                                                          var inst_530750 = state_530835[25];
                                                                          var inst_530753 = cljs.core.async.close_BANG_.call(null, inst_530750);
                                                                          var state_530835__$1 = state_530835;
                                                                          var statearr_530894_530957 = state_530835__$1;
                                                                          statearr_530894_530957[2] = inst_530753;
                                                                          statearr_530894_530957[1] = 24;
                                                                          return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                                                                        }else {
                                                                          if(state_val_530836 === 23) {
                                                                            var state_530835__$1 = state_530835;
                                                                            var statearr_530895_530958 = state_530835__$1;
                                                                            statearr_530895_530958[2] = null;
                                                                            statearr_530895_530958[1] = 24;
                                                                            return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                                                                          }else {
                                                                            if(state_val_530836 === 24) {
                                                                              var inst_530739 = state_530835[23];
                                                                              var inst_530756 = state_530835[2];
                                                                              var inst_530757 = cljs.core.next.call(null, inst_530739);
                                                                              var inst_530719 = inst_530757;
                                                                              var inst_530720 = null;
                                                                              var inst_530721 = 0;
                                                                              var inst_530722 = 0;
                                                                              var state_530835__$1 = function() {
                                                                                var statearr_530896 = state_530835;
                                                                                statearr_530896[12] = inst_530719;
                                                                                statearr_530896[13] = inst_530720;
                                                                                statearr_530896[14] = inst_530721;
                                                                                statearr_530896[15] = inst_530722;
                                                                                statearr_530896[26] = inst_530756;
                                                                                return statearr_530896
                                                                              }();
                                                                              var statearr_530897_530959 = state_530835__$1;
                                                                              statearr_530897_530959[2] = null;
                                                                              statearr_530897_530959[1] = 8;
                                                                              return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                                                                            }else {
                                                                              if(state_val_530836 === 25) {
                                                                                var inst_530780 = state_530835[8];
                                                                                var inst_530781 = state_530835[9];
                                                                                var inst_530783 = inst_530781 < inst_530780;
                                                                                var inst_530784 = inst_530783;
                                                                                var state_530835__$1 = state_530835;
                                                                                if(cljs.core.truth_(inst_530784)) {
                                                                                  var statearr_530898_530960 = state_530835__$1;
                                                                                  statearr_530898_530960[1] = 27
                                                                                }else {
                                                                                  var statearr_530899_530961 = state_530835__$1;
                                                                                  statearr_530899_530961[1] = 28
                                                                                }
                                                                                return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                                                                              }else {
                                                                                if(state_val_530836 === 26) {
                                                                                  var inst_530826 = state_530835[2];
                                                                                  var state_530835__$1 = function() {
                                                                                    var statearr_530900 = state_530835;
                                                                                    statearr_530900[27] = inst_530826;
                                                                                    return statearr_530900
                                                                                  }();
                                                                                  return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_530835__$1, 42, dchan)
                                                                                }else {
                                                                                  if(state_val_530836 === 27) {
                                                                                    var inst_530781 = state_530835[9];
                                                                                    var inst_530779 = state_530835[11];
                                                                                    var inst_530786 = cljs.core._nth.call(null, inst_530779, inst_530781);
                                                                                    var state_530835__$1 = function() {
                                                                                      var statearr_530901 = state_530835;
                                                                                      statearr_530901[5] = inst_530786;
                                                                                      return statearr_530901
                                                                                    }();
                                                                                    var statearr_530902_530962 = state_530835__$1;
                                                                                    statearr_530902_530962[2] = null;
                                                                                    statearr_530902_530962[1] = 32;
                                                                                    return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                                                                                  }else {
                                                                                    if(state_val_530836 === 28) {
                                                                                      var inst_530778 = state_530835[10];
                                                                                      var inst_530798 = state_530835[7];
                                                                                      var inst_530798__$1 = cljs.core.seq.call(null, inst_530778);
                                                                                      var state_530835__$1 = function() {
                                                                                        var statearr_530906 = state_530835;
                                                                                        statearr_530906[7] = inst_530798__$1;
                                                                                        return statearr_530906
                                                                                      }();
                                                                                      if(inst_530798__$1) {
                                                                                        var statearr_530907_530963 = state_530835__$1;
                                                                                        statearr_530907_530963[1] = 33
                                                                                      }else {
                                                                                        var statearr_530908_530964 = state_530835__$1;
                                                                                        statearr_530908_530964[1] = 34
                                                                                      }
                                                                                      return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                                                                                    }else {
                                                                                      if(state_val_530836 === 29) {
                                                                                        var inst_530824 = state_530835[2];
                                                                                        var state_530835__$1 = state_530835;
                                                                                        var statearr_530909_530965 = state_530835__$1;
                                                                                        statearr_530909_530965[2] = inst_530824;
                                                                                        statearr_530909_530965[1] = 26;
                                                                                        return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                                                                                      }else {
                                                                                        if(state_val_530836 === 30) {
                                                                                          var inst_530780 = state_530835[8];
                                                                                          var inst_530781 = state_530835[9];
                                                                                          var inst_530778 = state_530835[10];
                                                                                          var inst_530779 = state_530835[11];
                                                                                          var inst_530794 = state_530835[2];
                                                                                          var inst_530795 = inst_530781 + 1;
                                                                                          var tmp530903 = inst_530780;
                                                                                          var tmp530904 = inst_530778;
                                                                                          var tmp530905 = inst_530779;
                                                                                          var inst_530778__$1 = tmp530904;
                                                                                          var inst_530779__$1 = tmp530905;
                                                                                          var inst_530780__$1 = tmp530903;
                                                                                          var inst_530781__$1 = inst_530795;
                                                                                          var state_530835__$1 = function() {
                                                                                            var statearr_530910 = state_530835;
                                                                                            statearr_530910[8] = inst_530780__$1;
                                                                                            statearr_530910[9] = inst_530781__$1;
                                                                                            statearr_530910[28] = inst_530794;
                                                                                            statearr_530910[10] = inst_530778__$1;
                                                                                            statearr_530910[11] = inst_530779__$1;
                                                                                            return statearr_530910
                                                                                          }();
                                                                                          var statearr_530911_530966 = state_530835__$1;
                                                                                          statearr_530911_530966[2] = null;
                                                                                          statearr_530911_530966[1] = 25;
                                                                                          return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                                                                                        }else {
                                                                                          if(state_val_530836 === 31) {
                                                                                            var inst_530786 = state_530835[5];
                                                                                            var inst_530787 = state_530835[2];
                                                                                            var inst_530788 = cljs.core.swap_BANG_.call(null, dctr, cljs.core.dec);
                                                                                            var inst_530789 = cljs.core.async.untap_STAR_.call(null, m, inst_530786);
                                                                                            var state_530835__$1 = function() {
                                                                                              var statearr_530912 = state_530835;
                                                                                              statearr_530912[29] = inst_530787;
                                                                                              statearr_530912[30] = inst_530788;
                                                                                              return statearr_530912
                                                                                            }();
                                                                                            var statearr_530913_530967 = state_530835__$1;
                                                                                            statearr_530913_530967[2] = inst_530789;
                                                                                            statearr_530913_530967[1] = 30;
                                                                                            return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                                                                                          }else {
                                                                                            return null
                                                                                          }
                                                                                        }
                                                                                      }
                                                                                    }
                                                                                  }
                                                                                }
                                                                              }
                                                                            }
                                                                          }
                                                                        }
                                                                      }
                                                                    }
                                                                  }
                                                                }
                                                              }
                                                            }
                                                          }
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      };
      return function(switch__5678__auto__) {
        return function() {
          var state_machine__5679__auto__ = null;
          var state_machine__5679__auto____0 = function() {
            var statearr_530915 = new Array(31);
            statearr_530915[0] = state_machine__5679__auto__;
            statearr_530915[1] = 1;
            return statearr_530915
          };
          var state_machine__5679__auto____1 = function(state_530835) {
            while(true) {
              var result__5680__auto__ = switch__5678__auto__.call(null, state_530835);
              if(cljs.core.keyword_identical_QMARK_.call(null, result__5680__auto__, new cljs.core.Keyword(null, "recur", "recur", 1122293407))) {
                continue
              }else {
                return result__5680__auto__
              }
              break
            }
          };
          state_machine__5679__auto__ = function(state_530835) {
            switch(arguments.length) {
              case 0:
                return state_machine__5679__auto____0.call(this);
              case 1:
                return state_machine__5679__auto____1.call(this, state_530835)
            }
            throw new Error("Invalid arity: " + arguments.length);
          };
          state_machine__5679__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__5679__auto____0;
          state_machine__5679__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__5679__auto____1;
          return state_machine__5679__auto__
        }()
      }(switch__5678__auto__)
    }();
    var state__5730__auto__ = function() {
      var statearr_530916 = f__5729__auto__.call(null);
      statearr_530916[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__5728__auto___530917;
      return statearr_530916
    }();
    return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__5730__auto__)
  });
  return m
};
cljs.core.async.tap = function() {
  var tap = null;
  var tap__2 = function(mult, ch) {
    return tap.call(null, mult, ch, true)
  };
  var tap__3 = function(mult, ch, close_QMARK_) {
    cljs.core.async.tap_STAR_.call(null, mult, ch, close_QMARK_);
    return ch
  };
  tap = function(mult, ch, close_QMARK_) {
    switch(arguments.length) {
      case 2:
        return tap__2.call(this, mult, ch);
      case 3:
        return tap__3.call(this, mult, ch, close_QMARK_)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  tap.cljs$core$IFn$_invoke$arity$2 = tap__2;
  tap.cljs$core$IFn$_invoke$arity$3 = tap__3;
  return tap
}();
cljs.core.async.untap = function untap(mult, ch) {
  return cljs.core.async.untap_STAR_.call(null, mult, ch)
};
cljs.core.async.untap_all = function untap_all(mult) {
  return cljs.core.async.untap_all_STAR_.call(null, mult)
};
cljs.core.async.Mix = function() {
  var obj530969 = {};
  return obj530969
}();
cljs.core.async.admix_STAR_ = function admix_STAR_(m, ch) {
  if(function() {
    var and__3273__auto__ = m;
    if(and__3273__auto__) {
      return m.cljs$core$async$Mix$admix_STAR_$arity$2
    }else {
      return and__3273__auto__
    }
  }()) {
    return m.cljs$core$async$Mix$admix_STAR_$arity$2(m, ch)
  }else {
    var x__3888__auto__ = m == null ? null : m;
    return function() {
      var or__3285__auto__ = cljs.core.async.admix_STAR_[goog.typeOf(x__3888__auto__)];
      if(or__3285__auto__) {
        return or__3285__auto__
      }else {
        var or__3285__auto____$1 = cljs.core.async.admix_STAR_["_"];
        if(or__3285__auto____$1) {
          return or__3285__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "Mix.admix*", m);
        }
      }
    }().call(null, m, ch)
  }
};
cljs.core.async.unmix_STAR_ = function unmix_STAR_(m, ch) {
  if(function() {
    var and__3273__auto__ = m;
    if(and__3273__auto__) {
      return m.cljs$core$async$Mix$unmix_STAR_$arity$2
    }else {
      return and__3273__auto__
    }
  }()) {
    return m.cljs$core$async$Mix$unmix_STAR_$arity$2(m, ch)
  }else {
    var x__3888__auto__ = m == null ? null : m;
    return function() {
      var or__3285__auto__ = cljs.core.async.unmix_STAR_[goog.typeOf(x__3888__auto__)];
      if(or__3285__auto__) {
        return or__3285__auto__
      }else {
        var or__3285__auto____$1 = cljs.core.async.unmix_STAR_["_"];
        if(or__3285__auto____$1) {
          return or__3285__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "Mix.unmix*", m);
        }
      }
    }().call(null, m, ch)
  }
};
cljs.core.async.unmix_all_STAR_ = function unmix_all_STAR_(m) {
  if(function() {
    var and__3273__auto__ = m;
    if(and__3273__auto__) {
      return m.cljs$core$async$Mix$unmix_all_STAR_$arity$1
    }else {
      return and__3273__auto__
    }
  }()) {
    return m.cljs$core$async$Mix$unmix_all_STAR_$arity$1(m)
  }else {
    var x__3888__auto__ = m == null ? null : m;
    return function() {
      var or__3285__auto__ = cljs.core.async.unmix_all_STAR_[goog.typeOf(x__3888__auto__)];
      if(or__3285__auto__) {
        return or__3285__auto__
      }else {
        var or__3285__auto____$1 = cljs.core.async.unmix_all_STAR_["_"];
        if(or__3285__auto____$1) {
          return or__3285__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "Mix.unmix-all*", m);
        }
      }
    }().call(null, m)
  }
};
cljs.core.async.toggle_STAR_ = function toggle_STAR_(m, state_map) {
  if(function() {
    var and__3273__auto__ = m;
    if(and__3273__auto__) {
      return m.cljs$core$async$Mix$toggle_STAR_$arity$2
    }else {
      return and__3273__auto__
    }
  }()) {
    return m.cljs$core$async$Mix$toggle_STAR_$arity$2(m, state_map)
  }else {
    var x__3888__auto__ = m == null ? null : m;
    return function() {
      var or__3285__auto__ = cljs.core.async.toggle_STAR_[goog.typeOf(x__3888__auto__)];
      if(or__3285__auto__) {
        return or__3285__auto__
      }else {
        var or__3285__auto____$1 = cljs.core.async.toggle_STAR_["_"];
        if(or__3285__auto____$1) {
          return or__3285__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "Mix.toggle*", m);
        }
      }
    }().call(null, m, state_map)
  }
};
cljs.core.async.solo_mode_STAR_ = function solo_mode_STAR_(m, mode) {
  if(function() {
    var and__3273__auto__ = m;
    if(and__3273__auto__) {
      return m.cljs$core$async$Mix$solo_mode_STAR_$arity$2
    }else {
      return and__3273__auto__
    }
  }()) {
    return m.cljs$core$async$Mix$solo_mode_STAR_$arity$2(m, mode)
  }else {
    var x__3888__auto__ = m == null ? null : m;
    return function() {
      var or__3285__auto__ = cljs.core.async.solo_mode_STAR_[goog.typeOf(x__3888__auto__)];
      if(or__3285__auto__) {
        return or__3285__auto__
      }else {
        var or__3285__auto____$1 = cljs.core.async.solo_mode_STAR_["_"];
        if(or__3285__auto____$1) {
          return or__3285__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "Mix.solo-mode*", m);
        }
      }
    }().call(null, m, mode)
  }
};
cljs.core.async.mix = function mix(out) {
  var cs = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
  var solo_modes = new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "pause", "pause", 1120344424), null, new cljs.core.Keyword(null, "mute", "mute", 1017267595), null], null), null);
  var attrs = cljs.core.conj.call(null, solo_modes, new cljs.core.Keyword(null, "solo", "solo", 1017440337));
  var solo_mode = cljs.core.atom.call(null, new cljs.core.Keyword(null, "mute", "mute", 1017267595));
  var change = cljs.core.async.chan.call(null);
  var changed = function(cs, solo_modes, attrs, solo_mode, change) {
    return function() {
      return cljs.core.async.put_BANG_.call(null, change, true)
    }
  }(cs, solo_modes, attrs, solo_mode, change);
  var pick = function(cs, solo_modes, attrs, solo_mode, change, changed) {
    return function(attr, chs) {
      return cljs.core.reduce_kv.call(null, function(cs, solo_modes, attrs, solo_mode, change, changed) {
        return function(ret, c, v) {
          if(cljs.core.truth_(attr.call(null, v))) {
            return cljs.core.conj.call(null, ret, c)
          }else {
            return ret
          }
        }
      }(cs, solo_modes, attrs, solo_mode, change, changed), cljs.core.PersistentHashSet.EMPTY, chs)
    }
  }(cs, solo_modes, attrs, solo_mode, change, changed);
  var calc_state = function(cs, solo_modes, attrs, solo_mode, change, changed, pick) {
    return function() {
      var chs = cljs.core.deref.call(null, cs);
      var mode = cljs.core.deref.call(null, solo_mode);
      var solos = pick.call(null, new cljs.core.Keyword(null, "solo", "solo", 1017440337), chs);
      var pauses = pick.call(null, new cljs.core.Keyword(null, "pause", "pause", 1120344424), chs);
      return new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "solos", "solos", 1123523302), solos, new cljs.core.Keyword(null, "mutes", "mutes", 1118168300), pick.call(null, new cljs.core.Keyword(null, "mute", "mute", 1017267595), chs), new cljs.core.Keyword(null, "reads", "reads", 1122290959), cljs.core.conj.call(null, cljs.core._EQ_.call(null, mode, new cljs.core.Keyword(null, "pause", "pause", 1120344424)) && !cljs.core.empty_QMARK_.call(null, solos) ? cljs.core.vec.call(null, 
      solos) : cljs.core.vec.call(null, cljs.core.remove.call(null, pauses, cljs.core.keys.call(null, chs))), change)], null)
    }
  }(cs, solo_modes, attrs, solo_mode, change, changed, pick);
  var m = function() {
    if(typeof cljs.core.async.t531075 !== "undefined") {
    }else {
      cljs.core.async.t531075 = function(pick, out, attrs, cs, calc_state, solo_modes, mix, changed, change, solo_mode, meta531076) {
        this.pick = pick;
        this.out = out;
        this.attrs = attrs;
        this.cs = cs;
        this.calc_state = calc_state;
        this.solo_modes = solo_modes;
        this.mix = mix;
        this.changed = changed;
        this.change = change;
        this.solo_mode = solo_mode;
        this.meta531076 = meta531076;
        this.cljs$lang$protocol_mask$partition1$ = 0;
        this.cljs$lang$protocol_mask$partition0$ = 393216
      };
      cljs.core.async.t531075.cljs$lang$type = true;
      cljs.core.async.t531075.cljs$lang$ctorStr = "cljs.core.async/t531075";
      cljs.core.async.t531075.cljs$lang$ctorPrWriter = function(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state) {
        return function(this__3829__auto__, writer__3830__auto__, opt__3831__auto__) {
          return cljs.core._write.call(null, writer__3830__auto__, "cljs.core.async/t531075")
        }
      }(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state);
      cljs.core.async.t531075.prototype.cljs$core$async$Mix$ = true;
      cljs.core.async.t531075.prototype.cljs$core$async$Mix$admix_STAR_$arity$2 = function(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state) {
        return function(_, ch) {
          var self__ = this;
          var ___$1 = this;
          cljs.core.swap_BANG_.call(null, self__.cs, cljs.core.assoc, ch, cljs.core.PersistentArrayMap.EMPTY);
          return self__.changed.call(null)
        }
      }(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state);
      cljs.core.async.t531075.prototype.cljs$core$async$Mix$unmix_STAR_$arity$2 = function(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state) {
        return function(_, ch) {
          var self__ = this;
          var ___$1 = this;
          cljs.core.swap_BANG_.call(null, self__.cs, cljs.core.dissoc, ch);
          return self__.changed.call(null)
        }
      }(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state);
      cljs.core.async.t531075.prototype.cljs$core$async$Mix$unmix_all_STAR_$arity$1 = function(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state) {
        return function(_) {
          var self__ = this;
          var ___$1 = this;
          cljs.core.reset_BANG_.call(null, self__.cs, cljs.core.PersistentArrayMap.EMPTY);
          return self__.changed.call(null)
        }
      }(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state);
      cljs.core.async.t531075.prototype.cljs$core$async$Mix$toggle_STAR_$arity$2 = function(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state) {
        return function(_, state_map) {
          var self__ = this;
          var ___$1 = this;
          cljs.core.swap_BANG_.call(null, self__.cs, cljs.core.partial.call(null, cljs.core.merge_with, core.merge), state_map);
          return self__.changed.call(null)
        }
      }(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state);
      cljs.core.async.t531075.prototype.cljs$core$async$Mix$solo_mode_STAR_$arity$2 = function(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state) {
        return function(_, mode) {
          var self__ = this;
          var ___$1 = this;
          if(cljs.core.truth_(self__.solo_modes.call(null, mode))) {
          }else {
            throw new Error([cljs.core.str("Assert failed: "), cljs.core.str([cljs.core.str("mode must be one of: "), cljs.core.str(self__.solo_modes)].join("")), cljs.core.str("\n"), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "solo-modes", "solo-modes", -1162732933, null), new cljs.core.Symbol(null, "mode", "mode", -1637174436, null))))].join(""));
          }
          cljs.core.reset_BANG_.call(null, self__.solo_mode, mode);
          return self__.changed.call(null)
        }
      }(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state);
      cljs.core.async.t531075.prototype.cljs$core$async$Mux$ = true;
      cljs.core.async.t531075.prototype.cljs$core$async$Mux$muxch_STAR_$arity$1 = function(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state) {
        return function(_) {
          var self__ = this;
          var ___$1 = this;
          return self__.out
        }
      }(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state);
      cljs.core.async.t531075.prototype.cljs$core$IMeta$_meta$arity$1 = function(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state) {
        return function(_531077) {
          var self__ = this;
          var _531077__$1 = this;
          return self__.meta531076
        }
      }(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state);
      cljs.core.async.t531075.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state) {
        return function(_531077, meta531076__$1) {
          var self__ = this;
          var _531077__$1 = this;
          return new cljs.core.async.t531075(self__.pick, self__.out, self__.attrs, self__.cs, self__.calc_state, self__.solo_modes, self__.mix, self__.changed, self__.change, self__.solo_mode, meta531076__$1)
        }
      }(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state);
      cljs.core.async.__GT_t531075 = function(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state) {
        return function __GT_t531075(pick__$1, out__$1, attrs__$1, cs__$1, calc_state__$1, solo_modes__$1, mix__$1, changed__$1, change__$1, solo_mode__$1, meta531076) {
          return new cljs.core.async.t531075(pick__$1, out__$1, attrs__$1, cs__$1, calc_state__$1, solo_modes__$1, mix__$1, changed__$1, change__$1, solo_mode__$1, meta531076)
        }
      }(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state)
    }
    return new cljs.core.async.t531075(pick, out, attrs, cs, calc_state, solo_modes, mix, changed, change, solo_mode, null)
  }();
  var c__5728__auto___531180 = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function() {
    var f__5729__auto__ = function() {
      var switch__5678__auto__ = function(state_531142) {
        var state_val_531143 = state_531142[1];
        if(state_val_531143 === 1) {
          var inst_531081 = state_531142[5];
          var inst_531081__$1 = calc_state.call(null);
          var inst_531082 = cljs.core.seq_QMARK_.call(null, inst_531081__$1);
          var state_531142__$1 = function() {
            var statearr_531144 = state_531142;
            statearr_531144[5] = inst_531081__$1;
            return statearr_531144
          }();
          if(inst_531082) {
            var statearr_531145_531181 = state_531142__$1;
            statearr_531145_531181[1] = 2
          }else {
            var statearr_531146_531182 = state_531142__$1;
            statearr_531146_531182[1] = 3
          }
          return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
        }else {
          if(state_val_531143 === 2) {
            var inst_531081 = state_531142[5];
            var inst_531084 = cljs.core.apply.call(null, cljs.core.hash_map, inst_531081);
            var state_531142__$1 = state_531142;
            var statearr_531147_531183 = state_531142__$1;
            statearr_531147_531183[2] = inst_531084;
            statearr_531147_531183[1] = 4;
            return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
          }else {
            if(state_val_531143 === 3) {
              var inst_531081 = state_531142[5];
              var state_531142__$1 = state_531142;
              var statearr_531148_531184 = state_531142__$1;
              statearr_531148_531184[2] = inst_531081;
              statearr_531148_531184[1] = 4;
              return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
            }else {
              if(state_val_531143 === 4) {
                var inst_531081 = state_531142[5];
                var inst_531087 = state_531142[2];
                var inst_531088 = cljs.core.get.call(null, inst_531087, new cljs.core.Keyword(null, "reads", "reads", 1122290959));
                var inst_531089 = cljs.core.get.call(null, inst_531087, new cljs.core.Keyword(null, "mutes", "mutes", 1118168300));
                var inst_531090 = cljs.core.get.call(null, inst_531087, new cljs.core.Keyword(null, "solos", "solos", 1123523302));
                var inst_531091 = inst_531081;
                var state_531142__$1 = function() {
                  var statearr_531149 = state_531142;
                  statearr_531149[6] = inst_531088;
                  statearr_531149[7] = inst_531089;
                  statearr_531149[8] = inst_531090;
                  statearr_531149[9] = inst_531091;
                  return statearr_531149
                }();
                var statearr_531150_531185 = state_531142__$1;
                statearr_531150_531185[2] = null;
                statearr_531150_531185[1] = 5;
                return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
              }else {
                if(state_val_531143 === 5) {
                  var inst_531091 = state_531142[9];
                  var inst_531094 = cljs.core.seq_QMARK_.call(null, inst_531091);
                  var state_531142__$1 = state_531142;
                  if(inst_531094) {
                    var statearr_531151_531186 = state_531142__$1;
                    statearr_531151_531186[1] = 7
                  }else {
                    var statearr_531152_531187 = state_531142__$1;
                    statearr_531152_531187[1] = 8
                  }
                  return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                }else {
                  if(state_val_531143 === 6) {
                    var inst_531140 = state_531142[2];
                    var state_531142__$1 = state_531142;
                    return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_531142__$1, inst_531140)
                  }else {
                    if(state_val_531143 === 7) {
                      var inst_531091 = state_531142[9];
                      var inst_531096 = cljs.core.apply.call(null, cljs.core.hash_map, inst_531091);
                      var state_531142__$1 = state_531142;
                      var statearr_531153_531188 = state_531142__$1;
                      statearr_531153_531188[2] = inst_531096;
                      statearr_531153_531188[1] = 9;
                      return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                    }else {
                      if(state_val_531143 === 8) {
                        var inst_531091 = state_531142[9];
                        var state_531142__$1 = state_531142;
                        var statearr_531154_531189 = state_531142__$1;
                        statearr_531154_531189[2] = inst_531091;
                        statearr_531154_531189[1] = 9;
                        return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                      }else {
                        if(state_val_531143 === 9) {
                          var inst_531099 = state_531142[10];
                          var inst_531099__$1 = state_531142[2];
                          var inst_531100 = cljs.core.get.call(null, inst_531099__$1, new cljs.core.Keyword(null, "reads", "reads", 1122290959));
                          var inst_531101 = cljs.core.get.call(null, inst_531099__$1, new cljs.core.Keyword(null, "mutes", "mutes", 1118168300));
                          var inst_531102 = cljs.core.get.call(null, inst_531099__$1, new cljs.core.Keyword(null, "solos", "solos", 1123523302));
                          var state_531142__$1 = function() {
                            var statearr_531155 = state_531142;
                            statearr_531155[10] = inst_531099__$1;
                            statearr_531155[11] = inst_531102;
                            statearr_531155[12] = inst_531101;
                            return statearr_531155
                          }();
                          return cljs.core.async.impl.ioc_helpers.ioc_alts_BANG_.call(null, state_531142__$1, 10, inst_531100)
                        }else {
                          if(state_val_531143 === 10) {
                            var inst_531106 = state_531142[13];
                            var inst_531107 = state_531142[14];
                            var inst_531105 = state_531142[2];
                            var inst_531106__$1 = cljs.core.nth.call(null, inst_531105, 0, null);
                            var inst_531107__$1 = cljs.core.nth.call(null, inst_531105, 1, null);
                            var inst_531108 = inst_531106__$1 == null;
                            var inst_531109 = cljs.core._EQ_.call(null, inst_531107__$1, change);
                            var inst_531110 = inst_531108 || inst_531109;
                            var state_531142__$1 = function() {
                              var statearr_531156 = state_531142;
                              statearr_531156[13] = inst_531106__$1;
                              statearr_531156[14] = inst_531107__$1;
                              return statearr_531156
                            }();
                            if(cljs.core.truth_(inst_531110)) {
                              var statearr_531157_531190 = state_531142__$1;
                              statearr_531157_531190[1] = 11
                            }else {
                              var statearr_531158_531191 = state_531142__$1;
                              statearr_531158_531191[1] = 12
                            }
                            return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                          }else {
                            if(state_val_531143 === 11) {
                              var inst_531106 = state_531142[13];
                              var inst_531112 = inst_531106 == null;
                              var state_531142__$1 = state_531142;
                              if(cljs.core.truth_(inst_531112)) {
                                var statearr_531159_531192 = state_531142__$1;
                                statearr_531159_531192[1] = 14
                              }else {
                                var statearr_531160_531193 = state_531142__$1;
                                statearr_531160_531193[1] = 15
                              }
                              return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                            }else {
                              if(state_val_531143 === 12) {
                                var inst_531121 = state_531142[15];
                                var inst_531107 = state_531142[14];
                                var inst_531102 = state_531142[11];
                                var inst_531121__$1 = inst_531102.call(null, inst_531107);
                                var state_531142__$1 = function() {
                                  var statearr_531161 = state_531142;
                                  statearr_531161[15] = inst_531121__$1;
                                  return statearr_531161
                                }();
                                if(cljs.core.truth_(inst_531121__$1)) {
                                  var statearr_531162_531194 = state_531142__$1;
                                  statearr_531162_531194[1] = 17
                                }else {
                                  var statearr_531163_531195 = state_531142__$1;
                                  statearr_531163_531195[1] = 18
                                }
                                return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                              }else {
                                if(state_val_531143 === 13) {
                                  var inst_531138 = state_531142[2];
                                  var state_531142__$1 = state_531142;
                                  var statearr_531164_531196 = state_531142__$1;
                                  statearr_531164_531196[2] = inst_531138;
                                  statearr_531164_531196[1] = 6;
                                  return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                                }else {
                                  if(state_val_531143 === 14) {
                                    var inst_531107 = state_531142[14];
                                    var inst_531114 = cljs.core.swap_BANG_.call(null, cs, cljs.core.dissoc, inst_531107);
                                    var state_531142__$1 = state_531142;
                                    var statearr_531165_531197 = state_531142__$1;
                                    statearr_531165_531197[2] = inst_531114;
                                    statearr_531165_531197[1] = 16;
                                    return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                                  }else {
                                    if(state_val_531143 === 15) {
                                      var state_531142__$1 = state_531142;
                                      var statearr_531166_531198 = state_531142__$1;
                                      statearr_531166_531198[2] = null;
                                      statearr_531166_531198[1] = 16;
                                      return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                                    }else {
                                      if(state_val_531143 === 16) {
                                        var inst_531117 = state_531142[2];
                                        var inst_531118 = calc_state.call(null);
                                        var inst_531091 = inst_531118;
                                        var state_531142__$1 = function() {
                                          var statearr_531167 = state_531142;
                                          statearr_531167[16] = inst_531117;
                                          statearr_531167[9] = inst_531091;
                                          return statearr_531167
                                        }();
                                        var statearr_531168_531199 = state_531142__$1;
                                        statearr_531168_531199[2] = null;
                                        statearr_531168_531199[1] = 5;
                                        return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                                      }else {
                                        if(state_val_531143 === 17) {
                                          var inst_531121 = state_531142[15];
                                          var state_531142__$1 = state_531142;
                                          var statearr_531169_531200 = state_531142__$1;
                                          statearr_531169_531200[2] = inst_531121;
                                          statearr_531169_531200[1] = 19;
                                          return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                                        }else {
                                          if(state_val_531143 === 18) {
                                            var inst_531107 = state_531142[14];
                                            var inst_531102 = state_531142[11];
                                            var inst_531101 = state_531142[12];
                                            var inst_531124 = cljs.core.empty_QMARK_.call(null, inst_531102);
                                            var inst_531125 = inst_531101.call(null, inst_531107);
                                            var inst_531126 = cljs.core.not.call(null, inst_531125);
                                            var inst_531127 = inst_531124 && inst_531126;
                                            var state_531142__$1 = state_531142;
                                            var statearr_531170_531201 = state_531142__$1;
                                            statearr_531170_531201[2] = inst_531127;
                                            statearr_531170_531201[1] = 19;
                                            return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                                          }else {
                                            if(state_val_531143 === 19) {
                                              var inst_531129 = state_531142[2];
                                              var state_531142__$1 = state_531142;
                                              if(cljs.core.truth_(inst_531129)) {
                                                var statearr_531171_531202 = state_531142__$1;
                                                statearr_531171_531202[1] = 20
                                              }else {
                                                var statearr_531172_531203 = state_531142__$1;
                                                statearr_531172_531203[1] = 21
                                              }
                                              return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                                            }else {
                                              if(state_val_531143 === 20) {
                                                var inst_531106 = state_531142[13];
                                                var state_531142__$1 = state_531142;
                                                return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_531142__$1, 23, out, inst_531106)
                                              }else {
                                                if(state_val_531143 === 21) {
                                                  var state_531142__$1 = state_531142;
                                                  var statearr_531173_531204 = state_531142__$1;
                                                  statearr_531173_531204[2] = null;
                                                  statearr_531173_531204[1] = 22;
                                                  return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                                                }else {
                                                  if(state_val_531143 === 22) {
                                                    var inst_531099 = state_531142[10];
                                                    var inst_531135 = state_531142[2];
                                                    var inst_531091 = inst_531099;
                                                    var state_531142__$1 = function() {
                                                      var statearr_531174 = state_531142;
                                                      statearr_531174[9] = inst_531091;
                                                      statearr_531174[17] = inst_531135;
                                                      return statearr_531174
                                                    }();
                                                    var statearr_531175_531205 = state_531142__$1;
                                                    statearr_531175_531205[2] = null;
                                                    statearr_531175_531205[1] = 5;
                                                    return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                                                  }else {
                                                    if(state_val_531143 === 23) {
                                                      var inst_531132 = state_531142[2];
                                                      var state_531142__$1 = state_531142;
                                                      var statearr_531176_531206 = state_531142__$1;
                                                      statearr_531176_531206[2] = inst_531132;
                                                      statearr_531176_531206[1] = 22;
                                                      return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                                                    }else {
                                                      return null
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      };
      return function(switch__5678__auto__) {
        return function() {
          var state_machine__5679__auto__ = null;
          var state_machine__5679__auto____0 = function() {
            var statearr_531178 = new Array(18);
            statearr_531178[0] = state_machine__5679__auto__;
            statearr_531178[1] = 1;
            return statearr_531178
          };
          var state_machine__5679__auto____1 = function(state_531142) {
            while(true) {
              var result__5680__auto__ = switch__5678__auto__.call(null, state_531142);
              if(cljs.core.keyword_identical_QMARK_.call(null, result__5680__auto__, new cljs.core.Keyword(null, "recur", "recur", 1122293407))) {
                continue
              }else {
                return result__5680__auto__
              }
              break
            }
          };
          state_machine__5679__auto__ = function(state_531142) {
            switch(arguments.length) {
              case 0:
                return state_machine__5679__auto____0.call(this);
              case 1:
                return state_machine__5679__auto____1.call(this, state_531142)
            }
            throw new Error("Invalid arity: " + arguments.length);
          };
          state_machine__5679__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__5679__auto____0;
          state_machine__5679__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__5679__auto____1;
          return state_machine__5679__auto__
        }()
      }(switch__5678__auto__)
    }();
    var state__5730__auto__ = function() {
      var statearr_531179 = f__5729__auto__.call(null);
      statearr_531179[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__5728__auto___531180;
      return statearr_531179
    }();
    return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__5730__auto__)
  });
  return m
};
cljs.core.async.admix = function admix(mix, ch) {
  return cljs.core.async.admix_STAR_.call(null, mix, ch)
};
cljs.core.async.unmix = function unmix(mix, ch) {
  return cljs.core.async.unmix_STAR_.call(null, mix, ch)
};
cljs.core.async.unmix_all = function unmix_all(mix) {
  return cljs.core.async.unmix_all_STAR_.call(null, mix)
};
cljs.core.async.toggle = function toggle(mix, state_map) {
  return cljs.core.async.toggle_STAR_.call(null, mix, state_map)
};
cljs.core.async.solo_mode = function solo_mode(mix, mode) {
  return cljs.core.async.solo_mode_STAR_.call(null, mix, mode)
};
cljs.core.async.Pub = function() {
  var obj531208 = {};
  return obj531208
}();
cljs.core.async.sub_STAR_ = function sub_STAR_(p, v, ch, close_QMARK_) {
  if(function() {
    var and__3273__auto__ = p;
    if(and__3273__auto__) {
      return p.cljs$core$async$Pub$sub_STAR_$arity$4
    }else {
      return and__3273__auto__
    }
  }()) {
    return p.cljs$core$async$Pub$sub_STAR_$arity$4(p, v, ch, close_QMARK_)
  }else {
    var x__3888__auto__ = p == null ? null : p;
    return function() {
      var or__3285__auto__ = cljs.core.async.sub_STAR_[goog.typeOf(x__3888__auto__)];
      if(or__3285__auto__) {
        return or__3285__auto__
      }else {
        var or__3285__auto____$1 = cljs.core.async.sub_STAR_["_"];
        if(or__3285__auto____$1) {
          return or__3285__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "Pub.sub*", p);
        }
      }
    }().call(null, p, v, ch, close_QMARK_)
  }
};
cljs.core.async.unsub_STAR_ = function unsub_STAR_(p, v, ch) {
  if(function() {
    var and__3273__auto__ = p;
    if(and__3273__auto__) {
      return p.cljs$core$async$Pub$unsub_STAR_$arity$3
    }else {
      return and__3273__auto__
    }
  }()) {
    return p.cljs$core$async$Pub$unsub_STAR_$arity$3(p, v, ch)
  }else {
    var x__3888__auto__ = p == null ? null : p;
    return function() {
      var or__3285__auto__ = cljs.core.async.unsub_STAR_[goog.typeOf(x__3888__auto__)];
      if(or__3285__auto__) {
        return or__3285__auto__
      }else {
        var or__3285__auto____$1 = cljs.core.async.unsub_STAR_["_"];
        if(or__3285__auto____$1) {
          return or__3285__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "Pub.unsub*", p);
        }
      }
    }().call(null, p, v, ch)
  }
};
cljs.core.async.unsub_all_STAR_ = function() {
  var unsub_all_STAR_ = null;
  var unsub_all_STAR___1 = function(p) {
    if(function() {
      var and__3273__auto__ = p;
      if(and__3273__auto__) {
        return p.cljs$core$async$Pub$unsub_all_STAR_$arity$1
      }else {
        return and__3273__auto__
      }
    }()) {
      return p.cljs$core$async$Pub$unsub_all_STAR_$arity$1(p)
    }else {
      var x__3888__auto__ = p == null ? null : p;
      return function() {
        var or__3285__auto__ = cljs.core.async.unsub_all_STAR_[goog.typeOf(x__3888__auto__)];
        if(or__3285__auto__) {
          return or__3285__auto__
        }else {
          var or__3285__auto____$1 = cljs.core.async.unsub_all_STAR_["_"];
          if(or__3285__auto____$1) {
            return or__3285__auto____$1
          }else {
            throw cljs.core.missing_protocol.call(null, "Pub.unsub-all*", p);
          }
        }
      }().call(null, p)
    }
  };
  var unsub_all_STAR___2 = function(p, v) {
    if(function() {
      var and__3273__auto__ = p;
      if(and__3273__auto__) {
        return p.cljs$core$async$Pub$unsub_all_STAR_$arity$2
      }else {
        return and__3273__auto__
      }
    }()) {
      return p.cljs$core$async$Pub$unsub_all_STAR_$arity$2(p, v)
    }else {
      var x__3888__auto__ = p == null ? null : p;
      return function() {
        var or__3285__auto__ = cljs.core.async.unsub_all_STAR_[goog.typeOf(x__3888__auto__)];
        if(or__3285__auto__) {
          return or__3285__auto__
        }else {
          var or__3285__auto____$1 = cljs.core.async.unsub_all_STAR_["_"];
          if(or__3285__auto____$1) {
            return or__3285__auto____$1
          }else {
            throw cljs.core.missing_protocol.call(null, "Pub.unsub-all*", p);
          }
        }
      }().call(null, p, v)
    }
  };
  unsub_all_STAR_ = function(p, v) {
    switch(arguments.length) {
      case 1:
        return unsub_all_STAR___1.call(this, p);
      case 2:
        return unsub_all_STAR___2.call(this, p, v)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  unsub_all_STAR_.cljs$core$IFn$_invoke$arity$1 = unsub_all_STAR___1;
  unsub_all_STAR_.cljs$core$IFn$_invoke$arity$2 = unsub_all_STAR___2;
  return unsub_all_STAR_
}();
cljs.core.async.pub = function() {
  var pub = null;
  var pub__2 = function(ch, topic_fn) {
    return pub.call(null, ch, topic_fn, cljs.core.constantly.call(null, null))
  };
  var pub__3 = function(ch, topic_fn, buf_fn) {
    var mults = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
    var ensure_mult = function(mults) {
      return function(topic) {
        var or__3285__auto__ = cljs.core.get.call(null, cljs.core.deref.call(null, mults), topic);
        if(cljs.core.truth_(or__3285__auto__)) {
          return or__3285__auto__
        }else {
          return cljs.core.get.call(null, cljs.core.swap_BANG_.call(null, mults, function(or__3285__auto__, mults) {
            return function(p1__531209_SHARP_) {
              if(cljs.core.truth_(p1__531209_SHARP_.call(null, topic))) {
                return p1__531209_SHARP_
              }else {
                return cljs.core.assoc.call(null, p1__531209_SHARP_, topic, cljs.core.async.mult.call(null, cljs.core.async.chan.call(null, buf_fn.call(null, topic))))
              }
            }
          }(or__3285__auto__, mults)), topic)
        }
      }
    }(mults);
    var p = function() {
      if(typeof cljs.core.async.t531333 !== "undefined") {
      }else {
        cljs.core.async.t531333 = function(ensure_mult, mults, buf_fn, topic_fn, ch, pub, meta531334) {
          this.ensure_mult = ensure_mult;
          this.mults = mults;
          this.buf_fn = buf_fn;
          this.topic_fn = topic_fn;
          this.ch = ch;
          this.pub = pub;
          this.meta531334 = meta531334;
          this.cljs$lang$protocol_mask$partition1$ = 0;
          this.cljs$lang$protocol_mask$partition0$ = 393216
        };
        cljs.core.async.t531333.cljs$lang$type = true;
        cljs.core.async.t531333.cljs$lang$ctorStr = "cljs.core.async/t531333";
        cljs.core.async.t531333.cljs$lang$ctorPrWriter = function(mults, ensure_mult) {
          return function(this__3829__auto__, writer__3830__auto__, opt__3831__auto__) {
            return cljs.core._write.call(null, writer__3830__auto__, "cljs.core.async/t531333")
          }
        }(mults, ensure_mult);
        cljs.core.async.t531333.prototype.cljs$core$async$Pub$ = true;
        cljs.core.async.t531333.prototype.cljs$core$async$Pub$sub_STAR_$arity$4 = function(mults, ensure_mult) {
          return function(p, topic, ch__$2, close_QMARK_) {
            var self__ = this;
            var p__$1 = this;
            var m = self__.ensure_mult.call(null, topic);
            return cljs.core.async.tap.call(null, m, ch__$2, close_QMARK_)
          }
        }(mults, ensure_mult);
        cljs.core.async.t531333.prototype.cljs$core$async$Pub$unsub_STAR_$arity$3 = function(mults, ensure_mult) {
          return function(p, topic, ch__$2) {
            var self__ = this;
            var p__$1 = this;
            var temp__4092__auto__ = cljs.core.get.call(null, cljs.core.deref.call(null, self__.mults), topic);
            if(cljs.core.truth_(temp__4092__auto__)) {
              var m = temp__4092__auto__;
              return cljs.core.async.untap.call(null, m, ch__$2)
            }else {
              return null
            }
          }
        }(mults, ensure_mult);
        cljs.core.async.t531333.prototype.cljs$core$async$Pub$unsub_all_STAR_$arity$1 = function(mults, ensure_mult) {
          return function(_) {
            var self__ = this;
            var ___$1 = this;
            return cljs.core.reset_BANG_.call(null, self__.mults, cljs.core.PersistentArrayMap.EMPTY)
          }
        }(mults, ensure_mult);
        cljs.core.async.t531333.prototype.cljs$core$async$Pub$unsub_all_STAR_$arity$2 = function(mults, ensure_mult) {
          return function(_, topic) {
            var self__ = this;
            var ___$1 = this;
            return cljs.core.swap_BANG_.call(null, self__.mults, cljs.core.dissoc, topic)
          }
        }(mults, ensure_mult);
        cljs.core.async.t531333.prototype.cljs$core$async$Mux$ = true;
        cljs.core.async.t531333.prototype.cljs$core$async$Mux$muxch_STAR_$arity$1 = function(mults, ensure_mult) {
          return function(_) {
            var self__ = this;
            var ___$1 = this;
            return self__.ch
          }
        }(mults, ensure_mult);
        cljs.core.async.t531333.prototype.cljs$core$IMeta$_meta$arity$1 = function(mults, ensure_mult) {
          return function(_531335) {
            var self__ = this;
            var _531335__$1 = this;
            return self__.meta531334
          }
        }(mults, ensure_mult);
        cljs.core.async.t531333.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(mults, ensure_mult) {
          return function(_531335, meta531334__$1) {
            var self__ = this;
            var _531335__$1 = this;
            return new cljs.core.async.t531333(self__.ensure_mult, self__.mults, self__.buf_fn, self__.topic_fn, self__.ch, self__.pub, meta531334__$1)
          }
        }(mults, ensure_mult);
        cljs.core.async.__GT_t531333 = function(mults, ensure_mult) {
          return function __GT_t531333(ensure_mult__$1, mults__$1, buf_fn__$1, topic_fn__$1, ch__$1, pub__$1, meta531334) {
            return new cljs.core.async.t531333(ensure_mult__$1, mults__$1, buf_fn__$1, topic_fn__$1, ch__$1, pub__$1, meta531334)
          }
        }(mults, ensure_mult)
      }
      return new cljs.core.async.t531333(ensure_mult, mults, buf_fn, topic_fn, ch, pub, null)
    }();
    var c__5728__auto___531456 = cljs.core.async.chan.call(null, 1);
    cljs.core.async.impl.dispatch.run.call(null, function() {
      var f__5729__auto__ = function() {
        var switch__5678__auto__ = function(state_531408) {
          var state_val_531409 = state_531408[1];
          if(state_val_531409 === 1) {
            var state_531408__$1 = state_531408;
            var statearr_531410_531457 = state_531408__$1;
            statearr_531410_531457[2] = null;
            statearr_531410_531457[1] = 2;
            return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
          }else {
            if(state_val_531409 === 2) {
              var state_531408__$1 = state_531408;
              return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_531408__$1, 4, ch)
            }else {
              if(state_val_531409 === 3) {
                var inst_531406 = state_531408[2];
                var state_531408__$1 = state_531408;
                return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_531408__$1, inst_531406)
              }else {
                if(state_val_531409 === 4) {
                  var inst_531338 = state_531408[5];
                  var inst_531338__$1 = state_531408[2];
                  var inst_531339 = inst_531338__$1 == null;
                  var state_531408__$1 = function() {
                    var statearr_531411 = state_531408;
                    statearr_531411[5] = inst_531338__$1;
                    return statearr_531411
                  }();
                  if(cljs.core.truth_(inst_531339)) {
                    var statearr_531412_531458 = state_531408__$1;
                    statearr_531412_531458[1] = 5
                  }else {
                    var statearr_531413_531459 = state_531408__$1;
                    statearr_531413_531459[1] = 6
                  }
                  return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                }else {
                  if(state_val_531409 === 5) {
                    var inst_531345 = cljs.core.deref.call(null, mults);
                    var inst_531346 = cljs.core.vals.call(null, inst_531345);
                    var inst_531347 = cljs.core.seq.call(null, inst_531346);
                    var inst_531348 = inst_531347;
                    var inst_531349 = null;
                    var inst_531350 = 0;
                    var inst_531351 = 0;
                    var state_531408__$1 = function() {
                      var statearr_531414 = state_531408;
                      statearr_531414[6] = inst_531350;
                      statearr_531414[7] = inst_531351;
                      statearr_531414[8] = inst_531348;
                      statearr_531414[9] = inst_531349;
                      return statearr_531414
                    }();
                    var statearr_531415_531460 = state_531408__$1;
                    statearr_531415_531460[2] = null;
                    statearr_531415_531460[1] = 8;
                    return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                  }else {
                    if(state_val_531409 === 6) {
                      var inst_531388 = state_531408[10];
                      var inst_531338 = state_531408[5];
                      var inst_531386 = state_531408[11];
                      var inst_531386__$1 = topic_fn.call(null, inst_531338);
                      var inst_531387 = cljs.core.deref.call(null, mults);
                      var inst_531388__$1 = cljs.core.get.call(null, inst_531387, inst_531386__$1);
                      var state_531408__$1 = function() {
                        var statearr_531416 = state_531408;
                        statearr_531416[10] = inst_531388__$1;
                        statearr_531416[11] = inst_531386__$1;
                        return statearr_531416
                      }();
                      if(cljs.core.truth_(inst_531388__$1)) {
                        var statearr_531417_531461 = state_531408__$1;
                        statearr_531417_531461[1] = 19
                      }else {
                        var statearr_531418_531462 = state_531408__$1;
                        statearr_531418_531462[1] = 20
                      }
                      return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                    }else {
                      if(state_val_531409 === 7) {
                        var inst_531404 = state_531408[2];
                        var state_531408__$1 = state_531408;
                        var statearr_531419_531463 = state_531408__$1;
                        statearr_531419_531463[2] = inst_531404;
                        statearr_531419_531463[1] = 3;
                        return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                      }else {
                        if(state_val_531409 === 8) {
                          var inst_531350 = state_531408[6];
                          var inst_531351 = state_531408[7];
                          var inst_531353 = inst_531351 < inst_531350;
                          var inst_531354 = inst_531353;
                          var state_531408__$1 = state_531408;
                          if(cljs.core.truth_(inst_531354)) {
                            var statearr_531423_531464 = state_531408__$1;
                            statearr_531423_531464[1] = 10
                          }else {
                            var statearr_531424_531465 = state_531408__$1;
                            statearr_531424_531465[1] = 11
                          }
                          return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                        }else {
                          if(state_val_531409 === 9) {
                            var inst_531384 = state_531408[2];
                            var state_531408__$1 = state_531408;
                            var statearr_531425_531466 = state_531408__$1;
                            statearr_531425_531466[2] = inst_531384;
                            statearr_531425_531466[1] = 7;
                            return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                          }else {
                            if(state_val_531409 === 10) {
                              var inst_531350 = state_531408[6];
                              var inst_531351 = state_531408[7];
                              var inst_531348 = state_531408[8];
                              var inst_531349 = state_531408[9];
                              var inst_531356 = cljs.core._nth.call(null, inst_531349, inst_531351);
                              var inst_531357 = cljs.core.async.muxch_STAR_.call(null, inst_531356);
                              var inst_531358 = cljs.core.async.close_BANG_.call(null, inst_531357);
                              var inst_531359 = inst_531351 + 1;
                              var tmp531420 = inst_531350;
                              var tmp531421 = inst_531348;
                              var tmp531422 = inst_531349;
                              var inst_531348__$1 = tmp531421;
                              var inst_531349__$1 = tmp531422;
                              var inst_531350__$1 = tmp531420;
                              var inst_531351__$1 = inst_531359;
                              var state_531408__$1 = function() {
                                var statearr_531426 = state_531408;
                                statearr_531426[6] = inst_531350__$1;
                                statearr_531426[7] = inst_531351__$1;
                                statearr_531426[12] = inst_531358;
                                statearr_531426[8] = inst_531348__$1;
                                statearr_531426[9] = inst_531349__$1;
                                return statearr_531426
                              }();
                              var statearr_531427_531467 = state_531408__$1;
                              statearr_531427_531467[2] = null;
                              statearr_531427_531467[1] = 8;
                              return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                            }else {
                              if(state_val_531409 === 11) {
                                var inst_531362 = state_531408[13];
                                var inst_531348 = state_531408[8];
                                var inst_531362__$1 = cljs.core.seq.call(null, inst_531348);
                                var state_531408__$1 = function() {
                                  var statearr_531428 = state_531408;
                                  statearr_531428[13] = inst_531362__$1;
                                  return statearr_531428
                                }();
                                if(inst_531362__$1) {
                                  var statearr_531429_531468 = state_531408__$1;
                                  statearr_531429_531468[1] = 13
                                }else {
                                  var statearr_531430_531469 = state_531408__$1;
                                  statearr_531430_531469[1] = 14
                                }
                                return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                              }else {
                                if(state_val_531409 === 12) {
                                  var inst_531382 = state_531408[2];
                                  var state_531408__$1 = state_531408;
                                  var statearr_531431_531470 = state_531408__$1;
                                  statearr_531431_531470[2] = inst_531382;
                                  statearr_531431_531470[1] = 9;
                                  return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                                }else {
                                  if(state_val_531409 === 13) {
                                    var inst_531362 = state_531408[13];
                                    var inst_531364 = cljs.core.chunked_seq_QMARK_.call(null, inst_531362);
                                    var state_531408__$1 = state_531408;
                                    if(inst_531364) {
                                      var statearr_531432_531471 = state_531408__$1;
                                      statearr_531432_531471[1] = 16
                                    }else {
                                      var statearr_531433_531472 = state_531408__$1;
                                      statearr_531433_531472[1] = 17
                                    }
                                    return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                                  }else {
                                    if(state_val_531409 === 14) {
                                      var state_531408__$1 = state_531408;
                                      var statearr_531434_531473 = state_531408__$1;
                                      statearr_531434_531473[2] = null;
                                      statearr_531434_531473[1] = 15;
                                      return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                                    }else {
                                      if(state_val_531409 === 15) {
                                        var inst_531380 = state_531408[2];
                                        var state_531408__$1 = state_531408;
                                        var statearr_531435_531474 = state_531408__$1;
                                        statearr_531435_531474[2] = inst_531380;
                                        statearr_531435_531474[1] = 12;
                                        return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                                      }else {
                                        if(state_val_531409 === 16) {
                                          var inst_531362 = state_531408[13];
                                          var inst_531366 = cljs.core.chunk_first.call(null, inst_531362);
                                          var inst_531367 = cljs.core.chunk_rest.call(null, inst_531362);
                                          var inst_531368 = cljs.core.count.call(null, inst_531366);
                                          var inst_531348 = inst_531367;
                                          var inst_531349 = inst_531366;
                                          var inst_531350 = inst_531368;
                                          var inst_531351 = 0;
                                          var state_531408__$1 = function() {
                                            var statearr_531436 = state_531408;
                                            statearr_531436[6] = inst_531350;
                                            statearr_531436[7] = inst_531351;
                                            statearr_531436[8] = inst_531348;
                                            statearr_531436[9] = inst_531349;
                                            return statearr_531436
                                          }();
                                          var statearr_531437_531475 = state_531408__$1;
                                          statearr_531437_531475[2] = null;
                                          statearr_531437_531475[1] = 8;
                                          return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                                        }else {
                                          if(state_val_531409 === 17) {
                                            var inst_531362 = state_531408[13];
                                            var inst_531371 = cljs.core.first.call(null, inst_531362);
                                            var inst_531372 = cljs.core.async.muxch_STAR_.call(null, inst_531371);
                                            var inst_531373 = cljs.core.async.close_BANG_.call(null, inst_531372);
                                            var inst_531374 = cljs.core.next.call(null, inst_531362);
                                            var inst_531348 = inst_531374;
                                            var inst_531349 = null;
                                            var inst_531350 = 0;
                                            var inst_531351 = 0;
                                            var state_531408__$1 = function() {
                                              var statearr_531438 = state_531408;
                                              statearr_531438[6] = inst_531350;
                                              statearr_531438[7] = inst_531351;
                                              statearr_531438[8] = inst_531348;
                                              statearr_531438[9] = inst_531349;
                                              statearr_531438[14] = inst_531373;
                                              return statearr_531438
                                            }();
                                            var statearr_531439_531476 = state_531408__$1;
                                            statearr_531439_531476[2] = null;
                                            statearr_531439_531476[1] = 8;
                                            return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                                          }else {
                                            if(state_val_531409 === 18) {
                                              var inst_531377 = state_531408[2];
                                              var state_531408__$1 = state_531408;
                                              var statearr_531440_531477 = state_531408__$1;
                                              statearr_531440_531477[2] = inst_531377;
                                              statearr_531440_531477[1] = 15;
                                              return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                                            }else {
                                              if(state_val_531409 === 19) {
                                                var state_531408__$1 = state_531408;
                                                var statearr_531441_531478 = state_531408__$1;
                                                statearr_531441_531478[2] = null;
                                                statearr_531441_531478[1] = 24;
                                                return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                                              }else {
                                                if(state_val_531409 === 20) {
                                                  var state_531408__$1 = state_531408;
                                                  var statearr_531442_531479 = state_531408__$1;
                                                  statearr_531442_531479[2] = null;
                                                  statearr_531442_531479[1] = 21;
                                                  return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                                                }else {
                                                  if(state_val_531409 === 21) {
                                                    var inst_531401 = state_531408[2];
                                                    var state_531408__$1 = function() {
                                                      var statearr_531443 = state_531408;
                                                      statearr_531443[15] = inst_531401;
                                                      return statearr_531443
                                                    }();
                                                    var statearr_531444_531480 = state_531408__$1;
                                                    statearr_531444_531480[2] = null;
                                                    statearr_531444_531480[1] = 2;
                                                    return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                                                  }else {
                                                    if(state_val_531409 === 22) {
                                                      var inst_531398 = state_531408[2];
                                                      var state_531408__$1 = state_531408;
                                                      var statearr_531445_531481 = state_531408__$1;
                                                      statearr_531445_531481[2] = inst_531398;
                                                      statearr_531445_531481[1] = 21;
                                                      return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                                                    }else {
                                                      if(state_val_531409 === 23) {
                                                        var inst_531386 = state_531408[11];
                                                        var inst_531390 = state_531408[2];
                                                        var inst_531391 = cljs.core.swap_BANG_.call(null, mults, cljs.core.dissoc, inst_531386);
                                                        var state_531408__$1 = function() {
                                                          var statearr_531446 = state_531408;
                                                          statearr_531446[16] = inst_531390;
                                                          return statearr_531446
                                                        }();
                                                        var statearr_531447_531482 = state_531408__$1;
                                                        statearr_531447_531482[2] = inst_531391;
                                                        statearr_531447_531482[1] = 22;
                                                        return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                                                      }else {
                                                        if(state_val_531409 === 24) {
                                                          try {
                                                            var inst_531388 = state_531408[10];
                                                            var inst_531338 = state_531408[5];
                                                            var inst_531394 = cljs.core.async.muxch_STAR_.call(null, inst_531388);
                                                            var state_531408__$1 = state_531408;
                                                            return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_531408__$1, 25, inst_531394, inst_531338)
                                                          }catch(e531448) {
                                                            if(e531448 instanceof Object) {
                                                              var ex__5672__auto__ = e531448;
                                                              var statearr_531449_531483 = state_531408;
                                                              statearr_531449_531483[1] = 23;
                                                              statearr_531449_531483[2] = ex__5672__auto__;
                                                              return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                                                            }else {
                                                              if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                                                                throw e531448;
                                                              }else {
                                                                return null
                                                              }
                                                            }
                                                          }
                                                        }else {
                                                          if(state_val_531409 === 25) {
                                                            try {
                                                              var inst_531396 = state_531408[2];
                                                              var state_531408__$1 = state_531408;
                                                              var statearr_531452_531484 = state_531408__$1;
                                                              statearr_531452_531484[2] = inst_531396;
                                                              statearr_531452_531484[1] = 22;
                                                              return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                                                            }catch(e531450) {
                                                              if(e531450 instanceof Object) {
                                                                var ex__5672__auto__ = e531450;
                                                                var statearr_531451_531485 = state_531408;
                                                                statearr_531451_531485[1] = 23;
                                                                statearr_531451_531485[2] = ex__5672__auto__;
                                                                return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                                                              }else {
                                                                if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                                                                  throw e531450;
                                                                }else {
                                                                  return null
                                                                }
                                                              }
                                                            }
                                                          }else {
                                                            return null
                                                          }
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        };
        return function(switch__5678__auto__) {
          return function() {
            var state_machine__5679__auto__ = null;
            var state_machine__5679__auto____0 = function() {
              var statearr_531454 = new Array(17);
              statearr_531454[0] = state_machine__5679__auto__;
              statearr_531454[1] = 1;
              return statearr_531454
            };
            var state_machine__5679__auto____1 = function(state_531408) {
              while(true) {
                var result__5680__auto__ = switch__5678__auto__.call(null, state_531408);
                if(cljs.core.keyword_identical_QMARK_.call(null, result__5680__auto__, new cljs.core.Keyword(null, "recur", "recur", 1122293407))) {
                  continue
                }else {
                  return result__5680__auto__
                }
                break
              }
            };
            state_machine__5679__auto__ = function(state_531408) {
              switch(arguments.length) {
                case 0:
                  return state_machine__5679__auto____0.call(this);
                case 1:
                  return state_machine__5679__auto____1.call(this, state_531408)
              }
              throw new Error("Invalid arity: " + arguments.length);
            };
            state_machine__5679__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__5679__auto____0;
            state_machine__5679__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__5679__auto____1;
            return state_machine__5679__auto__
          }()
        }(switch__5678__auto__)
      }();
      var state__5730__auto__ = function() {
        var statearr_531455 = f__5729__auto__.call(null);
        statearr_531455[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__5728__auto___531456;
        return statearr_531455
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__5730__auto__)
    });
    return p
  };
  pub = function(ch, topic_fn, buf_fn) {
    switch(arguments.length) {
      case 2:
        return pub__2.call(this, ch, topic_fn);
      case 3:
        return pub__3.call(this, ch, topic_fn, buf_fn)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  pub.cljs$core$IFn$_invoke$arity$2 = pub__2;
  pub.cljs$core$IFn$_invoke$arity$3 = pub__3;
  return pub
}();
cljs.core.async.sub = function() {
  var sub = null;
  var sub__3 = function(p, topic, ch) {
    return sub.call(null, p, topic, ch, true)
  };
  var sub__4 = function(p, topic, ch, close_QMARK_) {
    return cljs.core.async.sub_STAR_.call(null, p, topic, ch, close_QMARK_)
  };
  sub = function(p, topic, ch, close_QMARK_) {
    switch(arguments.length) {
      case 3:
        return sub__3.call(this, p, topic, ch);
      case 4:
        return sub__4.call(this, p, topic, ch, close_QMARK_)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  sub.cljs$core$IFn$_invoke$arity$3 = sub__3;
  sub.cljs$core$IFn$_invoke$arity$4 = sub__4;
  return sub
}();
cljs.core.async.unsub = function unsub(p, topic, ch) {
  return cljs.core.async.unsub_STAR_.call(null, p, topic, ch)
};
cljs.core.async.unsub_all = function() {
  var unsub_all = null;
  var unsub_all__1 = function(p) {
    return cljs.core.async.unsub_all_STAR_.call(null, p)
  };
  var unsub_all__2 = function(p, topic) {
    return cljs.core.async.unsub_all_STAR_.call(null, p, topic)
  };
  unsub_all = function(p, topic) {
    switch(arguments.length) {
      case 1:
        return unsub_all__1.call(this, p);
      case 2:
        return unsub_all__2.call(this, p, topic)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  unsub_all.cljs$core$IFn$_invoke$arity$1 = unsub_all__1;
  unsub_all.cljs$core$IFn$_invoke$arity$2 = unsub_all__2;
  return unsub_all
}();
cljs.core.async.map = function() {
  var map = null;
  var map__2 = function(f, chs) {
    return map.call(null, f, chs, null)
  };
  var map__3 = function(f, chs, buf_or_n) {
    var chs__$1 = cljs.core.vec.call(null, chs);
    var out = cljs.core.async.chan.call(null, buf_or_n);
    var cnt = cljs.core.count.call(null, chs__$1);
    var rets = cljs.core.object_array.call(null, cnt);
    var dchan = cljs.core.async.chan.call(null, 1);
    var dctr = cljs.core.atom.call(null, null);
    var done = cljs.core.mapv.call(null, function(chs__$1, out, cnt, rets, dchan, dctr) {
      return function(i) {
        return function(chs__$1, out, cnt, rets, dchan, dctr) {
          return function(ret) {
            rets[i] = ret;
            if(cljs.core.swap_BANG_.call(null, dctr, cljs.core.dec) === 0) {
              return cljs.core.async.put_BANG_.call(null, dchan, java.util.Arrays.copyOf.call(null, rets, cnt))
            }else {
              return null
            }
          }
        }(chs__$1, out, cnt, rets, dchan, dctr)
      }
    }(chs__$1, out, cnt, rets, dchan, dctr), cljs.core.range.call(null, cnt));
    var c__5728__auto___531616 = cljs.core.async.chan.call(null, 1);
    cljs.core.async.impl.dispatch.run.call(null, function() {
      var f__5729__auto__ = function() {
        var switch__5678__auto__ = function(state_531588) {
          var state_val_531589 = state_531588[1];
          if(state_val_531589 === 1) {
            var state_531588__$1 = state_531588;
            var statearr_531590_531617 = state_531588__$1;
            statearr_531590_531617[2] = null;
            statearr_531590_531617[1] = 2;
            return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
          }else {
            if(state_val_531589 === 2) {
              var inst_531552 = cljs.core.reset_BANG_.call(null, dctr, cnt);
              var inst_531553 = 0;
              var state_531588__$1 = function() {
                var statearr_531591 = state_531588;
                statearr_531591[5] = inst_531553;
                statearr_531591[6] = inst_531552;
                return statearr_531591
              }();
              var statearr_531592_531618 = state_531588__$1;
              statearr_531592_531618[2] = null;
              statearr_531592_531618[1] = 4;
              return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
            }else {
              if(state_val_531589 === 3) {
                var inst_531586 = state_531588[2];
                var state_531588__$1 = state_531588;
                return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_531588__$1, inst_531586)
              }else {
                if(state_val_531589 === 4) {
                  var inst_531553 = state_531588[5];
                  var inst_531555 = inst_531553 < cnt;
                  var state_531588__$1 = state_531588;
                  if(cljs.core.truth_(inst_531555)) {
                    var statearr_531593_531619 = state_531588__$1;
                    statearr_531593_531619[1] = 6
                  }else {
                    var statearr_531594_531620 = state_531588__$1;
                    statearr_531594_531620[1] = 7
                  }
                  return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                }else {
                  if(state_val_531589 === 5) {
                    var inst_531572 = state_531588[2];
                    var state_531588__$1 = function() {
                      var statearr_531595 = state_531588;
                      statearr_531595[7] = inst_531572;
                      return statearr_531595
                    }();
                    return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_531588__$1, 12, dchan)
                  }else {
                    if(state_val_531589 === 6) {
                      var state_531588__$1 = state_531588;
                      var statearr_531596_531621 = state_531588__$1;
                      statearr_531596_531621[2] = null;
                      statearr_531596_531621[1] = 11;
                      return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                    }else {
                      if(state_val_531589 === 7) {
                        var state_531588__$1 = state_531588;
                        var statearr_531597_531622 = state_531588__$1;
                        statearr_531597_531622[2] = null;
                        statearr_531597_531622[1] = 8;
                        return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                      }else {
                        if(state_val_531589 === 8) {
                          var inst_531570 = state_531588[2];
                          var state_531588__$1 = state_531588;
                          var statearr_531598_531623 = state_531588__$1;
                          statearr_531598_531623[2] = inst_531570;
                          statearr_531598_531623[1] = 5;
                          return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                        }else {
                          if(state_val_531589 === 9) {
                            var inst_531553 = state_531588[5];
                            var inst_531565 = state_531588[2];
                            var inst_531566 = inst_531553 + 1;
                            var inst_531553__$1 = inst_531566;
                            var state_531588__$1 = function() {
                              var statearr_531599 = state_531588;
                              statearr_531599[8] = inst_531565;
                              statearr_531599[5] = inst_531553__$1;
                              return statearr_531599
                            }();
                            var statearr_531600_531624 = state_531588__$1;
                            statearr_531600_531624[2] = null;
                            statearr_531600_531624[1] = 4;
                            return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                          }else {
                            if(state_val_531589 === 10) {
                              var inst_531557 = state_531588[2];
                              var inst_531558 = cljs.core.swap_BANG_.call(null, dctr, cljs.core.dec);
                              var state_531588__$1 = function() {
                                var statearr_531601 = state_531588;
                                statearr_531601[9] = inst_531557;
                                return statearr_531601
                              }();
                              var statearr_531602_531625 = state_531588__$1;
                              statearr_531602_531625[2] = inst_531558;
                              statearr_531602_531625[1] = 9;
                              return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                            }else {
                              if(state_val_531589 === 11) {
                                try {
                                  var inst_531553 = state_531588[5];
                                  var inst_531561 = chs__$1.call(null, inst_531553);
                                  var inst_531562 = done.call(null, inst_531553);
                                  var inst_531563 = cljs.core.async.take_BANG_.call(null, inst_531561, inst_531562);
                                  var state_531588__$1 = state_531588;
                                  var statearr_531605_531626 = state_531588__$1;
                                  statearr_531605_531626[2] = inst_531563;
                                  statearr_531605_531626[1] = 9;
                                  return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                                }catch(e531603) {
                                  if(e531603 instanceof Object) {
                                    var ex__5672__auto__ = e531603;
                                    var statearr_531604_531627 = state_531588;
                                    statearr_531604_531627[1] = 10;
                                    statearr_531604_531627[2] = ex__5672__auto__;
                                    return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                                  }else {
                                    if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                                      throw e531603;
                                    }else {
                                      return null
                                    }
                                  }
                                }
                              }else {
                                if(state_val_531589 === 12) {
                                  var inst_531574 = state_531588[10];
                                  var inst_531574__$1 = state_531588[2];
                                  var inst_531575 = cljs.core.some.call(null, cljs.core.nil_QMARK_, inst_531574__$1);
                                  var state_531588__$1 = function() {
                                    var statearr_531606 = state_531588;
                                    statearr_531606[10] = inst_531574__$1;
                                    return statearr_531606
                                  }();
                                  if(cljs.core.truth_(inst_531575)) {
                                    var statearr_531607_531628 = state_531588__$1;
                                    statearr_531607_531628[1] = 13
                                  }else {
                                    var statearr_531608_531629 = state_531588__$1;
                                    statearr_531608_531629[1] = 14
                                  }
                                  return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                                }else {
                                  if(state_val_531589 === 13) {
                                    var inst_531577 = cljs.core.async.close_BANG_.call(null, out);
                                    var state_531588__$1 = state_531588;
                                    var statearr_531609_531630 = state_531588__$1;
                                    statearr_531609_531630[2] = inst_531577;
                                    statearr_531609_531630[1] = 15;
                                    return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                                  }else {
                                    if(state_val_531589 === 14) {
                                      var inst_531574 = state_531588[10];
                                      var inst_531579 = cljs.core.apply.call(null, f, inst_531574);
                                      var state_531588__$1 = state_531588;
                                      return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_531588__$1, 16, out, inst_531579)
                                    }else {
                                      if(state_val_531589 === 15) {
                                        var inst_531584 = state_531588[2];
                                        var state_531588__$1 = state_531588;
                                        var statearr_531610_531631 = state_531588__$1;
                                        statearr_531610_531631[2] = inst_531584;
                                        statearr_531610_531631[1] = 3;
                                        return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                                      }else {
                                        if(state_val_531589 === 16) {
                                          var inst_531581 = state_531588[2];
                                          var state_531588__$1 = function() {
                                            var statearr_531611 = state_531588;
                                            statearr_531611[11] = inst_531581;
                                            return statearr_531611
                                          }();
                                          var statearr_531612_531632 = state_531588__$1;
                                          statearr_531612_531632[2] = null;
                                          statearr_531612_531632[1] = 2;
                                          return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                                        }else {
                                          return null
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        };
        return function(switch__5678__auto__) {
          return function() {
            var state_machine__5679__auto__ = null;
            var state_machine__5679__auto____0 = function() {
              var statearr_531614 = new Array(12);
              statearr_531614[0] = state_machine__5679__auto__;
              statearr_531614[1] = 1;
              return statearr_531614
            };
            var state_machine__5679__auto____1 = function(state_531588) {
              while(true) {
                var result__5680__auto__ = switch__5678__auto__.call(null, state_531588);
                if(cljs.core.keyword_identical_QMARK_.call(null, result__5680__auto__, new cljs.core.Keyword(null, "recur", "recur", 1122293407))) {
                  continue
                }else {
                  return result__5680__auto__
                }
                break
              }
            };
            state_machine__5679__auto__ = function(state_531588) {
              switch(arguments.length) {
                case 0:
                  return state_machine__5679__auto____0.call(this);
                case 1:
                  return state_machine__5679__auto____1.call(this, state_531588)
              }
              throw new Error("Invalid arity: " + arguments.length);
            };
            state_machine__5679__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__5679__auto____0;
            state_machine__5679__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__5679__auto____1;
            return state_machine__5679__auto__
          }()
        }(switch__5678__auto__)
      }();
      var state__5730__auto__ = function() {
        var statearr_531615 = f__5729__auto__.call(null);
        statearr_531615[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__5728__auto___531616;
        return statearr_531615
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__5730__auto__)
    });
    return out
  };
  map = function(f, chs, buf_or_n) {
    switch(arguments.length) {
      case 2:
        return map__2.call(this, f, chs);
      case 3:
        return map__3.call(this, f, chs, buf_or_n)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  map.cljs$core$IFn$_invoke$arity$2 = map__2;
  map.cljs$core$IFn$_invoke$arity$3 = map__3;
  return map
}();
cljs.core.async.merge = function() {
  var merge = null;
  var merge__1 = function(chs) {
    return merge.call(null, chs, null)
  };
  var merge__2 = function(chs, buf_or_n) {
    var out = cljs.core.async.chan.call(null, buf_or_n);
    var c__5728__auto___531732 = cljs.core.async.chan.call(null, 1);
    cljs.core.async.impl.dispatch.run.call(null, function() {
      var f__5729__auto__ = function() {
        var switch__5678__auto__ = function(state_531712) {
          var state_val_531713 = state_531712[1];
          if(state_val_531713 === 1) {
            var inst_531683 = cljs.core.vec.call(null, chs);
            var inst_531684 = inst_531683;
            var state_531712__$1 = function() {
              var statearr_531714 = state_531712;
              statearr_531714[5] = inst_531684;
              return statearr_531714
            }();
            var statearr_531715_531733 = state_531712__$1;
            statearr_531715_531733[2] = null;
            statearr_531715_531733[1] = 2;
            return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
          }else {
            if(state_val_531713 === 2) {
              var inst_531684 = state_531712[5];
              var inst_531686 = cljs.core.count.call(null, inst_531684);
              var inst_531687 = inst_531686 > 0;
              var state_531712__$1 = state_531712;
              if(cljs.core.truth_(inst_531687)) {
                var statearr_531716_531734 = state_531712__$1;
                statearr_531716_531734[1] = 4
              }else {
                var statearr_531717_531735 = state_531712__$1;
                statearr_531717_531735[1] = 5
              }
              return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
            }else {
              if(state_val_531713 === 3) {
                var inst_531710 = state_531712[2];
                var state_531712__$1 = state_531712;
                return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_531712__$1, inst_531710)
              }else {
                if(state_val_531713 === 4) {
                  var inst_531684 = state_531712[5];
                  var state_531712__$1 = state_531712;
                  return cljs.core.async.impl.ioc_helpers.ioc_alts_BANG_.call(null, state_531712__$1, 7, inst_531684)
                }else {
                  if(state_val_531713 === 5) {
                    var inst_531706 = cljs.core.async.close_BANG_.call(null, out);
                    var state_531712__$1 = state_531712;
                    var statearr_531718_531736 = state_531712__$1;
                    statearr_531718_531736[2] = inst_531706;
                    statearr_531718_531736[1] = 6;
                    return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                  }else {
                    if(state_val_531713 === 6) {
                      var inst_531708 = state_531712[2];
                      var state_531712__$1 = state_531712;
                      var statearr_531719_531737 = state_531712__$1;
                      statearr_531719_531737[2] = inst_531708;
                      statearr_531719_531737[1] = 3;
                      return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                    }else {
                      if(state_val_531713 === 7) {
                        var inst_531691 = state_531712[6];
                        var inst_531692 = state_531712[7];
                        var inst_531691__$1 = state_531712[2];
                        var inst_531692__$1 = cljs.core.nth.call(null, inst_531691__$1, 0, null);
                        var inst_531693 = cljs.core.nth.call(null, inst_531691__$1, 1, null);
                        var inst_531694 = inst_531692__$1 == null;
                        var state_531712__$1 = function() {
                          var statearr_531720 = state_531712;
                          statearr_531720[8] = inst_531693;
                          statearr_531720[6] = inst_531691__$1;
                          statearr_531720[7] = inst_531692__$1;
                          return statearr_531720
                        }();
                        if(cljs.core.truth_(inst_531694)) {
                          var statearr_531721_531738 = state_531712__$1;
                          statearr_531721_531738[1] = 8
                        }else {
                          var statearr_531722_531739 = state_531712__$1;
                          statearr_531722_531739[1] = 9
                        }
                        return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                      }else {
                        if(state_val_531713 === 8) {
                          var inst_531684 = state_531712[5];
                          var inst_531693 = state_531712[8];
                          var inst_531691 = state_531712[6];
                          var inst_531692 = state_531712[7];
                          var inst_531696 = function() {
                            var c = inst_531693;
                            var v = inst_531692;
                            var vec__531689 = inst_531691;
                            var cs = inst_531684;
                            return function(c, v, vec__531689, cs, inst_531684, inst_531693, inst_531691, inst_531692, state_val_531713) {
                              return function(p1__531633_SHARP_) {
                                return cljs.core.not_EQ_.call(null, c, p1__531633_SHARP_)
                              }
                            }(c, v, vec__531689, cs, inst_531684, inst_531693, inst_531691, inst_531692, state_val_531713)
                          }();
                          var inst_531697 = cljs.core.filterv.call(null, inst_531696, inst_531684);
                          var inst_531684__$1 = inst_531697;
                          var state_531712__$1 = function() {
                            var statearr_531723 = state_531712;
                            statearr_531723[5] = inst_531684__$1;
                            return statearr_531723
                          }();
                          var statearr_531724_531740 = state_531712__$1;
                          statearr_531724_531740[2] = null;
                          statearr_531724_531740[1] = 2;
                          return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                        }else {
                          if(state_val_531713 === 9) {
                            var inst_531692 = state_531712[7];
                            var state_531712__$1 = state_531712;
                            return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_531712__$1, 11, out, inst_531692)
                          }else {
                            if(state_val_531713 === 10) {
                              var inst_531704 = state_531712[2];
                              var state_531712__$1 = state_531712;
                              var statearr_531726_531741 = state_531712__$1;
                              statearr_531726_531741[2] = inst_531704;
                              statearr_531726_531741[1] = 6;
                              return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                            }else {
                              if(state_val_531713 === 11) {
                                var inst_531684 = state_531712[5];
                                var inst_531701 = state_531712[2];
                                var tmp531725 = inst_531684;
                                var inst_531684__$1 = tmp531725;
                                var state_531712__$1 = function() {
                                  var statearr_531727 = state_531712;
                                  statearr_531727[5] = inst_531684__$1;
                                  statearr_531727[9] = inst_531701;
                                  return statearr_531727
                                }();
                                var statearr_531728_531742 = state_531712__$1;
                                statearr_531728_531742[2] = null;
                                statearr_531728_531742[1] = 2;
                                return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                              }else {
                                return null
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        };
        return function(switch__5678__auto__) {
          return function() {
            var state_machine__5679__auto__ = null;
            var state_machine__5679__auto____0 = function() {
              var statearr_531730 = new Array(10);
              statearr_531730[0] = state_machine__5679__auto__;
              statearr_531730[1] = 1;
              return statearr_531730
            };
            var state_machine__5679__auto____1 = function(state_531712) {
              while(true) {
                var result__5680__auto__ = switch__5678__auto__.call(null, state_531712);
                if(cljs.core.keyword_identical_QMARK_.call(null, result__5680__auto__, new cljs.core.Keyword(null, "recur", "recur", 1122293407))) {
                  continue
                }else {
                  return result__5680__auto__
                }
                break
              }
            };
            state_machine__5679__auto__ = function(state_531712) {
              switch(arguments.length) {
                case 0:
                  return state_machine__5679__auto____0.call(this);
                case 1:
                  return state_machine__5679__auto____1.call(this, state_531712)
              }
              throw new Error("Invalid arity: " + arguments.length);
            };
            state_machine__5679__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__5679__auto____0;
            state_machine__5679__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__5679__auto____1;
            return state_machine__5679__auto__
          }()
        }(switch__5678__auto__)
      }();
      var state__5730__auto__ = function() {
        var statearr_531731 = f__5729__auto__.call(null);
        statearr_531731[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__5728__auto___531732;
        return statearr_531731
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__5730__auto__)
    });
    return out
  };
  merge = function(chs, buf_or_n) {
    switch(arguments.length) {
      case 1:
        return merge__1.call(this, chs);
      case 2:
        return merge__2.call(this, chs, buf_or_n)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  merge.cljs$core$IFn$_invoke$arity$1 = merge__1;
  merge.cljs$core$IFn$_invoke$arity$2 = merge__2;
  return merge
}();
cljs.core.async.into = function into(coll, ch) {
  return cljs.core.async.reduce.call(null, cljs.core.conj, coll, ch)
};
goog.provide("chaperone.websocket");
goog.require("cljs.core");
goog.require("cljs.core.async");
goog.require("chaperone.crossover.rpc");
goog.require("chaperone.crossover.rpc.Response");
goog.require("chaperone.crossover.rpc.Request");
goog.require("chaperone.crossover.rpc");
goog.require("cljs.core.async");
goog.require("cljs.reader");
goog.require("cljs.reader");
chaperone.websocket.create_sub_system = function create_sub_system(system, host, port) {
  var sub_system = new cljs.core.PersistentArrayMap(null, 8, [new cljs.core.Keyword(null, "host", "host", 1017112858), host, new cljs.core.Keyword(null, "port", "port", 1017351155), port, new cljs.core.Keyword(null, "request-chan", "request-chan", 2270492482), cljs.core.async.chan.call(null), new cljs.core.Keyword(null, "request-chan-listen", "request-chan-listen", 4697980374), cljs.core.atom.call(null, false), new cljs.core.Keyword(null, "response-chan", "response-chan", 2643989712), cljs.core.async.chan.call(null), 
  new cljs.core.Keyword(null, "response-chan-listen", "response-chan-listen", 559850632), cljs.core.atom.call(null, false), new cljs.core.Keyword(null, "rpc-map", "rpc-map", 2409450726), cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY), new cljs.core.Keyword(null, "edn-readers", "edn-readers", 2679897956), chaperone.crossover.rpc.edn_readers.call(null)], null);
  return cljs.core.assoc.call(null, system, new cljs.core.Keyword(null, "websocket", "websocket", 784338745), sub_system)
};
chaperone.websocket.sub_system = function sub_system(system) {
  return(new cljs.core.Keyword(null, "websocket", "websocket", 784338745)).cljs$core$IFn$_invoke$arity$1(system)
};
chaperone.websocket.respond_BANG_ = function respond_BANG_(web_sockets, response) {
  var rpc_map = (new cljs.core.Keyword(null, "rpc-map", "rpc-map", 2409450726)).cljs$core$IFn$_invoke$arity$1(web_sockets);
  var rpc_id = (new cljs.core.Keyword(null, "id", "id", 1013907597)).cljs$core$IFn$_invoke$arity$1((new cljs.core.Keyword(null, "request", "request", 2109597185)).cljs$core$IFn$_invoke$arity$1(response));
  var rpc_chan = cljs.core.get.call(null, cljs.core.deref.call(null, rpc_map), rpc_id);
  cljs.core.async.put_BANG_.call(null, rpc_chan, response);
  cljs.core.async.close_BANG_.call(null, rpc_chan);
  return cljs.core.swap_BANG_.call(null, rpc_map, cljs.core.dissoc, rpc_id)
};
chaperone.websocket.start_request_chan_listen_BANG_ = function start_request_chan_listen_BANG_(web_socket) {
  cljs.core.reset_BANG_.call(null, (new cljs.core.Keyword(null, "request-chan-listen", "request-chan-listen", 4697980374)).cljs$core$IFn$_invoke$arity$1(web_socket), true);
  var c__5728__auto__ = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function() {
    var f__5729__auto__ = function() {
      var switch__5678__auto__ = function(state_527943) {
        var state_val_527944 = state_527943[1];
        if(state_val_527944 === 7) {
          var inst_527930 = state_527943[5];
          var inst_527933 = state_527943[2];
          var inst_527934 = cljs.core.pr_str.call(null, inst_527933);
          var inst_527935 = inst_527930.send(inst_527934);
          var state_527943__$1 = function() {
            var statearr_527945 = state_527943;
            statearr_527945[6] = inst_527935;
            return statearr_527945
          }();
          var statearr_527946_527956 = state_527943__$1;
          statearr_527946_527956[2] = null;
          statearr_527946_527956[1] = 2;
          return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
        }else {
          if(state_val_527944 === 6) {
            var inst_527939 = state_527943[2];
            var state_527943__$1 = state_527943;
            var statearr_527947_527957 = state_527943__$1;
            statearr_527947_527957[2] = inst_527939;
            statearr_527947_527957[1] = 3;
            return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
          }else {
            if(state_val_527944 === 5) {
              var state_527943__$1 = state_527943;
              var statearr_527948_527958 = state_527943__$1;
              statearr_527948_527958[2] = null;
              statearr_527948_527958[1] = 6;
              return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
            }else {
              if(state_val_527944 === 4) {
                var inst_527930 = (new cljs.core.Keyword(null, "socket", "socket", 4411822821)).cljs$core$IFn$_invoke$arity$1(web_socket);
                var inst_527931 = (new cljs.core.Keyword(null, "request-chan", "request-chan", 2270492482)).cljs$core$IFn$_invoke$arity$1(web_socket);
                var state_527943__$1 = function() {
                  var statearr_527949 = state_527943;
                  statearr_527949[5] = inst_527930;
                  return statearr_527949
                }();
                return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_527943__$1, 7, inst_527931)
              }else {
                if(state_val_527944 === 3) {
                  var inst_527941 = state_527943[2];
                  var state_527943__$1 = state_527943;
                  return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_527943__$1, inst_527941)
                }else {
                  if(state_val_527944 === 2) {
                    var inst_527927 = (new cljs.core.Keyword(null, "request-chan-listen", "request-chan-listen", 4697980374)).cljs$core$IFn$_invoke$arity$1(web_socket);
                    var inst_527928 = cljs.core.deref.call(null, inst_527927);
                    var state_527943__$1 = state_527943;
                    if(cljs.core.truth_(inst_527928)) {
                      var statearr_527950_527959 = state_527943__$1;
                      statearr_527950_527959[1] = 4
                    }else {
                      var statearr_527951_527960 = state_527943__$1;
                      statearr_527951_527960[1] = 5
                    }
                    return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                  }else {
                    if(state_val_527944 === 1) {
                      var state_527943__$1 = state_527943;
                      var statearr_527952_527961 = state_527943__$1;
                      statearr_527952_527961[2] = null;
                      statearr_527952_527961[1] = 2;
                      return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                    }else {
                      return null
                    }
                  }
                }
              }
            }
          }
        }
      };
      return function(switch__5678__auto__) {
        return function() {
          var state_machine__5679__auto__ = null;
          var state_machine__5679__auto____0 = function() {
            var statearr_527954 = new Array(7);
            statearr_527954[0] = state_machine__5679__auto__;
            statearr_527954[1] = 1;
            return statearr_527954
          };
          var state_machine__5679__auto____1 = function(state_527943) {
            while(true) {
              var result__5680__auto__ = switch__5678__auto__.call(null, state_527943);
              if(cljs.core.keyword_identical_QMARK_.call(null, result__5680__auto__, new cljs.core.Keyword(null, "recur", "recur", 1122293407))) {
                continue
              }else {
                return result__5680__auto__
              }
              break
            }
          };
          state_machine__5679__auto__ = function(state_527943) {
            switch(arguments.length) {
              case 0:
                return state_machine__5679__auto____0.call(this);
              case 1:
                return state_machine__5679__auto____1.call(this, state_527943)
            }
            throw new Error("Invalid arity: " + arguments.length);
          };
          state_machine__5679__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__5679__auto____0;
          state_machine__5679__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__5679__auto____1;
          return state_machine__5679__auto__
        }()
      }(switch__5678__auto__)
    }();
    var state__5730__auto__ = function() {
      var statearr_527955 = f__5729__auto__.call(null);
      statearr_527955[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__5728__auto__;
      return statearr_527955
    }();
    return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__5730__auto__)
  });
  return c__5728__auto__
};
chaperone.websocket.start_response_chan_listen_BANG_ = function start_response_chan_listen_BANG_(web_socket) {
  cljs.core.reset_BANG_.call(null, (new cljs.core.Keyword(null, "response-chan-listen", "response-chan-listen", 559850632)).cljs$core$IFn$_invoke$arity$1(web_socket), true);
  var c__5728__auto__ = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function() {
    var f__5729__auto__ = function() {
      var switch__5678__auto__ = function(state_528006) {
        var state_val_528007 = state_528006[1];
        if(state_val_528007 === 7) {
          var inst_527996 = state_528006[2];
          var inst_527997 = cljs.reader.read_string.call(null, inst_527996);
          var inst_527998 = chaperone.websocket.respond_BANG_.call(null, web_socket, inst_527997);
          var state_528006__$1 = function() {
            var statearr_528008 = state_528006;
            statearr_528008[5] = inst_527998;
            return statearr_528008
          }();
          var statearr_528009_528018 = state_528006__$1;
          statearr_528009_528018[2] = null;
          statearr_528009_528018[1] = 2;
          return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
        }else {
          if(state_val_528007 === 6) {
            var inst_528002 = state_528006[2];
            var state_528006__$1 = state_528006;
            var statearr_528010_528019 = state_528006__$1;
            statearr_528010_528019[2] = inst_528002;
            statearr_528010_528019[1] = 3;
            return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
          }else {
            if(state_val_528007 === 5) {
              var state_528006__$1 = state_528006;
              var statearr_528011_528020 = state_528006__$1;
              statearr_528011_528020[2] = null;
              statearr_528011_528020[1] = 6;
              return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
            }else {
              if(state_val_528007 === 4) {
                var inst_527994 = (new cljs.core.Keyword(null, "response-chan", "response-chan", 2643989712)).cljs$core$IFn$_invoke$arity$1(web_socket);
                var state_528006__$1 = state_528006;
                return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_528006__$1, 7, inst_527994)
              }else {
                if(state_val_528007 === 3) {
                  var inst_528004 = state_528006[2];
                  var state_528006__$1 = state_528006;
                  return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_528006__$1, inst_528004)
                }else {
                  if(state_val_528007 === 2) {
                    var inst_527991 = (new cljs.core.Keyword(null, "response-chan-listen", "response-chan-listen", 559850632)).cljs$core$IFn$_invoke$arity$1(web_socket);
                    var inst_527992 = cljs.core.deref.call(null, inst_527991);
                    var state_528006__$1 = state_528006;
                    if(cljs.core.truth_(inst_527992)) {
                      var statearr_528012_528021 = state_528006__$1;
                      statearr_528012_528021[1] = 4
                    }else {
                      var statearr_528013_528022 = state_528006__$1;
                      statearr_528013_528022[1] = 5
                    }
                    return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                  }else {
                    if(state_val_528007 === 1) {
                      var state_528006__$1 = state_528006;
                      var statearr_528014_528023 = state_528006__$1;
                      statearr_528014_528023[2] = null;
                      statearr_528014_528023[1] = 2;
                      return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                    }else {
                      return null
                    }
                  }
                }
              }
            }
          }
        }
      };
      return function(switch__5678__auto__) {
        return function() {
          var state_machine__5679__auto__ = null;
          var state_machine__5679__auto____0 = function() {
            var statearr_528016 = new Array(6);
            statearr_528016[0] = state_machine__5679__auto__;
            statearr_528016[1] = 1;
            return statearr_528016
          };
          var state_machine__5679__auto____1 = function(state_528006) {
            while(true) {
              var result__5680__auto__ = switch__5678__auto__.call(null, state_528006);
              if(cljs.core.keyword_identical_QMARK_.call(null, result__5680__auto__, new cljs.core.Keyword(null, "recur", "recur", 1122293407))) {
                continue
              }else {
                return result__5680__auto__
              }
              break
            }
          };
          state_machine__5679__auto__ = function(state_528006) {
            switch(arguments.length) {
              case 0:
                return state_machine__5679__auto____0.call(this);
              case 1:
                return state_machine__5679__auto____1.call(this, state_528006)
            }
            throw new Error("Invalid arity: " + arguments.length);
          };
          state_machine__5679__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__5679__auto____0;
          state_machine__5679__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__5679__auto____1;
          return state_machine__5679__auto__
        }()
      }(switch__5678__auto__)
    }();
    var state__5730__auto__ = function() {
      var statearr_528017 = f__5729__auto__.call(null);
      statearr_528017[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__5728__auto__;
      return statearr_528017
    }();
    return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__5730__auto__)
  });
  return c__5728__auto__
};
chaperone.websocket.connect_websocket_BANG_ = function connect_websocket_BANG_(web_socket) {
  var ws_url = [cljs.core.str("ws://"), cljs.core.str((new cljs.core.Keyword(null, "host", "host", 1017112858)).cljs$core$IFn$_invoke$arity$1(web_socket)), cljs.core.str(":"), cljs.core.str((new cljs.core.Keyword(null, "port", "port", 1017351155)).cljs$core$IFn$_invoke$arity$1(web_socket)), cljs.core.str("/rpc")].join("");
  var socket = new WebSocket(ws_url);
  console.log("Connecting to WS: ", ws_url);
  purnam.native$.aset_in.call(null, socket, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["onopen"], null), function() {
    return console.log("Connected!")
  });
  purnam.native$.aset_in.call(null, socket, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["onerror"], null), function(e) {
    return console.error("Websocket Error: ", e)
  });
  purnam.native$.aset_in.call(null, socket, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["onmessage"], null), function(e) {
    return cljs.core.async.put_BANG_.call(null, (new cljs.core.Keyword(null, "response-chan", "response-chan", 2643989712)).cljs$core$IFn$_invoke$arity$1(web_socket), purnam.native$.aget_in.call(null, e, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["data"], null)))
  });
  return socket
};
chaperone.websocket.start_BANG_ = function start_BANG_(system) {
  var seq__528030_528036 = cljs.core.seq.call(null, chaperone.crossover.rpc.edn_readers.call(null));
  var chunk__528031_528037 = null;
  var count__528032_528038 = 0;
  var i__528033_528039 = 0;
  while(true) {
    if(i__528033_528039 < count__528032_528038) {
      var vec__528034_528040 = cljs.core._nth.call(null, chunk__528031_528037, i__528033_528039);
      var tag_528041 = cljs.core.nth.call(null, vec__528034_528040, 0, null);
      var f_528042 = cljs.core.nth.call(null, vec__528034_528040, 1, null);
      cljs.reader.register_tag_parser_BANG_.call(null, tag_528041, f_528042);
      var G__528043 = seq__528030_528036;
      var G__528044 = chunk__528031_528037;
      var G__528045 = count__528032_528038;
      var G__528046 = i__528033_528039 + 1;
      seq__528030_528036 = G__528043;
      chunk__528031_528037 = G__528044;
      count__528032_528038 = G__528045;
      i__528033_528039 = G__528046;
      continue
    }else {
      var temp__4092__auto___528047 = cljs.core.seq.call(null, seq__528030_528036);
      if(temp__4092__auto___528047) {
        var seq__528030_528048__$1 = temp__4092__auto___528047;
        if(cljs.core.chunked_seq_QMARK_.call(null, seq__528030_528048__$1)) {
          var c__4009__auto___528049 = cljs.core.chunk_first.call(null, seq__528030_528048__$1);
          var G__528050 = cljs.core.chunk_rest.call(null, seq__528030_528048__$1);
          var G__528051 = c__4009__auto___528049;
          var G__528052 = cljs.core.count.call(null, c__4009__auto___528049);
          var G__528053 = 0;
          seq__528030_528036 = G__528050;
          chunk__528031_528037 = G__528051;
          count__528032_528038 = G__528052;
          i__528033_528039 = G__528053;
          continue
        }else {
          var vec__528035_528054 = cljs.core.first.call(null, seq__528030_528048__$1);
          var tag_528055 = cljs.core.nth.call(null, vec__528035_528054, 0, null);
          var f_528056 = cljs.core.nth.call(null, vec__528035_528054, 1, null);
          cljs.reader.register_tag_parser_BANG_.call(null, tag_528055, f_528056);
          var G__528057 = cljs.core.next.call(null, seq__528030_528048__$1);
          var G__528058 = null;
          var G__528059 = 0;
          var G__528060 = 0;
          seq__528030_528036 = G__528057;
          chunk__528031_528037 = G__528058;
          count__528032_528038 = G__528059;
          i__528033_528039 = G__528060;
          continue
        }
      }else {
      }
    }
    break
  }
  var web_socket = chaperone.websocket.sub_system.call(null, system);
  var socket = chaperone.websocket.connect_websocket_BANG_.call(null, web_socket);
  var web_socket__$1 = cljs.core.assoc.call(null, web_socket, new cljs.core.Keyword(null, "socket", "socket", 4411822821), socket);
  chaperone.websocket.start_request_chan_listen_BANG_.call(null, web_socket__$1);
  chaperone.websocket.start_response_chan_listen_BANG_.call(null, web_socket__$1);
  return cljs.core.assoc.call(null, system, new cljs.core.Keyword(null, "websocket", "websocket", 784338745), web_socket__$1)
};
chaperone.websocket.stop_BANG_ = function stop_BANG_(system) {
  var web_socket_528061 = chaperone.websocket.sub_system.call(null, system);
  cljs.core.async.close_BANG_.call(null, (new cljs.core.Keyword(null, "request-chan", "request-chan", 2270492482)).cljs$core$IFn$_invoke$arity$1(web_socket_528061));
  cljs.core.async.close_BANG_.call(null, (new cljs.core.Keyword(null, "response-chan", "response-chan", 2643989712)).cljs$core$IFn$_invoke$arity$1(web_socket_528061));
  cljs.core.reset_BANG_.call(null, (new cljs.core.Keyword(null, "response-chan-listen", "response-chan-listen", 559850632)).cljs$core$IFn$_invoke$arity$1(web_socket_528061), false);
  cljs.core.reset_BANG_.call(null, (new cljs.core.Keyword(null, "response-chan-listen", "response-chan-listen", 559850632)).cljs$core$IFn$_invoke$arity$1(web_socket_528061), false);
  return system
};
chaperone.websocket.send_BANG_ = function send_BANG_(web_socket, request) {
  var id = (new cljs.core.Keyword(null, "id", "id", 1013907597)).cljs$core$IFn$_invoke$arity$1(request);
  var request_chan = (new cljs.core.Keyword(null, "request-chan", "request-chan", 2270492482)).cljs$core$IFn$_invoke$arity$1(web_socket);
  var result_chan = cljs.core.async.chan.call(null);
  var rpc_map = (new cljs.core.Keyword(null, "rpc-map", "rpc-map", 2409450726)).cljs$core$IFn$_invoke$arity$1(web_socket);
  cljs.core.swap_BANG_.call(null, rpc_map, cljs.core.assoc, id, result_chan);
  cljs.core.async.put_BANG_.call(null, request_chan, request);
  return result_chan
};
goog.provide("chaperone.core");
goog.require("cljs.core");
goog.require("chaperone.websocket");
goog.require("chaperone.websocket");
chaperone.core.create_system = function create_system(host, port) {
  var context = cljs.core.PersistentArrayMap.EMPTY;
  return chaperone.websocket.create_sub_system.call(null, context, host, port)
};
chaperone.core.start_BANG_ = function start_BANG_(system) {
  console.log("Starting the system");
  return chaperone.websocket.start_BANG_.call(null, system)
};
chaperone.core.stop_BANG_ = function stop_BANG_(system) {
  console.log("Stopping the system");
  return chaperone.websocket.stop_BANG_.call(null, system)
};
goog.provide("purnam.common");
goog.require("cljs.core");
purnam.common.flags = function() {
  var obj532205 = {};
  return obj532205
}();
goog.provide("clojure.string");
goog.require("cljs.core");
goog.require("goog.string.StringBuffer");
goog.require("goog.string.StringBuffer");
goog.require("goog.string");
goog.require("goog.string");
clojure.string.seq_reverse = function seq_reverse(coll) {
  return cljs.core.reduce.call(null, cljs.core.conj, cljs.core.List.EMPTY, coll)
};
clojure.string.reverse = function reverse(s) {
  return s.split("").reverse().join("")
};
clojure.string.replace = function replace(s, match, replacement) {
  if(typeof match === "string") {
    return s.replace(new RegExp(goog.string.regExpEscape(match), "g"), replacement)
  }else {
    if(cljs.core.truth_(match.hasOwnProperty("source"))) {
      return s.replace(new RegExp(match.source, "g"), replacement)
    }else {
      if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        throw[cljs.core.str("Invalid match arg: "), cljs.core.str(match)].join("");
      }else {
        return null
      }
    }
  }
};
clojure.string.replace_first = function replace_first(s, match, replacement) {
  return s.replace(match, replacement)
};
clojure.string.join = function() {
  var join = null;
  var join__1 = function(coll) {
    return cljs.core.apply.call(null, cljs.core.str, coll)
  };
  var join__2 = function(separator, coll) {
    return cljs.core.apply.call(null, cljs.core.str, cljs.core.interpose.call(null, separator, coll))
  };
  join = function(separator, coll) {
    switch(arguments.length) {
      case 1:
        return join__1.call(this, separator);
      case 2:
        return join__2.call(this, separator, coll)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  join.cljs$core$IFn$_invoke$arity$1 = join__1;
  join.cljs$core$IFn$_invoke$arity$2 = join__2;
  return join
}();
clojure.string.upper_case = function upper_case(s) {
  return s.toUpperCase()
};
clojure.string.lower_case = function lower_case(s) {
  return s.toLowerCase()
};
clojure.string.capitalize = function capitalize(s) {
  if(cljs.core.count.call(null, s) < 2) {
    return clojure.string.upper_case.call(null, s)
  }else {
    return[cljs.core.str(clojure.string.upper_case.call(null, cljs.core.subs.call(null, s, 0, 1))), cljs.core.str(clojure.string.lower_case.call(null, cljs.core.subs.call(null, s, 1)))].join("")
  }
};
clojure.string.pop_last_while_empty = function pop_last_while_empty(v) {
  var v__$1 = v;
  while(true) {
    if(cljs.core._EQ_.call(null, "", cljs.core.peek.call(null, v__$1))) {
      var G__532190 = cljs.core.pop.call(null, v__$1);
      v__$1 = G__532190;
      continue
    }else {
      return v__$1
    }
    break
  }
};
clojure.string.discard_trailing_if_needed = function discard_trailing_if_needed(limit, v) {
  if(cljs.core._EQ_.call(null, 0, limit)) {
    return clojure.string.pop_last_while_empty.call(null, v)
  }else {
    return v
  }
};
clojure.string.split_with_empty_regex = function split_with_empty_regex(s, limit) {
  if(limit <= 0 || limit >= 2 + cljs.core.count.call(null, s)) {
    return cljs.core.conj.call(null, cljs.core.vec.call(null, cljs.core.cons.call(null, "", cljs.core.map.call(null, cljs.core.str, cljs.core.seq.call(null, s)))), "")
  }else {
    var pred__532194 = cljs.core._EQ_;
    var expr__532195 = limit;
    if(cljs.core.truth_(pred__532194.call(null, 1, expr__532195))) {
      return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [s], null)
    }else {
      if(cljs.core.truth_(pred__532194.call(null, 2, expr__532195))) {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["", s], null)
      }else {
        var c = limit - 2;
        return cljs.core.conj.call(null, cljs.core.vec.call(null, cljs.core.cons.call(null, "", cljs.core.subvec.call(null, cljs.core.vec.call(null, cljs.core.map.call(null, cljs.core.str, cljs.core.seq.call(null, s))), 0, c))), cljs.core.subs.call(null, s, c))
      }
    }
  }
};
clojure.string.split = function() {
  var split = null;
  var split__2 = function(s, re) {
    return split.call(null, s, re, 0)
  };
  var split__3 = function(s, re, limit) {
    return clojure.string.discard_trailing_if_needed.call(null, limit, cljs.core._EQ_.call(null, [cljs.core.str(re)].join(""), "/(?:)/") ? clojure.string.split_with_empty_regex.call(null, s, limit) : limit < 1 ? cljs.core.vec.call(null, [cljs.core.str(s)].join("").split(re)) : function() {
      var s__$1 = s;
      var limit__$1 = limit;
      var parts = cljs.core.PersistentVector.EMPTY;
      while(true) {
        if(cljs.core._EQ_.call(null, limit__$1, 1)) {
          return cljs.core.conj.call(null, parts, s__$1)
        }else {
          var temp__4090__auto__ = cljs.core.re_find.call(null, re, s__$1);
          if(cljs.core.truth_(temp__4090__auto__)) {
            var m = temp__4090__auto__;
            var index = s__$1.indexOf(m);
            var G__532197 = s__$1.substring(index + cljs.core.count.call(null, m));
            var G__532198 = limit__$1 - 1;
            var G__532199 = cljs.core.conj.call(null, parts, s__$1.substring(0, index));
            s__$1 = G__532197;
            limit__$1 = G__532198;
            parts = G__532199;
            continue
          }else {
            return cljs.core.conj.call(null, parts, s__$1)
          }
        }
        break
      }
    }())
  };
  split = function(s, re, limit) {
    switch(arguments.length) {
      case 2:
        return split__2.call(this, s, re);
      case 3:
        return split__3.call(this, s, re, limit)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  split.cljs$core$IFn$_invoke$arity$2 = split__2;
  split.cljs$core$IFn$_invoke$arity$3 = split__3;
  return split
}();
clojure.string.split_lines = function split_lines(s) {
  return clojure.string.split.call(null, s, /\n|\r\n/)
};
clojure.string.trim = function trim(s) {
  return goog.string.trim(s)
};
clojure.string.triml = function triml(s) {
  return goog.string.trimLeft(s)
};
clojure.string.trimr = function trimr(s) {
  return goog.string.trimRight(s)
};
clojure.string.trim_newline = function trim_newline(s) {
  var index = s.length;
  while(true) {
    if(index === 0) {
      return""
    }else {
      var ch = cljs.core.get.call(null, s, index - 1);
      if(cljs.core._EQ_.call(null, ch, "\n") || cljs.core._EQ_.call(null, ch, "\r")) {
        var G__532200 = index - 1;
        index = G__532200;
        continue
      }else {
        return s.substring(0, index)
      }
    }
    break
  }
};
clojure.string.blank_QMARK_ = function blank_QMARK_(s) {
  return goog.string.isEmptySafe(s)
};
clojure.string.escape = function escape__$1(s, cmap) {
  var buffer = new goog.string.StringBuffer;
  var length = s.length;
  var index = 0;
  while(true) {
    if(cljs.core._EQ_.call(null, length, index)) {
      return buffer.toString()
    }else {
      var ch = s.charAt(index);
      var temp__4090__auto___532201 = cljs.core.get.call(null, cmap, ch);
      if(cljs.core.truth_(temp__4090__auto___532201)) {
        var replacement_532202 = temp__4090__auto___532201;
        buffer.append([cljs.core.str(replacement_532202)].join(""))
      }else {
        buffer.append(ch)
      }
      var G__532203 = index + 1;
      index = G__532203;
      continue
    }
    break
  }
};
goog.provide("purnam.native$");
goog.require("cljs.core");
goog.require("clojure.string");
goog.require("clojure.string");
goog.require("purnam.common");
goog.require("purnam.common");
goog.require("goog.array");
goog.require("goog.array");
goog.require("goog.object");
goog.require("goog.object");
purnam.native$.nested_val = function nested_val(p__531869, val) {
  var vec__531873 = p__531869;
  var k = cljs.core.nth.call(null, vec__531873, 0, null);
  var ks = cljs.core.nthnext.call(null, vec__531873, 1);
  if(k == null) {
    return val
  }else {
    var o = function() {
      var obj531875 = {};
      return obj531875
    }();
    o[k] = nested_val.call(null, ks, val);
    return o
  }
};
purnam.native$.nested_delete = function nested_delete(p__531876, val) {
  var vec__531878 = p__531876;
  var k = cljs.core.nth.call(null, vec__531878, 0, null);
  var ks = cljs.core.nthnext.call(null, vec__531878, 1);
  if(ks == null) {
    delete val[k]
  }else {
    nested_delete.call(null, ks, val)
  }
  return val
};
purnam.native$.aset_in = function() {
  var aset_in = null;
  var aset_in__2 = function(var$, arr) {
    return aset_in.call(null, var$, arr, null)
  };
  var aset_in__3 = function(var$, arr, val) {
    var vec__531880 = arr;
    var k = cljs.core.nth.call(null, vec__531880, 0, null);
    var ks = cljs.core.nthnext.call(null, vec__531880, 1);
    if(k == null) {
    }else {
      if(cljs.core.empty_QMARK_.call(null, ks)) {
        if(cljs.core.truth_(val)) {
          var$[k] = val
        }else {
          delete var$[k]
        }
      }else {
        if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          var temp__4090__auto___531881 = var$[k];
          if(cljs.core.truth_(temp__4090__auto___531881)) {
            var svar_531882 = temp__4090__auto___531881;
            aset_in.call(null, svar_531882, ks, val)
          }else {
            if(cljs.core.truth_(val)) {
              var$[k] = purnam.native$.nested_val.call(null, ks, val)
            }else {
            }
          }
        }else {
        }
      }
    }
    return var$
  };
  aset_in = function(var$, arr, val) {
    switch(arguments.length) {
      case 2:
        return aset_in__2.call(this, var$, arr);
      case 3:
        return aset_in__3.call(this, var$, arr, val)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  aset_in.cljs$core$IFn$_invoke$arity$2 = aset_in__2;
  aset_in.cljs$core$IFn$_invoke$arity$3 = aset_in__3;
  return aset_in
}();
purnam.native$.aget_in = function() {
  var aget_in = null;
  var aget_in__1 = function(var$) {
    return var$
  };
  var aget_in__2 = function(var$, arr) {
    if(var$ == null) {
      return null
    }else {
      if(cljs.core.empty_QMARK_.call(null, arr)) {
        return var$
      }else {
        if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          return aget_in.call(null, var$[cljs.core.first.call(null, arr)], cljs.core.next.call(null, arr))
        }else {
          return null
        }
      }
    }
  };
  aget_in = function(var$, arr) {
    switch(arguments.length) {
      case 1:
        return aget_in__1.call(this, var$);
      case 2:
        return aget_in__2.call(this, var$, arr)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  aget_in.cljs$core$IFn$_invoke$arity$1 = aget_in__1;
  aget_in.cljs$core$IFn$_invoke$arity$2 = aget_in__2;
  return aget_in
}();
purnam.native$.js_strkey = function js_strkey(x) {
  if(typeof x === "string") {
    return x
  }else {
    if(x instanceof cljs.core.Keyword) {
      return cljs.core.name.call(null, x)
    }else {
      if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        return[cljs.core.str(x)].join("")
      }else {
        return null
      }
    }
  }
};
purnam.native$.js_obj_name = function js_obj_name(this$) {
  var temp__4090__auto__ = cljs.core.re_find.call(null, /^function (\w+)/, [cljs.core.str(this$)].join(""));
  if(cljs.core.truth_(temp__4090__auto__)) {
    var vec__531884 = temp__4090__auto__;
    var _ = cljs.core.nth.call(null, vec__531884, 0, null);
    var n = cljs.core.nth.call(null, vec__531884, 1, null);
    return n
  }else {
    return"Object"
  }
};
purnam.native$.js_type = function js_type(o) {
  var ty = cljs.core.type.call(null, o);
  var ty__$1 = cljs.core.truth_(function() {
    var and__3273__auto__ = ty;
    if(cljs.core.truth_(and__3273__auto__)) {
      return ty.cljs$lang$type
    }else {
      return and__3273__auto__
    }
  }()) ? ty.cljs$lang$ctorStr : goog.typeOf(o);
  return ty__$1
};
purnam.native$.js_lookup = function() {
  var js_lookup = null;
  var js_lookup__2 = function(o, k) {
    return o[purnam.native$.js_strkey.call(null, k)]
  };
  var js_lookup__3 = function(o, k, not_found) {
    var s = purnam.native$.js_strkey.call(null, k);
    var temp__4090__auto__ = o[s];
    if(cljs.core.truth_(temp__4090__auto__)) {
      var res = temp__4090__auto__;
      return res
    }else {
      return not_found
    }
  };
  js_lookup = function(o, k, not_found) {
    switch(arguments.length) {
      case 2:
        return js_lookup__2.call(this, o, k);
      case 3:
        return js_lookup__3.call(this, o, k, not_found)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  js_lookup.cljs$core$IFn$_invoke$arity$2 = js_lookup__2;
  js_lookup.cljs$core$IFn$_invoke$arity$3 = js_lookup__3;
  return js_lookup
}();
purnam.native$.js_range = function js_range(n) {
  var res = new Array(n);
  var i = 0;
  while(true) {
    if(i < n) {
      res.push(i);
      var G__531885 = i + 1;
      i = G__531885;
      continue
    }else {
      return res
    }
    break
  }
};
purnam.native$.js_assoc = function() {
  var js_assoc = null;
  var js_assoc__3 = function(o, k, v) {
    o[purnam.native$.js_strkey.call(null, k)] = v;
    return o
  };
  var js_assoc__4 = function() {
    var G__531886__delegate = function(o, k, v, more) {
      while(true) {
        js_assoc.call(null, o, k, v);
        if(cljs.core.truth_(more)) {
          var G__531887 = o;
          var G__531888 = cljs.core.first.call(null, more);
          var G__531889 = cljs.core.second.call(null, more);
          var G__531890 = cljs.core.nnext.call(null, more);
          o = G__531887;
          k = G__531888;
          v = G__531889;
          more = G__531890;
          continue
        }else {
          return o
        }
        break
      }
    };
    var G__531886 = function(o, k, v, var_args) {
      var more = null;
      if(arguments.length > 3) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
      }
      return G__531886__delegate.call(this, o, k, v, more)
    };
    G__531886.cljs$lang$maxFixedArity = 3;
    G__531886.cljs$lang$applyTo = function(arglist__531891) {
      var o = cljs.core.first(arglist__531891);
      arglist__531891 = cljs.core.next(arglist__531891);
      var k = cljs.core.first(arglist__531891);
      arglist__531891 = cljs.core.next(arglist__531891);
      var v = cljs.core.first(arglist__531891);
      var more = cljs.core.rest(arglist__531891);
      return G__531886__delegate(o, k, v, more)
    };
    G__531886.cljs$core$IFn$_invoke$arity$variadic = G__531886__delegate;
    return G__531886
  }();
  js_assoc = function(o, k, v, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 3:
        return js_assoc__3.call(this, o, k, v);
      default:
        return js_assoc__4.cljs$core$IFn$_invoke$arity$variadic(o, k, v, cljs.core.array_seq(arguments, 3))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  js_assoc.cljs$lang$maxFixedArity = 3;
  js_assoc.cljs$lang$applyTo = js_assoc__4.cljs$lang$applyTo;
  js_assoc.cljs$core$IFn$_invoke$arity$3 = js_assoc__3;
  js_assoc.cljs$core$IFn$_invoke$arity$variadic = js_assoc__4.cljs$core$IFn$_invoke$arity$variadic;
  return js_assoc
}();
purnam.native$.js_dissoc = function() {
  var js_dissoc__delegate = function(o, k, more) {
    while(true) {
      delete o[purnam.native$.js_strkey.call(null, k)];
      if(cljs.core.truth_(more)) {
        var G__531892 = o;
        var G__531893 = cljs.core.first.call(null, more);
        var G__531894 = cljs.core.next.call(null, more);
        o = G__531892;
        k = G__531893;
        more = G__531894;
        continue
      }else {
        return o
      }
      break
    }
  };
  var js_dissoc = function(o, k, var_args) {
    var more = null;
    if(arguments.length > 2) {
      more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
    }
    return js_dissoc__delegate.call(this, o, k, more)
  };
  js_dissoc.cljs$lang$maxFixedArity = 2;
  js_dissoc.cljs$lang$applyTo = function(arglist__531895) {
    var o = cljs.core.first(arglist__531895);
    arglist__531895 = cljs.core.next(arglist__531895);
    var k = cljs.core.first(arglist__531895);
    var more = cljs.core.rest(arglist__531895);
    return js_dissoc__delegate(o, k, more)
  };
  js_dissoc.cljs$core$IFn$_invoke$arity$variadic = js_dissoc__delegate;
  return js_dissoc
}();
purnam.native$.js_empty = function js_empty(o) {
  var G__531901_531906 = goog.typeOf(o);
  if(cljs.core._EQ_.call(null, "array", G__531901_531906)) {
    o["length"] = 0
  }else {
    if(cljs.core._EQ_.call(null, "object", G__531901_531906)) {
      var seq__531902_531907 = cljs.core.seq.call(null, cljs.core.js_keys.call(null, o));
      var chunk__531903_531908 = null;
      var count__531904_531909 = 0;
      var i__531905_531910 = 0;
      while(true) {
        if(i__531905_531910 < count__531904_531909) {
          var k_531911 = cljs.core._nth.call(null, chunk__531903_531908, i__531905_531910);
          delete o[k_531911];
          var G__531912 = seq__531902_531907;
          var G__531913 = chunk__531903_531908;
          var G__531914 = count__531904_531909;
          var G__531915 = i__531905_531910 + 1;
          seq__531902_531907 = G__531912;
          chunk__531903_531908 = G__531913;
          count__531904_531909 = G__531914;
          i__531905_531910 = G__531915;
          continue
        }else {
          var temp__4092__auto___531916 = cljs.core.seq.call(null, seq__531902_531907);
          if(temp__4092__auto___531916) {
            var seq__531902_531917__$1 = temp__4092__auto___531916;
            if(cljs.core.chunked_seq_QMARK_.call(null, seq__531902_531917__$1)) {
              var c__4009__auto___531918 = cljs.core.chunk_first.call(null, seq__531902_531917__$1);
              var G__531919 = cljs.core.chunk_rest.call(null, seq__531902_531917__$1);
              var G__531920 = c__4009__auto___531918;
              var G__531921 = cljs.core.count.call(null, c__4009__auto___531918);
              var G__531922 = 0;
              seq__531902_531907 = G__531919;
              chunk__531903_531908 = G__531920;
              count__531904_531909 = G__531921;
              i__531905_531910 = G__531922;
              continue
            }else {
              var k_531923 = cljs.core.first.call(null, seq__531902_531917__$1);
              delete o[k_531923];
              var G__531924 = cljs.core.next.call(null, seq__531902_531917__$1);
              var G__531925 = null;
              var G__531926 = 0;
              var G__531927 = 0;
              seq__531902_531907 = G__531924;
              chunk__531903_531908 = G__531925;
              count__531904_531909 = G__531926;
              i__531905_531910 = G__531927;
              continue
            }
          }else {
          }
        }
        break
      }
    }else {
      if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        throw new Error([cljs.core.str("No matching clause: "), cljs.core.str(goog.typeOf(o))].join(""));
      }else {
      }
    }
  }
  return o
};
purnam.native$.js_merge = function() {
  var js_merge = null;
  var js_merge__2 = function(o1, o2) {
    var seq__531932_531936 = cljs.core.seq.call(null, cljs.core.js_keys.call(null, o2));
    var chunk__531933_531937 = null;
    var count__531934_531938 = 0;
    var i__531935_531939 = 0;
    while(true) {
      if(i__531935_531939 < count__531934_531938) {
        var k_531940 = cljs.core._nth.call(null, chunk__531933_531937, i__531935_531939);
        o1[k_531940] = o2[k_531940];
        var G__531941 = seq__531932_531936;
        var G__531942 = chunk__531933_531937;
        var G__531943 = count__531934_531938;
        var G__531944 = i__531935_531939 + 1;
        seq__531932_531936 = G__531941;
        chunk__531933_531937 = G__531942;
        count__531934_531938 = G__531943;
        i__531935_531939 = G__531944;
        continue
      }else {
        var temp__4092__auto___531945 = cljs.core.seq.call(null, seq__531932_531936);
        if(temp__4092__auto___531945) {
          var seq__531932_531946__$1 = temp__4092__auto___531945;
          if(cljs.core.chunked_seq_QMARK_.call(null, seq__531932_531946__$1)) {
            var c__4009__auto___531947 = cljs.core.chunk_first.call(null, seq__531932_531946__$1);
            var G__531948 = cljs.core.chunk_rest.call(null, seq__531932_531946__$1);
            var G__531949 = c__4009__auto___531947;
            var G__531950 = cljs.core.count.call(null, c__4009__auto___531947);
            var G__531951 = 0;
            seq__531932_531936 = G__531948;
            chunk__531933_531937 = G__531949;
            count__531934_531938 = G__531950;
            i__531935_531939 = G__531951;
            continue
          }else {
            var k_531952 = cljs.core.first.call(null, seq__531932_531946__$1);
            o1[k_531952] = o2[k_531952];
            var G__531953 = cljs.core.next.call(null, seq__531932_531946__$1);
            var G__531954 = null;
            var G__531955 = 0;
            var G__531956 = 0;
            seq__531932_531936 = G__531953;
            chunk__531933_531937 = G__531954;
            count__531934_531938 = G__531955;
            i__531935_531939 = G__531956;
            continue
          }
        }else {
        }
      }
      break
    }
    return o1
  };
  var js_merge__3 = function() {
    var G__531957__delegate = function(o1, o2, more) {
      return cljs.core.apply.call(null, js_merge, js_merge.call(null, o1, o2), more)
    };
    var G__531957 = function(o1, o2, var_args) {
      var more = null;
      if(arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__531957__delegate.call(this, o1, o2, more)
    };
    G__531957.cljs$lang$maxFixedArity = 2;
    G__531957.cljs$lang$applyTo = function(arglist__531958) {
      var o1 = cljs.core.first(arglist__531958);
      arglist__531958 = cljs.core.next(arglist__531958);
      var o2 = cljs.core.first(arglist__531958);
      var more = cljs.core.rest(arglist__531958);
      return G__531957__delegate(o1, o2, more)
    };
    G__531957.cljs$core$IFn$_invoke$arity$variadic = G__531957__delegate;
    return G__531957
  }();
  js_merge = function(o1, o2, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 2:
        return js_merge__2.call(this, o1, o2);
      default:
        return js_merge__3.cljs$core$IFn$_invoke$arity$variadic(o1, o2, cljs.core.array_seq(arguments, 2))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  js_merge.cljs$lang$maxFixedArity = 2;
  js_merge.cljs$lang$applyTo = js_merge__3.cljs$lang$applyTo;
  js_merge.cljs$core$IFn$_invoke$arity$2 = js_merge__2;
  js_merge.cljs$core$IFn$_invoke$arity$variadic = js_merge__3.cljs$core$IFn$_invoke$arity$variadic;
  return js_merge
}();
purnam.native$.js_merge_nil = function() {
  var js_merge_nil = null;
  var js_merge_nil__2 = function(o1, o2) {
    var seq__531963_531967 = cljs.core.seq.call(null, cljs.core.js_keys.call(null, o2));
    var chunk__531964_531968 = null;
    var count__531965_531969 = 0;
    var i__531966_531970 = 0;
    while(true) {
      if(i__531966_531970 < count__531965_531969) {
        var k_531971 = cljs.core._nth.call(null, chunk__531964_531968, i__531966_531970);
        if(cljs.core.not.call(null, o1[k_531971])) {
          o1[k_531971] = o2[k_531971]
        }else {
        }
        var G__531972 = seq__531963_531967;
        var G__531973 = chunk__531964_531968;
        var G__531974 = count__531965_531969;
        var G__531975 = i__531966_531970 + 1;
        seq__531963_531967 = G__531972;
        chunk__531964_531968 = G__531973;
        count__531965_531969 = G__531974;
        i__531966_531970 = G__531975;
        continue
      }else {
        var temp__4092__auto___531976 = cljs.core.seq.call(null, seq__531963_531967);
        if(temp__4092__auto___531976) {
          var seq__531963_531977__$1 = temp__4092__auto___531976;
          if(cljs.core.chunked_seq_QMARK_.call(null, seq__531963_531977__$1)) {
            var c__4009__auto___531978 = cljs.core.chunk_first.call(null, seq__531963_531977__$1);
            var G__531979 = cljs.core.chunk_rest.call(null, seq__531963_531977__$1);
            var G__531980 = c__4009__auto___531978;
            var G__531981 = cljs.core.count.call(null, c__4009__auto___531978);
            var G__531982 = 0;
            seq__531963_531967 = G__531979;
            chunk__531964_531968 = G__531980;
            count__531965_531969 = G__531981;
            i__531966_531970 = G__531982;
            continue
          }else {
            var k_531983 = cljs.core.first.call(null, seq__531963_531977__$1);
            if(cljs.core.not.call(null, o1[k_531983])) {
              o1[k_531983] = o2[k_531983]
            }else {
            }
            var G__531984 = cljs.core.next.call(null, seq__531963_531977__$1);
            var G__531985 = null;
            var G__531986 = 0;
            var G__531987 = 0;
            seq__531963_531967 = G__531984;
            chunk__531964_531968 = G__531985;
            count__531965_531969 = G__531986;
            i__531966_531970 = G__531987;
            continue
          }
        }else {
        }
      }
      break
    }
    return o1
  };
  var js_merge_nil__3 = function() {
    var G__531988__delegate = function(o1, o2, more) {
      while(true) {
        js_merge_nil.call(null, o1, o2);
        if(cljs.core.truth_(more)) {
          var G__531989 = js_merge_nil.call(null, o1, o2);
          var G__531990 = cljs.core.first.call(null, more);
          var G__531991 = cljs.core.next.call(null, more);
          o1 = G__531989;
          o2 = G__531990;
          more = G__531991;
          continue
        }else {
          return o1
        }
        break
      }
    };
    var G__531988 = function(o1, o2, var_args) {
      var more = null;
      if(arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__531988__delegate.call(this, o1, o2, more)
    };
    G__531988.cljs$lang$maxFixedArity = 2;
    G__531988.cljs$lang$applyTo = function(arglist__531992) {
      var o1 = cljs.core.first(arglist__531992);
      arglist__531992 = cljs.core.next(arglist__531992);
      var o2 = cljs.core.first(arglist__531992);
      var more = cljs.core.rest(arglist__531992);
      return G__531988__delegate(o1, o2, more)
    };
    G__531988.cljs$core$IFn$_invoke$arity$variadic = G__531988__delegate;
    return G__531988
  }();
  js_merge_nil = function(o1, o2, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 2:
        return js_merge_nil__2.call(this, o1, o2);
      default:
        return js_merge_nil__3.cljs$core$IFn$_invoke$arity$variadic(o1, o2, cljs.core.array_seq(arguments, 2))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  js_merge_nil.cljs$lang$maxFixedArity = 2;
  js_merge_nil.cljs$lang$applyTo = js_merge_nil__3.cljs$lang$applyTo;
  js_merge_nil.cljs$core$IFn$_invoke$arity$2 = js_merge_nil__2;
  js_merge_nil.cljs$core$IFn$_invoke$arity$variadic = js_merge_nil__3.cljs$core$IFn$_invoke$arity$variadic;
  return js_merge_nil
}();
purnam.native$.js_replace = function js_replace(o1, o2) {
  purnam.native$.js_empty.call(null, o1);
  return purnam.native$.js_merge.call(null, o1, o2)
};
purnam.native$.js_equals = function js_equals(v1, v2) {
  if(cljs.core._EQ_.call(null, v1, v2)) {
    return true
  }else {
    var t1 = goog.typeOf(v1);
    var t2 = goog.typeOf(v2);
    if(cljs.core._EQ_.call(null, "array", t1, t2)) {
      return goog.array.equals(v1, v2, js_equals)
    }else {
      if(cljs.core._EQ_.call(null, "object", t1, t2)) {
        var ks1 = cljs.core.js_keys.call(null, v1).sort();
        var ks2 = cljs.core.js_keys.call(null, v2).sort();
        if(cljs.core.truth_(goog.array.equals(ks1, ks2))) {
          return goog.array.every(ks1, function(k) {
            return js_equals.call(null, v1[k], v2[k])
          })
        }else {
          return false
        }
      }else {
        if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          return false
        }else {
          return null
        }
      }
    }
  }
};
purnam.native$.js_copy = function js_copy(o) {
  return goog.object.clone(o)
};
purnam.native$.js_initial_value = function js_initial_value(v) {
  var t = goog.typeOf(v);
  if(cljs.core._EQ_.call(null, t, "object")) {
    var obj531996 = {};
    return obj531996
  }else {
    if(cljs.core._EQ_.call(null, t, "array")) {
      return[]
    }else {
      if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        return v
      }else {
        return null
      }
    }
  }
};
purnam.native$.js_deep_extend = function() {
  var js_deep_extend = null;
  var js_deep_extend__2 = function(to, from) {
    var visited = [from];
    var visitedlu = [to];
    js_deep_extend.call(null, to, from, visited, visitedlu);
    return to
  };
  var js_deep_extend__4 = function(to, from, visited, visitedlu) {
    var seq__532001_532005 = cljs.core.seq.call(null, cljs.core.js_keys.call(null, from));
    var chunk__532002_532006 = null;
    var count__532003_532007 = 0;
    var i__532004_532008 = 0;
    while(true) {
      if(i__532004_532008 < count__532003_532007) {
        var k_532009 = cljs.core._nth.call(null, chunk__532002_532006, i__532004_532008);
        var v_532010 = from[k_532009];
        var vn_532011 = purnam.native$.js_initial_value.call(null, v_532010);
        if(cljs.core.not_EQ_.call(null, v_532010, vn_532011)) {
          var i_532012 = visited.indexOf(v_532010);
          if(cljs.core._EQ_.call(null, -1, i_532012)) {
            visited.push(v_532010);
            visitedlu.push(vn_532011);
            js_deep_extend.call(null, vn_532011, v_532010, visited, visitedlu);
            to[k_532009] = vn_532011
          }else {
            to[k_532009] = visitedlu[i_532012]
          }
        }else {
          if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
            to[k_532009] = v_532010
          }else {
          }
        }
        var G__532013 = seq__532001_532005;
        var G__532014 = chunk__532002_532006;
        var G__532015 = count__532003_532007;
        var G__532016 = i__532004_532008 + 1;
        seq__532001_532005 = G__532013;
        chunk__532002_532006 = G__532014;
        count__532003_532007 = G__532015;
        i__532004_532008 = G__532016;
        continue
      }else {
        var temp__4092__auto___532017 = cljs.core.seq.call(null, seq__532001_532005);
        if(temp__4092__auto___532017) {
          var seq__532001_532018__$1 = temp__4092__auto___532017;
          if(cljs.core.chunked_seq_QMARK_.call(null, seq__532001_532018__$1)) {
            var c__4009__auto___532019 = cljs.core.chunk_first.call(null, seq__532001_532018__$1);
            var G__532020 = cljs.core.chunk_rest.call(null, seq__532001_532018__$1);
            var G__532021 = c__4009__auto___532019;
            var G__532022 = cljs.core.count.call(null, c__4009__auto___532019);
            var G__532023 = 0;
            seq__532001_532005 = G__532020;
            chunk__532002_532006 = G__532021;
            count__532003_532007 = G__532022;
            i__532004_532008 = G__532023;
            continue
          }else {
            var k_532024 = cljs.core.first.call(null, seq__532001_532018__$1);
            var v_532025 = from[k_532024];
            var vn_532026 = purnam.native$.js_initial_value.call(null, v_532025);
            if(cljs.core.not_EQ_.call(null, v_532025, vn_532026)) {
              var i_532027 = visited.indexOf(v_532025);
              if(cljs.core._EQ_.call(null, -1, i_532027)) {
                visited.push(v_532025);
                visitedlu.push(vn_532026);
                js_deep_extend.call(null, vn_532026, v_532025, visited, visitedlu);
                to[k_532024] = vn_532026
              }else {
                to[k_532024] = visitedlu[i_532027]
              }
            }else {
              if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                to[k_532024] = v_532025
              }else {
              }
            }
            var G__532028 = cljs.core.next.call(null, seq__532001_532018__$1);
            var G__532029 = null;
            var G__532030 = 0;
            var G__532031 = 0;
            seq__532001_532005 = G__532028;
            chunk__532002_532006 = G__532029;
            count__532003_532007 = G__532030;
            i__532004_532008 = G__532031;
            continue
          }
        }else {
        }
      }
      break
    }
    return to
  };
  js_deep_extend = function(to, from, visited, visitedlu) {
    switch(arguments.length) {
      case 2:
        return js_deep_extend__2.call(this, to, from);
      case 4:
        return js_deep_extend__4.call(this, to, from, visited, visitedlu)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  js_deep_extend.cljs$core$IFn$_invoke$arity$2 = js_deep_extend__2;
  js_deep_extend.cljs$core$IFn$_invoke$arity$4 = js_deep_extend__4;
  return js_deep_extend
}();
purnam.native$.js_deep_copy = function js_deep_copy(value) {
  var vn = purnam.native$.js_initial_value.call(null, value);
  if(cljs.core.not_EQ_.call(null, value, vn)) {
    return purnam.native$.js_deep_extend.call(null, vn, value)
  }else {
    return value
  }
};
purnam.native$.js_deep_replace = function js_deep_replace(o1, o2) {
  purnam.native$.js_empty.call(null, o1);
  return purnam.native$.js_deep_extend.call(null, o1, o2)
};
purnam.native$.js_map_STAR_ = function() {
  var js_map_STAR___delegate = function(f, args) {
    var output = [];
    var len = cljs.core.apply.call(null, cljs.core.min, cljs.core.map.call(null, function(output) {
      return function(ar) {
        return ar.length
      }
    }(output), args));
    var seq__532037_532041 = cljs.core.seq.call(null, cljs.core.range.call(null, len));
    var chunk__532038_532042 = null;
    var count__532039_532043 = 0;
    var i__532040_532044 = 0;
    while(true) {
      if(i__532040_532044 < count__532039_532043) {
        var i_532045 = cljs.core._nth.call(null, chunk__532038_532042, i__532040_532044);
        output.push(cljs.core.apply.call(null, f, cljs.core.map.call(null, function(seq__532037_532041, chunk__532038_532042, count__532039_532043, i__532040_532044, i_532045) {
          return function(p1__532032_SHARP_) {
            return p1__532032_SHARP_[i_532045]
          }
        }(seq__532037_532041, chunk__532038_532042, count__532039_532043, i__532040_532044, i_532045), args)));
        var G__532046 = seq__532037_532041;
        var G__532047 = chunk__532038_532042;
        var G__532048 = count__532039_532043;
        var G__532049 = i__532040_532044 + 1;
        seq__532037_532041 = G__532046;
        chunk__532038_532042 = G__532047;
        count__532039_532043 = G__532048;
        i__532040_532044 = G__532049;
        continue
      }else {
        var temp__4092__auto___532050 = cljs.core.seq.call(null, seq__532037_532041);
        if(temp__4092__auto___532050) {
          var seq__532037_532051__$1 = temp__4092__auto___532050;
          if(cljs.core.chunked_seq_QMARK_.call(null, seq__532037_532051__$1)) {
            var c__4009__auto___532052 = cljs.core.chunk_first.call(null, seq__532037_532051__$1);
            var G__532053 = cljs.core.chunk_rest.call(null, seq__532037_532051__$1);
            var G__532054 = c__4009__auto___532052;
            var G__532055 = cljs.core.count.call(null, c__4009__auto___532052);
            var G__532056 = 0;
            seq__532037_532041 = G__532053;
            chunk__532038_532042 = G__532054;
            count__532039_532043 = G__532055;
            i__532040_532044 = G__532056;
            continue
          }else {
            var i_532057 = cljs.core.first.call(null, seq__532037_532051__$1);
            output.push(cljs.core.apply.call(null, f, cljs.core.map.call(null, function(seq__532037_532041, chunk__532038_532042, count__532039_532043, i__532040_532044, i_532057, seq__532037_532051__$1, temp__4092__auto___532050) {
              return function(p1__532032_SHARP_) {
                return p1__532032_SHARP_[i_532057]
              }
            }(seq__532037_532041, chunk__532038_532042, count__532039_532043, i__532040_532044, i_532057, seq__532037_532051__$1, temp__4092__auto___532050), args)));
            var G__532058 = cljs.core.next.call(null, seq__532037_532051__$1);
            var G__532059 = null;
            var G__532060 = 0;
            var G__532061 = 0;
            seq__532037_532041 = G__532058;
            chunk__532038_532042 = G__532059;
            count__532039_532043 = G__532060;
            i__532040_532044 = G__532061;
            continue
          }
        }else {
        }
      }
      break
    }
    return output
  };
  var js_map_STAR_ = function(f, var_args) {
    var args = null;
    if(arguments.length > 1) {
      args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
    }
    return js_map_STAR___delegate.call(this, f, args)
  };
  js_map_STAR_.cljs$lang$maxFixedArity = 1;
  js_map_STAR_.cljs$lang$applyTo = function(arglist__532062) {
    var f = cljs.core.first(arglist__532062);
    var args = cljs.core.rest(arglist__532062);
    return js_map_STAR___delegate(f, args)
  };
  js_map_STAR_.cljs$core$IFn$_invoke$arity$variadic = js_map_STAR___delegate;
  return js_map_STAR_
}();
purnam.native$.js_mapcat_STAR_ = function() {
  var js_mapcat_STAR___delegate = function(f, args) {
    var output = [];
    var len = cljs.core.apply.call(null, cljs.core.min, cljs.core.map.call(null, function(output) {
      return function(ar) {
        return ar.length
      }
    }(output), args));
    var i = 0;
    var output__$1 = output;
    while(true) {
      if(i < len) {
        var res = cljs.core.apply.call(null, f, cljs.core.map.call(null, function(i, output__$1) {
          return function(p1__532063_SHARP_) {
            return p1__532063_SHARP_[i]
          }
        }(i, output__$1), args));
        var G__532064 = i + 1;
        var G__532065 = output__$1.concat(res);
        i = G__532064;
        output__$1 = G__532065;
        continue
      }else {
        return output__$1
      }
      break
    }
  };
  var js_mapcat_STAR_ = function(f, var_args) {
    var args = null;
    if(arguments.length > 1) {
      args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
    }
    return js_mapcat_STAR___delegate.call(this, f, args)
  };
  js_mapcat_STAR_.cljs$lang$maxFixedArity = 1;
  js_mapcat_STAR_.cljs$lang$applyTo = function(arglist__532066) {
    var f = cljs.core.first(arglist__532066);
    var args = cljs.core.rest(arglist__532066);
    return js_mapcat_STAR___delegate(f, args)
  };
  js_mapcat_STAR_.cljs$core$IFn$_invoke$arity$variadic = js_mapcat_STAR___delegate;
  return js_mapcat_STAR_
}();
purnam.native$.js_map = function() {
  var js_map__delegate = function(f, args) {
    var output = [];
    var len = cljs.core.apply.call(null, cljs.core.min, cljs.core.map.call(null, function(output) {
      return function(ar) {
        return cljs.core.count.call(null, ar)
      }
    }(output), args));
    var seq__532072_532076 = cljs.core.seq.call(null, cljs.core.range.call(null, len));
    var chunk__532073_532077 = null;
    var count__532074_532078 = 0;
    var i__532075_532079 = 0;
    while(true) {
      if(i__532075_532079 < count__532074_532078) {
        var i_532080 = cljs.core._nth.call(null, chunk__532073_532077, i__532075_532079);
        output.push(cljs.core.apply.call(null, f, cljs.core.map.call(null, function(seq__532072_532076, chunk__532073_532077, count__532074_532078, i__532075_532079, i_532080) {
          return function(p1__532067_SHARP_) {
            return cljs.core.nth.call(null, p1__532067_SHARP_, i_532080)
          }
        }(seq__532072_532076, chunk__532073_532077, count__532074_532078, i__532075_532079, i_532080), args)));
        var G__532081 = seq__532072_532076;
        var G__532082 = chunk__532073_532077;
        var G__532083 = count__532074_532078;
        var G__532084 = i__532075_532079 + 1;
        seq__532072_532076 = G__532081;
        chunk__532073_532077 = G__532082;
        count__532074_532078 = G__532083;
        i__532075_532079 = G__532084;
        continue
      }else {
        var temp__4092__auto___532085 = cljs.core.seq.call(null, seq__532072_532076);
        if(temp__4092__auto___532085) {
          var seq__532072_532086__$1 = temp__4092__auto___532085;
          if(cljs.core.chunked_seq_QMARK_.call(null, seq__532072_532086__$1)) {
            var c__4009__auto___532087 = cljs.core.chunk_first.call(null, seq__532072_532086__$1);
            var G__532088 = cljs.core.chunk_rest.call(null, seq__532072_532086__$1);
            var G__532089 = c__4009__auto___532087;
            var G__532090 = cljs.core.count.call(null, c__4009__auto___532087);
            var G__532091 = 0;
            seq__532072_532076 = G__532088;
            chunk__532073_532077 = G__532089;
            count__532074_532078 = G__532090;
            i__532075_532079 = G__532091;
            continue
          }else {
            var i_532092 = cljs.core.first.call(null, seq__532072_532086__$1);
            output.push(cljs.core.apply.call(null, f, cljs.core.map.call(null, function(seq__532072_532076, chunk__532073_532077, count__532074_532078, i__532075_532079, i_532092, seq__532072_532086__$1, temp__4092__auto___532085) {
              return function(p1__532067_SHARP_) {
                return cljs.core.nth.call(null, p1__532067_SHARP_, i_532092)
              }
            }(seq__532072_532076, chunk__532073_532077, count__532074_532078, i__532075_532079, i_532092, seq__532072_532086__$1, temp__4092__auto___532085), args)));
            var G__532093 = cljs.core.next.call(null, seq__532072_532086__$1);
            var G__532094 = null;
            var G__532095 = 0;
            var G__532096 = 0;
            seq__532072_532076 = G__532093;
            chunk__532073_532077 = G__532094;
            count__532074_532078 = G__532095;
            i__532075_532079 = G__532096;
            continue
          }
        }else {
        }
      }
      break
    }
    return output
  };
  var js_map = function(f, var_args) {
    var args = null;
    if(arguments.length > 1) {
      args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
    }
    return js_map__delegate.call(this, f, args)
  };
  js_map.cljs$lang$maxFixedArity = 1;
  js_map.cljs$lang$applyTo = function(arglist__532097) {
    var f = cljs.core.first(arglist__532097);
    var args = cljs.core.rest(arglist__532097);
    return js_map__delegate(f, args)
  };
  js_map.cljs$core$IFn$_invoke$arity$variadic = js_map__delegate;
  return js_map
}();
purnam.native$.js_mapcat = function() {
  var js_mapcat__delegate = function(f, args) {
    var output = [];
    var len = cljs.core.apply.call(null, cljs.core.min, cljs.core.map.call(null, function(output) {
      return function(ar) {
        return cljs.core.count.call(null, ar)
      }
    }(output), args));
    var i = 0;
    var output__$1 = output;
    while(true) {
      if(i < len) {
        var res = cljs.core.apply.call(null, f, cljs.core.map.call(null, function(i, output__$1) {
          return function(p1__532098_SHARP_) {
            return cljs.core.nth.call(null, p1__532098_SHARP_, i)
          }
        }(i, output__$1), args));
        var G__532099 = i + 1;
        var G__532100 = output__$1.concat(res);
        i = G__532099;
        output__$1 = G__532100;
        continue
      }else {
        return output__$1
      }
      break
    }
  };
  var js_mapcat = function(f, var_args) {
    var args = null;
    if(arguments.length > 1) {
      args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
    }
    return js_mapcat__delegate.call(this, f, args)
  };
  js_mapcat.cljs$lang$maxFixedArity = 1;
  js_mapcat.cljs$lang$applyTo = function(arglist__532101) {
    var f = cljs.core.first(arglist__532101);
    var args = cljs.core.rest(arglist__532101);
    return js_mapcat__delegate(f, args)
  };
  js_mapcat.cljs$core$IFn$_invoke$arity$variadic = js_mapcat__delegate;
  return js_mapcat
}();
purnam.native$.js_concat = function() {
  var js_concat__delegate = function(args) {
    var output = [];
    var seq__532114_532126 = cljs.core.seq.call(null, args);
    var chunk__532119_532127 = null;
    var count__532120_532128 = 0;
    var i__532121_532129 = 0;
    while(true) {
      if(i__532121_532129 < count__532120_532128) {
        var ar_532130 = cljs.core._nth.call(null, chunk__532119_532127, i__532121_532129);
        var seq__532122_532131 = cljs.core.seq.call(null, ar_532130);
        var chunk__532123_532132 = null;
        var count__532124_532133 = 0;
        var i__532125_532134 = 0;
        while(true) {
          if(i__532125_532134 < count__532124_532133) {
            var v_532135 = cljs.core._nth.call(null, chunk__532123_532132, i__532125_532134);
            output.push(v_532135);
            var G__532136 = seq__532122_532131;
            var G__532137 = chunk__532123_532132;
            var G__532138 = count__532124_532133;
            var G__532139 = i__532125_532134 + 1;
            seq__532122_532131 = G__532136;
            chunk__532123_532132 = G__532137;
            count__532124_532133 = G__532138;
            i__532125_532134 = G__532139;
            continue
          }else {
            var temp__4092__auto___532140 = cljs.core.seq.call(null, seq__532122_532131);
            if(temp__4092__auto___532140) {
              var seq__532122_532141__$1 = temp__4092__auto___532140;
              if(cljs.core.chunked_seq_QMARK_.call(null, seq__532122_532141__$1)) {
                var c__4009__auto___532142 = cljs.core.chunk_first.call(null, seq__532122_532141__$1);
                var G__532143 = cljs.core.chunk_rest.call(null, seq__532122_532141__$1);
                var G__532144 = c__4009__auto___532142;
                var G__532145 = cljs.core.count.call(null, c__4009__auto___532142);
                var G__532146 = 0;
                seq__532122_532131 = G__532143;
                chunk__532123_532132 = G__532144;
                count__532124_532133 = G__532145;
                i__532125_532134 = G__532146;
                continue
              }else {
                var v_532147 = cljs.core.first.call(null, seq__532122_532141__$1);
                output.push(v_532147);
                var G__532148 = cljs.core.next.call(null, seq__532122_532141__$1);
                var G__532149 = null;
                var G__532150 = 0;
                var G__532151 = 0;
                seq__532122_532131 = G__532148;
                chunk__532123_532132 = G__532149;
                count__532124_532133 = G__532150;
                i__532125_532134 = G__532151;
                continue
              }
            }else {
            }
          }
          break
        }
        var G__532152 = seq__532114_532126;
        var G__532153 = chunk__532119_532127;
        var G__532154 = count__532120_532128;
        var G__532155 = i__532121_532129 + 1;
        seq__532114_532126 = G__532152;
        chunk__532119_532127 = G__532153;
        count__532120_532128 = G__532154;
        i__532121_532129 = G__532155;
        continue
      }else {
        var temp__4092__auto___532156 = cljs.core.seq.call(null, seq__532114_532126);
        if(temp__4092__auto___532156) {
          var seq__532114_532157__$1 = temp__4092__auto___532156;
          if(cljs.core.chunked_seq_QMARK_.call(null, seq__532114_532157__$1)) {
            var c__4009__auto___532158 = cljs.core.chunk_first.call(null, seq__532114_532157__$1);
            var G__532159 = cljs.core.chunk_rest.call(null, seq__532114_532157__$1);
            var G__532160 = c__4009__auto___532158;
            var G__532161 = cljs.core.count.call(null, c__4009__auto___532158);
            var G__532162 = 0;
            seq__532114_532126 = G__532159;
            chunk__532119_532127 = G__532160;
            count__532120_532128 = G__532161;
            i__532121_532129 = G__532162;
            continue
          }else {
            var ar_532163 = cljs.core.first.call(null, seq__532114_532157__$1);
            var seq__532115_532164 = cljs.core.seq.call(null, ar_532163);
            var chunk__532116_532165 = null;
            var count__532117_532166 = 0;
            var i__532118_532167 = 0;
            while(true) {
              if(i__532118_532167 < count__532117_532166) {
                var v_532168 = cljs.core._nth.call(null, chunk__532116_532165, i__532118_532167);
                output.push(v_532168);
                var G__532169 = seq__532115_532164;
                var G__532170 = chunk__532116_532165;
                var G__532171 = count__532117_532166;
                var G__532172 = i__532118_532167 + 1;
                seq__532115_532164 = G__532169;
                chunk__532116_532165 = G__532170;
                count__532117_532166 = G__532171;
                i__532118_532167 = G__532172;
                continue
              }else {
                var temp__4092__auto___532173__$1 = cljs.core.seq.call(null, seq__532115_532164);
                if(temp__4092__auto___532173__$1) {
                  var seq__532115_532174__$1 = temp__4092__auto___532173__$1;
                  if(cljs.core.chunked_seq_QMARK_.call(null, seq__532115_532174__$1)) {
                    var c__4009__auto___532175 = cljs.core.chunk_first.call(null, seq__532115_532174__$1);
                    var G__532176 = cljs.core.chunk_rest.call(null, seq__532115_532174__$1);
                    var G__532177 = c__4009__auto___532175;
                    var G__532178 = cljs.core.count.call(null, c__4009__auto___532175);
                    var G__532179 = 0;
                    seq__532115_532164 = G__532176;
                    chunk__532116_532165 = G__532177;
                    count__532117_532166 = G__532178;
                    i__532118_532167 = G__532179;
                    continue
                  }else {
                    var v_532180 = cljs.core.first.call(null, seq__532115_532174__$1);
                    output.push(v_532180);
                    var G__532181 = cljs.core.next.call(null, seq__532115_532174__$1);
                    var G__532182 = null;
                    var G__532183 = 0;
                    var G__532184 = 0;
                    seq__532115_532164 = G__532181;
                    chunk__532116_532165 = G__532182;
                    count__532117_532166 = G__532183;
                    i__532118_532167 = G__532184;
                    continue
                  }
                }else {
                }
              }
              break
            }
            var G__532185 = cljs.core.next.call(null, seq__532114_532157__$1);
            var G__532186 = null;
            var G__532187 = 0;
            var G__532188 = 0;
            seq__532114_532126 = G__532185;
            chunk__532119_532127 = G__532186;
            count__532120_532128 = G__532187;
            i__532121_532129 = G__532188;
            continue
          }
        }else {
        }
      }
      break
    }
    return output
  };
  var js_concat = function(var_args) {
    var args = null;
    if(arguments.length > 0) {
      args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return js_concat__delegate.call(this, args)
  };
  js_concat.cljs$lang$maxFixedArity = 0;
  js_concat.cljs$lang$applyTo = function(arglist__532189) {
    var args = cljs.core.seq(arglist__532189);
    return js_concat__delegate(args)
  };
  js_concat.cljs$core$IFn$_invoke$arity$variadic = js_concat__delegate;
  return js_concat
}();
purnam.native$.js_LT__ = function js_LT__(obj) {
  return cljs.core.clj__GT_js.call(null, obj)
};
purnam.native$.log = function() {
  var log = null;
  var log__1 = function(x) {
    if(cljs.core.coll_QMARK_.call(null, x)) {
      console.log([cljs.core.str(x)].join(""), x)
    }else {
      console.log([cljs.core.str(x)].join(""))
    }
    return x
  };
  var log__2 = function(x, y) {
    if(cljs.core.coll_QMARK_.call(null, x)) {
      console.log([cljs.core.str(x), cljs.core.str(":")].join(""), [cljs.core.str(y)].join(""), y)
    }else {
      console.log([cljs.core.str(x), cljs.core.str(":")].join(""), [cljs.core.str(y)].join(""))
    }
    return y
  };
  log = function(x, y) {
    switch(arguments.length) {
      case 1:
        return log__1.call(this, x);
      case 2:
        return log__2.call(this, x, y)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  log.cljs$core$IFn$_invoke$arity$1 = log__1;
  log.cljs$core$IFn$_invoke$arity$2 = log__2;
  return log
}();
purnam.native$.augment_fn_string = function augment_fn_string(func) {
  if(typeof func === "string") {
    return function(x) {
      return purnam.native$.aget_in.call(null, x, clojure.string.split.call(null, func, /\./))
    }
  }else {
    return func
  }
};
purnam.native$.check_fn = function() {
  var check_fn = null;
  var check_fn__1 = function(chk) {
    return function(x) {
      if(cljs.core.fn_QMARK_.call(null, chk)) {
        return chk.call(null, x)
      }else {
        return cljs.core._EQ_.call(null, x, chk)
      }
    }
  };
  var check_fn__2 = function(func, chk) {
    return function(x) {
      var res = func.call(null, x);
      if(cljs.core.fn_QMARK_.call(null, chk)) {
        return chk.call(null, res)
      }else {
        return cljs.core._EQ_.call(null, res, chk)
      }
    }
  };
  check_fn = function(func, chk) {
    switch(arguments.length) {
      case 1:
        return check_fn__1.call(this, func);
      case 2:
        return check_fn__2.call(this, func, chk)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  check_fn.cljs$core$IFn$_invoke$arity$1 = check_fn__1;
  check_fn.cljs$core$IFn$_invoke$arity$2 = check_fn__2;
  return check_fn
}();
goog.provide("chaperone.ng.core");
goog.require("cljs.core");
goog.require("purnam.native$");
goog.require("purnam.native$");
goog.require("chaperone.core");
goog.require("chaperone.core");
chaperone.ng.core.chaperone_app = angular.module("chaperone.app", ["ngRoute"]);
chaperone.ng.core.chaperone_app_System = ["$location", function($location) {
  return chaperone.core.start_BANG_.call(null, chaperone.core.create_system.call(null, function() {
    var obj_SHARP_ = purnam.native$.aget_in.call(null, $location, cljs.core.PersistentVector.EMPTY);
    var fn_SHARP_ = obj_SHARP_["host"];
    return fn_SHARP_.call(obj_SHARP_)
  }(), function() {
    var obj_SHARP_ = purnam.native$.aget_in.call(null, $location, cljs.core.PersistentVector.EMPTY);
    var fn_SHARP_ = obj_SHARP_["port"];
    return fn_SHARP_.call(obj_SHARP_)
  }()))
}];
angular.module("chaperone.app").factory("System", chaperone.ng.core.chaperone_app_System);
angular.module("chaperone.app").config(["$routeProvider", function($routeProvider) {
  var G__528374 = $routeProvider;
  G__528374.when("/admin/users/add", function() {
    var G__528375 = function() {
      var obj528378 = {};
      return obj528378
    }();
    G__528375["templateUrl"] = "/public/partials/admin/user/user-form.html";
    G__528375["controller"] = "AdminUserCtrl";
    return G__528375
  }());
  G__528374.when("/admin/users/list", function() {
    var G__528379 = function() {
      var obj528382 = {};
      return obj528382
    }();
    G__528379["templateUrl"] = "/public/partials/admin/user/list.html";
    G__528379["controller"] = "AdminUserCtrl";
    return G__528379
  }());
  G__528374.otherwise(function() {
    var G__528383 = function() {
      var obj528386 = {};
      return obj528386
    }();
    G__528383["templateUrl"] = "/public/partials/index.html";
    return G__528383
  }());
  return G__528374
}]);
goog.provide("chaperone.user");
goog.require("cljs.core");
goog.require("cljs.core.async");
goog.require("chaperone.crossover.user.User");
goog.require("cljs.core.async");
chaperone.user.save_user = function save_user(user) {
  throw Error("save-user Not implemented");
};
goog.provide("chaperone.ng.admin.user");
goog.require("cljs.core");
goog.require("purnam.native$");
goog.require("cljs.core.async");
goog.require("purnam.native$");
goog.require("cljs.core.async");
goog.require("chaperone.user");
goog.require("chaperone.user");
goog.require("chaperone.crossover.user");
goog.require("chaperone.crossover.user");
goog.require("chaperone.ng.core");
goog.require("chaperone.ng.core");
chaperone.ng.admin.user.chaperone_app_AdminUserCtrl = ["$scope", "$location", "System", function($scope, $location, System) {
  purnam.native$.aset_in.call(null, $scope, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["init"], null), function() {
    return purnam.native$.aset_in.call(null, $scope, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["title"], null), "Add")
  });
  purnam.native$.aset_in.call(null, $scope, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["load-user"], null), function() {
    var user = chaperone.crossover.user.new_user.call(null, "", "", "", "");
    return purnam.native$.aset_in.call(null, $scope, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["user"], null), cljs.core.clj__GT_js.call(null, user))
  });
  return purnam.native$.aset_in.call(null, $scope, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["save-user"], null), function() {
    var user = chaperone.crossover.user.map__GT_User.call(null, cljs.core.js__GT_clj.call(null, purnam.native$.aget_in.call(null, $scope, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["user"], null))));
    var chan = chaperone.user.save_user.call(null, user);
    var c__5728__auto__ = cljs.core.async.chan.call(null, 1);
    cljs.core.async.impl.dispatch.run.call(null, function() {
      var f__5729__auto__ = function() {
        var switch__5678__auto__ = function(state_528430) {
          var state_val_528431 = state_528430[1];
          if(state_val_528431 === 2) {
            var inst_528415 = state_528430[2];
            var inst_528416 = purnam.native$.aget_in.call(null, $location, cljs.core.PersistentVector.EMPTY);
            var inst_528417 = inst_528416["path"];
            var inst_528418 = inst_528417.call(inst_528416, "/admin/users/list");
            var inst_528419 = ["alert"];
            var inst_528420 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, inst_528419, null);
            var inst_528425 = {};
            var inst_528426 = inst_528425["message"] = "User has been saved successfully";
            var inst_528427 = inst_528425["category"] = "success";
            var inst_528428 = purnam.native$.aset_in.call(null, $scope, inst_528420, inst_528425);
            var state_528430__$1 = function() {
              var statearr_528432 = state_528430;
              statearr_528432[5] = inst_528426;
              statearr_528432[6] = inst_528427;
              statearr_528432[7] = inst_528418;
              statearr_528432[8] = inst_528415;
              return statearr_528432
            }();
            return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_528430__$1, inst_528428)
          }else {
            if(state_val_528431 === 1) {
              var state_528430__$1 = state_528430;
              return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_528430__$1, 2, chan)
            }else {
              return null
            }
          }
        };
        return function(switch__5678__auto__) {
          return function() {
            var state_machine__5679__auto__ = null;
            var state_machine__5679__auto____0 = function() {
              var statearr_528434 = new Array(9);
              statearr_528434[0] = state_machine__5679__auto__;
              statearr_528434[1] = 1;
              return statearr_528434
            };
            var state_machine__5679__auto____1 = function(state_528430) {
              while(true) {
                var result__5680__auto__ = switch__5678__auto__.call(null, state_528430);
                if(cljs.core.keyword_identical_QMARK_.call(null, result__5680__auto__, new cljs.core.Keyword(null, "recur", "recur", 1122293407))) {
                  continue
                }else {
                  return result__5680__auto__
                }
                break
              }
            };
            state_machine__5679__auto__ = function(state_528430) {
              switch(arguments.length) {
                case 0:
                  return state_machine__5679__auto____0.call(this);
                case 1:
                  return state_machine__5679__auto____1.call(this, state_528430)
              }
              throw new Error("Invalid arity: " + arguments.length);
            };
            state_machine__5679__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__5679__auto____0;
            state_machine__5679__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__5679__auto____1;
            return state_machine__5679__auto__
          }()
        }(switch__5678__auto__)
      }();
      var state__5730__auto__ = function() {
        var statearr_528435 = f__5729__auto__.call(null);
        statearr_528435[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__5728__auto__;
        return statearr_528435
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__5730__auto__)
    });
    return c__5728__auto__
  })
}];
angular.module("chaperone.app").controller("AdminUserCtrl", chaperone.ng.admin.user.chaperone_app_AdminUserCtrl);

//# sourceMappingURL=main.js.map