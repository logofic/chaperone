var CLOSURE_NO_DEPS = true;
var COMPILED = false;
var goog = goog || {};
goog.global = this;
goog.DEBUG = true;
goog.LOCALE = "en";
goog.TRUSTED_SITE = true;
goog.provide = function(name) {
  if(!COMPILED) {
    if(goog.isProvided_(name)) {
      throw Error('Namespace "' + name + '" already declared.');
    }
    delete goog.implicitNamespaces_[name];
    var namespace = name;
    while(namespace = namespace.substring(0, namespace.lastIndexOf("."))) {
      if(goog.getObjectByName(namespace)) {
        break
      }
      goog.implicitNamespaces_[namespace] = true
    }
  }
  goog.exportPath_(name)
};
goog.setTestOnly = function(opt_message) {
  if(COMPILED && !goog.DEBUG) {
    opt_message = opt_message || "";
    throw Error("Importing test-only code into non-debug environment" + opt_message ? ": " + opt_message : ".");
  }
};
if(!COMPILED) {
  goog.isProvided_ = function(name) {
    return!goog.implicitNamespaces_[name] && !!goog.getObjectByName(name)
  };
  goog.implicitNamespaces_ = {}
}
goog.exportPath_ = function(name, opt_object, opt_objectToExportTo) {
  var parts = name.split(".");
  var cur = opt_objectToExportTo || goog.global;
  if(!(parts[0] in cur) && cur.execScript) {
    cur.execScript("var " + parts[0])
  }
  for(var part;parts.length && (part = parts.shift());) {
    if(!parts.length && goog.isDef(opt_object)) {
      cur[part] = opt_object
    }else {
      if(cur[part]) {
        cur = cur[part]
      }else {
        cur = cur[part] = {}
      }
    }
  }
};
goog.getObjectByName = function(name, opt_obj) {
  var parts = name.split(".");
  var cur = opt_obj || goog.global;
  for(var part;part = parts.shift();) {
    if(goog.isDefAndNotNull(cur[part])) {
      cur = cur[part]
    }else {
      return null
    }
  }
  return cur
};
goog.globalize = function(obj, opt_global) {
  var global = opt_global || goog.global;
  for(var x in obj) {
    global[x] = obj[x]
  }
};
goog.addDependency = function(relPath, provides, requires) {
  if(!COMPILED) {
    var provide, require;
    var path = relPath.replace(/\\/g, "/");
    var deps = goog.dependencies_;
    for(var i = 0;provide = provides[i];i++) {
      deps.nameToPath[provide] = path;
      if(!(path in deps.pathToNames)) {
        deps.pathToNames[path] = {}
      }
      deps.pathToNames[path][provide] = true
    }
    for(var j = 0;require = requires[j];j++) {
      if(!(path in deps.requires)) {
        deps.requires[path] = {}
      }
      deps.requires[path][require] = true
    }
  }
};
goog.ENABLE_DEBUG_LOADER = true;
goog.require = function(name) {
  if(!COMPILED) {
    if(goog.isProvided_(name)) {
      return
    }
    if(goog.ENABLE_DEBUG_LOADER) {
      var path = goog.getPathFromDeps_(name);
      if(path) {
        goog.included_[path] = true;
        goog.writeScripts_();
        return
      }
    }
    var errorMessage = "goog.require could not find: " + name;
    if(goog.global.console) {
      goog.global.console["error"](errorMessage)
    }
    throw Error(errorMessage);
  }
};
goog.basePath = "";
goog.global.CLOSURE_BASE_PATH;
goog.global.CLOSURE_NO_DEPS;
goog.global.CLOSURE_IMPORT_SCRIPT;
goog.nullFunction = function() {
};
goog.identityFunction = function(opt_returnValue, var_args) {
  return opt_returnValue
};
goog.abstractMethod = function() {
  throw Error("unimplemented abstract method");
};
goog.addSingletonGetter = function(ctor) {
  ctor.getInstance = function() {
    if(ctor.instance_) {
      return ctor.instance_
    }
    if(goog.DEBUG) {
      goog.instantiatedSingletons_[goog.instantiatedSingletons_.length] = ctor
    }
    return ctor.instance_ = new ctor
  }
};
goog.instantiatedSingletons_ = [];
if(!COMPILED && goog.ENABLE_DEBUG_LOADER) {
  goog.included_ = {};
  goog.dependencies_ = {pathToNames:{}, nameToPath:{}, requires:{}, visited:{}, written:{}};
  goog.inHtmlDocument_ = function() {
    var doc = goog.global.document;
    return typeof doc != "undefined" && "write" in doc
  };
  goog.findBasePath_ = function() {
    if(goog.global.CLOSURE_BASE_PATH) {
      goog.basePath = goog.global.CLOSURE_BASE_PATH;
      return
    }else {
      if(!goog.inHtmlDocument_()) {
        return
      }
    }
    var doc = goog.global.document;
    var scripts = doc.getElementsByTagName("script");
    for(var i = scripts.length - 1;i >= 0;--i) {
      var src = scripts[i].src;
      var qmark = src.lastIndexOf("?");
      var l = qmark == -1 ? src.length : qmark;
      if(src.substr(l - 7, 7) == "base.js") {
        goog.basePath = src.substr(0, l - 7);
        return
      }
    }
  };
  goog.importScript_ = function(src) {
    var importScript = goog.global.CLOSURE_IMPORT_SCRIPT || goog.writeScriptTag_;
    if(!goog.dependencies_.written[src] && importScript(src)) {
      goog.dependencies_.written[src] = true
    }
  };
  goog.writeScriptTag_ = function(src) {
    if(goog.inHtmlDocument_()) {
      var doc = goog.global.document;
      if(doc.readyState == "complete") {
        var isDeps = /\bdeps.js$/.test(src);
        if(isDeps) {
          return false
        }else {
          throw Error('Cannot write "' + src + '" after document load');
        }
      }
      doc.write('<script type="text/javascript" src="' + src + '"></' + "script>");
      return true
    }else {
      return false
    }
  };
  goog.writeScripts_ = function() {
    var scripts = [];
    var seenScript = {};
    var deps = goog.dependencies_;
    function visitNode(path) {
      if(path in deps.written) {
        return
      }
      if(path in deps.visited) {
        if(!(path in seenScript)) {
          seenScript[path] = true;
          scripts.push(path)
        }
        return
      }
      deps.visited[path] = true;
      if(path in deps.requires) {
        for(var requireName in deps.requires[path]) {
          if(!goog.isProvided_(requireName)) {
            if(requireName in deps.nameToPath) {
              visitNode(deps.nameToPath[requireName])
            }else {
              throw Error("Undefined nameToPath for " + requireName);
            }
          }
        }
      }
      if(!(path in seenScript)) {
        seenScript[path] = true;
        scripts.push(path)
      }
    }
    for(var path in goog.included_) {
      if(!deps.written[path]) {
        visitNode(path)
      }
    }
    for(var i = 0;i < scripts.length;i++) {
      if(scripts[i]) {
        goog.importScript_(goog.basePath + scripts[i])
      }else {
        throw Error("Undefined script input");
      }
    }
  };
  goog.getPathFromDeps_ = function(rule) {
    if(rule in goog.dependencies_.nameToPath) {
      return goog.dependencies_.nameToPath[rule]
    }else {
      return null
    }
  };
  goog.findBasePath_();
  if(!goog.global.CLOSURE_NO_DEPS) {
    goog.importScript_(goog.basePath + "deps.js")
  }
}
goog.typeOf = function(value) {
  var s = typeof value;
  if(s == "object") {
    if(value) {
      if(value instanceof Array) {
        return"array"
      }else {
        if(value instanceof Object) {
          return s
        }
      }
      var className = Object.prototype.toString.call(value);
      if(className == "[object Window]") {
        return"object"
      }
      if(className == "[object Array]" || typeof value.length == "number" && typeof value.splice != "undefined" && typeof value.propertyIsEnumerable != "undefined" && !value.propertyIsEnumerable("splice")) {
        return"array"
      }
      if(className == "[object Function]" || typeof value.call != "undefined" && typeof value.propertyIsEnumerable != "undefined" && !value.propertyIsEnumerable("call")) {
        return"function"
      }
    }else {
      return"null"
    }
  }else {
    if(s == "function" && typeof value.call == "undefined") {
      return"object"
    }
  }
  return s
};
goog.isDef = function(val) {
  return val !== undefined
};
goog.isNull = function(val) {
  return val === null
};
goog.isDefAndNotNull = function(val) {
  return val != null
};
goog.isArray = function(val) {
  return goog.typeOf(val) == "array"
};
goog.isArrayLike = function(val) {
  var type = goog.typeOf(val);
  return type == "array" || type == "object" && typeof val.length == "number"
};
goog.isDateLike = function(val) {
  return goog.isObject(val) && typeof val.getFullYear == "function"
};
goog.isString = function(val) {
  return typeof val == "string"
};
goog.isBoolean = function(val) {
  return typeof val == "boolean"
};
goog.isNumber = function(val) {
  return typeof val == "number"
};
goog.isFunction = function(val) {
  return goog.typeOf(val) == "function"
};
goog.isObject = function(val) {
  var type = typeof val;
  return type == "object" && val != null || type == "function"
};
goog.getUid = function(obj) {
  return obj[goog.UID_PROPERTY_] || (obj[goog.UID_PROPERTY_] = ++goog.uidCounter_)
};
goog.removeUid = function(obj) {
  if("removeAttribute" in obj) {
    obj.removeAttribute(goog.UID_PROPERTY_)
  }
  try {
    delete obj[goog.UID_PROPERTY_]
  }catch(ex) {
  }
};
goog.UID_PROPERTY_ = "closure_uid_" + (Math.random() * 1E9 >>> 0);
goog.uidCounter_ = 0;
goog.getHashCode = goog.getUid;
goog.removeHashCode = goog.removeUid;
goog.cloneObject = function(obj) {
  var type = goog.typeOf(obj);
  if(type == "object" || type == "array") {
    if(obj.clone) {
      return obj.clone()
    }
    var clone = type == "array" ? [] : {};
    for(var key in obj) {
      clone[key] = goog.cloneObject(obj[key])
    }
    return clone
  }
  return obj
};
goog.bindNative_ = function(fn, selfObj, var_args) {
  return fn.call.apply(fn.bind, arguments)
};
goog.bindJs_ = function(fn, selfObj, var_args) {
  if(!fn) {
    throw new Error;
  }
  if(arguments.length > 2) {
    var boundArgs = Array.prototype.slice.call(arguments, 2);
    return function() {
      var newArgs = Array.prototype.slice.call(arguments);
      Array.prototype.unshift.apply(newArgs, boundArgs);
      return fn.apply(selfObj, newArgs)
    }
  }else {
    return function() {
      return fn.apply(selfObj, arguments)
    }
  }
};
goog.bind = function(fn, selfObj, var_args) {
  if(Function.prototype.bind && Function.prototype.bind.toString().indexOf("native code") != -1) {
    goog.bind = goog.bindNative_
  }else {
    goog.bind = goog.bindJs_
  }
  return goog.bind.apply(null, arguments)
};
goog.partial = function(fn, var_args) {
  var args = Array.prototype.slice.call(arguments, 1);
  return function() {
    var newArgs = Array.prototype.slice.call(arguments);
    newArgs.unshift.apply(newArgs, args);
    return fn.apply(this, newArgs)
  }
};
goog.mixin = function(target, source) {
  for(var x in source) {
    target[x] = source[x]
  }
};
goog.now = goog.TRUSTED_SITE && Date.now || function() {
  return+new Date
};
goog.globalEval = function(script) {
  if(goog.global.execScript) {
    goog.global.execScript(script, "JavaScript")
  }else {
    if(goog.global.eval) {
      if(goog.evalWorksForGlobals_ == null) {
        goog.global.eval("var _et_ = 1;");
        if(typeof goog.global["_et_"] != "undefined") {
          delete goog.global["_et_"];
          goog.evalWorksForGlobals_ = true
        }else {
          goog.evalWorksForGlobals_ = false
        }
      }
      if(goog.evalWorksForGlobals_) {
        goog.global.eval(script)
      }else {
        var doc = goog.global.document;
        var scriptElt = doc.createElement("script");
        scriptElt.type = "text/javascript";
        scriptElt.defer = false;
        scriptElt.appendChild(doc.createTextNode(script));
        doc.body.appendChild(scriptElt);
        doc.body.removeChild(scriptElt)
      }
    }else {
      throw Error("goog.globalEval not available");
    }
  }
};
goog.evalWorksForGlobals_ = null;
goog.cssNameMapping_;
goog.cssNameMappingStyle_;
goog.getCssName = function(className, opt_modifier) {
  var getMapping = function(cssName) {
    return goog.cssNameMapping_[cssName] || cssName
  };
  var renameByParts = function(cssName) {
    var parts = cssName.split("-");
    var mapped = [];
    for(var i = 0;i < parts.length;i++) {
      mapped.push(getMapping(parts[i]))
    }
    return mapped.join("-")
  };
  var rename;
  if(goog.cssNameMapping_) {
    rename = goog.cssNameMappingStyle_ == "BY_WHOLE" ? getMapping : renameByParts
  }else {
    rename = function(a) {
      return a
    }
  }
  if(opt_modifier) {
    return className + "-" + rename(opt_modifier)
  }else {
    return rename(className)
  }
};
goog.setCssNameMapping = function(mapping, opt_style) {
  goog.cssNameMapping_ = mapping;
  goog.cssNameMappingStyle_ = opt_style
};
goog.global.CLOSURE_CSS_NAME_MAPPING;
if(!COMPILED && goog.global.CLOSURE_CSS_NAME_MAPPING) {
  goog.cssNameMapping_ = goog.global.CLOSURE_CSS_NAME_MAPPING
}
goog.getMsg = function(str, opt_values) {
  var values = opt_values || {};
  for(var key in values) {
    var value = ("" + values[key]).replace(/\$/g, "$$$$");
    str = str.replace(new RegExp("\\{\\$" + key + "\\}", "gi"), value)
  }
  return str
};
goog.getMsgWithFallback = function(a, b) {
  return a
};
goog.exportSymbol = function(publicPath, object, opt_objectToExportTo) {
  goog.exportPath_(publicPath, object, opt_objectToExportTo)
};
goog.exportProperty = function(object, publicName, symbol) {
  object[publicName] = symbol
};
goog.inherits = function(childCtor, parentCtor) {
  function tempCtor() {
  }
  tempCtor.prototype = parentCtor.prototype;
  childCtor.superClass_ = parentCtor.prototype;
  childCtor.prototype = new tempCtor;
  childCtor.prototype.constructor = childCtor
};
goog.base = function(me, opt_methodName, var_args) {
  var caller = arguments.callee.caller;
  if(caller.superClass_) {
    return caller.superClass_.constructor.apply(me, Array.prototype.slice.call(arguments, 1))
  }
  var args = Array.prototype.slice.call(arguments, 2);
  var foundCaller = false;
  for(var ctor = me.constructor;ctor;ctor = ctor.superClass_ && ctor.superClass_.constructor) {
    if(ctor.prototype[opt_methodName] === caller) {
      foundCaller = true
    }else {
      if(foundCaller) {
        return ctor.prototype[opt_methodName].apply(me, args)
      }
    }
  }
  if(me[opt_methodName] === caller) {
    return me.constructor.prototype[opt_methodName].apply(me, args)
  }else {
    throw Error("goog.base called from a method of one name " + "to a method of a different name");
  }
};
goog.scope = function(fn) {
  fn.call(goog.global)
};
goog.provide("goog.string");
goog.provide("goog.string.Unicode");
goog.string.Unicode = {NBSP:"\u00a0"};
goog.string.startsWith = function(str, prefix) {
  return str.lastIndexOf(prefix, 0) == 0
};
goog.string.endsWith = function(str, suffix) {
  var l = str.length - suffix.length;
  return l >= 0 && str.indexOf(suffix, l) == l
};
goog.string.caseInsensitiveStartsWith = function(str, prefix) {
  return goog.string.caseInsensitiveCompare(prefix, str.substr(0, prefix.length)) == 0
};
goog.string.caseInsensitiveEndsWith = function(str, suffix) {
  return goog.string.caseInsensitiveCompare(suffix, str.substr(str.length - suffix.length, suffix.length)) == 0
};
goog.string.subs = function(str, var_args) {
  for(var i = 1;i < arguments.length;i++) {
    var replacement = String(arguments[i]).replace(/\$/g, "$$$$");
    str = str.replace(/\%s/, replacement)
  }
  return str
};
goog.string.collapseWhitespace = function(str) {
  return str.replace(/[\s\xa0]+/g, " ").replace(/^\s+|\s+$/g, "")
};
goog.string.isEmpty = function(str) {
  return/^[\s\xa0]*$/.test(str)
};
goog.string.isEmptySafe = function(str) {
  return goog.string.isEmpty(goog.string.makeSafe(str))
};
goog.string.isBreakingWhitespace = function(str) {
  return!/[^\t\n\r ]/.test(str)
};
goog.string.isAlpha = function(str) {
  return!/[^a-zA-Z]/.test(str)
};
goog.string.isNumeric = function(str) {
  return!/[^0-9]/.test(str)
};
goog.string.isAlphaNumeric = function(str) {
  return!/[^a-zA-Z0-9]/.test(str)
};
goog.string.isSpace = function(ch) {
  return ch == " "
};
goog.string.isUnicodeChar = function(ch) {
  return ch.length == 1 && ch >= " " && ch <= "~" || ch >= "\u0080" && ch <= "\ufffd"
};
goog.string.stripNewlines = function(str) {
  return str.replace(/(\r\n|\r|\n)+/g, " ")
};
goog.string.canonicalizeNewlines = function(str) {
  return str.replace(/(\r\n|\r|\n)/g, "\n")
};
goog.string.normalizeWhitespace = function(str) {
  return str.replace(/\xa0|\s/g, " ")
};
goog.string.normalizeSpaces = function(str) {
  return str.replace(/\xa0|[ \t]+/g, " ")
};
goog.string.collapseBreakingSpaces = function(str) {
  return str.replace(/[\t\r\n ]+/g, " ").replace(/^[\t\r\n ]+|[\t\r\n ]+$/g, "")
};
goog.string.trim = function(str) {
  return str.replace(/^[\s\xa0]+|[\s\xa0]+$/g, "")
};
goog.string.trimLeft = function(str) {
  return str.replace(/^[\s\xa0]+/, "")
};
goog.string.trimRight = function(str) {
  return str.replace(/[\s\xa0]+$/, "")
};
goog.string.caseInsensitiveCompare = function(str1, str2) {
  var test1 = String(str1).toLowerCase();
  var test2 = String(str2).toLowerCase();
  if(test1 < test2) {
    return-1
  }else {
    if(test1 == test2) {
      return 0
    }else {
      return 1
    }
  }
};
goog.string.numerateCompareRegExp_ = /(\.\d+)|(\d+)|(\D+)/g;
goog.string.numerateCompare = function(str1, str2) {
  if(str1 == str2) {
    return 0
  }
  if(!str1) {
    return-1
  }
  if(!str2) {
    return 1
  }
  var tokens1 = str1.toLowerCase().match(goog.string.numerateCompareRegExp_);
  var tokens2 = str2.toLowerCase().match(goog.string.numerateCompareRegExp_);
  var count = Math.min(tokens1.length, tokens2.length);
  for(var i = 0;i < count;i++) {
    var a = tokens1[i];
    var b = tokens2[i];
    if(a != b) {
      var num1 = parseInt(a, 10);
      if(!isNaN(num1)) {
        var num2 = parseInt(b, 10);
        if(!isNaN(num2) && num1 - num2) {
          return num1 - num2
        }
      }
      return a < b ? -1 : 1
    }
  }
  if(tokens1.length != tokens2.length) {
    return tokens1.length - tokens2.length
  }
  return str1 < str2 ? -1 : 1
};
goog.string.urlEncode = function(str) {
  return encodeURIComponent(String(str))
};
goog.string.urlDecode = function(str) {
  return decodeURIComponent(str.replace(/\+/g, " "))
};
goog.string.newLineToBr = function(str, opt_xml) {
  return str.replace(/(\r\n|\r|\n)/g, opt_xml ? "<br />" : "<br>")
};
goog.string.htmlEscape = function(str, opt_isLikelyToContainHtmlChars) {
  if(opt_isLikelyToContainHtmlChars) {
    return str.replace(goog.string.amperRe_, "&amp;").replace(goog.string.ltRe_, "&lt;").replace(goog.string.gtRe_, "&gt;").replace(goog.string.quotRe_, "&quot;")
  }else {
    if(!goog.string.allRe_.test(str)) {
      return str
    }
    if(str.indexOf("&") != -1) {
      str = str.replace(goog.string.amperRe_, "&amp;")
    }
    if(str.indexOf("<") != -1) {
      str = str.replace(goog.string.ltRe_, "&lt;")
    }
    if(str.indexOf(">") != -1) {
      str = str.replace(goog.string.gtRe_, "&gt;")
    }
    if(str.indexOf('"') != -1) {
      str = str.replace(goog.string.quotRe_, "&quot;")
    }
    return str
  }
};
goog.string.amperRe_ = /&/g;
goog.string.ltRe_ = /</g;
goog.string.gtRe_ = />/g;
goog.string.quotRe_ = /\"/g;
goog.string.allRe_ = /[&<>\"]/;
goog.string.unescapeEntities = function(str) {
  if(goog.string.contains(str, "&")) {
    if("document" in goog.global) {
      return goog.string.unescapeEntitiesUsingDom_(str)
    }else {
      return goog.string.unescapePureXmlEntities_(str)
    }
  }
  return str
};
goog.string.unescapeEntitiesUsingDom_ = function(str) {
  var seen = {"&amp;":"&", "&lt;":"<", "&gt;":">", "&quot;":'"'};
  var div = document.createElement("div");
  return str.replace(goog.string.HTML_ENTITY_PATTERN_, function(s, entity) {
    var value = seen[s];
    if(value) {
      return value
    }
    if(entity.charAt(0) == "#") {
      var n = Number("0" + entity.substr(1));
      if(!isNaN(n)) {
        value = String.fromCharCode(n)
      }
    }
    if(!value) {
      div.innerHTML = s + " ";
      value = div.firstChild.nodeValue.slice(0, -1)
    }
    return seen[s] = value
  })
};
goog.string.unescapePureXmlEntities_ = function(str) {
  return str.replace(/&([^;]+);/g, function(s, entity) {
    switch(entity) {
      case "amp":
        return"&";
      case "lt":
        return"<";
      case "gt":
        return">";
      case "quot":
        return'"';
      default:
        if(entity.charAt(0) == "#") {
          var n = Number("0" + entity.substr(1));
          if(!isNaN(n)) {
            return String.fromCharCode(n)
          }
        }
        return s
    }
  })
};
goog.string.HTML_ENTITY_PATTERN_ = /&([^;\s<&]+);?/g;
goog.string.whitespaceEscape = function(str, opt_xml) {
  return goog.string.newLineToBr(str.replace(/  /g, " &#160;"), opt_xml)
};
goog.string.stripQuotes = function(str, quoteChars) {
  var length = quoteChars.length;
  for(var i = 0;i < length;i++) {
    var quoteChar = length == 1 ? quoteChars : quoteChars.charAt(i);
    if(str.charAt(0) == quoteChar && str.charAt(str.length - 1) == quoteChar) {
      return str.substring(1, str.length - 1)
    }
  }
  return str
};
goog.string.truncate = function(str, chars, opt_protectEscapedCharacters) {
  if(opt_protectEscapedCharacters) {
    str = goog.string.unescapeEntities(str)
  }
  if(str.length > chars) {
    str = str.substring(0, chars - 3) + "..."
  }
  if(opt_protectEscapedCharacters) {
    str = goog.string.htmlEscape(str)
  }
  return str
};
goog.string.truncateMiddle = function(str, chars, opt_protectEscapedCharacters, opt_trailingChars) {
  if(opt_protectEscapedCharacters) {
    str = goog.string.unescapeEntities(str)
  }
  if(opt_trailingChars && str.length > chars) {
    if(opt_trailingChars > chars) {
      opt_trailingChars = chars
    }
    var endPoint = str.length - opt_trailingChars;
    var startPoint = chars - opt_trailingChars;
    str = str.substring(0, startPoint) + "..." + str.substring(endPoint)
  }else {
    if(str.length > chars) {
      var half = Math.floor(chars / 2);
      var endPos = str.length - half;
      half += chars % 2;
      str = str.substring(0, half) + "..." + str.substring(endPos)
    }
  }
  if(opt_protectEscapedCharacters) {
    str = goog.string.htmlEscape(str)
  }
  return str
};
goog.string.specialEscapeChars_ = {"\x00":"\\0", "\u0008":"\\b", "\u000c":"\\f", "\n":"\\n", "\r":"\\r", "\t":"\\t", "\u000b":"\\x0B", '"':'\\"', "\\":"\\\\"};
goog.string.jsEscapeCache_ = {"'":"\\'"};
goog.string.quote = function(s) {
  s = String(s);
  if(s.quote) {
    return s.quote()
  }else {
    var sb = ['"'];
    for(var i = 0;i < s.length;i++) {
      var ch = s.charAt(i);
      var cc = ch.charCodeAt(0);
      sb[i + 1] = goog.string.specialEscapeChars_[ch] || (cc > 31 && cc < 127 ? ch : goog.string.escapeChar(ch))
    }
    sb.push('"');
    return sb.join("")
  }
};
goog.string.escapeString = function(str) {
  var sb = [];
  for(var i = 0;i < str.length;i++) {
    sb[i] = goog.string.escapeChar(str.charAt(i))
  }
  return sb.join("")
};
goog.string.escapeChar = function(c) {
  if(c in goog.string.jsEscapeCache_) {
    return goog.string.jsEscapeCache_[c]
  }
  if(c in goog.string.specialEscapeChars_) {
    return goog.string.jsEscapeCache_[c] = goog.string.specialEscapeChars_[c]
  }
  var rv = c;
  var cc = c.charCodeAt(0);
  if(cc > 31 && cc < 127) {
    rv = c
  }else {
    if(cc < 256) {
      rv = "\\x";
      if(cc < 16 || cc > 256) {
        rv += "0"
      }
    }else {
      rv = "\\u";
      if(cc < 4096) {
        rv += "0"
      }
    }
    rv += cc.toString(16).toUpperCase()
  }
  return goog.string.jsEscapeCache_[c] = rv
};
goog.string.toMap = function(s) {
  var rv = {};
  for(var i = 0;i < s.length;i++) {
    rv[s.charAt(i)] = true
  }
  return rv
};
goog.string.contains = function(s, ss) {
  return s.indexOf(ss) != -1
};
goog.string.countOf = function(s, ss) {
  return s && ss ? s.split(ss).length - 1 : 0
};
goog.string.removeAt = function(s, index, stringLength) {
  var resultStr = s;
  if(index >= 0 && index < s.length && stringLength > 0) {
    resultStr = s.substr(0, index) + s.substr(index + stringLength, s.length - index - stringLength)
  }
  return resultStr
};
goog.string.remove = function(s, ss) {
  var re = new RegExp(goog.string.regExpEscape(ss), "");
  return s.replace(re, "")
};
goog.string.removeAll = function(s, ss) {
  var re = new RegExp(goog.string.regExpEscape(ss), "g");
  return s.replace(re, "")
};
goog.string.regExpEscape = function(s) {
  return String(s).replace(/([-()\[\]{}+?*.$\^|,:#<!\\])/g, "\\$1").replace(/\x08/g, "\\x08")
};
goog.string.repeat = function(string, length) {
  return(new Array(length + 1)).join(string)
};
goog.string.padNumber = function(num, length, opt_precision) {
  var s = goog.isDef(opt_precision) ? num.toFixed(opt_precision) : String(num);
  var index = s.indexOf(".");
  if(index == -1) {
    index = s.length
  }
  return goog.string.repeat("0", Math.max(0, length - index)) + s
};
goog.string.makeSafe = function(obj) {
  return obj == null ? "" : String(obj)
};
goog.string.buildString = function(var_args) {
  return Array.prototype.join.call(arguments, "")
};
goog.string.getRandomString = function() {
  var x = 2147483648;
  return Math.floor(Math.random() * x).toString(36) + Math.abs(Math.floor(Math.random() * x) ^ goog.now()).toString(36)
};
goog.string.compareVersions = function(version1, version2) {
  var order = 0;
  var v1Subs = goog.string.trim(String(version1)).split(".");
  var v2Subs = goog.string.trim(String(version2)).split(".");
  var subCount = Math.max(v1Subs.length, v2Subs.length);
  for(var subIdx = 0;order == 0 && subIdx < subCount;subIdx++) {
    var v1Sub = v1Subs[subIdx] || "";
    var v2Sub = v2Subs[subIdx] || "";
    var v1CompParser = new RegExp("(\\d*)(\\D*)", "g");
    var v2CompParser = new RegExp("(\\d*)(\\D*)", "g");
    do {
      var v1Comp = v1CompParser.exec(v1Sub) || ["", "", ""];
      var v2Comp = v2CompParser.exec(v2Sub) || ["", "", ""];
      if(v1Comp[0].length == 0 && v2Comp[0].length == 0) {
        break
      }
      var v1CompNum = v1Comp[1].length == 0 ? 0 : parseInt(v1Comp[1], 10);
      var v2CompNum = v2Comp[1].length == 0 ? 0 : parseInt(v2Comp[1], 10);
      order = goog.string.compareElements_(v1CompNum, v2CompNum) || goog.string.compareElements_(v1Comp[2].length == 0, v2Comp[2].length == 0) || goog.string.compareElements_(v1Comp[2], v2Comp[2])
    }while(order == 0)
  }
  return order
};
goog.string.compareElements_ = function(left, right) {
  if(left < right) {
    return-1
  }else {
    if(left > right) {
      return 1
    }
  }
  return 0
};
goog.string.HASHCODE_MAX_ = 4294967296;
goog.string.hashCode = function(str) {
  var result = 0;
  for(var i = 0;i < str.length;++i) {
    result = 31 * result + str.charCodeAt(i);
    result %= goog.string.HASHCODE_MAX_
  }
  return result
};
goog.string.uniqueStringCounter_ = Math.random() * 2147483648 | 0;
goog.string.createUniqueString = function() {
  return"goog_" + goog.string.uniqueStringCounter_++
};
goog.string.toNumber = function(str) {
  var num = Number(str);
  if(num == 0 && goog.string.isEmpty(str)) {
    return NaN
  }
  return num
};
goog.string.toCamelCase = function(str) {
  return String(str).replace(/\-([a-z])/g, function(all, match) {
    return match.toUpperCase()
  })
};
goog.string.toSelectorCase = function(str) {
  return String(str).replace(/([A-Z])/g, "-$1").toLowerCase()
};
goog.string.toTitleCase = function(str, opt_delimiters) {
  var delimiters = goog.isString(opt_delimiters) ? goog.string.regExpEscape(opt_delimiters) : "\\s";
  delimiters = delimiters ? "|[" + delimiters + "]+" : "";
  var regexp = new RegExp("(^" + delimiters + ")([a-z])", "g");
  return str.replace(regexp, function(all, p1, p2) {
    return p1 + p2.toUpperCase()
  })
};
goog.string.parseInt = function(value) {
  if(isFinite(value)) {
    value = String(value)
  }
  if(goog.isString(value)) {
    return/^\s*-?0x/i.test(value) ? parseInt(value, 16) : parseInt(value, 10)
  }
  return NaN
};
goog.provide("goog.debug.Error");
goog.debug.Error = function(opt_msg) {
  if(Error.captureStackTrace) {
    Error.captureStackTrace(this, goog.debug.Error)
  }else {
    this.stack = (new Error).stack || ""
  }
  if(opt_msg) {
    this.message = String(opt_msg)
  }
};
goog.inherits(goog.debug.Error, Error);
goog.debug.Error.prototype.name = "CustomError";
goog.provide("goog.asserts");
goog.provide("goog.asserts.AssertionError");
goog.require("goog.debug.Error");
goog.require("goog.string");
goog.asserts.ENABLE_ASSERTS = goog.DEBUG;
goog.asserts.AssertionError = function(messagePattern, messageArgs) {
  messageArgs.unshift(messagePattern);
  goog.debug.Error.call(this, goog.string.subs.apply(null, messageArgs));
  messageArgs.shift();
  this.messagePattern = messagePattern
};
goog.inherits(goog.asserts.AssertionError, goog.debug.Error);
goog.asserts.AssertionError.prototype.name = "AssertionError";
goog.asserts.doAssertFailure_ = function(defaultMessage, defaultArgs, givenMessage, givenArgs) {
  var message = "Assertion failed";
  if(givenMessage) {
    message += ": " + givenMessage;
    var args = givenArgs
  }else {
    if(defaultMessage) {
      message += ": " + defaultMessage;
      args = defaultArgs
    }
  }
  throw new goog.asserts.AssertionError("" + message, args || []);
};
goog.asserts.assert = function(condition, opt_message, var_args) {
  if(goog.asserts.ENABLE_ASSERTS && !condition) {
    goog.asserts.doAssertFailure_("", null, opt_message, Array.prototype.slice.call(arguments, 2))
  }
  return condition
};
goog.asserts.fail = function(opt_message, var_args) {
  if(goog.asserts.ENABLE_ASSERTS) {
    throw new goog.asserts.AssertionError("Failure" + (opt_message ? ": " + opt_message : ""), Array.prototype.slice.call(arguments, 1));
  }
};
goog.asserts.assertNumber = function(value, opt_message, var_args) {
  if(goog.asserts.ENABLE_ASSERTS && !goog.isNumber(value)) {
    goog.asserts.doAssertFailure_("Expected number but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2))
  }
  return value
};
goog.asserts.assertString = function(value, opt_message, var_args) {
  if(goog.asserts.ENABLE_ASSERTS && !goog.isString(value)) {
    goog.asserts.doAssertFailure_("Expected string but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2))
  }
  return value
};
goog.asserts.assertFunction = function(value, opt_message, var_args) {
  if(goog.asserts.ENABLE_ASSERTS && !goog.isFunction(value)) {
    goog.asserts.doAssertFailure_("Expected function but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2))
  }
  return value
};
goog.asserts.assertObject = function(value, opt_message, var_args) {
  if(goog.asserts.ENABLE_ASSERTS && !goog.isObject(value)) {
    goog.asserts.doAssertFailure_("Expected object but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2))
  }
  return value
};
goog.asserts.assertArray = function(value, opt_message, var_args) {
  if(goog.asserts.ENABLE_ASSERTS && !goog.isArray(value)) {
    goog.asserts.doAssertFailure_("Expected array but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2))
  }
  return value
};
goog.asserts.assertBoolean = function(value, opt_message, var_args) {
  if(goog.asserts.ENABLE_ASSERTS && !goog.isBoolean(value)) {
    goog.asserts.doAssertFailure_("Expected boolean but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2))
  }
  return value
};
goog.asserts.assertInstanceof = function(value, type, opt_message, var_args) {
  if(goog.asserts.ENABLE_ASSERTS && !(value instanceof type)) {
    goog.asserts.doAssertFailure_("instanceof check failed.", null, opt_message, Array.prototype.slice.call(arguments, 3))
  }
  return value
};
goog.provide("goog.array");
goog.provide("goog.array.ArrayLike");
goog.require("goog.asserts");
goog.NATIVE_ARRAY_PROTOTYPES = goog.TRUSTED_SITE;
goog.array.ArrayLike;
goog.array.peek = function(array) {
  return array[array.length - 1]
};
goog.array.ARRAY_PROTOTYPE_ = Array.prototype;
goog.array.indexOf = goog.NATIVE_ARRAY_PROTOTYPES && goog.array.ARRAY_PROTOTYPE_.indexOf ? function(arr, obj, opt_fromIndex) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.indexOf.call(arr, obj, opt_fromIndex)
} : function(arr, obj, opt_fromIndex) {
  var fromIndex = opt_fromIndex == null ? 0 : opt_fromIndex < 0 ? Math.max(0, arr.length + opt_fromIndex) : opt_fromIndex;
  if(goog.isString(arr)) {
    if(!goog.isString(obj) || obj.length != 1) {
      return-1
    }
    return arr.indexOf(obj, fromIndex)
  }
  for(var i = fromIndex;i < arr.length;i++) {
    if(i in arr && arr[i] === obj) {
      return i
    }
  }
  return-1
};
goog.array.lastIndexOf = goog.NATIVE_ARRAY_PROTOTYPES && goog.array.ARRAY_PROTOTYPE_.lastIndexOf ? function(arr, obj, opt_fromIndex) {
  goog.asserts.assert(arr.length != null);
  var fromIndex = opt_fromIndex == null ? arr.length - 1 : opt_fromIndex;
  return goog.array.ARRAY_PROTOTYPE_.lastIndexOf.call(arr, obj, fromIndex)
} : function(arr, obj, opt_fromIndex) {
  var fromIndex = opt_fromIndex == null ? arr.length - 1 : opt_fromIndex;
  if(fromIndex < 0) {
    fromIndex = Math.max(0, arr.length + fromIndex)
  }
  if(goog.isString(arr)) {
    if(!goog.isString(obj) || obj.length != 1) {
      return-1
    }
    return arr.lastIndexOf(obj, fromIndex)
  }
  for(var i = fromIndex;i >= 0;i--) {
    if(i in arr && arr[i] === obj) {
      return i
    }
  }
  return-1
};
goog.array.forEach = goog.NATIVE_ARRAY_PROTOTYPES && goog.array.ARRAY_PROTOTYPE_.forEach ? function(arr, f, opt_obj) {
  goog.asserts.assert(arr.length != null);
  goog.array.ARRAY_PROTOTYPE_.forEach.call(arr, f, opt_obj)
} : function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for(var i = 0;i < l;i++) {
    if(i in arr2) {
      f.call(opt_obj, arr2[i], i, arr)
    }
  }
};
goog.array.forEachRight = function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for(var i = l - 1;i >= 0;--i) {
    if(i in arr2) {
      f.call(opt_obj, arr2[i], i, arr)
    }
  }
};
goog.array.filter = goog.NATIVE_ARRAY_PROTOTYPES && goog.array.ARRAY_PROTOTYPE_.filter ? function(arr, f, opt_obj) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.filter.call(arr, f, opt_obj)
} : function(arr, f, opt_obj) {
  var l = arr.length;
  var res = [];
  var resLength = 0;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for(var i = 0;i < l;i++) {
    if(i in arr2) {
      var val = arr2[i];
      if(f.call(opt_obj, val, i, arr)) {
        res[resLength++] = val
      }
    }
  }
  return res
};
goog.array.map = goog.NATIVE_ARRAY_PROTOTYPES && goog.array.ARRAY_PROTOTYPE_.map ? function(arr, f, opt_obj) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.map.call(arr, f, opt_obj)
} : function(arr, f, opt_obj) {
  var l = arr.length;
  var res = new Array(l);
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for(var i = 0;i < l;i++) {
    if(i in arr2) {
      res[i] = f.call(opt_obj, arr2[i], i, arr)
    }
  }
  return res
};
goog.array.reduce = function(arr, f, val, opt_obj) {
  if(arr.reduce) {
    if(opt_obj) {
      return arr.reduce(goog.bind(f, opt_obj), val)
    }else {
      return arr.reduce(f, val)
    }
  }
  var rval = val;
  goog.array.forEach(arr, function(val, index) {
    rval = f.call(opt_obj, rval, val, index, arr)
  });
  return rval
};
goog.array.reduceRight = function(arr, f, val, opt_obj) {
  if(arr.reduceRight) {
    if(opt_obj) {
      return arr.reduceRight(goog.bind(f, opt_obj), val)
    }else {
      return arr.reduceRight(f, val)
    }
  }
  var rval = val;
  goog.array.forEachRight(arr, function(val, index) {
    rval = f.call(opt_obj, rval, val, index, arr)
  });
  return rval
};
goog.array.some = goog.NATIVE_ARRAY_PROTOTYPES && goog.array.ARRAY_PROTOTYPE_.some ? function(arr, f, opt_obj) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.some.call(arr, f, opt_obj)
} : function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for(var i = 0;i < l;i++) {
    if(i in arr2 && f.call(opt_obj, arr2[i], i, arr)) {
      return true
    }
  }
  return false
};
goog.array.every = goog.NATIVE_ARRAY_PROTOTYPES && goog.array.ARRAY_PROTOTYPE_.every ? function(arr, f, opt_obj) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.every.call(arr, f, opt_obj)
} : function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for(var i = 0;i < l;i++) {
    if(i in arr2 && !f.call(opt_obj, arr2[i], i, arr)) {
      return false
    }
  }
  return true
};
goog.array.count = function(arr, f, opt_obj) {
  var count = 0;
  goog.array.forEach(arr, function(element, index, arr) {
    if(f.call(opt_obj, element, index, arr)) {
      ++count
    }
  }, opt_obj);
  return count
};
goog.array.find = function(arr, f, opt_obj) {
  var i = goog.array.findIndex(arr, f, opt_obj);
  return i < 0 ? null : goog.isString(arr) ? arr.charAt(i) : arr[i]
};
goog.array.findIndex = function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for(var i = 0;i < l;i++) {
    if(i in arr2 && f.call(opt_obj, arr2[i], i, arr)) {
      return i
    }
  }
  return-1
};
goog.array.findRight = function(arr, f, opt_obj) {
  var i = goog.array.findIndexRight(arr, f, opt_obj);
  return i < 0 ? null : goog.isString(arr) ? arr.charAt(i) : arr[i]
};
goog.array.findIndexRight = function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for(var i = l - 1;i >= 0;i--) {
    if(i in arr2 && f.call(opt_obj, arr2[i], i, arr)) {
      return i
    }
  }
  return-1
};
goog.array.contains = function(arr, obj) {
  return goog.array.indexOf(arr, obj) >= 0
};
goog.array.isEmpty = function(arr) {
  return arr.length == 0
};
goog.array.clear = function(arr) {
  if(!goog.isArray(arr)) {
    for(var i = arr.length - 1;i >= 0;i--) {
      delete arr[i]
    }
  }
  arr.length = 0
};
goog.array.insert = function(arr, obj) {
  if(!goog.array.contains(arr, obj)) {
    arr.push(obj)
  }
};
goog.array.insertAt = function(arr, obj, opt_i) {
  goog.array.splice(arr, opt_i, 0, obj)
};
goog.array.insertArrayAt = function(arr, elementsToAdd, opt_i) {
  goog.partial(goog.array.splice, arr, opt_i, 0).apply(null, elementsToAdd)
};
goog.array.insertBefore = function(arr, obj, opt_obj2) {
  var i;
  if(arguments.length == 2 || (i = goog.array.indexOf(arr, opt_obj2)) < 0) {
    arr.push(obj)
  }else {
    goog.array.insertAt(arr, obj, i)
  }
};
goog.array.remove = function(arr, obj) {
  var i = goog.array.indexOf(arr, obj);
  var rv;
  if(rv = i >= 0) {
    goog.array.removeAt(arr, i)
  }
  return rv
};
goog.array.removeAt = function(arr, i) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.splice.call(arr, i, 1).length == 1
};
goog.array.removeIf = function(arr, f, opt_obj) {
  var i = goog.array.findIndex(arr, f, opt_obj);
  if(i >= 0) {
    goog.array.removeAt(arr, i);
    return true
  }
  return false
};
goog.array.concat = function(var_args) {
  return goog.array.ARRAY_PROTOTYPE_.concat.apply(goog.array.ARRAY_PROTOTYPE_, arguments)
};
goog.array.toArray = function(object) {
  var length = object.length;
  if(length > 0) {
    var rv = new Array(length);
    for(var i = 0;i < length;i++) {
      rv[i] = object[i]
    }
    return rv
  }
  return[]
};
goog.array.clone = goog.array.toArray;
goog.array.extend = function(arr1, var_args) {
  for(var i = 1;i < arguments.length;i++) {
    var arr2 = arguments[i];
    var isArrayLike;
    if(goog.isArray(arr2) || (isArrayLike = goog.isArrayLike(arr2)) && Object.prototype.hasOwnProperty.call(arr2, "callee")) {
      arr1.push.apply(arr1, arr2)
    }else {
      if(isArrayLike) {
        var len1 = arr1.length;
        var len2 = arr2.length;
        for(var j = 0;j < len2;j++) {
          arr1[len1 + j] = arr2[j]
        }
      }else {
        arr1.push(arr2)
      }
    }
  }
};
goog.array.splice = function(arr, index, howMany, var_args) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.splice.apply(arr, goog.array.slice(arguments, 1))
};
goog.array.slice = function(arr, start, opt_end) {
  goog.asserts.assert(arr.length != null);
  if(arguments.length <= 2) {
    return goog.array.ARRAY_PROTOTYPE_.slice.call(arr, start)
  }else {
    return goog.array.ARRAY_PROTOTYPE_.slice.call(arr, start, opt_end)
  }
};
goog.array.removeDuplicates = function(arr, opt_rv) {
  var returnArray = opt_rv || arr;
  var seen = {}, cursorInsert = 0, cursorRead = 0;
  while(cursorRead < arr.length) {
    var current = arr[cursorRead++];
    var key = goog.isObject(current) ? "o" + goog.getUid(current) : (typeof current).charAt(0) + current;
    if(!Object.prototype.hasOwnProperty.call(seen, key)) {
      seen[key] = true;
      returnArray[cursorInsert++] = current
    }
  }
  returnArray.length = cursorInsert
};
goog.array.binarySearch = function(arr, target, opt_compareFn) {
  return goog.array.binarySearch_(arr, opt_compareFn || goog.array.defaultCompare, false, target)
};
goog.array.binarySelect = function(arr, evaluator, opt_obj) {
  return goog.array.binarySearch_(arr, evaluator, true, undefined, opt_obj)
};
goog.array.binarySearch_ = function(arr, compareFn, isEvaluator, opt_target, opt_selfObj) {
  var left = 0;
  var right = arr.length;
  var found;
  while(left < right) {
    var middle = left + right >> 1;
    var compareResult;
    if(isEvaluator) {
      compareResult = compareFn.call(opt_selfObj, arr[middle], middle, arr)
    }else {
      compareResult = compareFn(opt_target, arr[middle])
    }
    if(compareResult > 0) {
      left = middle + 1
    }else {
      right = middle;
      found = !compareResult
    }
  }
  return found ? left : ~left
};
goog.array.sort = function(arr, opt_compareFn) {
  goog.asserts.assert(arr.length != null);
  goog.array.ARRAY_PROTOTYPE_.sort.call(arr, opt_compareFn || goog.array.defaultCompare)
};
goog.array.stableSort = function(arr, opt_compareFn) {
  for(var i = 0;i < arr.length;i++) {
    arr[i] = {index:i, value:arr[i]}
  }
  var valueCompareFn = opt_compareFn || goog.array.defaultCompare;
  function stableCompareFn(obj1, obj2) {
    return valueCompareFn(obj1.value, obj2.value) || obj1.index - obj2.index
  }
  goog.array.sort(arr, stableCompareFn);
  for(var i = 0;i < arr.length;i++) {
    arr[i] = arr[i].value
  }
};
goog.array.sortObjectsByKey = function(arr, key, opt_compareFn) {
  var compare = opt_compareFn || goog.array.defaultCompare;
  goog.array.sort(arr, function(a, b) {
    return compare(a[key], b[key])
  })
};
goog.array.isSorted = function(arr, opt_compareFn, opt_strict) {
  var compare = opt_compareFn || goog.array.defaultCompare;
  for(var i = 1;i < arr.length;i++) {
    var compareResult = compare(arr[i - 1], arr[i]);
    if(compareResult > 0 || compareResult == 0 && opt_strict) {
      return false
    }
  }
  return true
};
goog.array.equals = function(arr1, arr2, opt_equalsFn) {
  if(!goog.isArrayLike(arr1) || !goog.isArrayLike(arr2) || arr1.length != arr2.length) {
    return false
  }
  var l = arr1.length;
  var equalsFn = opt_equalsFn || goog.array.defaultCompareEquality;
  for(var i = 0;i < l;i++) {
    if(!equalsFn(arr1[i], arr2[i])) {
      return false
    }
  }
  return true
};
goog.array.compare = function(arr1, arr2, opt_equalsFn) {
  return goog.array.equals(arr1, arr2, opt_equalsFn)
};
goog.array.compare3 = function(arr1, arr2, opt_compareFn) {
  var compare = opt_compareFn || goog.array.defaultCompare;
  var l = Math.min(arr1.length, arr2.length);
  for(var i = 0;i < l;i++) {
    var result = compare(arr1[i], arr2[i]);
    if(result != 0) {
      return result
    }
  }
  return goog.array.defaultCompare(arr1.length, arr2.length)
};
goog.array.defaultCompare = function(a, b) {
  return a > b ? 1 : a < b ? -1 : 0
};
goog.array.defaultCompareEquality = function(a, b) {
  return a === b
};
goog.array.binaryInsert = function(array, value, opt_compareFn) {
  var index = goog.array.binarySearch(array, value, opt_compareFn);
  if(index < 0) {
    goog.array.insertAt(array, value, -(index + 1));
    return true
  }
  return false
};
goog.array.binaryRemove = function(array, value, opt_compareFn) {
  var index = goog.array.binarySearch(array, value, opt_compareFn);
  return index >= 0 ? goog.array.removeAt(array, index) : false
};
goog.array.bucket = function(array, sorter) {
  var buckets = {};
  for(var i = 0;i < array.length;i++) {
    var value = array[i];
    var key = sorter(value, i, array);
    if(goog.isDef(key)) {
      var bucket = buckets[key] || (buckets[key] = []);
      bucket.push(value)
    }
  }
  return buckets
};
goog.array.toObject = function(arr, keyFunc, opt_obj) {
  var ret = {};
  goog.array.forEach(arr, function(element, index) {
    ret[keyFunc.call(opt_obj, element, index, arr)] = element
  });
  return ret
};
goog.array.range = function(startOrEnd, opt_end, opt_step) {
  var array = [];
  var start = 0;
  var end = startOrEnd;
  var step = opt_step || 1;
  if(opt_end !== undefined) {
    start = startOrEnd;
    end = opt_end
  }
  if(step * (end - start) < 0) {
    return[]
  }
  if(step > 0) {
    for(var i = start;i < end;i += step) {
      array.push(i)
    }
  }else {
    for(var i = start;i > end;i += step) {
      array.push(i)
    }
  }
  return array
};
goog.array.repeat = function(value, n) {
  var array = [];
  for(var i = 0;i < n;i++) {
    array[i] = value
  }
  return array
};
goog.array.flatten = function(var_args) {
  var result = [];
  for(var i = 0;i < arguments.length;i++) {
    var element = arguments[i];
    if(goog.isArray(element)) {
      result.push.apply(result, goog.array.flatten.apply(null, element))
    }else {
      result.push(element)
    }
  }
  return result
};
goog.array.rotate = function(array, n) {
  goog.asserts.assert(array.length != null);
  if(array.length) {
    n %= array.length;
    if(n > 0) {
      goog.array.ARRAY_PROTOTYPE_.unshift.apply(array, array.splice(-n, n))
    }else {
      if(n < 0) {
        goog.array.ARRAY_PROTOTYPE_.push.apply(array, array.splice(0, -n))
      }
    }
  }
  return array
};
goog.array.zip = function(var_args) {
  if(!arguments.length) {
    return[]
  }
  var result = [];
  for(var i = 0;true;i++) {
    var value = [];
    for(var j = 0;j < arguments.length;j++) {
      var arr = arguments[j];
      if(i >= arr.length) {
        return result
      }
      value.push(arr[i])
    }
    result.push(value)
  }
};
goog.array.shuffle = function(arr, opt_randFn) {
  var randFn = opt_randFn || Math.random;
  for(var i = arr.length - 1;i > 0;i--) {
    var j = Math.floor(randFn() * (i + 1));
    var tmp = arr[i];
    arr[i] = arr[j];
    arr[j] = tmp
  }
};
goog.provide("goog.object");
goog.object.forEach = function(obj, f, opt_obj) {
  for(var key in obj) {
    f.call(opt_obj, obj[key], key, obj)
  }
};
goog.object.filter = function(obj, f, opt_obj) {
  var res = {};
  for(var key in obj) {
    if(f.call(opt_obj, obj[key], key, obj)) {
      res[key] = obj[key]
    }
  }
  return res
};
goog.object.map = function(obj, f, opt_obj) {
  var res = {};
  for(var key in obj) {
    res[key] = f.call(opt_obj, obj[key], key, obj)
  }
  return res
};
goog.object.some = function(obj, f, opt_obj) {
  for(var key in obj) {
    if(f.call(opt_obj, obj[key], key, obj)) {
      return true
    }
  }
  return false
};
goog.object.every = function(obj, f, opt_obj) {
  for(var key in obj) {
    if(!f.call(opt_obj, obj[key], key, obj)) {
      return false
    }
  }
  return true
};
goog.object.getCount = function(obj) {
  var rv = 0;
  for(var key in obj) {
    rv++
  }
  return rv
};
goog.object.getAnyKey = function(obj) {
  for(var key in obj) {
    return key
  }
};
goog.object.getAnyValue = function(obj) {
  for(var key in obj) {
    return obj[key]
  }
};
goog.object.contains = function(obj, val) {
  return goog.object.containsValue(obj, val)
};
goog.object.getValues = function(obj) {
  var res = [];
  var i = 0;
  for(var key in obj) {
    res[i++] = obj[key]
  }
  return res
};
goog.object.getKeys = function(obj) {
  var res = [];
  var i = 0;
  for(var key in obj) {
    res[i++] = key
  }
  return res
};
goog.object.getValueByKeys = function(obj, var_args) {
  var isArrayLike = goog.isArrayLike(var_args);
  var keys = isArrayLike ? var_args : arguments;
  for(var i = isArrayLike ? 0 : 1;i < keys.length;i++) {
    obj = obj[keys[i]];
    if(!goog.isDef(obj)) {
      break
    }
  }
  return obj
};
goog.object.containsKey = function(obj, key) {
  return key in obj
};
goog.object.containsValue = function(obj, val) {
  for(var key in obj) {
    if(obj[key] == val) {
      return true
    }
  }
  return false
};
goog.object.findKey = function(obj, f, opt_this) {
  for(var key in obj) {
    if(f.call(opt_this, obj[key], key, obj)) {
      return key
    }
  }
  return undefined
};
goog.object.findValue = function(obj, f, opt_this) {
  var key = goog.object.findKey(obj, f, opt_this);
  return key && obj[key]
};
goog.object.isEmpty = function(obj) {
  for(var key in obj) {
    return false
  }
  return true
};
goog.object.clear = function(obj) {
  for(var i in obj) {
    delete obj[i]
  }
};
goog.object.remove = function(obj, key) {
  var rv;
  if(rv = key in obj) {
    delete obj[key]
  }
  return rv
};
goog.object.add = function(obj, key, val) {
  if(key in obj) {
    throw Error('The object already contains the key "' + key + '"');
  }
  goog.object.set(obj, key, val)
};
goog.object.get = function(obj, key, opt_val) {
  if(key in obj) {
    return obj[key]
  }
  return opt_val
};
goog.object.set = function(obj, key, value) {
  obj[key] = value
};
goog.object.setIfUndefined = function(obj, key, value) {
  return key in obj ? obj[key] : obj[key] = value
};
goog.object.clone = function(obj) {
  var res = {};
  for(var key in obj) {
    res[key] = obj[key]
  }
  return res
};
goog.object.unsafeClone = function(obj) {
  var type = goog.typeOf(obj);
  if(type == "object" || type == "array") {
    if(obj.clone) {
      return obj.clone()
    }
    var clone = type == "array" ? [] : {};
    for(var key in obj) {
      clone[key] = goog.object.unsafeClone(obj[key])
    }
    return clone
  }
  return obj
};
goog.object.transpose = function(obj) {
  var transposed = {};
  for(var key in obj) {
    transposed[obj[key]] = key
  }
  return transposed
};
goog.object.PROTOTYPE_FIELDS_ = ["constructor", "hasOwnProperty", "isPrototypeOf", "propertyIsEnumerable", "toLocaleString", "toString", "valueOf"];
goog.object.extend = function(target, var_args) {
  var key, source;
  for(var i = 1;i < arguments.length;i++) {
    source = arguments[i];
    for(key in source) {
      target[key] = source[key]
    }
    for(var j = 0;j < goog.object.PROTOTYPE_FIELDS_.length;j++) {
      key = goog.object.PROTOTYPE_FIELDS_[j];
      if(Object.prototype.hasOwnProperty.call(source, key)) {
        target[key] = source[key]
      }
    }
  }
};
goog.object.create = function(var_args) {
  var argLength = arguments.length;
  if(argLength == 1 && goog.isArray(arguments[0])) {
    return goog.object.create.apply(null, arguments[0])
  }
  if(argLength % 2) {
    throw Error("Uneven number of arguments");
  }
  var rv = {};
  for(var i = 0;i < argLength;i += 2) {
    rv[arguments[i]] = arguments[i + 1]
  }
  return rv
};
goog.object.createSet = function(var_args) {
  var argLength = arguments.length;
  if(argLength == 1 && goog.isArray(arguments[0])) {
    return goog.object.createSet.apply(null, arguments[0])
  }
  var rv = {};
  for(var i = 0;i < argLength;i++) {
    rv[arguments[i]] = true
  }
  return rv
};
goog.object.createImmutableView = function(obj) {
  var result = obj;
  if(Object.isFrozen && !Object.isFrozen(obj)) {
    result = Object.create(obj);
    Object.freeze(result)
  }
  return result
};
goog.object.isImmutableView = function(obj) {
  return!!Object.isFrozen && Object.isFrozen(obj)
};
goog.provide("goog.string.StringBuffer");
goog.string.StringBuffer = function(opt_a1, var_args) {
  if(opt_a1 != null) {
    this.append.apply(this, arguments)
  }
};
goog.string.StringBuffer.prototype.buffer_ = "";
goog.string.StringBuffer.prototype.set = function(s) {
  this.buffer_ = "" + s
};
goog.string.StringBuffer.prototype.append = function(a1, opt_a2, var_args) {
  this.buffer_ += a1;
  if(opt_a2 != null) {
    for(var i = 1;i < arguments.length;i++) {
      this.buffer_ += arguments[i]
    }
  }
  return this
};
goog.string.StringBuffer.prototype.clear = function() {
  this.buffer_ = ""
};
goog.string.StringBuffer.prototype.getLength = function() {
  return this.buffer_.length
};
goog.string.StringBuffer.prototype.toString = function() {
  return this.buffer_
};
goog.provide("cljs.core");
goog.require("goog.array");
goog.require("goog.array");
goog.require("goog.object");
goog.require("goog.object");
goog.require("goog.string.StringBuffer");
goog.require("goog.string.StringBuffer");
goog.require("goog.string");
goog.require("goog.string");
cljs.core._STAR_clojurescript_version_STAR_ = "0.0-2080";
cljs.core._STAR_unchecked_if_STAR_ = false;
cljs.core._STAR_print_fn_STAR_ = function _STAR_print_fn_STAR_(_) {
  throw new Error("No *print-fn* fn set for evaluation environment");
};
cljs.core.set_print_fn_BANG_ = function set_print_fn_BANG_(f) {
  return cljs.core._STAR_print_fn_STAR_ = f
};
cljs.core._STAR_flush_on_newline_STAR_ = true;
cljs.core._STAR_print_newline_STAR_ = true;
cljs.core._STAR_print_readably_STAR_ = true;
cljs.core._STAR_print_meta_STAR_ = false;
cljs.core._STAR_print_dup_STAR_ = false;
cljs.core._STAR_print_length_STAR_ = null;
cljs.core.pr_opts = function pr_opts() {
  return new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "flush-on-newline", "flush-on-newline", 4338025857), cljs.core._STAR_flush_on_newline_STAR_, new cljs.core.Keyword(null, "readably", "readably", 4441712502), cljs.core._STAR_print_readably_STAR_, new cljs.core.Keyword(null, "meta", "meta", 1017252215), cljs.core._STAR_print_meta_STAR_, new cljs.core.Keyword(null, "dup", "dup", 1014004081), cljs.core._STAR_print_dup_STAR_, new cljs.core.Keyword(null, "print-length", "print-length", 
  3960797560), cljs.core._STAR_print_length_STAR_], null)
};
cljs.core.enable_console_print_BANG_ = function enable_console_print_BANG_() {
  cljs.core._STAR_print_newline_STAR_ = false;
  return cljs.core._STAR_print_fn_STAR_ = function() {
    var G__425044__delegate = function(args) {
      return console.log.apply(console, cljs.core.into_array.call(null, args))
    };
    var G__425044 = function(var_args) {
      var args = null;
      if(arguments.length > 0) {
        args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
      }
      return G__425044__delegate.call(this, args)
    };
    G__425044.cljs$lang$maxFixedArity = 0;
    G__425044.cljs$lang$applyTo = function(arglist__425045) {
      var args = cljs.core.seq(arglist__425045);
      return G__425044__delegate(args)
    };
    G__425044.cljs$core$IFn$_invoke$arity$variadic = G__425044__delegate;
    return G__425044
  }()
};
cljs.core.truth_ = function truth_(x) {
  return x != null && x !== false
};
cljs.core.not_native = null;
cljs.core.identical_QMARK_ = function identical_QMARK_(x, y) {
  return x === y
};
cljs.core.nil_QMARK_ = function nil_QMARK_(x) {
  return x == null
};
cljs.core.array_QMARK_ = function array_QMARK_(x) {
  return x instanceof Array
};
cljs.core.number_QMARK_ = function number_QMARK_(n) {
  return typeof n === "number"
};
cljs.core.not = function not(x) {
  if(cljs.core.truth_(x)) {
    return false
  }else {
    return true
  }
};
cljs.core.string_QMARK_ = function string_QMARK_(x) {
  return goog.isString(x)
};
cljs.core.native_satisfies_QMARK_ = function native_satisfies_QMARK_(p, x) {
  var x__$1 = x == null ? null : x;
  if(p[goog.typeOf(x__$1)]) {
    return true
  }else {
    if(p["_"]) {
      return true
    }else {
      if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        return false
      }else {
        return null
      }
    }
  }
};
cljs.core.is_proto_ = function is_proto_(x) {
  return x.constructor.prototype === x
};
cljs.core._STAR_main_cli_fn_STAR_ = null;
cljs.core.type = function type(x) {
  if(x == null) {
    return null
  }else {
    return x.constructor
  }
};
cljs.core.missing_protocol = function missing_protocol(proto, obj) {
  var ty = cljs.core.type.call(null, obj);
  var ty__$1 = cljs.core.truth_(function() {
    var and__3273__auto__ = ty;
    if(cljs.core.truth_(and__3273__auto__)) {
      return ty.cljs$lang$type
    }else {
      return and__3273__auto__
    }
  }()) ? ty.cljs$lang$ctorStr : goog.typeOf(obj);
  return new Error(["No protocol method ", proto, " defined for type ", ty__$1, ": ", obj].join(""))
};
cljs.core.type__GT_str = function type__GT_str(ty) {
  var temp__4090__auto__ = ty.cljs$lang$ctorStr;
  if(cljs.core.truth_(temp__4090__auto__)) {
    var s = temp__4090__auto__;
    return s
  }else {
    return[cljs.core.str(ty)].join("")
  }
};
cljs.core.make_array = function() {
  var make_array = null;
  var make_array__1 = function(size) {
    return new Array(size)
  };
  var make_array__2 = function(type, size) {
    return make_array.call(null, size)
  };
  make_array = function(type, size) {
    switch(arguments.length) {
      case 1:
        return make_array__1.call(this, type);
      case 2:
        return make_array__2.call(this, type, size)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  make_array.cljs$core$IFn$_invoke$arity$1 = make_array__1;
  make_array.cljs$core$IFn$_invoke$arity$2 = make_array__2;
  return make_array
}();
cljs.core.aclone = function aclone(arr) {
  var len = arr.length;
  var new_arr = new Array(len);
  var n__4108__auto___425046 = len;
  var i_425047 = 0;
  while(true) {
    if(i_425047 < n__4108__auto___425046) {
      new_arr[i_425047] = arr[i_425047];
      var G__425048 = i_425047 + 1;
      i_425047 = G__425048;
      continue
    }else {
    }
    break
  }
  return new_arr
};
cljs.core.array = function array(var_args) {
  return Array.prototype.slice.call(arguments)
};
cljs.core.aget = function() {
  var aget = null;
  var aget__2 = function(array, i) {
    return array[i]
  };
  var aget__3 = function() {
    var G__425049__delegate = function(array, i, idxs) {
      return cljs.core.apply.call(null, aget, aget.call(null, array, i), idxs)
    };
    var G__425049 = function(array, i, var_args) {
      var idxs = null;
      if(arguments.length > 2) {
        idxs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__425049__delegate.call(this, array, i, idxs)
    };
    G__425049.cljs$lang$maxFixedArity = 2;
    G__425049.cljs$lang$applyTo = function(arglist__425050) {
      var array = cljs.core.first(arglist__425050);
      arglist__425050 = cljs.core.next(arglist__425050);
      var i = cljs.core.first(arglist__425050);
      var idxs = cljs.core.rest(arglist__425050);
      return G__425049__delegate(array, i, idxs)
    };
    G__425049.cljs$core$IFn$_invoke$arity$variadic = G__425049__delegate;
    return G__425049
  }();
  aget = function(array, i, var_args) {
    var idxs = var_args;
    switch(arguments.length) {
      case 2:
        return aget__2.call(this, array, i);
      default:
        return aget__3.cljs$core$IFn$_invoke$arity$variadic(array, i, cljs.core.array_seq(arguments, 2))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  aget.cljs$lang$maxFixedArity = 2;
  aget.cljs$lang$applyTo = aget__3.cljs$lang$applyTo;
  aget.cljs$core$IFn$_invoke$arity$2 = aget__2;
  aget.cljs$core$IFn$_invoke$arity$variadic = aget__3.cljs$core$IFn$_invoke$arity$variadic;
  return aget
}();
cljs.core.aset = function() {
  var aset = null;
  var aset__3 = function(array, i, val) {
    return array[i] = val
  };
  var aset__4 = function() {
    var G__425051__delegate = function(array, idx, idx2, idxv) {
      return cljs.core.apply.call(null, aset, array[idx], idx2, idxv)
    };
    var G__425051 = function(array, idx, idx2, var_args) {
      var idxv = null;
      if(arguments.length > 3) {
        idxv = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
      }
      return G__425051__delegate.call(this, array, idx, idx2, idxv)
    };
    G__425051.cljs$lang$maxFixedArity = 3;
    G__425051.cljs$lang$applyTo = function(arglist__425052) {
      var array = cljs.core.first(arglist__425052);
      arglist__425052 = cljs.core.next(arglist__425052);
      var idx = cljs.core.first(arglist__425052);
      arglist__425052 = cljs.core.next(arglist__425052);
      var idx2 = cljs.core.first(arglist__425052);
      var idxv = cljs.core.rest(arglist__425052);
      return G__425051__delegate(array, idx, idx2, idxv)
    };
    G__425051.cljs$core$IFn$_invoke$arity$variadic = G__425051__delegate;
    return G__425051
  }();
  aset = function(array, idx, idx2, var_args) {
    var idxv = var_args;
    switch(arguments.length) {
      case 3:
        return aset__3.call(this, array, idx, idx2);
      default:
        return aset__4.cljs$core$IFn$_invoke$arity$variadic(array, idx, idx2, cljs.core.array_seq(arguments, 3))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  aset.cljs$lang$maxFixedArity = 3;
  aset.cljs$lang$applyTo = aset__4.cljs$lang$applyTo;
  aset.cljs$core$IFn$_invoke$arity$3 = aset__3;
  aset.cljs$core$IFn$_invoke$arity$variadic = aset__4.cljs$core$IFn$_invoke$arity$variadic;
  return aset
}();
cljs.core.alength = function alength(array) {
  return array.length
};
cljs.core.into_array = function() {
  var into_array = null;
  var into_array__1 = function(aseq) {
    return into_array.call(null, null, aseq)
  };
  var into_array__2 = function(type, aseq) {
    return cljs.core.reduce.call(null, function(a, x) {
      a.push(x);
      return a
    }, [], aseq)
  };
  into_array = function(type, aseq) {
    switch(arguments.length) {
      case 1:
        return into_array__1.call(this, type);
      case 2:
        return into_array__2.call(this, type, aseq)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  into_array.cljs$core$IFn$_invoke$arity$1 = into_array__1;
  into_array.cljs$core$IFn$_invoke$arity$2 = into_array__2;
  return into_array
}();
cljs.core.Fn = function() {
  var obj425054 = {};
  return obj425054
}();
cljs.core.IFn = function() {
  var obj425056 = {};
  return obj425056
}();
cljs.core._invoke = function() {
  var _invoke = null;
  var _invoke__1 = function(this$) {
    if(function() {
      var and__3273__auto__ = this$;
      if(and__3273__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$1
      }else {
        return and__3273__auto__
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$1(this$)
    }else {
      var x__3888__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3285__auto__ = cljs.core._invoke[goog.typeOf(x__3888__auto__)];
        if(or__3285__auto__) {
          return or__3285__auto__
        }else {
          var or__3285__auto____$1 = cljs.core._invoke["_"];
          if(or__3285__auto____$1) {
            return or__3285__auto____$1
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$)
    }
  };
  var _invoke__2 = function(this$, a) {
    if(function() {
      var and__3273__auto__ = this$;
      if(and__3273__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$2
      }else {
        return and__3273__auto__
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$2(this$, a)
    }else {
      var x__3888__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3285__auto__ = cljs.core._invoke[goog.typeOf(x__3888__auto__)];
        if(or__3285__auto__) {
          return or__3285__auto__
        }else {
          var or__3285__auto____$1 = cljs.core._invoke["_"];
          if(or__3285__auto____$1) {
            return or__3285__auto____$1
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a)
    }
  };
  var _invoke__3 = function(this$, a, b) {
    if(function() {
      var and__3273__auto__ = this$;
      if(and__3273__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$3
      }else {
        return and__3273__auto__
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$3(this$, a, b)
    }else {
      var x__3888__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3285__auto__ = cljs.core._invoke[goog.typeOf(x__3888__auto__)];
        if(or__3285__auto__) {
          return or__3285__auto__
        }else {
          var or__3285__auto____$1 = cljs.core._invoke["_"];
          if(or__3285__auto____$1) {
            return or__3285__auto____$1
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b)
    }
  };
  var _invoke__4 = function(this$, a, b, c) {
    if(function() {
      var and__3273__auto__ = this$;
      if(and__3273__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$4
      }else {
        return and__3273__auto__
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$4(this$, a, b, c)
    }else {
      var x__3888__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3285__auto__ = cljs.core._invoke[goog.typeOf(x__3888__auto__)];
        if(or__3285__auto__) {
          return or__3285__auto__
        }else {
          var or__3285__auto____$1 = cljs.core._invoke["_"];
          if(or__3285__auto____$1) {
            return or__3285__auto____$1
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c)
    }
  };
  var _invoke__5 = function(this$, a, b, c, d) {
    if(function() {
      var and__3273__auto__ = this$;
      if(and__3273__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$5
      }else {
        return and__3273__auto__
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$5(this$, a, b, c, d)
    }else {
      var x__3888__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3285__auto__ = cljs.core._invoke[goog.typeOf(x__3888__auto__)];
        if(or__3285__auto__) {
          return or__3285__auto__
        }else {
          var or__3285__auto____$1 = cljs.core._invoke["_"];
          if(or__3285__auto____$1) {
            return or__3285__auto____$1
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d)
    }
  };
  var _invoke__6 = function(this$, a, b, c, d, e) {
    if(function() {
      var and__3273__auto__ = this$;
      if(and__3273__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$6
      }else {
        return and__3273__auto__
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$6(this$, a, b, c, d, e)
    }else {
      var x__3888__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3285__auto__ = cljs.core._invoke[goog.typeOf(x__3888__auto__)];
        if(or__3285__auto__) {
          return or__3285__auto__
        }else {
          var or__3285__auto____$1 = cljs.core._invoke["_"];
          if(or__3285__auto____$1) {
            return or__3285__auto____$1
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e)
    }
  };
  var _invoke__7 = function(this$, a, b, c, d, e, f) {
    if(function() {
      var and__3273__auto__ = this$;
      if(and__3273__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$7
      }else {
        return and__3273__auto__
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$7(this$, a, b, c, d, e, f)
    }else {
      var x__3888__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3285__auto__ = cljs.core._invoke[goog.typeOf(x__3888__auto__)];
        if(or__3285__auto__) {
          return or__3285__auto__
        }else {
          var or__3285__auto____$1 = cljs.core._invoke["_"];
          if(or__3285__auto____$1) {
            return or__3285__auto____$1
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f)
    }
  };
  var _invoke__8 = function(this$, a, b, c, d, e, f, g) {
    if(function() {
      var and__3273__auto__ = this$;
      if(and__3273__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$8
      }else {
        return and__3273__auto__
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$8(this$, a, b, c, d, e, f, g)
    }else {
      var x__3888__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3285__auto__ = cljs.core._invoke[goog.typeOf(x__3888__auto__)];
        if(or__3285__auto__) {
          return or__3285__auto__
        }else {
          var or__3285__auto____$1 = cljs.core._invoke["_"];
          if(or__3285__auto____$1) {
            return or__3285__auto____$1
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g)
    }
  };
  var _invoke__9 = function(this$, a, b, c, d, e, f, g, h) {
    if(function() {
      var and__3273__auto__ = this$;
      if(and__3273__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$9
      }else {
        return and__3273__auto__
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$9(this$, a, b, c, d, e, f, g, h)
    }else {
      var x__3888__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3285__auto__ = cljs.core._invoke[goog.typeOf(x__3888__auto__)];
        if(or__3285__auto__) {
          return or__3285__auto__
        }else {
          var or__3285__auto____$1 = cljs.core._invoke["_"];
          if(or__3285__auto____$1) {
            return or__3285__auto____$1
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h)
    }
  };
  var _invoke__10 = function(this$, a, b, c, d, e, f, g, h, i) {
    if(function() {
      var and__3273__auto__ = this$;
      if(and__3273__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$10
      }else {
        return and__3273__auto__
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$10(this$, a, b, c, d, e, f, g, h, i)
    }else {
      var x__3888__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3285__auto__ = cljs.core._invoke[goog.typeOf(x__3888__auto__)];
        if(or__3285__auto__) {
          return or__3285__auto__
        }else {
          var or__3285__auto____$1 = cljs.core._invoke["_"];
          if(or__3285__auto____$1) {
            return or__3285__auto____$1
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i)
    }
  };
  var _invoke__11 = function(this$, a, b, c, d, e, f, g, h, i, j) {
    if(function() {
      var and__3273__auto__ = this$;
      if(and__3273__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$11
      }else {
        return and__3273__auto__
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$11(this$, a, b, c, d, e, f, g, h, i, j)
    }else {
      var x__3888__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3285__auto__ = cljs.core._invoke[goog.typeOf(x__3888__auto__)];
        if(or__3285__auto__) {
          return or__3285__auto__
        }else {
          var or__3285__auto____$1 = cljs.core._invoke["_"];
          if(or__3285__auto____$1) {
            return or__3285__auto____$1
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j)
    }
  };
  var _invoke__12 = function(this$, a, b, c, d, e, f, g, h, i, j, k) {
    if(function() {
      var and__3273__auto__ = this$;
      if(and__3273__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$12
      }else {
        return and__3273__auto__
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$12(this$, a, b, c, d, e, f, g, h, i, j, k)
    }else {
      var x__3888__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3285__auto__ = cljs.core._invoke[goog.typeOf(x__3888__auto__)];
        if(or__3285__auto__) {
          return or__3285__auto__
        }else {
          var or__3285__auto____$1 = cljs.core._invoke["_"];
          if(or__3285__auto____$1) {
            return or__3285__auto____$1
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k)
    }
  };
  var _invoke__13 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l) {
    if(function() {
      var and__3273__auto__ = this$;
      if(and__3273__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$13
      }else {
        return and__3273__auto__
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$13(this$, a, b, c, d, e, f, g, h, i, j, k, l)
    }else {
      var x__3888__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3285__auto__ = cljs.core._invoke[goog.typeOf(x__3888__auto__)];
        if(or__3285__auto__) {
          return or__3285__auto__
        }else {
          var or__3285__auto____$1 = cljs.core._invoke["_"];
          if(or__3285__auto____$1) {
            return or__3285__auto____$1
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l)
    }
  };
  var _invoke__14 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m) {
    if(function() {
      var and__3273__auto__ = this$;
      if(and__3273__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$14
      }else {
        return and__3273__auto__
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$14(this$, a, b, c, d, e, f, g, h, i, j, k, l, m)
    }else {
      var x__3888__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3285__auto__ = cljs.core._invoke[goog.typeOf(x__3888__auto__)];
        if(or__3285__auto__) {
          return or__3285__auto__
        }else {
          var or__3285__auto____$1 = cljs.core._invoke["_"];
          if(or__3285__auto____$1) {
            return or__3285__auto____$1
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m)
    }
  };
  var _invoke__15 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n) {
    if(function() {
      var and__3273__auto__ = this$;
      if(and__3273__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$15
      }else {
        return and__3273__auto__
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$15(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n)
    }else {
      var x__3888__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3285__auto__ = cljs.core._invoke[goog.typeOf(x__3888__auto__)];
        if(or__3285__auto__) {
          return or__3285__auto__
        }else {
          var or__3285__auto____$1 = cljs.core._invoke["_"];
          if(or__3285__auto____$1) {
            return or__3285__auto____$1
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n)
    }
  };
  var _invoke__16 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) {
    if(function() {
      var and__3273__auto__ = this$;
      if(and__3273__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$16
      }else {
        return and__3273__auto__
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$16(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o)
    }else {
      var x__3888__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3285__auto__ = cljs.core._invoke[goog.typeOf(x__3888__auto__)];
        if(or__3285__auto__) {
          return or__3285__auto__
        }else {
          var or__3285__auto____$1 = cljs.core._invoke["_"];
          if(or__3285__auto____$1) {
            return or__3285__auto____$1
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o)
    }
  };
  var _invoke__17 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) {
    if(function() {
      var and__3273__auto__ = this$;
      if(and__3273__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$17
      }else {
        return and__3273__auto__
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$17(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p)
    }else {
      var x__3888__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3285__auto__ = cljs.core._invoke[goog.typeOf(x__3888__auto__)];
        if(or__3285__auto__) {
          return or__3285__auto__
        }else {
          var or__3285__auto____$1 = cljs.core._invoke["_"];
          if(or__3285__auto____$1) {
            return or__3285__auto____$1
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p)
    }
  };
  var _invoke__18 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) {
    if(function() {
      var and__3273__auto__ = this$;
      if(and__3273__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$18
      }else {
        return and__3273__auto__
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$18(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q)
    }else {
      var x__3888__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3285__auto__ = cljs.core._invoke[goog.typeOf(x__3888__auto__)];
        if(or__3285__auto__) {
          return or__3285__auto__
        }else {
          var or__3285__auto____$1 = cljs.core._invoke["_"];
          if(or__3285__auto____$1) {
            return or__3285__auto____$1
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q)
    }
  };
  var _invoke__19 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s) {
    if(function() {
      var and__3273__auto__ = this$;
      if(and__3273__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$19
      }else {
        return and__3273__auto__
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$19(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s)
    }else {
      var x__3888__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3285__auto__ = cljs.core._invoke[goog.typeOf(x__3888__auto__)];
        if(or__3285__auto__) {
          return or__3285__auto__
        }else {
          var or__3285__auto____$1 = cljs.core._invoke["_"];
          if(or__3285__auto____$1) {
            return or__3285__auto____$1
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s)
    }
  };
  var _invoke__20 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s, t) {
    if(function() {
      var and__3273__auto__ = this$;
      if(and__3273__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$20
      }else {
        return and__3273__auto__
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$20(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s, t)
    }else {
      var x__3888__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3285__auto__ = cljs.core._invoke[goog.typeOf(x__3888__auto__)];
        if(or__3285__auto__) {
          return or__3285__auto__
        }else {
          var or__3285__auto____$1 = cljs.core._invoke["_"];
          if(or__3285__auto____$1) {
            return or__3285__auto____$1
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s, t)
    }
  };
  var _invoke__21 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s, t, rest) {
    if(function() {
      var and__3273__auto__ = this$;
      if(and__3273__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$21
      }else {
        return and__3273__auto__
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$21(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s, t, rest)
    }else {
      var x__3888__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3285__auto__ = cljs.core._invoke[goog.typeOf(x__3888__auto__)];
        if(or__3285__auto__) {
          return or__3285__auto__
        }else {
          var or__3285__auto____$1 = cljs.core._invoke["_"];
          if(or__3285__auto____$1) {
            return or__3285__auto____$1
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s, t, rest)
    }
  };
  _invoke = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s, t, rest) {
    switch(arguments.length) {
      case 1:
        return _invoke__1.call(this, this$);
      case 2:
        return _invoke__2.call(this, this$, a);
      case 3:
        return _invoke__3.call(this, this$, a, b);
      case 4:
        return _invoke__4.call(this, this$, a, b, c);
      case 5:
        return _invoke__5.call(this, this$, a, b, c, d);
      case 6:
        return _invoke__6.call(this, this$, a, b, c, d, e);
      case 7:
        return _invoke__7.call(this, this$, a, b, c, d, e, f);
      case 8:
        return _invoke__8.call(this, this$, a, b, c, d, e, f, g);
      case 9:
        return _invoke__9.call(this, this$, a, b, c, d, e, f, g, h);
      case 10:
        return _invoke__10.call(this, this$, a, b, c, d, e, f, g, h, i);
      case 11:
        return _invoke__11.call(this, this$, a, b, c, d, e, f, g, h, i, j);
      case 12:
        return _invoke__12.call(this, this$, a, b, c, d, e, f, g, h, i, j, k);
      case 13:
        return _invoke__13.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l);
      case 14:
        return _invoke__14.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m);
      case 15:
        return _invoke__15.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
      case 16:
        return _invoke__16.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
      case 17:
        return _invoke__17.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
      case 18:
        return _invoke__18.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
      case 19:
        return _invoke__19.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s);
      case 20:
        return _invoke__20.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s, t);
      case 21:
        return _invoke__21.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s, t, rest)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _invoke.cljs$core$IFn$_invoke$arity$1 = _invoke__1;
  _invoke.cljs$core$IFn$_invoke$arity$2 = _invoke__2;
  _invoke.cljs$core$IFn$_invoke$arity$3 = _invoke__3;
  _invoke.cljs$core$IFn$_invoke$arity$4 = _invoke__4;
  _invoke.cljs$core$IFn$_invoke$arity$5 = _invoke__5;
  _invoke.cljs$core$IFn$_invoke$arity$6 = _invoke__6;
  _invoke.cljs$core$IFn$_invoke$arity$7 = _invoke__7;
  _invoke.cljs$core$IFn$_invoke$arity$8 = _invoke__8;
  _invoke.cljs$core$IFn$_invoke$arity$9 = _invoke__9;
  _invoke.cljs$core$IFn$_invoke$arity$10 = _invoke__10;
  _invoke.cljs$core$IFn$_invoke$arity$11 = _invoke__11;
  _invoke.cljs$core$IFn$_invoke$arity$12 = _invoke__12;
  _invoke.cljs$core$IFn$_invoke$arity$13 = _invoke__13;
  _invoke.cljs$core$IFn$_invoke$arity$14 = _invoke__14;
  _invoke.cljs$core$IFn$_invoke$arity$15 = _invoke__15;
  _invoke.cljs$core$IFn$_invoke$arity$16 = _invoke__16;
  _invoke.cljs$core$IFn$_invoke$arity$17 = _invoke__17;
  _invoke.cljs$core$IFn$_invoke$arity$18 = _invoke__18;
  _invoke.cljs$core$IFn$_invoke$arity$19 = _invoke__19;
  _invoke.cljs$core$IFn$_invoke$arity$20 = _invoke__20;
  _invoke.cljs$core$IFn$_invoke$arity$21 = _invoke__21;
  return _invoke
}();
cljs.core.ICounted = function() {
  var obj425058 = {};
  return obj425058
}();
cljs.core._count = function _count(coll) {
  if(function() {
    var and__3273__auto__ = coll;
    if(and__3273__auto__) {
      return coll.cljs$core$ICounted$_count$arity$1
    }else {
      return and__3273__auto__
    }
  }()) {
    return coll.cljs$core$ICounted$_count$arity$1(coll)
  }else {
    var x__3888__auto__ = coll == null ? null : coll;
    return function() {
      var or__3285__auto__ = cljs.core._count[goog.typeOf(x__3888__auto__)];
      if(or__3285__auto__) {
        return or__3285__auto__
      }else {
        var or__3285__auto____$1 = cljs.core._count["_"];
        if(or__3285__auto____$1) {
          return or__3285__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "ICounted.-count", coll);
        }
      }
    }().call(null, coll)
  }
};
cljs.core.IEmptyableCollection = function() {
  var obj425060 = {};
  return obj425060
}();
cljs.core._empty = function _empty(coll) {
  if(function() {
    var and__3273__auto__ = coll;
    if(and__3273__auto__) {
      return coll.cljs$core$IEmptyableCollection$_empty$arity$1
    }else {
      return and__3273__auto__
    }
  }()) {
    return coll.cljs$core$IEmptyableCollection$_empty$arity$1(coll)
  }else {
    var x__3888__auto__ = coll == null ? null : coll;
    return function() {
      var or__3285__auto__ = cljs.core._empty[goog.typeOf(x__3888__auto__)];
      if(or__3285__auto__) {
        return or__3285__auto__
      }else {
        var or__3285__auto____$1 = cljs.core._empty["_"];
        if(or__3285__auto____$1) {
          return or__3285__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "IEmptyableCollection.-empty", coll);
        }
      }
    }().call(null, coll)
  }
};
cljs.core.ICollection = function() {
  var obj425062 = {};
  return obj425062
}();
cljs.core._conj = function _conj(coll, o) {
  if(function() {
    var and__3273__auto__ = coll;
    if(and__3273__auto__) {
      return coll.cljs$core$ICollection$_conj$arity$2
    }else {
      return and__3273__auto__
    }
  }()) {
    return coll.cljs$core$ICollection$_conj$arity$2(coll, o)
  }else {
    var x__3888__auto__ = coll == null ? null : coll;
    return function() {
      var or__3285__auto__ = cljs.core._conj[goog.typeOf(x__3888__auto__)];
      if(or__3285__auto__) {
        return or__3285__auto__
      }else {
        var or__3285__auto____$1 = cljs.core._conj["_"];
        if(or__3285__auto____$1) {
          return or__3285__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "ICollection.-conj", coll);
        }
      }
    }().call(null, coll, o)
  }
};
cljs.core.IIndexed = function() {
  var obj425064 = {};
  return obj425064
}();
cljs.core._nth = function() {
  var _nth = null;
  var _nth__2 = function(coll, n) {
    if(function() {
      var and__3273__auto__ = coll;
      if(and__3273__auto__) {
        return coll.cljs$core$IIndexed$_nth$arity$2
      }else {
        return and__3273__auto__
      }
    }()) {
      return coll.cljs$core$IIndexed$_nth$arity$2(coll, n)
    }else {
      var x__3888__auto__ = coll == null ? null : coll;
      return function() {
        var or__3285__auto__ = cljs.core._nth[goog.typeOf(x__3888__auto__)];
        if(or__3285__auto__) {
          return or__3285__auto__
        }else {
          var or__3285__auto____$1 = cljs.core._nth["_"];
          if(or__3285__auto____$1) {
            return or__3285__auto____$1
          }else {
            throw cljs.core.missing_protocol.call(null, "IIndexed.-nth", coll);
          }
        }
      }().call(null, coll, n)
    }
  };
  var _nth__3 = function(coll, n, not_found) {
    if(function() {
      var and__3273__auto__ = coll;
      if(and__3273__auto__) {
        return coll.cljs$core$IIndexed$_nth$arity$3
      }else {
        return and__3273__auto__
      }
    }()) {
      return coll.cljs$core$IIndexed$_nth$arity$3(coll, n, not_found)
    }else {
      var x__3888__auto__ = coll == null ? null : coll;
      return function() {
        var or__3285__auto__ = cljs.core._nth[goog.typeOf(x__3888__auto__)];
        if(or__3285__auto__) {
          return or__3285__auto__
        }else {
          var or__3285__auto____$1 = cljs.core._nth["_"];
          if(or__3285__auto____$1) {
            return or__3285__auto____$1
          }else {
            throw cljs.core.missing_protocol.call(null, "IIndexed.-nth", coll);
          }
        }
      }().call(null, coll, n, not_found)
    }
  };
  _nth = function(coll, n, not_found) {
    switch(arguments.length) {
      case 2:
        return _nth__2.call(this, coll, n);
      case 3:
        return _nth__3.call(this, coll, n, not_found)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _nth.cljs$core$IFn$_invoke$arity$2 = _nth__2;
  _nth.cljs$core$IFn$_invoke$arity$3 = _nth__3;
  return _nth
}();
cljs.core.ASeq = function() {
  var obj425066 = {};
  return obj425066
}();
cljs.core.ISeq = function() {
  var obj425068 = {};
  return obj425068
}();
cljs.core._first = function _first(coll) {
  if(function() {
    var and__3273__auto__ = coll;
    if(and__3273__auto__) {
      return coll.cljs$core$ISeq$_first$arity$1
    }else {
      return and__3273__auto__
    }
  }()) {
    return coll.cljs$core$ISeq$_first$arity$1(coll)
  }else {
    var x__3888__auto__ = coll == null ? null : coll;
    return function() {
      var or__3285__auto__ = cljs.core._first[goog.typeOf(x__3888__auto__)];
      if(or__3285__auto__) {
        return or__3285__auto__
      }else {
        var or__3285__auto____$1 = cljs.core._first["_"];
        if(or__3285__auto____$1) {
          return or__3285__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "ISeq.-first", coll);
        }
      }
    }().call(null, coll)
  }
};
cljs.core._rest = function _rest(coll) {
  if(function() {
    var and__3273__auto__ = coll;
    if(and__3273__auto__) {
      return coll.cljs$core$ISeq$_rest$arity$1
    }else {
      return and__3273__auto__
    }
  }()) {
    return coll.cljs$core$ISeq$_rest$arity$1(coll)
  }else {
    var x__3888__auto__ = coll == null ? null : coll;
    return function() {
      var or__3285__auto__ = cljs.core._rest[goog.typeOf(x__3888__auto__)];
      if(or__3285__auto__) {
        return or__3285__auto__
      }else {
        var or__3285__auto____$1 = cljs.core._rest["_"];
        if(or__3285__auto____$1) {
          return or__3285__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "ISeq.-rest", coll);
        }
      }
    }().call(null, coll)
  }
};
cljs.core.INext = function() {
  var obj425070 = {};
  return obj425070
}();
cljs.core._next = function _next(coll) {
  if(function() {
    var and__3273__auto__ = coll;
    if(and__3273__auto__) {
      return coll.cljs$core$INext$_next$arity$1
    }else {
      return and__3273__auto__
    }
  }()) {
    return coll.cljs$core$INext$_next$arity$1(coll)
  }else {
    var x__3888__auto__ = coll == null ? null : coll;
    return function() {
      var or__3285__auto__ = cljs.core._next[goog.typeOf(x__3888__auto__)];
      if(or__3285__auto__) {
        return or__3285__auto__
      }else {
        var or__3285__auto____$1 = cljs.core._next["_"];
        if(or__3285__auto____$1) {
          return or__3285__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "INext.-next", coll);
        }
      }
    }().call(null, coll)
  }
};
cljs.core.ILookup = function() {
  var obj425072 = {};
  return obj425072
}();
cljs.core._lookup = function() {
  var _lookup = null;
  var _lookup__2 = function(o, k) {
    if(function() {
      var and__3273__auto__ = o;
      if(and__3273__auto__) {
        return o.cljs$core$ILookup$_lookup$arity$2
      }else {
        return and__3273__auto__
      }
    }()) {
      return o.cljs$core$ILookup$_lookup$arity$2(o, k)
    }else {
      var x__3888__auto__ = o == null ? null : o;
      return function() {
        var or__3285__auto__ = cljs.core._lookup[goog.typeOf(x__3888__auto__)];
        if(or__3285__auto__) {
          return or__3285__auto__
        }else {
          var or__3285__auto____$1 = cljs.core._lookup["_"];
          if(or__3285__auto____$1) {
            return or__3285__auto____$1
          }else {
            throw cljs.core.missing_protocol.call(null, "ILookup.-lookup", o);
          }
        }
      }().call(null, o, k)
    }
  };
  var _lookup__3 = function(o, k, not_found) {
    if(function() {
      var and__3273__auto__ = o;
      if(and__3273__auto__) {
        return o.cljs$core$ILookup$_lookup$arity$3
      }else {
        return and__3273__auto__
      }
    }()) {
      return o.cljs$core$ILookup$_lookup$arity$3(o, k, not_found)
    }else {
      var x__3888__auto__ = o == null ? null : o;
      return function() {
        var or__3285__auto__ = cljs.core._lookup[goog.typeOf(x__3888__auto__)];
        if(or__3285__auto__) {
          return or__3285__auto__
        }else {
          var or__3285__auto____$1 = cljs.core._lookup["_"];
          if(or__3285__auto____$1) {
            return or__3285__auto____$1
          }else {
            throw cljs.core.missing_protocol.call(null, "ILookup.-lookup", o);
          }
        }
      }().call(null, o, k, not_found)
    }
  };
  _lookup = function(o, k, not_found) {
    switch(arguments.length) {
      case 2:
        return _lookup__2.call(this, o, k);
      case 3:
        return _lookup__3.call(this, o, k, not_found)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _lookup.cljs$core$IFn$_invoke$arity$2 = _lookup__2;
  _lookup.cljs$core$IFn$_invoke$arity$3 = _lookup__3;
  return _lookup
}();
cljs.core.IAssociative = function() {
  var obj425074 = {};
  return obj425074
}();
cljs.core._contains_key_QMARK_ = function _contains_key_QMARK_(coll, k) {
  if(function() {
    var and__3273__auto__ = coll;
    if(and__3273__auto__) {
      return coll.cljs$core$IAssociative$_contains_key_QMARK_$arity$2
    }else {
      return and__3273__auto__
    }
  }()) {
    return coll.cljs$core$IAssociative$_contains_key_QMARK_$arity$2(coll, k)
  }else {
    var x__3888__auto__ = coll == null ? null : coll;
    return function() {
      var or__3285__auto__ = cljs.core._contains_key_QMARK_[goog.typeOf(x__3888__auto__)];
      if(or__3285__auto__) {
        return or__3285__auto__
      }else {
        var or__3285__auto____$1 = cljs.core._contains_key_QMARK_["_"];
        if(or__3285__auto____$1) {
          return or__3285__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "IAssociative.-contains-key?", coll);
        }
      }
    }().call(null, coll, k)
  }
};
cljs.core._assoc = function _assoc(coll, k, v) {
  if(function() {
    var and__3273__auto__ = coll;
    if(and__3273__auto__) {
      return coll.cljs$core$IAssociative$_assoc$arity$3
    }else {
      return and__3273__auto__
    }
  }()) {
    return coll.cljs$core$IAssociative$_assoc$arity$3(coll, k, v)
  }else {
    var x__3888__auto__ = coll == null ? null : coll;
    return function() {
      var or__3285__auto__ = cljs.core._assoc[goog.typeOf(x__3888__auto__)];
      if(or__3285__auto__) {
        return or__3285__auto__
      }else {
        var or__3285__auto____$1 = cljs.core._assoc["_"];
        if(or__3285__auto____$1) {
          return or__3285__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "IAssociative.-assoc", coll);
        }
      }
    }().call(null, coll, k, v)
  }
};
cljs.core.IMap = function() {
  var obj425076 = {};
  return obj425076
}();
cljs.core._dissoc = function _dissoc(coll, k) {
  if(function() {
    var and__3273__auto__ = coll;
    if(and__3273__auto__) {
      return coll.cljs$core$IMap$_dissoc$arity$2
    }else {
      return and__3273__auto__
    }
  }()) {
    return coll.cljs$core$IMap$_dissoc$arity$2(coll, k)
  }else {
    var x__3888__auto__ = coll == null ? null : coll;
    return function() {
      var or__3285__auto__ = cljs.core._dissoc[goog.typeOf(x__3888__auto__)];
      if(or__3285__auto__) {
        return or__3285__auto__
      }else {
        var or__3285__auto____$1 = cljs.core._dissoc["_"];
        if(or__3285__auto____$1) {
          return or__3285__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "IMap.-dissoc", coll);
        }
      }
    }().call(null, coll, k)
  }
};
cljs.core.IMapEntry = function() {
  var obj425078 = {};
  return obj425078
}();
cljs.core._key = function _key(coll) {
  if(function() {
    var and__3273__auto__ = coll;
    if(and__3273__auto__) {
      return coll.cljs$core$IMapEntry$_key$arity$1
    }else {
      return and__3273__auto__
    }
  }()) {
    return coll.cljs$core$IMapEntry$_key$arity$1(coll)
  }else {
    var x__3888__auto__ = coll == null ? null : coll;
    return function() {
      var or__3285__auto__ = cljs.core._key[goog.typeOf(x__3888__auto__)];
      if(or__3285__auto__) {
        return or__3285__auto__
      }else {
        var or__3285__auto____$1 = cljs.core._key["_"];
        if(or__3285__auto____$1) {
          return or__3285__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "IMapEntry.-key", coll);
        }
      }
    }().call(null, coll)
  }
};
cljs.core._val = function _val(coll) {
  if(function() {
    var and__3273__auto__ = coll;
    if(and__3273__auto__) {
      return coll.cljs$core$IMapEntry$_val$arity$1
    }else {
      return and__3273__auto__
    }
  }()) {
    return coll.cljs$core$IMapEntry$_val$arity$1(coll)
  }else {
    var x__3888__auto__ = coll == null ? null : coll;
    return function() {
      var or__3285__auto__ = cljs.core._val[goog.typeOf(x__3888__auto__)];
      if(or__3285__auto__) {
        return or__3285__auto__
      }else {
        var or__3285__auto____$1 = cljs.core._val["_"];
        if(or__3285__auto____$1) {
          return or__3285__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "IMapEntry.-val", coll);
        }
      }
    }().call(null, coll)
  }
};
cljs.core.ISet = function() {
  var obj425080 = {};
  return obj425080
}();
cljs.core._disjoin = function _disjoin(coll, v) {
  if(function() {
    var and__3273__auto__ = coll;
    if(and__3273__auto__) {
      return coll.cljs$core$ISet$_disjoin$arity$2
    }else {
      return and__3273__auto__
    }
  }()) {
    return coll.cljs$core$ISet$_disjoin$arity$2(coll, v)
  }else {
    var x__3888__auto__ = coll == null ? null : coll;
    return function() {
      var or__3285__auto__ = cljs.core._disjoin[goog.typeOf(x__3888__auto__)];
      if(or__3285__auto__) {
        return or__3285__auto__
      }else {
        var or__3285__auto____$1 = cljs.core._disjoin["_"];
        if(or__3285__auto____$1) {
          return or__3285__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "ISet.-disjoin", coll);
        }
      }
    }().call(null, coll, v)
  }
};
cljs.core.IStack = function() {
  var obj425082 = {};
  return obj425082
}();
cljs.core._peek = function _peek(coll) {
  if(function() {
    var and__3273__auto__ = coll;
    if(and__3273__auto__) {
      return coll.cljs$core$IStack$_peek$arity$1
    }else {
      return and__3273__auto__
    }
  }()) {
    return coll.cljs$core$IStack$_peek$arity$1(coll)
  }else {
    var x__3888__auto__ = coll == null ? null : coll;
    return function() {
      var or__3285__auto__ = cljs.core._peek[goog.typeOf(x__3888__auto__)];
      if(or__3285__auto__) {
        return or__3285__auto__
      }else {
        var or__3285__auto____$1 = cljs.core._peek["_"];
        if(or__3285__auto____$1) {
          return or__3285__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "IStack.-peek", coll);
        }
      }
    }().call(null, coll)
  }
};
cljs.core._pop = function _pop(coll) {
  if(function() {
    var and__3273__auto__ = coll;
    if(and__3273__auto__) {
      return coll.cljs$core$IStack$_pop$arity$1
    }else {
      return and__3273__auto__
    }
  }()) {
    return coll.cljs$core$IStack$_pop$arity$1(coll)
  }else {
    var x__3888__auto__ = coll == null ? null : coll;
    return function() {
      var or__3285__auto__ = cljs.core._pop[goog.typeOf(x__3888__auto__)];
      if(or__3285__auto__) {
        return or__3285__auto__
      }else {
        var or__3285__auto____$1 = cljs.core._pop["_"];
        if(or__3285__auto____$1) {
          return or__3285__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "IStack.-pop", coll);
        }
      }
    }().call(null, coll)
  }
};
cljs.core.IVector = function() {
  var obj425084 = {};
  return obj425084
}();
cljs.core._assoc_n = function _assoc_n(coll, n, val) {
  if(function() {
    var and__3273__auto__ = coll;
    if(and__3273__auto__) {
      return coll.cljs$core$IVector$_assoc_n$arity$3
    }else {
      return and__3273__auto__
    }
  }()) {
    return coll.cljs$core$IVector$_assoc_n$arity$3(coll, n, val)
  }else {
    var x__3888__auto__ = coll == null ? null : coll;
    return function() {
      var or__3285__auto__ = cljs.core._assoc_n[goog.typeOf(x__3888__auto__)];
      if(or__3285__auto__) {
        return or__3285__auto__
      }else {
        var or__3285__auto____$1 = cljs.core._assoc_n["_"];
        if(or__3285__auto____$1) {
          return or__3285__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "IVector.-assoc-n", coll);
        }
      }
    }().call(null, coll, n, val)
  }
};
cljs.core.IDeref = function() {
  var obj425086 = {};
  return obj425086
}();
cljs.core._deref = function _deref(o) {
  if(function() {
    var and__3273__auto__ = o;
    if(and__3273__auto__) {
      return o.cljs$core$IDeref$_deref$arity$1
    }else {
      return and__3273__auto__
    }
  }()) {
    return o.cljs$core$IDeref$_deref$arity$1(o)
  }else {
    var x__3888__auto__ = o == null ? null : o;
    return function() {
      var or__3285__auto__ = cljs.core._deref[goog.typeOf(x__3888__auto__)];
      if(or__3285__auto__) {
        return or__3285__auto__
      }else {
        var or__3285__auto____$1 = cljs.core._deref["_"];
        if(or__3285__auto____$1) {
          return or__3285__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "IDeref.-deref", o);
        }
      }
    }().call(null, o)
  }
};
cljs.core.IDerefWithTimeout = function() {
  var obj425088 = {};
  return obj425088
}();
cljs.core._deref_with_timeout = function _deref_with_timeout(o, msec, timeout_val) {
  if(function() {
    var and__3273__auto__ = o;
    if(and__3273__auto__) {
      return o.cljs$core$IDerefWithTimeout$_deref_with_timeout$arity$3
    }else {
      return and__3273__auto__
    }
  }()) {
    return o.cljs$core$IDerefWithTimeout$_deref_with_timeout$arity$3(o, msec, timeout_val)
  }else {
    var x__3888__auto__ = o == null ? null : o;
    return function() {
      var or__3285__auto__ = cljs.core._deref_with_timeout[goog.typeOf(x__3888__auto__)];
      if(or__3285__auto__) {
        return or__3285__auto__
      }else {
        var or__3285__auto____$1 = cljs.core._deref_with_timeout["_"];
        if(or__3285__auto____$1) {
          return or__3285__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "IDerefWithTimeout.-deref-with-timeout", o);
        }
      }
    }().call(null, o, msec, timeout_val)
  }
};
cljs.core.IMeta = function() {
  var obj425090 = {};
  return obj425090
}();
cljs.core._meta = function _meta(o) {
  if(function() {
    var and__3273__auto__ = o;
    if(and__3273__auto__) {
      return o.cljs$core$IMeta$_meta$arity$1
    }else {
      return and__3273__auto__
    }
  }()) {
    return o.cljs$core$IMeta$_meta$arity$1(o)
  }else {
    var x__3888__auto__ = o == null ? null : o;
    return function() {
      var or__3285__auto__ = cljs.core._meta[goog.typeOf(x__3888__auto__)];
      if(or__3285__auto__) {
        return or__3285__auto__
      }else {
        var or__3285__auto____$1 = cljs.core._meta["_"];
        if(or__3285__auto____$1) {
          return or__3285__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "IMeta.-meta", o);
        }
      }
    }().call(null, o)
  }
};
cljs.core.IWithMeta = function() {
  var obj425092 = {};
  return obj425092
}();
cljs.core._with_meta = function _with_meta(o, meta) {
  if(function() {
    var and__3273__auto__ = o;
    if(and__3273__auto__) {
      return o.cljs$core$IWithMeta$_with_meta$arity$2
    }else {
      return and__3273__auto__
    }
  }()) {
    return o.cljs$core$IWithMeta$_with_meta$arity$2(o, meta)
  }else {
    var x__3888__auto__ = o == null ? null : o;
    return function() {
      var or__3285__auto__ = cljs.core._with_meta[goog.typeOf(x__3888__auto__)];
      if(or__3285__auto__) {
        return or__3285__auto__
      }else {
        var or__3285__auto____$1 = cljs.core._with_meta["_"];
        if(or__3285__auto____$1) {
          return or__3285__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "IWithMeta.-with-meta", o);
        }
      }
    }().call(null, o, meta)
  }
};
cljs.core.IReduce = function() {
  var obj425094 = {};
  return obj425094
}();
cljs.core._reduce = function() {
  var _reduce = null;
  var _reduce__2 = function(coll, f) {
    if(function() {
      var and__3273__auto__ = coll;
      if(and__3273__auto__) {
        return coll.cljs$core$IReduce$_reduce$arity$2
      }else {
        return and__3273__auto__
      }
    }()) {
      return coll.cljs$core$IReduce$_reduce$arity$2(coll, f)
    }else {
      var x__3888__auto__ = coll == null ? null : coll;
      return function() {
        var or__3285__auto__ = cljs.core._reduce[goog.typeOf(x__3888__auto__)];
        if(or__3285__auto__) {
          return or__3285__auto__
        }else {
          var or__3285__auto____$1 = cljs.core._reduce["_"];
          if(or__3285__auto____$1) {
            return or__3285__auto____$1
          }else {
            throw cljs.core.missing_protocol.call(null, "IReduce.-reduce", coll);
          }
        }
      }().call(null, coll, f)
    }
  };
  var _reduce__3 = function(coll, f, start) {
    if(function() {
      var and__3273__auto__ = coll;
      if(and__3273__auto__) {
        return coll.cljs$core$IReduce$_reduce$arity$3
      }else {
        return and__3273__auto__
      }
    }()) {
      return coll.cljs$core$IReduce$_reduce$arity$3(coll, f, start)
    }else {
      var x__3888__auto__ = coll == null ? null : coll;
      return function() {
        var or__3285__auto__ = cljs.core._reduce[goog.typeOf(x__3888__auto__)];
        if(or__3285__auto__) {
          return or__3285__auto__
        }else {
          var or__3285__auto____$1 = cljs.core._reduce["_"];
          if(or__3285__auto____$1) {
            return or__3285__auto____$1
          }else {
            throw cljs.core.missing_protocol.call(null, "IReduce.-reduce", coll);
          }
        }
      }().call(null, coll, f, start)
    }
  };
  _reduce = function(coll, f, start) {
    switch(arguments.length) {
      case 2:
        return _reduce__2.call(this, coll, f);
      case 3:
        return _reduce__3.call(this, coll, f, start)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _reduce.cljs$core$IFn$_invoke$arity$2 = _reduce__2;
  _reduce.cljs$core$IFn$_invoke$arity$3 = _reduce__3;
  return _reduce
}();
cljs.core.IKVReduce = function() {
  var obj425096 = {};
  return obj425096
}();
cljs.core._kv_reduce = function _kv_reduce(coll, f, init) {
  if(function() {
    var and__3273__auto__ = coll;
    if(and__3273__auto__) {
      return coll.cljs$core$IKVReduce$_kv_reduce$arity$3
    }else {
      return and__3273__auto__
    }
  }()) {
    return coll.cljs$core$IKVReduce$_kv_reduce$arity$3(coll, f, init)
  }else {
    var x__3888__auto__ = coll == null ? null : coll;
    return function() {
      var or__3285__auto__ = cljs.core._kv_reduce[goog.typeOf(x__3888__auto__)];
      if(or__3285__auto__) {
        return or__3285__auto__
      }else {
        var or__3285__auto____$1 = cljs.core._kv_reduce["_"];
        if(or__3285__auto____$1) {
          return or__3285__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "IKVReduce.-kv-reduce", coll);
        }
      }
    }().call(null, coll, f, init)
  }
};
cljs.core.IEquiv = function() {
  var obj425098 = {};
  return obj425098
}();
cljs.core._equiv = function _equiv(o, other) {
  if(function() {
    var and__3273__auto__ = o;
    if(and__3273__auto__) {
      return o.cljs$core$IEquiv$_equiv$arity$2
    }else {
      return and__3273__auto__
    }
  }()) {
    return o.cljs$core$IEquiv$_equiv$arity$2(o, other)
  }else {
    var x__3888__auto__ = o == null ? null : o;
    return function() {
      var or__3285__auto__ = cljs.core._equiv[goog.typeOf(x__3888__auto__)];
      if(or__3285__auto__) {
        return or__3285__auto__
      }else {
        var or__3285__auto____$1 = cljs.core._equiv["_"];
        if(or__3285__auto____$1) {
          return or__3285__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "IEquiv.-equiv", o);
        }
      }
    }().call(null, o, other)
  }
};
cljs.core.IHash = function() {
  var obj425100 = {};
  return obj425100
}();
cljs.core._hash = function _hash(o) {
  if(function() {
    var and__3273__auto__ = o;
    if(and__3273__auto__) {
      return o.cljs$core$IHash$_hash$arity$1
    }else {
      return and__3273__auto__
    }
  }()) {
    return o.cljs$core$IHash$_hash$arity$1(o)
  }else {
    var x__3888__auto__ = o == null ? null : o;
    return function() {
      var or__3285__auto__ = cljs.core._hash[goog.typeOf(x__3888__auto__)];
      if(or__3285__auto__) {
        return or__3285__auto__
      }else {
        var or__3285__auto____$1 = cljs.core._hash["_"];
        if(or__3285__auto____$1) {
          return or__3285__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "IHash.-hash", o);
        }
      }
    }().call(null, o)
  }
};
cljs.core.ISeqable = function() {
  var obj425102 = {};
  return obj425102
}();
cljs.core._seq = function _seq(o) {
  if(function() {
    var and__3273__auto__ = o;
    if(and__3273__auto__) {
      return o.cljs$core$ISeqable$_seq$arity$1
    }else {
      return and__3273__auto__
    }
  }()) {
    return o.cljs$core$ISeqable$_seq$arity$1(o)
  }else {
    var x__3888__auto__ = o == null ? null : o;
    return function() {
      var or__3285__auto__ = cljs.core._seq[goog.typeOf(x__3888__auto__)];
      if(or__3285__auto__) {
        return or__3285__auto__
      }else {
        var or__3285__auto____$1 = cljs.core._seq["_"];
        if(or__3285__auto____$1) {
          return or__3285__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "ISeqable.-seq", o);
        }
      }
    }().call(null, o)
  }
};
cljs.core.ISequential = function() {
  var obj425104 = {};
  return obj425104
}();
cljs.core.IList = function() {
  var obj425106 = {};
  return obj425106
}();
cljs.core.IRecord = function() {
  var obj425108 = {};
  return obj425108
}();
cljs.core.IReversible = function() {
  var obj425110 = {};
  return obj425110
}();
cljs.core._rseq = function _rseq(coll) {
  if(function() {
    var and__3273__auto__ = coll;
    if(and__3273__auto__) {
      return coll.cljs$core$IReversible$_rseq$arity$1
    }else {
      return and__3273__auto__
    }
  }()) {
    return coll.cljs$core$IReversible$_rseq$arity$1(coll)
  }else {
    var x__3888__auto__ = coll == null ? null : coll;
    return function() {
      var or__3285__auto__ = cljs.core._rseq[goog.typeOf(x__3888__auto__)];
      if(or__3285__auto__) {
        return or__3285__auto__
      }else {
        var or__3285__auto____$1 = cljs.core._rseq["_"];
        if(or__3285__auto____$1) {
          return or__3285__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "IReversible.-rseq", coll);
        }
      }
    }().call(null, coll)
  }
};
cljs.core.ISorted = function() {
  var obj425112 = {};
  return obj425112
}();
cljs.core._sorted_seq = function _sorted_seq(coll, ascending_QMARK_) {
  if(function() {
    var and__3273__auto__ = coll;
    if(and__3273__auto__) {
      return coll.cljs$core$ISorted$_sorted_seq$arity$2
    }else {
      return and__3273__auto__
    }
  }()) {
    return coll.cljs$core$ISorted$_sorted_seq$arity$2(coll, ascending_QMARK_)
  }else {
    var x__3888__auto__ = coll == null ? null : coll;
    return function() {
      var or__3285__auto__ = cljs.core._sorted_seq[goog.typeOf(x__3888__auto__)];
      if(or__3285__auto__) {
        return or__3285__auto__
      }else {
        var or__3285__auto____$1 = cljs.core._sorted_seq["_"];
        if(or__3285__auto____$1) {
          return or__3285__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "ISorted.-sorted-seq", coll);
        }
      }
    }().call(null, coll, ascending_QMARK_)
  }
};
cljs.core._sorted_seq_from = function _sorted_seq_from(coll, k, ascending_QMARK_) {
  if(function() {
    var and__3273__auto__ = coll;
    if(and__3273__auto__) {
      return coll.cljs$core$ISorted$_sorted_seq_from$arity$3
    }else {
      return and__3273__auto__
    }
  }()) {
    return coll.cljs$core$ISorted$_sorted_seq_from$arity$3(coll, k, ascending_QMARK_)
  }else {
    var x__3888__auto__ = coll == null ? null : coll;
    return function() {
      var or__3285__auto__ = cljs.core._sorted_seq_from[goog.typeOf(x__3888__auto__)];
      if(or__3285__auto__) {
        return or__3285__auto__
      }else {
        var or__3285__auto____$1 = cljs.core._sorted_seq_from["_"];
        if(or__3285__auto____$1) {
          return or__3285__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "ISorted.-sorted-seq-from", coll);
        }
      }
    }().call(null, coll, k, ascending_QMARK_)
  }
};
cljs.core._entry_key = function _entry_key(coll, entry) {
  if(function() {
    var and__3273__auto__ = coll;
    if(and__3273__auto__) {
      return coll.cljs$core$ISorted$_entry_key$arity$2
    }else {
      return and__3273__auto__
    }
  }()) {
    return coll.cljs$core$ISorted$_entry_key$arity$2(coll, entry)
  }else {
    var x__3888__auto__ = coll == null ? null : coll;
    return function() {
      var or__3285__auto__ = cljs.core._entry_key[goog.typeOf(x__3888__auto__)];
      if(or__3285__auto__) {
        return or__3285__auto__
      }else {
        var or__3285__auto____$1 = cljs.core._entry_key["_"];
        if(or__3285__auto____$1) {
          return or__3285__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "ISorted.-entry-key", coll);
        }
      }
    }().call(null, coll, entry)
  }
};
cljs.core._comparator = function _comparator(coll) {
  if(function() {
    var and__3273__auto__ = coll;
    if(and__3273__auto__) {
      return coll.cljs$core$ISorted$_comparator$arity$1
    }else {
      return and__3273__auto__
    }
  }()) {
    return coll.cljs$core$ISorted$_comparator$arity$1(coll)
  }else {
    var x__3888__auto__ = coll == null ? null : coll;
    return function() {
      var or__3285__auto__ = cljs.core._comparator[goog.typeOf(x__3888__auto__)];
      if(or__3285__auto__) {
        return or__3285__auto__
      }else {
        var or__3285__auto____$1 = cljs.core._comparator["_"];
        if(or__3285__auto____$1) {
          return or__3285__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "ISorted.-comparator", coll);
        }
      }
    }().call(null, coll)
  }
};
cljs.core.IWriter = function() {
  var obj425114 = {};
  return obj425114
}();
cljs.core._write = function _write(writer, s) {
  if(function() {
    var and__3273__auto__ = writer;
    if(and__3273__auto__) {
      return writer.cljs$core$IWriter$_write$arity$2
    }else {
      return and__3273__auto__
    }
  }()) {
    return writer.cljs$core$IWriter$_write$arity$2(writer, s)
  }else {
    var x__3888__auto__ = writer == null ? null : writer;
    return function() {
      var or__3285__auto__ = cljs.core._write[goog.typeOf(x__3888__auto__)];
      if(or__3285__auto__) {
        return or__3285__auto__
      }else {
        var or__3285__auto____$1 = cljs.core._write["_"];
        if(or__3285__auto____$1) {
          return or__3285__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "IWriter.-write", writer);
        }
      }
    }().call(null, writer, s)
  }
};
cljs.core._flush = function _flush(writer) {
  if(function() {
    var and__3273__auto__ = writer;
    if(and__3273__auto__) {
      return writer.cljs$core$IWriter$_flush$arity$1
    }else {
      return and__3273__auto__
    }
  }()) {
    return writer.cljs$core$IWriter$_flush$arity$1(writer)
  }else {
    var x__3888__auto__ = writer == null ? null : writer;
    return function() {
      var or__3285__auto__ = cljs.core._flush[goog.typeOf(x__3888__auto__)];
      if(or__3285__auto__) {
        return or__3285__auto__
      }else {
        var or__3285__auto____$1 = cljs.core._flush["_"];
        if(or__3285__auto____$1) {
          return or__3285__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "IWriter.-flush", writer);
        }
      }
    }().call(null, writer)
  }
};
cljs.core.IPrintWithWriter = function() {
  var obj425116 = {};
  return obj425116
}();
cljs.core._pr_writer = function _pr_writer(o, writer, opts) {
  if(function() {
    var and__3273__auto__ = o;
    if(and__3273__auto__) {
      return o.cljs$core$IPrintWithWriter$_pr_writer$arity$3
    }else {
      return and__3273__auto__
    }
  }()) {
    return o.cljs$core$IPrintWithWriter$_pr_writer$arity$3(o, writer, opts)
  }else {
    var x__3888__auto__ = o == null ? null : o;
    return function() {
      var or__3285__auto__ = cljs.core._pr_writer[goog.typeOf(x__3888__auto__)];
      if(or__3285__auto__) {
        return or__3285__auto__
      }else {
        var or__3285__auto____$1 = cljs.core._pr_writer["_"];
        if(or__3285__auto____$1) {
          return or__3285__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "IPrintWithWriter.-pr-writer", o);
        }
      }
    }().call(null, o, writer, opts)
  }
};
cljs.core.IPending = function() {
  var obj425118 = {};
  return obj425118
}();
cljs.core._realized_QMARK_ = function _realized_QMARK_(d) {
  if(function() {
    var and__3273__auto__ = d;
    if(and__3273__auto__) {
      return d.cljs$core$IPending$_realized_QMARK_$arity$1
    }else {
      return and__3273__auto__
    }
  }()) {
    return d.cljs$core$IPending$_realized_QMARK_$arity$1(d)
  }else {
    var x__3888__auto__ = d == null ? null : d;
    return function() {
      var or__3285__auto__ = cljs.core._realized_QMARK_[goog.typeOf(x__3888__auto__)];
      if(or__3285__auto__) {
        return or__3285__auto__
      }else {
        var or__3285__auto____$1 = cljs.core._realized_QMARK_["_"];
        if(or__3285__auto____$1) {
          return or__3285__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "IPending.-realized?", d);
        }
      }
    }().call(null, d)
  }
};
cljs.core.IWatchable = function() {
  var obj425120 = {};
  return obj425120
}();
cljs.core._notify_watches = function _notify_watches(this$, oldval, newval) {
  if(function() {
    var and__3273__auto__ = this$;
    if(and__3273__auto__) {
      return this$.cljs$core$IWatchable$_notify_watches$arity$3
    }else {
      return and__3273__auto__
    }
  }()) {
    return this$.cljs$core$IWatchable$_notify_watches$arity$3(this$, oldval, newval)
  }else {
    var x__3888__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3285__auto__ = cljs.core._notify_watches[goog.typeOf(x__3888__auto__)];
      if(or__3285__auto__) {
        return or__3285__auto__
      }else {
        var or__3285__auto____$1 = cljs.core._notify_watches["_"];
        if(or__3285__auto____$1) {
          return or__3285__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "IWatchable.-notify-watches", this$);
        }
      }
    }().call(null, this$, oldval, newval)
  }
};
cljs.core._add_watch = function _add_watch(this$, key, f) {
  if(function() {
    var and__3273__auto__ = this$;
    if(and__3273__auto__) {
      return this$.cljs$core$IWatchable$_add_watch$arity$3
    }else {
      return and__3273__auto__
    }
  }()) {
    return this$.cljs$core$IWatchable$_add_watch$arity$3(this$, key, f)
  }else {
    var x__3888__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3285__auto__ = cljs.core._add_watch[goog.typeOf(x__3888__auto__)];
      if(or__3285__auto__) {
        return or__3285__auto__
      }else {
        var or__3285__auto____$1 = cljs.core._add_watch["_"];
        if(or__3285__auto____$1) {
          return or__3285__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "IWatchable.-add-watch", this$);
        }
      }
    }().call(null, this$, key, f)
  }
};
cljs.core._remove_watch = function _remove_watch(this$, key) {
  if(function() {
    var and__3273__auto__ = this$;
    if(and__3273__auto__) {
      return this$.cljs$core$IWatchable$_remove_watch$arity$2
    }else {
      return and__3273__auto__
    }
  }()) {
    return this$.cljs$core$IWatchable$_remove_watch$arity$2(this$, key)
  }else {
    var x__3888__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3285__auto__ = cljs.core._remove_watch[goog.typeOf(x__3888__auto__)];
      if(or__3285__auto__) {
        return or__3285__auto__
      }else {
        var or__3285__auto____$1 = cljs.core._remove_watch["_"];
        if(or__3285__auto____$1) {
          return or__3285__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "IWatchable.-remove-watch", this$);
        }
      }
    }().call(null, this$, key)
  }
};
cljs.core.IEditableCollection = function() {
  var obj425122 = {};
  return obj425122
}();
cljs.core._as_transient = function _as_transient(coll) {
  if(function() {
    var and__3273__auto__ = coll;
    if(and__3273__auto__) {
      return coll.cljs$core$IEditableCollection$_as_transient$arity$1
    }else {
      return and__3273__auto__
    }
  }()) {
    return coll.cljs$core$IEditableCollection$_as_transient$arity$1(coll)
  }else {
    var x__3888__auto__ = coll == null ? null : coll;
    return function() {
      var or__3285__auto__ = cljs.core._as_transient[goog.typeOf(x__3888__auto__)];
      if(or__3285__auto__) {
        return or__3285__auto__
      }else {
        var or__3285__auto____$1 = cljs.core._as_transient["_"];
        if(or__3285__auto____$1) {
          return or__3285__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "IEditableCollection.-as-transient", coll);
        }
      }
    }().call(null, coll)
  }
};
cljs.core.ITransientCollection = function() {
  var obj425124 = {};
  return obj425124
}();
cljs.core._conj_BANG_ = function _conj_BANG_(tcoll, val) {
  if(function() {
    var and__3273__auto__ = tcoll;
    if(and__3273__auto__) {
      return tcoll.cljs$core$ITransientCollection$_conj_BANG_$arity$2
    }else {
      return and__3273__auto__
    }
  }()) {
    return tcoll.cljs$core$ITransientCollection$_conj_BANG_$arity$2(tcoll, val)
  }else {
    var x__3888__auto__ = tcoll == null ? null : tcoll;
    return function() {
      var or__3285__auto__ = cljs.core._conj_BANG_[goog.typeOf(x__3888__auto__)];
      if(or__3285__auto__) {
        return or__3285__auto__
      }else {
        var or__3285__auto____$1 = cljs.core._conj_BANG_["_"];
        if(or__3285__auto____$1) {
          return or__3285__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "ITransientCollection.-conj!", tcoll);
        }
      }
    }().call(null, tcoll, val)
  }
};
cljs.core._persistent_BANG_ = function _persistent_BANG_(tcoll) {
  if(function() {
    var and__3273__auto__ = tcoll;
    if(and__3273__auto__) {
      return tcoll.cljs$core$ITransientCollection$_persistent_BANG_$arity$1
    }else {
      return and__3273__auto__
    }
  }()) {
    return tcoll.cljs$core$ITransientCollection$_persistent_BANG_$arity$1(tcoll)
  }else {
    var x__3888__auto__ = tcoll == null ? null : tcoll;
    return function() {
      var or__3285__auto__ = cljs.core._persistent_BANG_[goog.typeOf(x__3888__auto__)];
      if(or__3285__auto__) {
        return or__3285__auto__
      }else {
        var or__3285__auto____$1 = cljs.core._persistent_BANG_["_"];
        if(or__3285__auto____$1) {
          return or__3285__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "ITransientCollection.-persistent!", tcoll);
        }
      }
    }().call(null, tcoll)
  }
};
cljs.core.ITransientAssociative = function() {
  var obj425126 = {};
  return obj425126
}();
cljs.core._assoc_BANG_ = function _assoc_BANG_(tcoll, key, val) {
  if(function() {
    var and__3273__auto__ = tcoll;
    if(and__3273__auto__) {
      return tcoll.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3
    }else {
      return and__3273__auto__
    }
  }()) {
    return tcoll.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3(tcoll, key, val)
  }else {
    var x__3888__auto__ = tcoll == null ? null : tcoll;
    return function() {
      var or__3285__auto__ = cljs.core._assoc_BANG_[goog.typeOf(x__3888__auto__)];
      if(or__3285__auto__) {
        return or__3285__auto__
      }else {
        var or__3285__auto____$1 = cljs.core._assoc_BANG_["_"];
        if(or__3285__auto____$1) {
          return or__3285__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "ITransientAssociative.-assoc!", tcoll);
        }
      }
    }().call(null, tcoll, key, val)
  }
};
cljs.core.ITransientMap = function() {
  var obj425128 = {};
  return obj425128
}();
cljs.core._dissoc_BANG_ = function _dissoc_BANG_(tcoll, key) {
  if(function() {
    var and__3273__auto__ = tcoll;
    if(and__3273__auto__) {
      return tcoll.cljs$core$ITransientMap$_dissoc_BANG_$arity$2
    }else {
      return and__3273__auto__
    }
  }()) {
    return tcoll.cljs$core$ITransientMap$_dissoc_BANG_$arity$2(tcoll, key)
  }else {
    var x__3888__auto__ = tcoll == null ? null : tcoll;
    return function() {
      var or__3285__auto__ = cljs.core._dissoc_BANG_[goog.typeOf(x__3888__auto__)];
      if(or__3285__auto__) {
        return or__3285__auto__
      }else {
        var or__3285__auto____$1 = cljs.core._dissoc_BANG_["_"];
        if(or__3285__auto____$1) {
          return or__3285__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "ITransientMap.-dissoc!", tcoll);
        }
      }
    }().call(null, tcoll, key)
  }
};
cljs.core.ITransientVector = function() {
  var obj425130 = {};
  return obj425130
}();
cljs.core._assoc_n_BANG_ = function _assoc_n_BANG_(tcoll, n, val) {
  if(function() {
    var and__3273__auto__ = tcoll;
    if(and__3273__auto__) {
      return tcoll.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3
    }else {
      return and__3273__auto__
    }
  }()) {
    return tcoll.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3(tcoll, n, val)
  }else {
    var x__3888__auto__ = tcoll == null ? null : tcoll;
    return function() {
      var or__3285__auto__ = cljs.core._assoc_n_BANG_[goog.typeOf(x__3888__auto__)];
      if(or__3285__auto__) {
        return or__3285__auto__
      }else {
        var or__3285__auto____$1 = cljs.core._assoc_n_BANG_["_"];
        if(or__3285__auto____$1) {
          return or__3285__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "ITransientVector.-assoc-n!", tcoll);
        }
      }
    }().call(null, tcoll, n, val)
  }
};
cljs.core._pop_BANG_ = function _pop_BANG_(tcoll) {
  if(function() {
    var and__3273__auto__ = tcoll;
    if(and__3273__auto__) {
      return tcoll.cljs$core$ITransientVector$_pop_BANG_$arity$1
    }else {
      return and__3273__auto__
    }
  }()) {
    return tcoll.cljs$core$ITransientVector$_pop_BANG_$arity$1(tcoll)
  }else {
    var x__3888__auto__ = tcoll == null ? null : tcoll;
    return function() {
      var or__3285__auto__ = cljs.core._pop_BANG_[goog.typeOf(x__3888__auto__)];
      if(or__3285__auto__) {
        return or__3285__auto__
      }else {
        var or__3285__auto____$1 = cljs.core._pop_BANG_["_"];
        if(or__3285__auto____$1) {
          return or__3285__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "ITransientVector.-pop!", tcoll);
        }
      }
    }().call(null, tcoll)
  }
};
cljs.core.ITransientSet = function() {
  var obj425132 = {};
  return obj425132
}();
cljs.core._disjoin_BANG_ = function _disjoin_BANG_(tcoll, v) {
  if(function() {
    var and__3273__auto__ = tcoll;
    if(and__3273__auto__) {
      return tcoll.cljs$core$ITransientSet$_disjoin_BANG_$arity$2
    }else {
      return and__3273__auto__
    }
  }()) {
    return tcoll.cljs$core$ITransientSet$_disjoin_BANG_$arity$2(tcoll, v)
  }else {
    var x__3888__auto__ = tcoll == null ? null : tcoll;
    return function() {
      var or__3285__auto__ = cljs.core._disjoin_BANG_[goog.typeOf(x__3888__auto__)];
      if(or__3285__auto__) {
        return or__3285__auto__
      }else {
        var or__3285__auto____$1 = cljs.core._disjoin_BANG_["_"];
        if(or__3285__auto____$1) {
          return or__3285__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "ITransientSet.-disjoin!", tcoll);
        }
      }
    }().call(null, tcoll, v)
  }
};
cljs.core.IComparable = function() {
  var obj425134 = {};
  return obj425134
}();
cljs.core._compare = function _compare(x, y) {
  if(function() {
    var and__3273__auto__ = x;
    if(and__3273__auto__) {
      return x.cljs$core$IComparable$_compare$arity$2
    }else {
      return and__3273__auto__
    }
  }()) {
    return x.cljs$core$IComparable$_compare$arity$2(x, y)
  }else {
    var x__3888__auto__ = x == null ? null : x;
    return function() {
      var or__3285__auto__ = cljs.core._compare[goog.typeOf(x__3888__auto__)];
      if(or__3285__auto__) {
        return or__3285__auto__
      }else {
        var or__3285__auto____$1 = cljs.core._compare["_"];
        if(or__3285__auto____$1) {
          return or__3285__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "IComparable.-compare", x);
        }
      }
    }().call(null, x, y)
  }
};
cljs.core.IChunk = function() {
  var obj425136 = {};
  return obj425136
}();
cljs.core._drop_first = function _drop_first(coll) {
  if(function() {
    var and__3273__auto__ = coll;
    if(and__3273__auto__) {
      return coll.cljs$core$IChunk$_drop_first$arity$1
    }else {
      return and__3273__auto__
    }
  }()) {
    return coll.cljs$core$IChunk$_drop_first$arity$1(coll)
  }else {
    var x__3888__auto__ = coll == null ? null : coll;
    return function() {
      var or__3285__auto__ = cljs.core._drop_first[goog.typeOf(x__3888__auto__)];
      if(or__3285__auto__) {
        return or__3285__auto__
      }else {
        var or__3285__auto____$1 = cljs.core._drop_first["_"];
        if(or__3285__auto____$1) {
          return or__3285__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "IChunk.-drop-first", coll);
        }
      }
    }().call(null, coll)
  }
};
cljs.core.IChunkedSeq = function() {
  var obj425138 = {};
  return obj425138
}();
cljs.core._chunked_first = function _chunked_first(coll) {
  if(function() {
    var and__3273__auto__ = coll;
    if(and__3273__auto__) {
      return coll.cljs$core$IChunkedSeq$_chunked_first$arity$1
    }else {
      return and__3273__auto__
    }
  }()) {
    return coll.cljs$core$IChunkedSeq$_chunked_first$arity$1(coll)
  }else {
    var x__3888__auto__ = coll == null ? null : coll;
    return function() {
      var or__3285__auto__ = cljs.core._chunked_first[goog.typeOf(x__3888__auto__)];
      if(or__3285__auto__) {
        return or__3285__auto__
      }else {
        var or__3285__auto____$1 = cljs.core._chunked_first["_"];
        if(or__3285__auto____$1) {
          return or__3285__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "IChunkedSeq.-chunked-first", coll);
        }
      }
    }().call(null, coll)
  }
};
cljs.core._chunked_rest = function _chunked_rest(coll) {
  if(function() {
    var and__3273__auto__ = coll;
    if(and__3273__auto__) {
      return coll.cljs$core$IChunkedSeq$_chunked_rest$arity$1
    }else {
      return and__3273__auto__
    }
  }()) {
    return coll.cljs$core$IChunkedSeq$_chunked_rest$arity$1(coll)
  }else {
    var x__3888__auto__ = coll == null ? null : coll;
    return function() {
      var or__3285__auto__ = cljs.core._chunked_rest[goog.typeOf(x__3888__auto__)];
      if(or__3285__auto__) {
        return or__3285__auto__
      }else {
        var or__3285__auto____$1 = cljs.core._chunked_rest["_"];
        if(or__3285__auto____$1) {
          return or__3285__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "IChunkedSeq.-chunked-rest", coll);
        }
      }
    }().call(null, coll)
  }
};
cljs.core.IChunkedNext = function() {
  var obj425140 = {};
  return obj425140
}();
cljs.core._chunked_next = function _chunked_next(coll) {
  if(function() {
    var and__3273__auto__ = coll;
    if(and__3273__auto__) {
      return coll.cljs$core$IChunkedNext$_chunked_next$arity$1
    }else {
      return and__3273__auto__
    }
  }()) {
    return coll.cljs$core$IChunkedNext$_chunked_next$arity$1(coll)
  }else {
    var x__3888__auto__ = coll == null ? null : coll;
    return function() {
      var or__3285__auto__ = cljs.core._chunked_next[goog.typeOf(x__3888__auto__)];
      if(or__3285__auto__) {
        return or__3285__auto__
      }else {
        var or__3285__auto____$1 = cljs.core._chunked_next["_"];
        if(or__3285__auto____$1) {
          return or__3285__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "IChunkedNext.-chunked-next", coll);
        }
      }
    }().call(null, coll)
  }
};
cljs.core.INamed = function() {
  var obj425142 = {};
  return obj425142
}();
cljs.core._name = function _name(x) {
  if(function() {
    var and__3273__auto__ = x;
    if(and__3273__auto__) {
      return x.cljs$core$INamed$_name$arity$1
    }else {
      return and__3273__auto__
    }
  }()) {
    return x.cljs$core$INamed$_name$arity$1(x)
  }else {
    var x__3888__auto__ = x == null ? null : x;
    return function() {
      var or__3285__auto__ = cljs.core._name[goog.typeOf(x__3888__auto__)];
      if(or__3285__auto__) {
        return or__3285__auto__
      }else {
        var or__3285__auto____$1 = cljs.core._name["_"];
        if(or__3285__auto____$1) {
          return or__3285__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "INamed.-name", x);
        }
      }
    }().call(null, x)
  }
};
cljs.core._namespace = function _namespace(x) {
  if(function() {
    var and__3273__auto__ = x;
    if(and__3273__auto__) {
      return x.cljs$core$INamed$_namespace$arity$1
    }else {
      return and__3273__auto__
    }
  }()) {
    return x.cljs$core$INamed$_namespace$arity$1(x)
  }else {
    var x__3888__auto__ = x == null ? null : x;
    return function() {
      var or__3285__auto__ = cljs.core._namespace[goog.typeOf(x__3888__auto__)];
      if(or__3285__auto__) {
        return or__3285__auto__
      }else {
        var or__3285__auto____$1 = cljs.core._namespace["_"];
        if(or__3285__auto____$1) {
          return or__3285__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "INamed.-namespace", x);
        }
      }
    }().call(null, x)
  }
};
cljs.core.StringBufferWriter = function(sb) {
  this.sb = sb;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 1073741824
};
cljs.core.StringBufferWriter.cljs$lang$type = true;
cljs.core.StringBufferWriter.cljs$lang$ctorStr = "cljs.core/StringBufferWriter";
cljs.core.StringBufferWriter.cljs$lang$ctorPrWriter = function(this__3829__auto__, writer__3830__auto__, opt__3831__auto__) {
  return cljs.core._write.call(null, writer__3830__auto__, "cljs.core/StringBufferWriter")
};
cljs.core.StringBufferWriter.prototype.cljs$core$IWriter$_write$arity$2 = function(_, s) {
  var self__ = this;
  var ___$1 = this;
  return self__.sb.append(s)
};
cljs.core.StringBufferWriter.prototype.cljs$core$IWriter$_flush$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return null
};
cljs.core.__GT_StringBufferWriter = function __GT_StringBufferWriter(sb) {
  return new cljs.core.StringBufferWriter(sb)
};
cljs.core.pr_str_STAR_ = function pr_str_STAR_(obj) {
  var sb = new goog.string.StringBuffer;
  var writer = new cljs.core.StringBufferWriter(sb);
  cljs.core._pr_writer.call(null, obj, writer, cljs.core.pr_opts.call(null));
  cljs.core._flush.call(null, writer);
  return[cljs.core.str(sb)].join("")
};
cljs.core.instance_QMARK_ = function instance_QMARK_(t, o) {
  return o instanceof t
};
cljs.core.symbol_QMARK_ = function symbol_QMARK_(x) {
  return x instanceof cljs.core.Symbol
};
cljs.core.hash_symbol = function hash_symbol(sym) {
  return cljs.core.hash_combine.call(null, cljs.core.hash.call(null, sym.ns), cljs.core.hash.call(null, sym.name))
};
cljs.core.compare_symbols = function compare_symbols(a, b) {
  if(cljs.core.truth_(cljs.core._EQ_.call(null, a, b))) {
    return 0
  }else {
    if(cljs.core.truth_(function() {
      var and__3273__auto__ = cljs.core.not.call(null, a.ns);
      if(and__3273__auto__) {
        return b.ns
      }else {
        return and__3273__auto__
      }
    }())) {
      return-1
    }else {
      if(cljs.core.truth_(a.ns)) {
        if(cljs.core.not.call(null, b.ns)) {
          return 1
        }else {
          var nsc = cljs.core.compare.call(null, a.ns, b.ns);
          if(nsc === 0) {
            return cljs.core.compare.call(null, a.name, b.name)
          }else {
            return nsc
          }
        }
      }else {
        if(new cljs.core.Keyword(null, "default", "default", 2558708147)) {
          return cljs.core.compare.call(null, a.name, b.name)
        }else {
          return null
        }
      }
    }
  }
};
cljs.core.Symbol = function(ns, name, str, _hash, _meta) {
  this.ns = ns;
  this.name = name;
  this.str = str;
  this._hash = _hash;
  this._meta = _meta;
  this.cljs$lang$protocol_mask$partition0$ = 2154168321;
  this.cljs$lang$protocol_mask$partition1$ = 4096
};
cljs.core.Symbol.cljs$lang$type = true;
cljs.core.Symbol.cljs$lang$ctorStr = "cljs.core/Symbol";
cljs.core.Symbol.cljs$lang$ctorPrWriter = function(this__3829__auto__, writer__3830__auto__, opt__3831__auto__) {
  return cljs.core._write.call(null, writer__3830__auto__, "cljs.core/Symbol")
};
cljs.core.Symbol.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(o, writer, _) {
  var self__ = this;
  var o__$1 = this;
  return cljs.core._write.call(null, writer, self__.str)
};
cljs.core.Symbol.prototype.cljs$core$INamed$_name$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.name
};
cljs.core.Symbol.prototype.cljs$core$INamed$_namespace$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.ns
};
cljs.core.Symbol.prototype.cljs$core$IHash$_hash$arity$1 = function(sym) {
  var self__ = this;
  var sym__$1 = this;
  var h__3696__auto__ = self__._hash;
  if(!(h__3696__auto__ == null)) {
    return h__3696__auto__
  }else {
    var h__3696__auto____$1 = cljs.core.hash_symbol.call(null, sym__$1);
    self__._hash = h__3696__auto____$1;
    return h__3696__auto____$1
  }
};
cljs.core.Symbol.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_, new_meta) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.Symbol(self__.ns, self__.name, self__.str, self__._hash, new_meta)
};
cljs.core.Symbol.prototype.cljs$core$IMeta$_meta$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__._meta
};
cljs.core.Symbol.prototype.call = function() {
  var G__425144 = null;
  var G__425144__2 = function(self__, coll) {
    var self__ = this;
    var self____$1 = this;
    var sym = self____$1;
    return cljs.core._lookup.call(null, coll, sym, null)
  };
  var G__425144__3 = function(self__, coll, not_found) {
    var self__ = this;
    var self____$1 = this;
    var sym = self____$1;
    return cljs.core._lookup.call(null, coll, sym, not_found)
  };
  G__425144 = function(self__, coll, not_found) {
    switch(arguments.length) {
      case 2:
        return G__425144__2.call(this, self__, coll);
      case 3:
        return G__425144__3.call(this, self__, coll, not_found)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  return G__425144
}();
cljs.core.Symbol.prototype.apply = function(self__, args425143) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone.call(null, args425143)))
};
cljs.core.Symbol.prototype.cljs$core$IFn$_invoke$arity$1 = function(coll) {
  var self__ = this;
  var sym = this;
  return cljs.core._lookup.call(null, coll, sym, null)
};
cljs.core.Symbol.prototype.cljs$core$IFn$_invoke$arity$2 = function(coll, not_found) {
  var self__ = this;
  var sym = this;
  return cljs.core._lookup.call(null, coll, sym, not_found)
};
cljs.core.Symbol.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(_, other) {
  var self__ = this;
  var ___$1 = this;
  if(other instanceof cljs.core.Symbol) {
    return self__.str === other.str
  }else {
    return false
  }
};
cljs.core.Symbol.prototype.toString = function() {
  var self__ = this;
  var _ = this;
  return self__.str
};
cljs.core.__GT_Symbol = function __GT_Symbol(ns, name, str, _hash, _meta) {
  return new cljs.core.Symbol(ns, name, str, _hash, _meta)
};
cljs.core.symbol = function() {
  var symbol = null;
  var symbol__1 = function(name) {
    if(name instanceof cljs.core.Symbol) {
      return name
    }else {
      return symbol.call(null, null, name)
    }
  };
  var symbol__2 = function(ns, name) {
    var sym_str = !(ns == null) ? [cljs.core.str(ns), cljs.core.str("/"), cljs.core.str(name)].join("") : name;
    return new cljs.core.Symbol(ns, name, sym_str, null, null)
  };
  symbol = function(ns, name) {
    switch(arguments.length) {
      case 1:
        return symbol__1.call(this, ns);
      case 2:
        return symbol__2.call(this, ns, name)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  symbol.cljs$core$IFn$_invoke$arity$1 = symbol__1;
  symbol.cljs$core$IFn$_invoke$arity$2 = symbol__2;
  return symbol
}();
cljs.core.seq = function seq(coll) {
  if(coll == null) {
    return null
  }else {
    if(function() {
      var G__425146 = coll;
      if(G__425146) {
        var bit__3904__auto__ = G__425146.cljs$lang$protocol_mask$partition0$ & 8388608;
        if(bit__3904__auto__ || G__425146.cljs$core$ISeqable$) {
          return true
        }else {
          return false
        }
      }else {
        return false
      }
    }()) {
      return cljs.core._seq.call(null, coll)
    }else {
      if(coll instanceof Array) {
        if(coll.length === 0) {
          return null
        }else {
          return new cljs.core.IndexedSeq(coll, 0)
        }
      }else {
        if(typeof coll === "string") {
          if(coll.length === 0) {
            return null
          }else {
            return new cljs.core.IndexedSeq(coll, 0)
          }
        }else {
          if(cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ISeqable, coll)) {
            return cljs.core._seq.call(null, coll)
          }else {
            if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
              throw new Error([cljs.core.str(coll), cljs.core.str("is not ISeqable")].join(""));
            }else {
              return null
            }
          }
        }
      }
    }
  }
};
cljs.core.first = function first(coll) {
  if(coll == null) {
    return null
  }else {
    if(function() {
      var G__425148 = coll;
      if(G__425148) {
        var bit__3904__auto__ = G__425148.cljs$lang$protocol_mask$partition0$ & 64;
        if(bit__3904__auto__ || G__425148.cljs$core$ISeq$) {
          return true
        }else {
          return false
        }
      }else {
        return false
      }
    }()) {
      return cljs.core._first.call(null, coll)
    }else {
      var s = cljs.core.seq.call(null, coll);
      if(s == null) {
        return null
      }else {
        return cljs.core._first.call(null, s)
      }
    }
  }
};
cljs.core.rest = function rest(coll) {
  if(!(coll == null)) {
    if(function() {
      var G__425150 = coll;
      if(G__425150) {
        var bit__3904__auto__ = G__425150.cljs$lang$protocol_mask$partition0$ & 64;
        if(bit__3904__auto__ || G__425150.cljs$core$ISeq$) {
          return true
        }else {
          return false
        }
      }else {
        return false
      }
    }()) {
      return cljs.core._rest.call(null, coll)
    }else {
      var s = cljs.core.seq.call(null, coll);
      if(s) {
        return cljs.core._rest.call(null, s)
      }else {
        return cljs.core.List.EMPTY
      }
    }
  }else {
    return cljs.core.List.EMPTY
  }
};
cljs.core.next = function next(coll) {
  if(coll == null) {
    return null
  }else {
    if(function() {
      var G__425152 = coll;
      if(G__425152) {
        var bit__3904__auto__ = G__425152.cljs$lang$protocol_mask$partition0$ & 128;
        if(bit__3904__auto__ || G__425152.cljs$core$INext$) {
          return true
        }else {
          return false
        }
      }else {
        return false
      }
    }()) {
      return cljs.core._next.call(null, coll)
    }else {
      return cljs.core.seq.call(null, cljs.core.rest.call(null, coll))
    }
  }
};
cljs.core._EQ_ = function() {
  var _EQ_ = null;
  var _EQ___1 = function(x) {
    return true
  };
  var _EQ___2 = function(x, y) {
    return x === y || cljs.core._equiv.call(null, x, y)
  };
  var _EQ___3 = function() {
    var G__425153__delegate = function(x, y, more) {
      while(true) {
        if(_EQ_.call(null, x, y)) {
          if(cljs.core.next.call(null, more)) {
            var G__425154 = y;
            var G__425155 = cljs.core.first.call(null, more);
            var G__425156 = cljs.core.next.call(null, more);
            x = G__425154;
            y = G__425155;
            more = G__425156;
            continue
          }else {
            return _EQ_.call(null, y, cljs.core.first.call(null, more))
          }
        }else {
          return false
        }
        break
      }
    };
    var G__425153 = function(x, y, var_args) {
      var more = null;
      if(arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__425153__delegate.call(this, x, y, more)
    };
    G__425153.cljs$lang$maxFixedArity = 2;
    G__425153.cljs$lang$applyTo = function(arglist__425157) {
      var x = cljs.core.first(arglist__425157);
      arglist__425157 = cljs.core.next(arglist__425157);
      var y = cljs.core.first(arglist__425157);
      var more = cljs.core.rest(arglist__425157);
      return G__425153__delegate(x, y, more)
    };
    G__425153.cljs$core$IFn$_invoke$arity$variadic = G__425153__delegate;
    return G__425153
  }();
  _EQ_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return _EQ___1.call(this, x);
      case 2:
        return _EQ___2.call(this, x, y);
      default:
        return _EQ___3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _EQ_.cljs$lang$maxFixedArity = 2;
  _EQ_.cljs$lang$applyTo = _EQ___3.cljs$lang$applyTo;
  _EQ_.cljs$core$IFn$_invoke$arity$1 = _EQ___1;
  _EQ_.cljs$core$IFn$_invoke$arity$2 = _EQ___2;
  _EQ_.cljs$core$IFn$_invoke$arity$variadic = _EQ___3.cljs$core$IFn$_invoke$arity$variadic;
  return _EQ_
}();
cljs.core.IHash["null"] = true;
cljs.core._hash["null"] = function(o) {
  return 0
};
cljs.core.INext["null"] = true;
cljs.core._next["null"] = function(_) {
  return null
};
cljs.core.IKVReduce["null"] = true;
cljs.core._kv_reduce["null"] = function(_, f, init) {
  return init
};
cljs.core.ISet["null"] = true;
cljs.core._disjoin["null"] = function(_, v) {
  return null
};
cljs.core.ICounted["null"] = true;
cljs.core._count["null"] = function(_) {
  return 0
};
cljs.core.IStack["null"] = true;
cljs.core._peek["null"] = function(_) {
  return null
};
cljs.core._pop["null"] = function(_) {
  return null
};
cljs.core.IEquiv["null"] = true;
cljs.core._equiv["null"] = function(_, o) {
  return o == null
};
cljs.core.IWithMeta["null"] = true;
cljs.core._with_meta["null"] = function(_, meta) {
  return null
};
cljs.core.IMeta["null"] = true;
cljs.core._meta["null"] = function(_) {
  return null
};
cljs.core.IEmptyableCollection["null"] = true;
cljs.core._empty["null"] = function(_) {
  return null
};
cljs.core.IMap["null"] = true;
cljs.core._dissoc["null"] = function(_, k) {
  return null
};
Date.prototype.cljs$core$IEquiv$ = true;
Date.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(o, other) {
  var o__$1 = this;
  return other instanceof Date && o__$1.toString() === other.toString()
};
cljs.core.IEquiv["number"] = true;
cljs.core._equiv["number"] = function(x, o) {
  return x === o
};
cljs.core.IMeta["function"] = true;
cljs.core._meta["function"] = function(_) {
  return null
};
cljs.core.Fn["function"] = true;
cljs.core.IHash["_"] = true;
cljs.core._hash["_"] = function(o) {
  return goog.getUid(o)
};
cljs.core.inc = function inc(x) {
  return x + 1
};
cljs.core.Reduced = function(val) {
  this.val = val;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32768
};
cljs.core.Reduced.cljs$lang$type = true;
cljs.core.Reduced.cljs$lang$ctorStr = "cljs.core/Reduced";
cljs.core.Reduced.cljs$lang$ctorPrWriter = function(this__3829__auto__, writer__3830__auto__, opt__3831__auto__) {
  return cljs.core._write.call(null, writer__3830__auto__, "cljs.core/Reduced")
};
cljs.core.Reduced.prototype.cljs$core$IDeref$_deref$arity$1 = function(o) {
  var self__ = this;
  var o__$1 = this;
  return self__.val
};
cljs.core.__GT_Reduced = function __GT_Reduced(val) {
  return new cljs.core.Reduced(val)
};
cljs.core.reduced = function reduced(x) {
  return new cljs.core.Reduced(x)
};
cljs.core.reduced_QMARK_ = function reduced_QMARK_(r) {
  return r instanceof cljs.core.Reduced
};
cljs.core.ci_reduce = function() {
  var ci_reduce = null;
  var ci_reduce__2 = function(cicoll, f) {
    var cnt = cljs.core._count.call(null, cicoll);
    if(cnt === 0) {
      return f.call(null)
    }else {
      var val = cljs.core._nth.call(null, cicoll, 0);
      var n = 1;
      while(true) {
        if(n < cnt) {
          var nval = f.call(null, val, cljs.core._nth.call(null, cicoll, n));
          if(cljs.core.reduced_QMARK_.call(null, nval)) {
            return cljs.core.deref.call(null, nval)
          }else {
            var G__425158 = nval;
            var G__425159 = n + 1;
            val = G__425158;
            n = G__425159;
            continue
          }
        }else {
          return val
        }
        break
      }
    }
  };
  var ci_reduce__3 = function(cicoll, f, val) {
    var cnt = cljs.core._count.call(null, cicoll);
    var val__$1 = val;
    var n = 0;
    while(true) {
      if(n < cnt) {
        var nval = f.call(null, val__$1, cljs.core._nth.call(null, cicoll, n));
        if(cljs.core.reduced_QMARK_.call(null, nval)) {
          return cljs.core.deref.call(null, nval)
        }else {
          var G__425160 = nval;
          var G__425161 = n + 1;
          val__$1 = G__425160;
          n = G__425161;
          continue
        }
      }else {
        return val__$1
      }
      break
    }
  };
  var ci_reduce__4 = function(cicoll, f, val, idx) {
    var cnt = cljs.core._count.call(null, cicoll);
    var val__$1 = val;
    var n = idx;
    while(true) {
      if(n < cnt) {
        var nval = f.call(null, val__$1, cljs.core._nth.call(null, cicoll, n));
        if(cljs.core.reduced_QMARK_.call(null, nval)) {
          return cljs.core.deref.call(null, nval)
        }else {
          var G__425162 = nval;
          var G__425163 = n + 1;
          val__$1 = G__425162;
          n = G__425163;
          continue
        }
      }else {
        return val__$1
      }
      break
    }
  };
  ci_reduce = function(cicoll, f, val, idx) {
    switch(arguments.length) {
      case 2:
        return ci_reduce__2.call(this, cicoll, f);
      case 3:
        return ci_reduce__3.call(this, cicoll, f, val);
      case 4:
        return ci_reduce__4.call(this, cicoll, f, val, idx)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  ci_reduce.cljs$core$IFn$_invoke$arity$2 = ci_reduce__2;
  ci_reduce.cljs$core$IFn$_invoke$arity$3 = ci_reduce__3;
  ci_reduce.cljs$core$IFn$_invoke$arity$4 = ci_reduce__4;
  return ci_reduce
}();
cljs.core.array_reduce = function() {
  var array_reduce = null;
  var array_reduce__2 = function(arr, f) {
    var cnt = arr.length;
    if(arr.length === 0) {
      return f.call(null)
    }else {
      var val = arr[0];
      var n = 1;
      while(true) {
        if(n < cnt) {
          var nval = f.call(null, val, arr[n]);
          if(cljs.core.reduced_QMARK_.call(null, nval)) {
            return cljs.core.deref.call(null, nval)
          }else {
            var G__425164 = nval;
            var G__425165 = n + 1;
            val = G__425164;
            n = G__425165;
            continue
          }
        }else {
          return val
        }
        break
      }
    }
  };
  var array_reduce__3 = function(arr, f, val) {
    var cnt = arr.length;
    var val__$1 = val;
    var n = 0;
    while(true) {
      if(n < cnt) {
        var nval = f.call(null, val__$1, arr[n]);
        if(cljs.core.reduced_QMARK_.call(null, nval)) {
          return cljs.core.deref.call(null, nval)
        }else {
          var G__425166 = nval;
          var G__425167 = n + 1;
          val__$1 = G__425166;
          n = G__425167;
          continue
        }
      }else {
        return val__$1
      }
      break
    }
  };
  var array_reduce__4 = function(arr, f, val, idx) {
    var cnt = arr.length;
    var val__$1 = val;
    var n = idx;
    while(true) {
      if(n < cnt) {
        var nval = f.call(null, val__$1, arr[n]);
        if(cljs.core.reduced_QMARK_.call(null, nval)) {
          return cljs.core.deref.call(null, nval)
        }else {
          var G__425168 = nval;
          var G__425169 = n + 1;
          val__$1 = G__425168;
          n = G__425169;
          continue
        }
      }else {
        return val__$1
      }
      break
    }
  };
  array_reduce = function(arr, f, val, idx) {
    switch(arguments.length) {
      case 2:
        return array_reduce__2.call(this, arr, f);
      case 3:
        return array_reduce__3.call(this, arr, f, val);
      case 4:
        return array_reduce__4.call(this, arr, f, val, idx)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  array_reduce.cljs$core$IFn$_invoke$arity$2 = array_reduce__2;
  array_reduce.cljs$core$IFn$_invoke$arity$3 = array_reduce__3;
  array_reduce.cljs$core$IFn$_invoke$arity$4 = array_reduce__4;
  return array_reduce
}();
cljs.core.counted_QMARK_ = function counted_QMARK_(x) {
  var G__425171 = x;
  if(G__425171) {
    var bit__3911__auto__ = G__425171.cljs$lang$protocol_mask$partition0$ & 2;
    if(bit__3911__auto__ || G__425171.cljs$core$ICounted$) {
      return true
    }else {
      if(!G__425171.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ICounted, G__425171)
      }else {
        return false
      }
    }
  }else {
    return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ICounted, G__425171)
  }
};
cljs.core.indexed_QMARK_ = function indexed_QMARK_(x) {
  var G__425173 = x;
  if(G__425173) {
    var bit__3911__auto__ = G__425173.cljs$lang$protocol_mask$partition0$ & 16;
    if(bit__3911__auto__ || G__425173.cljs$core$IIndexed$) {
      return true
    }else {
      if(!G__425173.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IIndexed, G__425173)
      }else {
        return false
      }
    }
  }else {
    return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IIndexed, G__425173)
  }
};
cljs.core.IndexedSeq = function(arr, i) {
  this.arr = arr;
  this.i = i;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 166199550
};
cljs.core.IndexedSeq.cljs$lang$type = true;
cljs.core.IndexedSeq.cljs$lang$ctorStr = "cljs.core/IndexedSeq";
cljs.core.IndexedSeq.cljs$lang$ctorPrWriter = function(this__3829__auto__, writer__3830__auto__, opt__3831__auto__) {
  return cljs.core._write.call(null, writer__3830__auto__, "cljs.core/IndexedSeq")
};
cljs.core.IndexedSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.hash_coll.call(null, coll__$1)
};
cljs.core.IndexedSeq.prototype.cljs$core$INext$_next$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  if(self__.i + 1 < self__.arr.length) {
    return new cljs.core.IndexedSeq(self__.arr, self__.i + 1)
  }else {
    return null
  }
};
cljs.core.IndexedSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons.call(null, o, coll__$1)
};
cljs.core.IndexedSeq.prototype.cljs$core$IReversible$_rseq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var c = cljs.core._count.call(null, coll__$1);
  if(c > 0) {
    return new cljs.core.RSeq(coll__$1, c - 1, null)
  }else {
    return null
  }
};
cljs.core.IndexedSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll)
};
cljs.core.IndexedSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.array_reduce.call(null, self__.arr, f, self__.arr[self__.i], self__.i + 1)
};
cljs.core.IndexedSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.array_reduce.call(null, self__.arr, f, start, self__.i)
};
cljs.core.IndexedSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return this$__$1
};
cljs.core.IndexedSeq.prototype.cljs$core$ICounted$_count$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.arr.length - self__.i
};
cljs.core.IndexedSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.arr[self__.i]
};
cljs.core.IndexedSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  if(self__.i + 1 < self__.arr.length) {
    return new cljs.core.IndexedSeq(self__.arr, self__.i + 1)
  }else {
    return cljs.core.List.EMPTY
  }
};
cljs.core.IndexedSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other)
};
cljs.core.IndexedSeq.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, n) {
  var self__ = this;
  var coll__$1 = this;
  var i__$1 = n + self__.i;
  if(i__$1 < self__.arr.length) {
    return self__.arr[i__$1]
  }else {
    return null
  }
};
cljs.core.IndexedSeq.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, n, not_found) {
  var self__ = this;
  var coll__$1 = this;
  var i__$1 = n + self__.i;
  if(i__$1 < self__.arr.length) {
    return self__.arr[i__$1]
  }else {
    return not_found
  }
};
cljs.core.IndexedSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.List.EMPTY
};
cljs.core.__GT_IndexedSeq = function __GT_IndexedSeq(arr, i) {
  return new cljs.core.IndexedSeq(arr, i)
};
cljs.core.prim_seq = function() {
  var prim_seq = null;
  var prim_seq__1 = function(prim) {
    return prim_seq.call(null, prim, 0)
  };
  var prim_seq__2 = function(prim, i) {
    if(i < prim.length) {
      return new cljs.core.IndexedSeq(prim, i)
    }else {
      return null
    }
  };
  prim_seq = function(prim, i) {
    switch(arguments.length) {
      case 1:
        return prim_seq__1.call(this, prim);
      case 2:
        return prim_seq__2.call(this, prim, i)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  prim_seq.cljs$core$IFn$_invoke$arity$1 = prim_seq__1;
  prim_seq.cljs$core$IFn$_invoke$arity$2 = prim_seq__2;
  return prim_seq
}();
cljs.core.array_seq = function() {
  var array_seq = null;
  var array_seq__1 = function(array) {
    return cljs.core.prim_seq.call(null, array, 0)
  };
  var array_seq__2 = function(array, i) {
    return cljs.core.prim_seq.call(null, array, i)
  };
  array_seq = function(array, i) {
    switch(arguments.length) {
      case 1:
        return array_seq__1.call(this, array);
      case 2:
        return array_seq__2.call(this, array, i)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  array_seq.cljs$core$IFn$_invoke$arity$1 = array_seq__1;
  array_seq.cljs$core$IFn$_invoke$arity$2 = array_seq__2;
  return array_seq
}();
cljs.core.RSeq = function(ci, i, meta) {
  this.ci = ci;
  this.i = i;
  this.meta = meta;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32374862
};
cljs.core.RSeq.cljs$lang$type = true;
cljs.core.RSeq.cljs$lang$ctorStr = "cljs.core/RSeq";
cljs.core.RSeq.cljs$lang$ctorPrWriter = function(this__3829__auto__, writer__3830__auto__, opt__3831__auto__) {
  return cljs.core._write.call(null, writer__3830__auto__, "cljs.core/RSeq")
};
cljs.core.RSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.hash_coll.call(null, coll__$1)
};
cljs.core.RSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons.call(null, o, coll__$1)
};
cljs.core.RSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll)
};
cljs.core.RSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(col, f) {
  var self__ = this;
  var col__$1 = this;
  return cljs.core.seq_reduce.call(null, f, col__$1)
};
cljs.core.RSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(col, f, start) {
  var self__ = this;
  var col__$1 = this;
  return cljs.core.seq_reduce.call(null, f, start, col__$1)
};
cljs.core.RSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1
};
cljs.core.RSeq.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.i + 1
};
cljs.core.RSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._nth.call(null, self__.ci, self__.i)
};
cljs.core.RSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if(self__.i > 0) {
    return new cljs.core.RSeq(self__.ci, self__.i - 1, null)
  }else {
    return null
  }
};
cljs.core.RSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other)
};
cljs.core.RSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, new_meta) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.RSeq(self__.ci, self__.i, new_meta)
};
cljs.core.RSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta
};
cljs.core.RSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, self__.meta)
};
cljs.core.__GT_RSeq = function __GT_RSeq(ci, i, meta) {
  return new cljs.core.RSeq(ci, i, meta)
};
cljs.core.second = function second(coll) {
  return cljs.core.first.call(null, cljs.core.next.call(null, coll))
};
cljs.core.ffirst = function ffirst(coll) {
  return cljs.core.first.call(null, cljs.core.first.call(null, coll))
};
cljs.core.nfirst = function nfirst(coll) {
  return cljs.core.next.call(null, cljs.core.first.call(null, coll))
};
cljs.core.fnext = function fnext(coll) {
  return cljs.core.first.call(null, cljs.core.next.call(null, coll))
};
cljs.core.nnext = function nnext(coll) {
  return cljs.core.next.call(null, cljs.core.next.call(null, coll))
};
cljs.core.last = function last(s) {
  while(true) {
    var sn = cljs.core.next.call(null, s);
    if(!(sn == null)) {
      var G__425174 = sn;
      s = G__425174;
      continue
    }else {
      return cljs.core.first.call(null, s)
    }
    break
  }
};
cljs.core.IEquiv["_"] = true;
cljs.core._equiv["_"] = function(x, o) {
  return x === o
};
cljs.core.conj = function() {
  var conj = null;
  var conj__2 = function(coll, x) {
    if(!(coll == null)) {
      return cljs.core._conj.call(null, coll, x)
    }else {
      return cljs.core._conj.call(null, cljs.core.List.EMPTY, x)
    }
  };
  var conj__3 = function() {
    var G__425175__delegate = function(coll, x, xs) {
      while(true) {
        if(cljs.core.truth_(xs)) {
          var G__425176 = conj.call(null, coll, x);
          var G__425177 = cljs.core.first.call(null, xs);
          var G__425178 = cljs.core.next.call(null, xs);
          coll = G__425176;
          x = G__425177;
          xs = G__425178;
          continue
        }else {
          return conj.call(null, coll, x)
        }
        break
      }
    };
    var G__425175 = function(coll, x, var_args) {
      var xs = null;
      if(arguments.length > 2) {
        xs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__425175__delegate.call(this, coll, x, xs)
    };
    G__425175.cljs$lang$maxFixedArity = 2;
    G__425175.cljs$lang$applyTo = function(arglist__425179) {
      var coll = cljs.core.first(arglist__425179);
      arglist__425179 = cljs.core.next(arglist__425179);
      var x = cljs.core.first(arglist__425179);
      var xs = cljs.core.rest(arglist__425179);
      return G__425175__delegate(coll, x, xs)
    };
    G__425175.cljs$core$IFn$_invoke$arity$variadic = G__425175__delegate;
    return G__425175
  }();
  conj = function(coll, x, var_args) {
    var xs = var_args;
    switch(arguments.length) {
      case 2:
        return conj__2.call(this, coll, x);
      default:
        return conj__3.cljs$core$IFn$_invoke$arity$variadic(coll, x, cljs.core.array_seq(arguments, 2))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  conj.cljs$lang$maxFixedArity = 2;
  conj.cljs$lang$applyTo = conj__3.cljs$lang$applyTo;
  conj.cljs$core$IFn$_invoke$arity$2 = conj__2;
  conj.cljs$core$IFn$_invoke$arity$variadic = conj__3.cljs$core$IFn$_invoke$arity$variadic;
  return conj
}();
cljs.core.empty = function empty(coll) {
  return cljs.core._empty.call(null, coll)
};
cljs.core.accumulating_seq_count = function accumulating_seq_count(coll) {
  var s = cljs.core.seq.call(null, coll);
  var acc = 0;
  while(true) {
    if(cljs.core.counted_QMARK_.call(null, s)) {
      return acc + cljs.core._count.call(null, s)
    }else {
      var G__425180 = cljs.core.next.call(null, s);
      var G__425181 = acc + 1;
      s = G__425180;
      acc = G__425181;
      continue
    }
    break
  }
};
cljs.core.count = function count(coll) {
  if(!(coll == null)) {
    if(function() {
      var G__425183 = coll;
      if(G__425183) {
        var bit__3904__auto__ = G__425183.cljs$lang$protocol_mask$partition0$ & 2;
        if(bit__3904__auto__ || G__425183.cljs$core$ICounted$) {
          return true
        }else {
          return false
        }
      }else {
        return false
      }
    }()) {
      return cljs.core._count.call(null, coll)
    }else {
      if(coll instanceof Array) {
        return coll.length
      }else {
        if(typeof coll === "string") {
          return coll.length
        }else {
          if(cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ICounted, coll)) {
            return cljs.core._count.call(null, coll)
          }else {
            if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
              return cljs.core.accumulating_seq_count.call(null, coll)
            }else {
              return null
            }
          }
        }
      }
    }
  }else {
    return 0
  }
};
cljs.core.linear_traversal_nth = function() {
  var linear_traversal_nth = null;
  var linear_traversal_nth__2 = function(coll, n) {
    while(true) {
      if(coll == null) {
        throw new Error("Index out of bounds");
      }else {
        if(n === 0) {
          if(cljs.core.seq.call(null, coll)) {
            return cljs.core.first.call(null, coll)
          }else {
            throw new Error("Index out of bounds");
          }
        }else {
          if(cljs.core.indexed_QMARK_.call(null, coll)) {
            return cljs.core._nth.call(null, coll, n)
          }else {
            if(cljs.core.seq.call(null, coll)) {
              var G__425184 = cljs.core.next.call(null, coll);
              var G__425185 = n - 1;
              coll = G__425184;
              n = G__425185;
              continue
            }else {
              if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                throw new Error("Index out of bounds");
              }else {
                return null
              }
            }
          }
        }
      }
      break
    }
  };
  var linear_traversal_nth__3 = function(coll, n, not_found) {
    while(true) {
      if(coll == null) {
        return not_found
      }else {
        if(n === 0) {
          if(cljs.core.seq.call(null, coll)) {
            return cljs.core.first.call(null, coll)
          }else {
            return not_found
          }
        }else {
          if(cljs.core.indexed_QMARK_.call(null, coll)) {
            return cljs.core._nth.call(null, coll, n, not_found)
          }else {
            if(cljs.core.seq.call(null, coll)) {
              var G__425186 = cljs.core.next.call(null, coll);
              var G__425187 = n - 1;
              var G__425188 = not_found;
              coll = G__425186;
              n = G__425187;
              not_found = G__425188;
              continue
            }else {
              if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                return not_found
              }else {
                return null
              }
            }
          }
        }
      }
      break
    }
  };
  linear_traversal_nth = function(coll, n, not_found) {
    switch(arguments.length) {
      case 2:
        return linear_traversal_nth__2.call(this, coll, n);
      case 3:
        return linear_traversal_nth__3.call(this, coll, n, not_found)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  linear_traversal_nth.cljs$core$IFn$_invoke$arity$2 = linear_traversal_nth__2;
  linear_traversal_nth.cljs$core$IFn$_invoke$arity$3 = linear_traversal_nth__3;
  return linear_traversal_nth
}();
cljs.core.nth = function() {
  var nth = null;
  var nth__2 = function(coll, n) {
    if(coll == null) {
      return null
    }else {
      if(function() {
        var G__425193 = coll;
        if(G__425193) {
          var bit__3904__auto__ = G__425193.cljs$lang$protocol_mask$partition0$ & 16;
          if(bit__3904__auto__ || G__425193.cljs$core$IIndexed$) {
            return true
          }else {
            return false
          }
        }else {
          return false
        }
      }()) {
        return cljs.core._nth.call(null, coll, n)
      }else {
        if(coll instanceof Array) {
          if(n < coll.length) {
            return coll[n]
          }else {
            return null
          }
        }else {
          if(typeof coll === "string") {
            if(n < coll.length) {
              return coll[n]
            }else {
              return null
            }
          }else {
            if(cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IIndexed, coll)) {
              return cljs.core._nth.call(null, coll, n)
            }else {
              if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                if(function() {
                  var G__425194 = coll;
                  if(G__425194) {
                    var bit__3911__auto__ = G__425194.cljs$lang$protocol_mask$partition0$ & 64;
                    if(bit__3911__auto__ || G__425194.cljs$core$ISeq$) {
                      return true
                    }else {
                      if(!G__425194.cljs$lang$protocol_mask$partition0$) {
                        return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ISeq, G__425194)
                      }else {
                        return false
                      }
                    }
                  }else {
                    return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ISeq, G__425194)
                  }
                }()) {
                  return cljs.core.linear_traversal_nth.call(null, coll, n)
                }else {
                  throw new Error([cljs.core.str("nth not supported on this type "), cljs.core.str(cljs.core.type__GT_str.call(null, cljs.core.type.call(null, coll)))].join(""));
                }
              }else {
                return null
              }
            }
          }
        }
      }
    }
  };
  var nth__3 = function(coll, n, not_found) {
    if(!(coll == null)) {
      if(function() {
        var G__425195 = coll;
        if(G__425195) {
          var bit__3904__auto__ = G__425195.cljs$lang$protocol_mask$partition0$ & 16;
          if(bit__3904__auto__ || G__425195.cljs$core$IIndexed$) {
            return true
          }else {
            return false
          }
        }else {
          return false
        }
      }()) {
        return cljs.core._nth.call(null, coll, n, not_found)
      }else {
        if(coll instanceof Array) {
          if(n < coll.length) {
            return coll[n]
          }else {
            return not_found
          }
        }else {
          if(typeof coll === "string") {
            if(n < coll.length) {
              return coll[n]
            }else {
              return not_found
            }
          }else {
            if(cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IIndexed, coll)) {
              return cljs.core._nth.call(null, coll, n)
            }else {
              if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                if(function() {
                  var G__425196 = coll;
                  if(G__425196) {
                    var bit__3911__auto__ = G__425196.cljs$lang$protocol_mask$partition0$ & 64;
                    if(bit__3911__auto__ || G__425196.cljs$core$ISeq$) {
                      return true
                    }else {
                      if(!G__425196.cljs$lang$protocol_mask$partition0$) {
                        return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ISeq, G__425196)
                      }else {
                        return false
                      }
                    }
                  }else {
                    return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ISeq, G__425196)
                  }
                }()) {
                  return cljs.core.linear_traversal_nth.call(null, coll, n, not_found)
                }else {
                  throw new Error([cljs.core.str("nth not supported on this type "), cljs.core.str(cljs.core.type__GT_str.call(null, cljs.core.type.call(null, coll)))].join(""));
                }
              }else {
                return null
              }
            }
          }
        }
      }
    }else {
      return not_found
    }
  };
  nth = function(coll, n, not_found) {
    switch(arguments.length) {
      case 2:
        return nth__2.call(this, coll, n);
      case 3:
        return nth__3.call(this, coll, n, not_found)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  nth.cljs$core$IFn$_invoke$arity$2 = nth__2;
  nth.cljs$core$IFn$_invoke$arity$3 = nth__3;
  return nth
}();
cljs.core.get = function() {
  var get = null;
  var get__2 = function(o, k) {
    if(o == null) {
      return null
    }else {
      if(function() {
        var G__425199 = o;
        if(G__425199) {
          var bit__3904__auto__ = G__425199.cljs$lang$protocol_mask$partition0$ & 256;
          if(bit__3904__auto__ || G__425199.cljs$core$ILookup$) {
            return true
          }else {
            return false
          }
        }else {
          return false
        }
      }()) {
        return cljs.core._lookup.call(null, o, k)
      }else {
        if(o instanceof Array) {
          if(k < o.length) {
            return o[k]
          }else {
            return null
          }
        }else {
          if(typeof o === "string") {
            if(k < o.length) {
              return o[k]
            }else {
              return null
            }
          }else {
            if(cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ILookup, o)) {
              return cljs.core._lookup.call(null, o, k)
            }else {
              if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                return null
              }else {
                return null
              }
            }
          }
        }
      }
    }
  };
  var get__3 = function(o, k, not_found) {
    if(!(o == null)) {
      if(function() {
        var G__425200 = o;
        if(G__425200) {
          var bit__3904__auto__ = G__425200.cljs$lang$protocol_mask$partition0$ & 256;
          if(bit__3904__auto__ || G__425200.cljs$core$ILookup$) {
            return true
          }else {
            return false
          }
        }else {
          return false
        }
      }()) {
        return cljs.core._lookup.call(null, o, k, not_found)
      }else {
        if(o instanceof Array) {
          if(k < o.length) {
            return o[k]
          }else {
            return not_found
          }
        }else {
          if(typeof o === "string") {
            if(k < o.length) {
              return o[k]
            }else {
              return not_found
            }
          }else {
            if(cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ILookup, o)) {
              return cljs.core._lookup.call(null, o, k, not_found)
            }else {
              if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                return not_found
              }else {
                return null
              }
            }
          }
        }
      }
    }else {
      return not_found
    }
  };
  get = function(o, k, not_found) {
    switch(arguments.length) {
      case 2:
        return get__2.call(this, o, k);
      case 3:
        return get__3.call(this, o, k, not_found)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  get.cljs$core$IFn$_invoke$arity$2 = get__2;
  get.cljs$core$IFn$_invoke$arity$3 = get__3;
  return get
}();
cljs.core.assoc = function() {
  var assoc = null;
  var assoc__3 = function(coll, k, v) {
    if(!(coll == null)) {
      return cljs.core._assoc.call(null, coll, k, v)
    }else {
      return cljs.core.PersistentHashMap.fromArrays.call(null, [k], [v])
    }
  };
  var assoc__4 = function() {
    var G__425201__delegate = function(coll, k, v, kvs) {
      while(true) {
        var ret = assoc.call(null, coll, k, v);
        if(cljs.core.truth_(kvs)) {
          var G__425202 = ret;
          var G__425203 = cljs.core.first.call(null, kvs);
          var G__425204 = cljs.core.second.call(null, kvs);
          var G__425205 = cljs.core.nnext.call(null, kvs);
          coll = G__425202;
          k = G__425203;
          v = G__425204;
          kvs = G__425205;
          continue
        }else {
          return ret
        }
        break
      }
    };
    var G__425201 = function(coll, k, v, var_args) {
      var kvs = null;
      if(arguments.length > 3) {
        kvs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
      }
      return G__425201__delegate.call(this, coll, k, v, kvs)
    };
    G__425201.cljs$lang$maxFixedArity = 3;
    G__425201.cljs$lang$applyTo = function(arglist__425206) {
      var coll = cljs.core.first(arglist__425206);
      arglist__425206 = cljs.core.next(arglist__425206);
      var k = cljs.core.first(arglist__425206);
      arglist__425206 = cljs.core.next(arglist__425206);
      var v = cljs.core.first(arglist__425206);
      var kvs = cljs.core.rest(arglist__425206);
      return G__425201__delegate(coll, k, v, kvs)
    };
    G__425201.cljs$core$IFn$_invoke$arity$variadic = G__425201__delegate;
    return G__425201
  }();
  assoc = function(coll, k, v, var_args) {
    var kvs = var_args;
    switch(arguments.length) {
      case 3:
        return assoc__3.call(this, coll, k, v);
      default:
        return assoc__4.cljs$core$IFn$_invoke$arity$variadic(coll, k, v, cljs.core.array_seq(arguments, 3))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  assoc.cljs$lang$maxFixedArity = 3;
  assoc.cljs$lang$applyTo = assoc__4.cljs$lang$applyTo;
  assoc.cljs$core$IFn$_invoke$arity$3 = assoc__3;
  assoc.cljs$core$IFn$_invoke$arity$variadic = assoc__4.cljs$core$IFn$_invoke$arity$variadic;
  return assoc
}();
cljs.core.dissoc = function() {
  var dissoc = null;
  var dissoc__1 = function(coll) {
    return coll
  };
  var dissoc__2 = function(coll, k) {
    return cljs.core._dissoc.call(null, coll, k)
  };
  var dissoc__3 = function() {
    var G__425207__delegate = function(coll, k, ks) {
      while(true) {
        var ret = dissoc.call(null, coll, k);
        if(cljs.core.truth_(ks)) {
          var G__425208 = ret;
          var G__425209 = cljs.core.first.call(null, ks);
          var G__425210 = cljs.core.next.call(null, ks);
          coll = G__425208;
          k = G__425209;
          ks = G__425210;
          continue
        }else {
          return ret
        }
        break
      }
    };
    var G__425207 = function(coll, k, var_args) {
      var ks = null;
      if(arguments.length > 2) {
        ks = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__425207__delegate.call(this, coll, k, ks)
    };
    G__425207.cljs$lang$maxFixedArity = 2;
    G__425207.cljs$lang$applyTo = function(arglist__425211) {
      var coll = cljs.core.first(arglist__425211);
      arglist__425211 = cljs.core.next(arglist__425211);
      var k = cljs.core.first(arglist__425211);
      var ks = cljs.core.rest(arglist__425211);
      return G__425207__delegate(coll, k, ks)
    };
    G__425207.cljs$core$IFn$_invoke$arity$variadic = G__425207__delegate;
    return G__425207
  }();
  dissoc = function(coll, k, var_args) {
    var ks = var_args;
    switch(arguments.length) {
      case 1:
        return dissoc__1.call(this, coll);
      case 2:
        return dissoc__2.call(this, coll, k);
      default:
        return dissoc__3.cljs$core$IFn$_invoke$arity$variadic(coll, k, cljs.core.array_seq(arguments, 2))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  dissoc.cljs$lang$maxFixedArity = 2;
  dissoc.cljs$lang$applyTo = dissoc__3.cljs$lang$applyTo;
  dissoc.cljs$core$IFn$_invoke$arity$1 = dissoc__1;
  dissoc.cljs$core$IFn$_invoke$arity$2 = dissoc__2;
  dissoc.cljs$core$IFn$_invoke$arity$variadic = dissoc__3.cljs$core$IFn$_invoke$arity$variadic;
  return dissoc
}();
cljs.core.fn_QMARK_ = function fn_QMARK_(f) {
  var or__3285__auto__ = goog.isFunction(f);
  if(or__3285__auto__) {
    return or__3285__auto__
  }else {
    var G__425215 = f;
    if(G__425215) {
      var bit__3911__auto__ = null;
      if(cljs.core.truth_(function() {
        var or__3285__auto____$1 = bit__3911__auto__;
        if(cljs.core.truth_(or__3285__auto____$1)) {
          return or__3285__auto____$1
        }else {
          return G__425215.cljs$core$Fn$
        }
      }())) {
        return true
      }else {
        if(!G__425215.cljs$lang$protocol_mask$partition$) {
          return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.Fn, G__425215)
        }else {
          return false
        }
      }
    }else {
      return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.Fn, G__425215)
    }
  }
};
cljs.core.with_meta = function with_meta(o, meta) {
  if(cljs.core.fn_QMARK_.call(null, o) && !function() {
    var G__425223 = o;
    if(G__425223) {
      var bit__3911__auto__ = G__425223.cljs$lang$protocol_mask$partition0$ & 262144;
      if(bit__3911__auto__ || G__425223.cljs$core$IWithMeta$) {
        return true
      }else {
        if(!G__425223.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IWithMeta, G__425223)
        }else {
          return false
        }
      }
    }else {
      return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IWithMeta, G__425223)
    }
  }()) {
    return with_meta.call(null, function() {
      if(typeof cljs.core.t425224 !== "undefined") {
      }else {
        cljs.core.t425224 = function(meta, o, with_meta, meta425225) {
          this.meta = meta;
          this.o = o;
          this.with_meta = with_meta;
          this.meta425225 = meta425225;
          this.cljs$lang$protocol_mask$partition1$ = 0;
          this.cljs$lang$protocol_mask$partition0$ = 393217
        };
        cljs.core.t425224.cljs$lang$type = true;
        cljs.core.t425224.cljs$lang$ctorStr = "cljs.core/t425224";
        cljs.core.t425224.cljs$lang$ctorPrWriter = function(this__3829__auto__, writer__3830__auto__, opt__3831__auto__) {
          return cljs.core._write.call(null, writer__3830__auto__, "cljs.core/t425224")
        };
        cljs.core.t425224.prototype.call = function() {
          var G__425228__delegate = function(self__, args) {
            var self____$1 = this;
            var _ = self____$1;
            return cljs.core.apply.call(null, self__.o, args)
          };
          var G__425228 = function(self__, var_args) {
            var self__ = this;
            var args = null;
            if(arguments.length > 1) {
              args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
            }
            return G__425228__delegate.call(this, self__, args)
          };
          G__425228.cljs$lang$maxFixedArity = 1;
          G__425228.cljs$lang$applyTo = function(arglist__425229) {
            var self__ = cljs.core.first(arglist__425229);
            var args = cljs.core.rest(arglist__425229);
            return G__425228__delegate(self__, args)
          };
          G__425228.cljs$core$IFn$_invoke$arity$variadic = G__425228__delegate;
          return G__425228
        }();
        cljs.core.t425224.prototype.apply = function(self__, args425227) {
          var self__ = this;
          var self____$1 = this;
          return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone.call(null, args425227)))
        };
        cljs.core.t425224.prototype.cljs$core$IFn$_invoke$arity$2 = function() {
          var G__425230__delegate = function(args) {
            var _ = this;
            return cljs.core.apply.call(null, self__.o, args)
          };
          var G__425230 = function(var_args) {
            var self__ = this;
            var args = null;
            if(arguments.length > 0) {
              args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
            }
            return G__425230__delegate.call(this, args)
          };
          G__425230.cljs$lang$maxFixedArity = 0;
          G__425230.cljs$lang$applyTo = function(arglist__425231) {
            var args = cljs.core.seq(arglist__425231);
            return G__425230__delegate(args)
          };
          G__425230.cljs$core$IFn$_invoke$arity$variadic = G__425230__delegate;
          return G__425230
        }();
        cljs.core.t425224.prototype.cljs$core$Fn$ = true;
        cljs.core.t425224.prototype.cljs$core$IMeta$_meta$arity$1 = function(_425226) {
          var self__ = this;
          var _425226__$1 = this;
          return self__.meta425225
        };
        cljs.core.t425224.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_425226, meta425225__$1) {
          var self__ = this;
          var _425226__$1 = this;
          return new cljs.core.t425224(self__.meta, self__.o, self__.with_meta, meta425225__$1)
        };
        cljs.core.__GT_t425224 = function __GT_t425224(meta__$1, o__$1, with_meta__$1, meta425225) {
          return new cljs.core.t425224(meta__$1, o__$1, with_meta__$1, meta425225)
        }
      }
      return new cljs.core.t425224(meta, o, with_meta, null)
    }(), meta)
  }else {
    return cljs.core._with_meta.call(null, o, meta)
  }
};
cljs.core.meta = function meta(o) {
  if(function() {
    var G__425233 = o;
    if(G__425233) {
      var bit__3911__auto__ = G__425233.cljs$lang$protocol_mask$partition0$ & 131072;
      if(bit__3911__auto__ || G__425233.cljs$core$IMeta$) {
        return true
      }else {
        if(!G__425233.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IMeta, G__425233)
        }else {
          return false
        }
      }
    }else {
      return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IMeta, G__425233)
    }
  }()) {
    return cljs.core._meta.call(null, o)
  }else {
    return null
  }
};
cljs.core.peek = function peek(coll) {
  return cljs.core._peek.call(null, coll)
};
cljs.core.pop = function pop(coll) {
  return cljs.core._pop.call(null, coll)
};
cljs.core.disj = function() {
  var disj = null;
  var disj__1 = function(coll) {
    return coll
  };
  var disj__2 = function(coll, k) {
    return cljs.core._disjoin.call(null, coll, k)
  };
  var disj__3 = function() {
    var G__425234__delegate = function(coll, k, ks) {
      while(true) {
        var ret = disj.call(null, coll, k);
        if(cljs.core.truth_(ks)) {
          var G__425235 = ret;
          var G__425236 = cljs.core.first.call(null, ks);
          var G__425237 = cljs.core.next.call(null, ks);
          coll = G__425235;
          k = G__425236;
          ks = G__425237;
          continue
        }else {
          return ret
        }
        break
      }
    };
    var G__425234 = function(coll, k, var_args) {
      var ks = null;
      if(arguments.length > 2) {
        ks = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__425234__delegate.call(this, coll, k, ks)
    };
    G__425234.cljs$lang$maxFixedArity = 2;
    G__425234.cljs$lang$applyTo = function(arglist__425238) {
      var coll = cljs.core.first(arglist__425238);
      arglist__425238 = cljs.core.next(arglist__425238);
      var k = cljs.core.first(arglist__425238);
      var ks = cljs.core.rest(arglist__425238);
      return G__425234__delegate(coll, k, ks)
    };
    G__425234.cljs$core$IFn$_invoke$arity$variadic = G__425234__delegate;
    return G__425234
  }();
  disj = function(coll, k, var_args) {
    var ks = var_args;
    switch(arguments.length) {
      case 1:
        return disj__1.call(this, coll);
      case 2:
        return disj__2.call(this, coll, k);
      default:
        return disj__3.cljs$core$IFn$_invoke$arity$variadic(coll, k, cljs.core.array_seq(arguments, 2))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  disj.cljs$lang$maxFixedArity = 2;
  disj.cljs$lang$applyTo = disj__3.cljs$lang$applyTo;
  disj.cljs$core$IFn$_invoke$arity$1 = disj__1;
  disj.cljs$core$IFn$_invoke$arity$2 = disj__2;
  disj.cljs$core$IFn$_invoke$arity$variadic = disj__3.cljs$core$IFn$_invoke$arity$variadic;
  return disj
}();
cljs.core.string_hash_cache = function() {
  var obj425240 = {};
  return obj425240
}();
cljs.core.string_hash_cache_count = 0;
cljs.core.add_to_string_hash_cache = function add_to_string_hash_cache(k) {
  var h = goog.string.hashCode(k);
  cljs.core.string_hash_cache[k] = h;
  cljs.core.string_hash_cache_count = cljs.core.string_hash_cache_count + 1;
  return h
};
cljs.core.check_string_hash_cache = function check_string_hash_cache(k) {
  if(cljs.core.string_hash_cache_count > 255) {
    cljs.core.string_hash_cache = function() {
      var obj425244 = {};
      return obj425244
    }();
    cljs.core.string_hash_cache_count = 0
  }else {
  }
  var h = cljs.core.string_hash_cache[k];
  if(typeof h === "number") {
    return h
  }else {
    return cljs.core.add_to_string_hash_cache.call(null, k)
  }
};
cljs.core.hash = function hash(o) {
  if(function() {
    var G__425246 = o;
    if(G__425246) {
      var bit__3904__auto__ = G__425246.cljs$lang$protocol_mask$partition0$ & 4194304;
      if(bit__3904__auto__ || G__425246.cljs$core$IHash$) {
        return true
      }else {
        return false
      }
    }else {
      return false
    }
  }()) {
    return cljs.core._hash.call(null, o)
  }else {
    if(typeof o === "number") {
      return Math.floor(o) % 2147483647
    }else {
      if(o === true) {
        return 1
      }else {
        if(o === false) {
          return 0
        }else {
          if(typeof o === "string") {
            return cljs.core.check_string_hash_cache.call(null, o)
          }else {
            if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
              return cljs.core._hash.call(null, o)
            }else {
              return null
            }
          }
        }
      }
    }
  }
};
cljs.core.empty_QMARK_ = function empty_QMARK_(coll) {
  return coll == null || cljs.core.not.call(null, cljs.core.seq.call(null, coll))
};
cljs.core.coll_QMARK_ = function coll_QMARK_(x) {
  if(x == null) {
    return false
  }else {
    var G__425248 = x;
    if(G__425248) {
      var bit__3911__auto__ = G__425248.cljs$lang$protocol_mask$partition0$ & 8;
      if(bit__3911__auto__ || G__425248.cljs$core$ICollection$) {
        return true
      }else {
        if(!G__425248.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ICollection, G__425248)
        }else {
          return false
        }
      }
    }else {
      return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ICollection, G__425248)
    }
  }
};
cljs.core.set_QMARK_ = function set_QMARK_(x) {
  if(x == null) {
    return false
  }else {
    var G__425250 = x;
    if(G__425250) {
      var bit__3911__auto__ = G__425250.cljs$lang$protocol_mask$partition0$ & 4096;
      if(bit__3911__auto__ || G__425250.cljs$core$ISet$) {
        return true
      }else {
        if(!G__425250.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ISet, G__425250)
        }else {
          return false
        }
      }
    }else {
      return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ISet, G__425250)
    }
  }
};
cljs.core.associative_QMARK_ = function associative_QMARK_(x) {
  var G__425252 = x;
  if(G__425252) {
    var bit__3911__auto__ = G__425252.cljs$lang$protocol_mask$partition0$ & 512;
    if(bit__3911__auto__ || G__425252.cljs$core$IAssociative$) {
      return true
    }else {
      if(!G__425252.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IAssociative, G__425252)
      }else {
        return false
      }
    }
  }else {
    return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IAssociative, G__425252)
  }
};
cljs.core.sequential_QMARK_ = function sequential_QMARK_(x) {
  var G__425254 = x;
  if(G__425254) {
    var bit__3911__auto__ = G__425254.cljs$lang$protocol_mask$partition0$ & 16777216;
    if(bit__3911__auto__ || G__425254.cljs$core$ISequential$) {
      return true
    }else {
      if(!G__425254.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ISequential, G__425254)
      }else {
        return false
      }
    }
  }else {
    return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ISequential, G__425254)
  }
};
cljs.core.reduceable_QMARK_ = function reduceable_QMARK_(x) {
  var G__425256 = x;
  if(G__425256) {
    var bit__3911__auto__ = G__425256.cljs$lang$protocol_mask$partition0$ & 524288;
    if(bit__3911__auto__ || G__425256.cljs$core$IReduce$) {
      return true
    }else {
      if(!G__425256.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IReduce, G__425256)
      }else {
        return false
      }
    }
  }else {
    return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IReduce, G__425256)
  }
};
cljs.core.map_QMARK_ = function map_QMARK_(x) {
  if(x == null) {
    return false
  }else {
    var G__425258 = x;
    if(G__425258) {
      var bit__3911__auto__ = G__425258.cljs$lang$protocol_mask$partition0$ & 1024;
      if(bit__3911__auto__ || G__425258.cljs$core$IMap$) {
        return true
      }else {
        if(!G__425258.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IMap, G__425258)
        }else {
          return false
        }
      }
    }else {
      return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IMap, G__425258)
    }
  }
};
cljs.core.vector_QMARK_ = function vector_QMARK_(x) {
  var G__425260 = x;
  if(G__425260) {
    var bit__3911__auto__ = G__425260.cljs$lang$protocol_mask$partition0$ & 16384;
    if(bit__3911__auto__ || G__425260.cljs$core$IVector$) {
      return true
    }else {
      if(!G__425260.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IVector, G__425260)
      }else {
        return false
      }
    }
  }else {
    return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IVector, G__425260)
  }
};
cljs.core.chunked_seq_QMARK_ = function chunked_seq_QMARK_(x) {
  var G__425262 = x;
  if(G__425262) {
    var bit__3904__auto__ = G__425262.cljs$lang$protocol_mask$partition1$ & 512;
    if(bit__3904__auto__ || G__425262.cljs$core$IChunkedSeq$) {
      return true
    }else {
      return false
    }
  }else {
    return false
  }
};
cljs.core.js_obj = function() {
  var js_obj = null;
  var js_obj__0 = function() {
    var obj425266 = {};
    return obj425266
  };
  var js_obj__1 = function() {
    var G__425267__delegate = function(keyvals) {
      return cljs.core.apply.call(null, goog.object.create, keyvals)
    };
    var G__425267 = function(var_args) {
      var keyvals = null;
      if(arguments.length > 0) {
        keyvals = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
      }
      return G__425267__delegate.call(this, keyvals)
    };
    G__425267.cljs$lang$maxFixedArity = 0;
    G__425267.cljs$lang$applyTo = function(arglist__425268) {
      var keyvals = cljs.core.seq(arglist__425268);
      return G__425267__delegate(keyvals)
    };
    G__425267.cljs$core$IFn$_invoke$arity$variadic = G__425267__delegate;
    return G__425267
  }();
  js_obj = function(var_args) {
    var keyvals = var_args;
    switch(arguments.length) {
      case 0:
        return js_obj__0.call(this);
      default:
        return js_obj__1.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq(arguments, 0))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  js_obj.cljs$lang$maxFixedArity = 0;
  js_obj.cljs$lang$applyTo = js_obj__1.cljs$lang$applyTo;
  js_obj.cljs$core$IFn$_invoke$arity$0 = js_obj__0;
  js_obj.cljs$core$IFn$_invoke$arity$variadic = js_obj__1.cljs$core$IFn$_invoke$arity$variadic;
  return js_obj
}();
cljs.core.js_keys = function js_keys(obj) {
  var keys = [];
  goog.object.forEach(obj, function(val, key, obj__$1) {
    return keys.push(key)
  });
  return keys
};
cljs.core.js_delete = function js_delete(obj, key) {
  return delete obj[key]
};
cljs.core.array_copy = function array_copy(from, i, to, j, len) {
  var i__$1 = i;
  var j__$1 = j;
  var len__$1 = len;
  while(true) {
    if(len__$1 === 0) {
      return to
    }else {
      to[j__$1] = from[i__$1];
      var G__425269 = i__$1 + 1;
      var G__425270 = j__$1 + 1;
      var G__425271 = len__$1 - 1;
      i__$1 = G__425269;
      j__$1 = G__425270;
      len__$1 = G__425271;
      continue
    }
    break
  }
};
cljs.core.array_copy_downward = function array_copy_downward(from, i, to, j, len) {
  var i__$1 = i + (len - 1);
  var j__$1 = j + (len - 1);
  var len__$1 = len;
  while(true) {
    if(len__$1 === 0) {
      return to
    }else {
      to[j__$1] = from[i__$1];
      var G__425272 = i__$1 - 1;
      var G__425273 = j__$1 - 1;
      var G__425274 = len__$1 - 1;
      i__$1 = G__425272;
      j__$1 = G__425273;
      len__$1 = G__425274;
      continue
    }
    break
  }
};
cljs.core.lookup_sentinel = function() {
  var obj425276 = {};
  return obj425276
}();
cljs.core.false_QMARK_ = function false_QMARK_(x) {
  return x === false
};
cljs.core.true_QMARK_ = function true_QMARK_(x) {
  return x === true
};
cljs.core.undefined_QMARK_ = function undefined_QMARK_(x) {
  return void 0 === x
};
cljs.core.seq_QMARK_ = function seq_QMARK_(s) {
  if(s == null) {
    return false
  }else {
    var G__425278 = s;
    if(G__425278) {
      var bit__3911__auto__ = G__425278.cljs$lang$protocol_mask$partition0$ & 64;
      if(bit__3911__auto__ || G__425278.cljs$core$ISeq$) {
        return true
      }else {
        if(!G__425278.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ISeq, G__425278)
        }else {
          return false
        }
      }
    }else {
      return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ISeq, G__425278)
    }
  }
};
cljs.core.seqable_QMARK_ = function seqable_QMARK_(s) {
  var G__425280 = s;
  if(G__425280) {
    var bit__3911__auto__ = G__425280.cljs$lang$protocol_mask$partition0$ & 8388608;
    if(bit__3911__auto__ || G__425280.cljs$core$ISeqable$) {
      return true
    }else {
      if(!G__425280.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ISeqable, G__425280)
      }else {
        return false
      }
    }
  }else {
    return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ISeqable, G__425280)
  }
};
cljs.core.boolean$ = function boolean$(x) {
  if(cljs.core.truth_(x)) {
    return true
  }else {
    return false
  }
};
cljs.core.ifn_QMARK_ = function ifn_QMARK_(f) {
  var or__3285__auto__ = cljs.core.fn_QMARK_.call(null, f);
  if(or__3285__auto__) {
    return or__3285__auto__
  }else {
    var G__425284 = f;
    if(G__425284) {
      var bit__3911__auto__ = G__425284.cljs$lang$protocol_mask$partition0$ & 1;
      if(bit__3911__auto__ || G__425284.cljs$core$IFn$) {
        return true
      }else {
        if(!G__425284.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IFn, G__425284)
        }else {
          return false
        }
      }
    }else {
      return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IFn, G__425284)
    }
  }
};
cljs.core.integer_QMARK_ = function integer_QMARK_(n) {
  return typeof n === "number" && !isNaN(n) && !(n === Infinity) && parseFloat(n) === parseInt(n, 10)
};
cljs.core.contains_QMARK_ = function contains_QMARK_(coll, v) {
  if(cljs.core.get.call(null, coll, v, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
    return false
  }else {
    return true
  }
};
cljs.core.find = function find(coll, k) {
  if(!(coll == null) && cljs.core.associative_QMARK_.call(null, coll) && cljs.core.contains_QMARK_.call(null, coll, k)) {
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [k, cljs.core.get.call(null, coll, k)], null)
  }else {
    return null
  }
};
cljs.core.distinct_QMARK_ = function() {
  var distinct_QMARK_ = null;
  var distinct_QMARK___1 = function(x) {
    return true
  };
  var distinct_QMARK___2 = function(x, y) {
    return!cljs.core._EQ_.call(null, x, y)
  };
  var distinct_QMARK___3 = function() {
    var G__425285__delegate = function(x, y, more) {
      if(!cljs.core._EQ_.call(null, x, y)) {
        var s = cljs.core.PersistentHashSet.fromArray([y, x], true);
        var xs = more;
        while(true) {
          var x__$1 = cljs.core.first.call(null, xs);
          var etc = cljs.core.next.call(null, xs);
          if(cljs.core.truth_(xs)) {
            if(cljs.core.contains_QMARK_.call(null, s, x__$1)) {
              return false
            }else {
              var G__425286 = cljs.core.conj.call(null, s, x__$1);
              var G__425287 = etc;
              s = G__425286;
              xs = G__425287;
              continue
            }
          }else {
            return true
          }
          break
        }
      }else {
        return false
      }
    };
    var G__425285 = function(x, y, var_args) {
      var more = null;
      if(arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__425285__delegate.call(this, x, y, more)
    };
    G__425285.cljs$lang$maxFixedArity = 2;
    G__425285.cljs$lang$applyTo = function(arglist__425288) {
      var x = cljs.core.first(arglist__425288);
      arglist__425288 = cljs.core.next(arglist__425288);
      var y = cljs.core.first(arglist__425288);
      var more = cljs.core.rest(arglist__425288);
      return G__425285__delegate(x, y, more)
    };
    G__425285.cljs$core$IFn$_invoke$arity$variadic = G__425285__delegate;
    return G__425285
  }();
  distinct_QMARK_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return distinct_QMARK___1.call(this, x);
      case 2:
        return distinct_QMARK___2.call(this, x, y);
      default:
        return distinct_QMARK___3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  distinct_QMARK_.cljs$lang$maxFixedArity = 2;
  distinct_QMARK_.cljs$lang$applyTo = distinct_QMARK___3.cljs$lang$applyTo;
  distinct_QMARK_.cljs$core$IFn$_invoke$arity$1 = distinct_QMARK___1;
  distinct_QMARK_.cljs$core$IFn$_invoke$arity$2 = distinct_QMARK___2;
  distinct_QMARK_.cljs$core$IFn$_invoke$arity$variadic = distinct_QMARK___3.cljs$core$IFn$_invoke$arity$variadic;
  return distinct_QMARK_
}();
cljs.core.compare = function compare(x, y) {
  if(x === y) {
    return 0
  }else {
    if(x == null) {
      return-1
    }else {
      if(y == null) {
        return 1
      }else {
        if(cljs.core.type.call(null, x) === cljs.core.type.call(null, y)) {
          if(function() {
            var G__425290 = x;
            if(G__425290) {
              var bit__3904__auto__ = G__425290.cljs$lang$protocol_mask$partition1$ & 2048;
              if(bit__3904__auto__ || G__425290.cljs$core$IComparable$) {
                return true
              }else {
                return false
              }
            }else {
              return false
            }
          }()) {
            return cljs.core._compare.call(null, x, y)
          }else {
            return goog.array.defaultCompare(x, y)
          }
        }else {
          if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
            throw new Error("compare on non-nil objects of different types");
          }else {
            return null
          }
        }
      }
    }
  }
};
cljs.core.compare_indexed = function() {
  var compare_indexed = null;
  var compare_indexed__2 = function(xs, ys) {
    var xl = cljs.core.count.call(null, xs);
    var yl = cljs.core.count.call(null, ys);
    if(xl < yl) {
      return-1
    }else {
      if(xl > yl) {
        return 1
      }else {
        if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          return compare_indexed.call(null, xs, ys, xl, 0)
        }else {
          return null
        }
      }
    }
  };
  var compare_indexed__4 = function(xs, ys, len, n) {
    while(true) {
      var d = cljs.core.compare.call(null, cljs.core.nth.call(null, xs, n), cljs.core.nth.call(null, ys, n));
      if(d === 0 && n + 1 < len) {
        var G__425291 = xs;
        var G__425292 = ys;
        var G__425293 = len;
        var G__425294 = n + 1;
        xs = G__425291;
        ys = G__425292;
        len = G__425293;
        n = G__425294;
        continue
      }else {
        return d
      }
      break
    }
  };
  compare_indexed = function(xs, ys, len, n) {
    switch(arguments.length) {
      case 2:
        return compare_indexed__2.call(this, xs, ys);
      case 4:
        return compare_indexed__4.call(this, xs, ys, len, n)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  compare_indexed.cljs$core$IFn$_invoke$arity$2 = compare_indexed__2;
  compare_indexed.cljs$core$IFn$_invoke$arity$4 = compare_indexed__4;
  return compare_indexed
}();
cljs.core.fn__GT_comparator = function fn__GT_comparator(f) {
  if(cljs.core._EQ_.call(null, f, cljs.core.compare)) {
    return cljs.core.compare
  }else {
    return function(x, y) {
      var r = f.call(null, x, y);
      if(typeof r === "number") {
        return r
      }else {
        if(cljs.core.truth_(r)) {
          return-1
        }else {
          if(cljs.core.truth_(f.call(null, y, x))) {
            return 1
          }else {
            return 0
          }
        }
      }
    }
  }
};
cljs.core.sort = function() {
  var sort = null;
  var sort__1 = function(coll) {
    return sort.call(null, cljs.core.compare, coll)
  };
  var sort__2 = function(comp, coll) {
    if(cljs.core.seq.call(null, coll)) {
      var a = cljs.core.to_array.call(null, coll);
      goog.array.stableSort(a, cljs.core.fn__GT_comparator.call(null, comp));
      return cljs.core.seq.call(null, a)
    }else {
      return cljs.core.List.EMPTY
    }
  };
  sort = function(comp, coll) {
    switch(arguments.length) {
      case 1:
        return sort__1.call(this, comp);
      case 2:
        return sort__2.call(this, comp, coll)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  sort.cljs$core$IFn$_invoke$arity$1 = sort__1;
  sort.cljs$core$IFn$_invoke$arity$2 = sort__2;
  return sort
}();
cljs.core.sort_by = function() {
  var sort_by = null;
  var sort_by__2 = function(keyfn, coll) {
    return sort_by.call(null, keyfn, cljs.core.compare, coll)
  };
  var sort_by__3 = function(keyfn, comp, coll) {
    return cljs.core.sort.call(null, function(x, y) {
      return cljs.core.fn__GT_comparator.call(null, comp).call(null, keyfn.call(null, x), keyfn.call(null, y))
    }, coll)
  };
  sort_by = function(keyfn, comp, coll) {
    switch(arguments.length) {
      case 2:
        return sort_by__2.call(this, keyfn, comp);
      case 3:
        return sort_by__3.call(this, keyfn, comp, coll)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  sort_by.cljs$core$IFn$_invoke$arity$2 = sort_by__2;
  sort_by.cljs$core$IFn$_invoke$arity$3 = sort_by__3;
  return sort_by
}();
cljs.core.seq_reduce = function() {
  var seq_reduce = null;
  var seq_reduce__2 = function(f, coll) {
    var temp__4090__auto__ = cljs.core.seq.call(null, coll);
    if(temp__4090__auto__) {
      var s = temp__4090__auto__;
      return cljs.core.reduce.call(null, f, cljs.core.first.call(null, s), cljs.core.next.call(null, s))
    }else {
      return f.call(null)
    }
  };
  var seq_reduce__3 = function(f, val, coll) {
    var val__$1 = val;
    var coll__$1 = cljs.core.seq.call(null, coll);
    while(true) {
      if(coll__$1) {
        var nval = f.call(null, val__$1, cljs.core.first.call(null, coll__$1));
        if(cljs.core.reduced_QMARK_.call(null, nval)) {
          return cljs.core.deref.call(null, nval)
        }else {
          var G__425295 = nval;
          var G__425296 = cljs.core.next.call(null, coll__$1);
          val__$1 = G__425295;
          coll__$1 = G__425296;
          continue
        }
      }else {
        return val__$1
      }
      break
    }
  };
  seq_reduce = function(f, val, coll) {
    switch(arguments.length) {
      case 2:
        return seq_reduce__2.call(this, f, val);
      case 3:
        return seq_reduce__3.call(this, f, val, coll)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  seq_reduce.cljs$core$IFn$_invoke$arity$2 = seq_reduce__2;
  seq_reduce.cljs$core$IFn$_invoke$arity$3 = seq_reduce__3;
  return seq_reduce
}();
cljs.core.shuffle = function shuffle(coll) {
  var a = cljs.core.to_array.call(null, coll);
  goog.array.shuffle(a);
  return cljs.core.vec.call(null, a)
};
cljs.core.reduce = function() {
  var reduce = null;
  var reduce__2 = function(f, coll) {
    if(function() {
      var G__425299 = coll;
      if(G__425299) {
        var bit__3904__auto__ = G__425299.cljs$lang$protocol_mask$partition0$ & 524288;
        if(bit__3904__auto__ || G__425299.cljs$core$IReduce$) {
          return true
        }else {
          return false
        }
      }else {
        return false
      }
    }()) {
      return cljs.core._reduce.call(null, coll, f)
    }else {
      if(coll instanceof Array) {
        return cljs.core.array_reduce.call(null, coll, f)
      }else {
        if(typeof coll === "string") {
          return cljs.core.array_reduce.call(null, coll, f)
        }else {
          if(cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IReduce, coll)) {
            return cljs.core._reduce.call(null, coll, f)
          }else {
            if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
              return cljs.core.seq_reduce.call(null, f, coll)
            }else {
              return null
            }
          }
        }
      }
    }
  };
  var reduce__3 = function(f, val, coll) {
    if(function() {
      var G__425300 = coll;
      if(G__425300) {
        var bit__3904__auto__ = G__425300.cljs$lang$protocol_mask$partition0$ & 524288;
        if(bit__3904__auto__ || G__425300.cljs$core$IReduce$) {
          return true
        }else {
          return false
        }
      }else {
        return false
      }
    }()) {
      return cljs.core._reduce.call(null, coll, f, val)
    }else {
      if(coll instanceof Array) {
        return cljs.core.array_reduce.call(null, coll, f, val)
      }else {
        if(typeof coll === "string") {
          return cljs.core.array_reduce.call(null, coll, f, val)
        }else {
          if(cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IReduce, coll)) {
            return cljs.core._reduce.call(null, coll, f, val)
          }else {
            if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
              return cljs.core.seq_reduce.call(null, f, val, coll)
            }else {
              return null
            }
          }
        }
      }
    }
  };
  reduce = function(f, val, coll) {
    switch(arguments.length) {
      case 2:
        return reduce__2.call(this, f, val);
      case 3:
        return reduce__3.call(this, f, val, coll)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  reduce.cljs$core$IFn$_invoke$arity$2 = reduce__2;
  reduce.cljs$core$IFn$_invoke$arity$3 = reduce__3;
  return reduce
}();
cljs.core.reduce_kv = function reduce_kv(f, init, coll) {
  return cljs.core._kv_reduce.call(null, coll, f, init)
};
cljs.core._PLUS_ = function() {
  var _PLUS_ = null;
  var _PLUS___0 = function() {
    return 0
  };
  var _PLUS___1 = function(x) {
    return x
  };
  var _PLUS___2 = function(x, y) {
    return x + y
  };
  var _PLUS___3 = function() {
    var G__425301__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, _PLUS_, x + y, more)
    };
    var G__425301 = function(x, y, var_args) {
      var more = null;
      if(arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__425301__delegate.call(this, x, y, more)
    };
    G__425301.cljs$lang$maxFixedArity = 2;
    G__425301.cljs$lang$applyTo = function(arglist__425302) {
      var x = cljs.core.first(arglist__425302);
      arglist__425302 = cljs.core.next(arglist__425302);
      var y = cljs.core.first(arglist__425302);
      var more = cljs.core.rest(arglist__425302);
      return G__425301__delegate(x, y, more)
    };
    G__425301.cljs$core$IFn$_invoke$arity$variadic = G__425301__delegate;
    return G__425301
  }();
  _PLUS_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 0:
        return _PLUS___0.call(this);
      case 1:
        return _PLUS___1.call(this, x);
      case 2:
        return _PLUS___2.call(this, x, y);
      default:
        return _PLUS___3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _PLUS_.cljs$lang$maxFixedArity = 2;
  _PLUS_.cljs$lang$applyTo = _PLUS___3.cljs$lang$applyTo;
  _PLUS_.cljs$core$IFn$_invoke$arity$0 = _PLUS___0;
  _PLUS_.cljs$core$IFn$_invoke$arity$1 = _PLUS___1;
  _PLUS_.cljs$core$IFn$_invoke$arity$2 = _PLUS___2;
  _PLUS_.cljs$core$IFn$_invoke$arity$variadic = _PLUS___3.cljs$core$IFn$_invoke$arity$variadic;
  return _PLUS_
}();
cljs.core._ = function() {
  var _ = null;
  var ___1 = function(x) {
    return-x
  };
  var ___2 = function(x, y) {
    return x - y
  };
  var ___3 = function() {
    var G__425303__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, _, x - y, more)
    };
    var G__425303 = function(x, y, var_args) {
      var more = null;
      if(arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__425303__delegate.call(this, x, y, more)
    };
    G__425303.cljs$lang$maxFixedArity = 2;
    G__425303.cljs$lang$applyTo = function(arglist__425304) {
      var x = cljs.core.first(arglist__425304);
      arglist__425304 = cljs.core.next(arglist__425304);
      var y = cljs.core.first(arglist__425304);
      var more = cljs.core.rest(arglist__425304);
      return G__425303__delegate(x, y, more)
    };
    G__425303.cljs$core$IFn$_invoke$arity$variadic = G__425303__delegate;
    return G__425303
  }();
  _ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return ___1.call(this, x);
      case 2:
        return ___2.call(this, x, y);
      default:
        return ___3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _.cljs$lang$maxFixedArity = 2;
  _.cljs$lang$applyTo = ___3.cljs$lang$applyTo;
  _.cljs$core$IFn$_invoke$arity$1 = ___1;
  _.cljs$core$IFn$_invoke$arity$2 = ___2;
  _.cljs$core$IFn$_invoke$arity$variadic = ___3.cljs$core$IFn$_invoke$arity$variadic;
  return _
}();
cljs.core._STAR_ = function() {
  var _STAR_ = null;
  var _STAR___0 = function() {
    return 1
  };
  var _STAR___1 = function(x) {
    return x
  };
  var _STAR___2 = function(x, y) {
    return x * y
  };
  var _STAR___3 = function() {
    var G__425305__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, _STAR_, x * y, more)
    };
    var G__425305 = function(x, y, var_args) {
      var more = null;
      if(arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__425305__delegate.call(this, x, y, more)
    };
    G__425305.cljs$lang$maxFixedArity = 2;
    G__425305.cljs$lang$applyTo = function(arglist__425306) {
      var x = cljs.core.first(arglist__425306);
      arglist__425306 = cljs.core.next(arglist__425306);
      var y = cljs.core.first(arglist__425306);
      var more = cljs.core.rest(arglist__425306);
      return G__425305__delegate(x, y, more)
    };
    G__425305.cljs$core$IFn$_invoke$arity$variadic = G__425305__delegate;
    return G__425305
  }();
  _STAR_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 0:
        return _STAR___0.call(this);
      case 1:
        return _STAR___1.call(this, x);
      case 2:
        return _STAR___2.call(this, x, y);
      default:
        return _STAR___3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _STAR_.cljs$lang$maxFixedArity = 2;
  _STAR_.cljs$lang$applyTo = _STAR___3.cljs$lang$applyTo;
  _STAR_.cljs$core$IFn$_invoke$arity$0 = _STAR___0;
  _STAR_.cljs$core$IFn$_invoke$arity$1 = _STAR___1;
  _STAR_.cljs$core$IFn$_invoke$arity$2 = _STAR___2;
  _STAR_.cljs$core$IFn$_invoke$arity$variadic = _STAR___3.cljs$core$IFn$_invoke$arity$variadic;
  return _STAR_
}();
cljs.core._SLASH_ = function() {
  var _SLASH_ = null;
  var _SLASH___1 = function(x) {
    return _SLASH_.call(null, 1, x)
  };
  var _SLASH___2 = function(x, y) {
    return x / y
  };
  var _SLASH___3 = function() {
    var G__425307__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, _SLASH_, _SLASH_.call(null, x, y), more)
    };
    var G__425307 = function(x, y, var_args) {
      var more = null;
      if(arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__425307__delegate.call(this, x, y, more)
    };
    G__425307.cljs$lang$maxFixedArity = 2;
    G__425307.cljs$lang$applyTo = function(arglist__425308) {
      var x = cljs.core.first(arglist__425308);
      arglist__425308 = cljs.core.next(arglist__425308);
      var y = cljs.core.first(arglist__425308);
      var more = cljs.core.rest(arglist__425308);
      return G__425307__delegate(x, y, more)
    };
    G__425307.cljs$core$IFn$_invoke$arity$variadic = G__425307__delegate;
    return G__425307
  }();
  _SLASH_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return _SLASH___1.call(this, x);
      case 2:
        return _SLASH___2.call(this, x, y);
      default:
        return _SLASH___3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _SLASH_.cljs$lang$maxFixedArity = 2;
  _SLASH_.cljs$lang$applyTo = _SLASH___3.cljs$lang$applyTo;
  _SLASH_.cljs$core$IFn$_invoke$arity$1 = _SLASH___1;
  _SLASH_.cljs$core$IFn$_invoke$arity$2 = _SLASH___2;
  _SLASH_.cljs$core$IFn$_invoke$arity$variadic = _SLASH___3.cljs$core$IFn$_invoke$arity$variadic;
  return _SLASH_
}();
cljs.core._LT_ = function() {
  var _LT_ = null;
  var _LT___1 = function(x) {
    return true
  };
  var _LT___2 = function(x, y) {
    return x < y
  };
  var _LT___3 = function() {
    var G__425309__delegate = function(x, y, more) {
      while(true) {
        if(x < y) {
          if(cljs.core.next.call(null, more)) {
            var G__425310 = y;
            var G__425311 = cljs.core.first.call(null, more);
            var G__425312 = cljs.core.next.call(null, more);
            x = G__425310;
            y = G__425311;
            more = G__425312;
            continue
          }else {
            return y < cljs.core.first.call(null, more)
          }
        }else {
          return false
        }
        break
      }
    };
    var G__425309 = function(x, y, var_args) {
      var more = null;
      if(arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__425309__delegate.call(this, x, y, more)
    };
    G__425309.cljs$lang$maxFixedArity = 2;
    G__425309.cljs$lang$applyTo = function(arglist__425313) {
      var x = cljs.core.first(arglist__425313);
      arglist__425313 = cljs.core.next(arglist__425313);
      var y = cljs.core.first(arglist__425313);
      var more = cljs.core.rest(arglist__425313);
      return G__425309__delegate(x, y, more)
    };
    G__425309.cljs$core$IFn$_invoke$arity$variadic = G__425309__delegate;
    return G__425309
  }();
  _LT_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return _LT___1.call(this, x);
      case 2:
        return _LT___2.call(this, x, y);
      default:
        return _LT___3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _LT_.cljs$lang$maxFixedArity = 2;
  _LT_.cljs$lang$applyTo = _LT___3.cljs$lang$applyTo;
  _LT_.cljs$core$IFn$_invoke$arity$1 = _LT___1;
  _LT_.cljs$core$IFn$_invoke$arity$2 = _LT___2;
  _LT_.cljs$core$IFn$_invoke$arity$variadic = _LT___3.cljs$core$IFn$_invoke$arity$variadic;
  return _LT_
}();
cljs.core._LT__EQ_ = function() {
  var _LT__EQ_ = null;
  var _LT__EQ___1 = function(x) {
    return true
  };
  var _LT__EQ___2 = function(x, y) {
    return x <= y
  };
  var _LT__EQ___3 = function() {
    var G__425314__delegate = function(x, y, more) {
      while(true) {
        if(x <= y) {
          if(cljs.core.next.call(null, more)) {
            var G__425315 = y;
            var G__425316 = cljs.core.first.call(null, more);
            var G__425317 = cljs.core.next.call(null, more);
            x = G__425315;
            y = G__425316;
            more = G__425317;
            continue
          }else {
            return y <= cljs.core.first.call(null, more)
          }
        }else {
          return false
        }
        break
      }
    };
    var G__425314 = function(x, y, var_args) {
      var more = null;
      if(arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__425314__delegate.call(this, x, y, more)
    };
    G__425314.cljs$lang$maxFixedArity = 2;
    G__425314.cljs$lang$applyTo = function(arglist__425318) {
      var x = cljs.core.first(arglist__425318);
      arglist__425318 = cljs.core.next(arglist__425318);
      var y = cljs.core.first(arglist__425318);
      var more = cljs.core.rest(arglist__425318);
      return G__425314__delegate(x, y, more)
    };
    G__425314.cljs$core$IFn$_invoke$arity$variadic = G__425314__delegate;
    return G__425314
  }();
  _LT__EQ_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return _LT__EQ___1.call(this, x);
      case 2:
        return _LT__EQ___2.call(this, x, y);
      default:
        return _LT__EQ___3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _LT__EQ_.cljs$lang$maxFixedArity = 2;
  _LT__EQ_.cljs$lang$applyTo = _LT__EQ___3.cljs$lang$applyTo;
  _LT__EQ_.cljs$core$IFn$_invoke$arity$1 = _LT__EQ___1;
  _LT__EQ_.cljs$core$IFn$_invoke$arity$2 = _LT__EQ___2;
  _LT__EQ_.cljs$core$IFn$_invoke$arity$variadic = _LT__EQ___3.cljs$core$IFn$_invoke$arity$variadic;
  return _LT__EQ_
}();
cljs.core._GT_ = function() {
  var _GT_ = null;
  var _GT___1 = function(x) {
    return true
  };
  var _GT___2 = function(x, y) {
    return x > y
  };
  var _GT___3 = function() {
    var G__425319__delegate = function(x, y, more) {
      while(true) {
        if(x > y) {
          if(cljs.core.next.call(null, more)) {
            var G__425320 = y;
            var G__425321 = cljs.core.first.call(null, more);
            var G__425322 = cljs.core.next.call(null, more);
            x = G__425320;
            y = G__425321;
            more = G__425322;
            continue
          }else {
            return y > cljs.core.first.call(null, more)
          }
        }else {
          return false
        }
        break
      }
    };
    var G__425319 = function(x, y, var_args) {
      var more = null;
      if(arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__425319__delegate.call(this, x, y, more)
    };
    G__425319.cljs$lang$maxFixedArity = 2;
    G__425319.cljs$lang$applyTo = function(arglist__425323) {
      var x = cljs.core.first(arglist__425323);
      arglist__425323 = cljs.core.next(arglist__425323);
      var y = cljs.core.first(arglist__425323);
      var more = cljs.core.rest(arglist__425323);
      return G__425319__delegate(x, y, more)
    };
    G__425319.cljs$core$IFn$_invoke$arity$variadic = G__425319__delegate;
    return G__425319
  }();
  _GT_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return _GT___1.call(this, x);
      case 2:
        return _GT___2.call(this, x, y);
      default:
        return _GT___3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _GT_.cljs$lang$maxFixedArity = 2;
  _GT_.cljs$lang$applyTo = _GT___3.cljs$lang$applyTo;
  _GT_.cljs$core$IFn$_invoke$arity$1 = _GT___1;
  _GT_.cljs$core$IFn$_invoke$arity$2 = _GT___2;
  _GT_.cljs$core$IFn$_invoke$arity$variadic = _GT___3.cljs$core$IFn$_invoke$arity$variadic;
  return _GT_
}();
cljs.core._GT__EQ_ = function() {
  var _GT__EQ_ = null;
  var _GT__EQ___1 = function(x) {
    return true
  };
  var _GT__EQ___2 = function(x, y) {
    return x >= y
  };
  var _GT__EQ___3 = function() {
    var G__425324__delegate = function(x, y, more) {
      while(true) {
        if(x >= y) {
          if(cljs.core.next.call(null, more)) {
            var G__425325 = y;
            var G__425326 = cljs.core.first.call(null, more);
            var G__425327 = cljs.core.next.call(null, more);
            x = G__425325;
            y = G__425326;
            more = G__425327;
            continue
          }else {
            return y >= cljs.core.first.call(null, more)
          }
        }else {
          return false
        }
        break
      }
    };
    var G__425324 = function(x, y, var_args) {
      var more = null;
      if(arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__425324__delegate.call(this, x, y, more)
    };
    G__425324.cljs$lang$maxFixedArity = 2;
    G__425324.cljs$lang$applyTo = function(arglist__425328) {
      var x = cljs.core.first(arglist__425328);
      arglist__425328 = cljs.core.next(arglist__425328);
      var y = cljs.core.first(arglist__425328);
      var more = cljs.core.rest(arglist__425328);
      return G__425324__delegate(x, y, more)
    };
    G__425324.cljs$core$IFn$_invoke$arity$variadic = G__425324__delegate;
    return G__425324
  }();
  _GT__EQ_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return _GT__EQ___1.call(this, x);
      case 2:
        return _GT__EQ___2.call(this, x, y);
      default:
        return _GT__EQ___3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _GT__EQ_.cljs$lang$maxFixedArity = 2;
  _GT__EQ_.cljs$lang$applyTo = _GT__EQ___3.cljs$lang$applyTo;
  _GT__EQ_.cljs$core$IFn$_invoke$arity$1 = _GT__EQ___1;
  _GT__EQ_.cljs$core$IFn$_invoke$arity$2 = _GT__EQ___2;
  _GT__EQ_.cljs$core$IFn$_invoke$arity$variadic = _GT__EQ___3.cljs$core$IFn$_invoke$arity$variadic;
  return _GT__EQ_
}();
cljs.core.dec = function dec(x) {
  return x - 1
};
cljs.core.max = function() {
  var max = null;
  var max__1 = function(x) {
    return x
  };
  var max__2 = function(x, y) {
    var x__3592__auto__ = x;
    var y__3593__auto__ = y;
    return x__3592__auto__ > y__3593__auto__ ? x__3592__auto__ : y__3593__auto__
  };
  var max__3 = function() {
    var G__425329__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, max, function() {
        var x__3592__auto__ = x;
        var y__3593__auto__ = y;
        return x__3592__auto__ > y__3593__auto__ ? x__3592__auto__ : y__3593__auto__
      }(), more)
    };
    var G__425329 = function(x, y, var_args) {
      var more = null;
      if(arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__425329__delegate.call(this, x, y, more)
    };
    G__425329.cljs$lang$maxFixedArity = 2;
    G__425329.cljs$lang$applyTo = function(arglist__425330) {
      var x = cljs.core.first(arglist__425330);
      arglist__425330 = cljs.core.next(arglist__425330);
      var y = cljs.core.first(arglist__425330);
      var more = cljs.core.rest(arglist__425330);
      return G__425329__delegate(x, y, more)
    };
    G__425329.cljs$core$IFn$_invoke$arity$variadic = G__425329__delegate;
    return G__425329
  }();
  max = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return max__1.call(this, x);
      case 2:
        return max__2.call(this, x, y);
      default:
        return max__3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  max.cljs$lang$maxFixedArity = 2;
  max.cljs$lang$applyTo = max__3.cljs$lang$applyTo;
  max.cljs$core$IFn$_invoke$arity$1 = max__1;
  max.cljs$core$IFn$_invoke$arity$2 = max__2;
  max.cljs$core$IFn$_invoke$arity$variadic = max__3.cljs$core$IFn$_invoke$arity$variadic;
  return max
}();
cljs.core.min = function() {
  var min = null;
  var min__1 = function(x) {
    return x
  };
  var min__2 = function(x, y) {
    var x__3599__auto__ = x;
    var y__3600__auto__ = y;
    return x__3599__auto__ < y__3600__auto__ ? x__3599__auto__ : y__3600__auto__
  };
  var min__3 = function() {
    var G__425331__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, min, function() {
        var x__3599__auto__ = x;
        var y__3600__auto__ = y;
        return x__3599__auto__ < y__3600__auto__ ? x__3599__auto__ : y__3600__auto__
      }(), more)
    };
    var G__425331 = function(x, y, var_args) {
      var more = null;
      if(arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__425331__delegate.call(this, x, y, more)
    };
    G__425331.cljs$lang$maxFixedArity = 2;
    G__425331.cljs$lang$applyTo = function(arglist__425332) {
      var x = cljs.core.first(arglist__425332);
      arglist__425332 = cljs.core.next(arglist__425332);
      var y = cljs.core.first(arglist__425332);
      var more = cljs.core.rest(arglist__425332);
      return G__425331__delegate(x, y, more)
    };
    G__425331.cljs$core$IFn$_invoke$arity$variadic = G__425331__delegate;
    return G__425331
  }();
  min = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return min__1.call(this, x);
      case 2:
        return min__2.call(this, x, y);
      default:
        return min__3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  min.cljs$lang$maxFixedArity = 2;
  min.cljs$lang$applyTo = min__3.cljs$lang$applyTo;
  min.cljs$core$IFn$_invoke$arity$1 = min__1;
  min.cljs$core$IFn$_invoke$arity$2 = min__2;
  min.cljs$core$IFn$_invoke$arity$variadic = min__3.cljs$core$IFn$_invoke$arity$variadic;
  return min
}();
cljs.core.byte$ = function byte$(x) {
  return x
};
cljs.core.char$ = function char$(x) {
  if(typeof x === "number") {
    return String.fromCharCode(x)
  }else {
    if(typeof x === "string" && x.length === 1) {
      return x
    }else {
      if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        throw new Error("Argument to char must be a character or number");
      }else {
        return null
      }
    }
  }
};
cljs.core.short$ = function short$(x) {
  return x
};
cljs.core.float$ = function float$(x) {
  return x
};
cljs.core.double$ = function double$(x) {
  return x
};
cljs.core.unchecked_byte = function unchecked_byte(x) {
  return x
};
cljs.core.unchecked_char = function unchecked_char(x) {
  return x
};
cljs.core.unchecked_short = function unchecked_short(x) {
  return x
};
cljs.core.unchecked_float = function unchecked_float(x) {
  return x
};
cljs.core.unchecked_double = function unchecked_double(x) {
  return x
};
cljs.core.unchecked_add = function() {
  var unchecked_add = null;
  var unchecked_add__0 = function() {
    return 0
  };
  var unchecked_add__1 = function(x) {
    return x
  };
  var unchecked_add__2 = function(x, y) {
    return x + y
  };
  var unchecked_add__3 = function() {
    var G__425333__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, unchecked_add, x + y, more)
    };
    var G__425333 = function(x, y, var_args) {
      var more = null;
      if(arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__425333__delegate.call(this, x, y, more)
    };
    G__425333.cljs$lang$maxFixedArity = 2;
    G__425333.cljs$lang$applyTo = function(arglist__425334) {
      var x = cljs.core.first(arglist__425334);
      arglist__425334 = cljs.core.next(arglist__425334);
      var y = cljs.core.first(arglist__425334);
      var more = cljs.core.rest(arglist__425334);
      return G__425333__delegate(x, y, more)
    };
    G__425333.cljs$core$IFn$_invoke$arity$variadic = G__425333__delegate;
    return G__425333
  }();
  unchecked_add = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 0:
        return unchecked_add__0.call(this);
      case 1:
        return unchecked_add__1.call(this, x);
      case 2:
        return unchecked_add__2.call(this, x, y);
      default:
        return unchecked_add__3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  unchecked_add.cljs$lang$maxFixedArity = 2;
  unchecked_add.cljs$lang$applyTo = unchecked_add__3.cljs$lang$applyTo;
  unchecked_add.cljs$core$IFn$_invoke$arity$0 = unchecked_add__0;
  unchecked_add.cljs$core$IFn$_invoke$arity$1 = unchecked_add__1;
  unchecked_add.cljs$core$IFn$_invoke$arity$2 = unchecked_add__2;
  unchecked_add.cljs$core$IFn$_invoke$arity$variadic = unchecked_add__3.cljs$core$IFn$_invoke$arity$variadic;
  return unchecked_add
}();
cljs.core.unchecked_add_int = function() {
  var unchecked_add_int = null;
  var unchecked_add_int__0 = function() {
    return 0
  };
  var unchecked_add_int__1 = function(x) {
    return x
  };
  var unchecked_add_int__2 = function(x, y) {
    return x + y
  };
  var unchecked_add_int__3 = function() {
    var G__425335__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, unchecked_add_int, x + y, more)
    };
    var G__425335 = function(x, y, var_args) {
      var more = null;
      if(arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__425335__delegate.call(this, x, y, more)
    };
    G__425335.cljs$lang$maxFixedArity = 2;
    G__425335.cljs$lang$applyTo = function(arglist__425336) {
      var x = cljs.core.first(arglist__425336);
      arglist__425336 = cljs.core.next(arglist__425336);
      var y = cljs.core.first(arglist__425336);
      var more = cljs.core.rest(arglist__425336);
      return G__425335__delegate(x, y, more)
    };
    G__425335.cljs$core$IFn$_invoke$arity$variadic = G__425335__delegate;
    return G__425335
  }();
  unchecked_add_int = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 0:
        return unchecked_add_int__0.call(this);
      case 1:
        return unchecked_add_int__1.call(this, x);
      case 2:
        return unchecked_add_int__2.call(this, x, y);
      default:
        return unchecked_add_int__3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  unchecked_add_int.cljs$lang$maxFixedArity = 2;
  unchecked_add_int.cljs$lang$applyTo = unchecked_add_int__3.cljs$lang$applyTo;
  unchecked_add_int.cljs$core$IFn$_invoke$arity$0 = unchecked_add_int__0;
  unchecked_add_int.cljs$core$IFn$_invoke$arity$1 = unchecked_add_int__1;
  unchecked_add_int.cljs$core$IFn$_invoke$arity$2 = unchecked_add_int__2;
  unchecked_add_int.cljs$core$IFn$_invoke$arity$variadic = unchecked_add_int__3.cljs$core$IFn$_invoke$arity$variadic;
  return unchecked_add_int
}();
cljs.core.unchecked_dec = function unchecked_dec(x) {
  return x - 1
};
cljs.core.unchecked_dec_int = function unchecked_dec_int(x) {
  return x - 1
};
cljs.core.unchecked_divide_int = function() {
  var unchecked_divide_int = null;
  var unchecked_divide_int__1 = function(x) {
    return unchecked_divide_int.call(null, 1, x)
  };
  var unchecked_divide_int__2 = function(x, y) {
    return x / y
  };
  var unchecked_divide_int__3 = function() {
    var G__425337__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, unchecked_divide_int, unchecked_divide_int.call(null, x, y), more)
    };
    var G__425337 = function(x, y, var_args) {
      var more = null;
      if(arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__425337__delegate.call(this, x, y, more)
    };
    G__425337.cljs$lang$maxFixedArity = 2;
    G__425337.cljs$lang$applyTo = function(arglist__425338) {
      var x = cljs.core.first(arglist__425338);
      arglist__425338 = cljs.core.next(arglist__425338);
      var y = cljs.core.first(arglist__425338);
      var more = cljs.core.rest(arglist__425338);
      return G__425337__delegate(x, y, more)
    };
    G__425337.cljs$core$IFn$_invoke$arity$variadic = G__425337__delegate;
    return G__425337
  }();
  unchecked_divide_int = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return unchecked_divide_int__1.call(this, x);
      case 2:
        return unchecked_divide_int__2.call(this, x, y);
      default:
        return unchecked_divide_int__3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  unchecked_divide_int.cljs$lang$maxFixedArity = 2;
  unchecked_divide_int.cljs$lang$applyTo = unchecked_divide_int__3.cljs$lang$applyTo;
  unchecked_divide_int.cljs$core$IFn$_invoke$arity$1 = unchecked_divide_int__1;
  unchecked_divide_int.cljs$core$IFn$_invoke$arity$2 = unchecked_divide_int__2;
  unchecked_divide_int.cljs$core$IFn$_invoke$arity$variadic = unchecked_divide_int__3.cljs$core$IFn$_invoke$arity$variadic;
  return unchecked_divide_int
}();
cljs.core.unchecked_inc = function unchecked_inc(x) {
  return x + 1
};
cljs.core.unchecked_inc_int = function unchecked_inc_int(x) {
  return x + 1
};
cljs.core.unchecked_multiply = function() {
  var unchecked_multiply = null;
  var unchecked_multiply__0 = function() {
    return 1
  };
  var unchecked_multiply__1 = function(x) {
    return x
  };
  var unchecked_multiply__2 = function(x, y) {
    return x * y
  };
  var unchecked_multiply__3 = function() {
    var G__425339__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, unchecked_multiply, x * y, more)
    };
    var G__425339 = function(x, y, var_args) {
      var more = null;
      if(arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__425339__delegate.call(this, x, y, more)
    };
    G__425339.cljs$lang$maxFixedArity = 2;
    G__425339.cljs$lang$applyTo = function(arglist__425340) {
      var x = cljs.core.first(arglist__425340);
      arglist__425340 = cljs.core.next(arglist__425340);
      var y = cljs.core.first(arglist__425340);
      var more = cljs.core.rest(arglist__425340);
      return G__425339__delegate(x, y, more)
    };
    G__425339.cljs$core$IFn$_invoke$arity$variadic = G__425339__delegate;
    return G__425339
  }();
  unchecked_multiply = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 0:
        return unchecked_multiply__0.call(this);
      case 1:
        return unchecked_multiply__1.call(this, x);
      case 2:
        return unchecked_multiply__2.call(this, x, y);
      default:
        return unchecked_multiply__3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  unchecked_multiply.cljs$lang$maxFixedArity = 2;
  unchecked_multiply.cljs$lang$applyTo = unchecked_multiply__3.cljs$lang$applyTo;
  unchecked_multiply.cljs$core$IFn$_invoke$arity$0 = unchecked_multiply__0;
  unchecked_multiply.cljs$core$IFn$_invoke$arity$1 = unchecked_multiply__1;
  unchecked_multiply.cljs$core$IFn$_invoke$arity$2 = unchecked_multiply__2;
  unchecked_multiply.cljs$core$IFn$_invoke$arity$variadic = unchecked_multiply__3.cljs$core$IFn$_invoke$arity$variadic;
  return unchecked_multiply
}();
cljs.core.unchecked_multiply_int = function() {
  var unchecked_multiply_int = null;
  var unchecked_multiply_int__0 = function() {
    return 1
  };
  var unchecked_multiply_int__1 = function(x) {
    return x
  };
  var unchecked_multiply_int__2 = function(x, y) {
    return x * y
  };
  var unchecked_multiply_int__3 = function() {
    var G__425341__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, unchecked_multiply_int, x * y, more)
    };
    var G__425341 = function(x, y, var_args) {
      var more = null;
      if(arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__425341__delegate.call(this, x, y, more)
    };
    G__425341.cljs$lang$maxFixedArity = 2;
    G__425341.cljs$lang$applyTo = function(arglist__425342) {
      var x = cljs.core.first(arglist__425342);
      arglist__425342 = cljs.core.next(arglist__425342);
      var y = cljs.core.first(arglist__425342);
      var more = cljs.core.rest(arglist__425342);
      return G__425341__delegate(x, y, more)
    };
    G__425341.cljs$core$IFn$_invoke$arity$variadic = G__425341__delegate;
    return G__425341
  }();
  unchecked_multiply_int = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 0:
        return unchecked_multiply_int__0.call(this);
      case 1:
        return unchecked_multiply_int__1.call(this, x);
      case 2:
        return unchecked_multiply_int__2.call(this, x, y);
      default:
        return unchecked_multiply_int__3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  unchecked_multiply_int.cljs$lang$maxFixedArity = 2;
  unchecked_multiply_int.cljs$lang$applyTo = unchecked_multiply_int__3.cljs$lang$applyTo;
  unchecked_multiply_int.cljs$core$IFn$_invoke$arity$0 = unchecked_multiply_int__0;
  unchecked_multiply_int.cljs$core$IFn$_invoke$arity$1 = unchecked_multiply_int__1;
  unchecked_multiply_int.cljs$core$IFn$_invoke$arity$2 = unchecked_multiply_int__2;
  unchecked_multiply_int.cljs$core$IFn$_invoke$arity$variadic = unchecked_multiply_int__3.cljs$core$IFn$_invoke$arity$variadic;
  return unchecked_multiply_int
}();
cljs.core.unchecked_negate = function unchecked_negate(x) {
  return-x
};
cljs.core.unchecked_negate_int = function unchecked_negate_int(x) {
  return-x
};
cljs.core.unchecked_remainder_int = function unchecked_remainder_int(x, n) {
  return cljs.core.mod.call(null, x, n)
};
cljs.core.unchecked_substract = function() {
  var unchecked_substract = null;
  var unchecked_substract__1 = function(x) {
    return-x
  };
  var unchecked_substract__2 = function(x, y) {
    return x - y
  };
  var unchecked_substract__3 = function() {
    var G__425343__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, unchecked_substract, x - y, more)
    };
    var G__425343 = function(x, y, var_args) {
      var more = null;
      if(arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__425343__delegate.call(this, x, y, more)
    };
    G__425343.cljs$lang$maxFixedArity = 2;
    G__425343.cljs$lang$applyTo = function(arglist__425344) {
      var x = cljs.core.first(arglist__425344);
      arglist__425344 = cljs.core.next(arglist__425344);
      var y = cljs.core.first(arglist__425344);
      var more = cljs.core.rest(arglist__425344);
      return G__425343__delegate(x, y, more)
    };
    G__425343.cljs$core$IFn$_invoke$arity$variadic = G__425343__delegate;
    return G__425343
  }();
  unchecked_substract = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return unchecked_substract__1.call(this, x);
      case 2:
        return unchecked_substract__2.call(this, x, y);
      default:
        return unchecked_substract__3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  unchecked_substract.cljs$lang$maxFixedArity = 2;
  unchecked_substract.cljs$lang$applyTo = unchecked_substract__3.cljs$lang$applyTo;
  unchecked_substract.cljs$core$IFn$_invoke$arity$1 = unchecked_substract__1;
  unchecked_substract.cljs$core$IFn$_invoke$arity$2 = unchecked_substract__2;
  unchecked_substract.cljs$core$IFn$_invoke$arity$variadic = unchecked_substract__3.cljs$core$IFn$_invoke$arity$variadic;
  return unchecked_substract
}();
cljs.core.unchecked_substract_int = function() {
  var unchecked_substract_int = null;
  var unchecked_substract_int__1 = function(x) {
    return-x
  };
  var unchecked_substract_int__2 = function(x, y) {
    return x - y
  };
  var unchecked_substract_int__3 = function() {
    var G__425345__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, unchecked_substract_int, x - y, more)
    };
    var G__425345 = function(x, y, var_args) {
      var more = null;
      if(arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__425345__delegate.call(this, x, y, more)
    };
    G__425345.cljs$lang$maxFixedArity = 2;
    G__425345.cljs$lang$applyTo = function(arglist__425346) {
      var x = cljs.core.first(arglist__425346);
      arglist__425346 = cljs.core.next(arglist__425346);
      var y = cljs.core.first(arglist__425346);
      var more = cljs.core.rest(arglist__425346);
      return G__425345__delegate(x, y, more)
    };
    G__425345.cljs$core$IFn$_invoke$arity$variadic = G__425345__delegate;
    return G__425345
  }();
  unchecked_substract_int = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return unchecked_substract_int__1.call(this, x);
      case 2:
        return unchecked_substract_int__2.call(this, x, y);
      default:
        return unchecked_substract_int__3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  unchecked_substract_int.cljs$lang$maxFixedArity = 2;
  unchecked_substract_int.cljs$lang$applyTo = unchecked_substract_int__3.cljs$lang$applyTo;
  unchecked_substract_int.cljs$core$IFn$_invoke$arity$1 = unchecked_substract_int__1;
  unchecked_substract_int.cljs$core$IFn$_invoke$arity$2 = unchecked_substract_int__2;
  unchecked_substract_int.cljs$core$IFn$_invoke$arity$variadic = unchecked_substract_int__3.cljs$core$IFn$_invoke$arity$variadic;
  return unchecked_substract_int
}();
cljs.core.fix = function fix(q) {
  if(q >= 0) {
    return Math.floor.call(null, q)
  }else {
    return Math.ceil.call(null, q)
  }
};
cljs.core.int$ = function int$(x) {
  return x | 0
};
cljs.core.unchecked_int = function unchecked_int(x) {
  return cljs.core.fix.call(null, x)
};
cljs.core.long$ = function long$(x) {
  return cljs.core.fix.call(null, x)
};
cljs.core.unchecked_long = function unchecked_long(x) {
  return cljs.core.fix.call(null, x)
};
cljs.core.booleans = function booleans(x) {
  return x
};
cljs.core.bytes = function bytes(x) {
  return x
};
cljs.core.chars = function chars(x) {
  return x
};
cljs.core.shorts = function shorts(x) {
  return x
};
cljs.core.ints = function ints(x) {
  return x
};
cljs.core.floats = function floats(x) {
  return x
};
cljs.core.doubles = function doubles(x) {
  return x
};
cljs.core.longs = function longs(x) {
  return x
};
cljs.core.js_mod = function js_mod(n, d) {
  return n % d
};
cljs.core.mod = function mod(n, d) {
  return(n % d + d) % d
};
cljs.core.quot = function quot(n, d) {
  var rem = n % d;
  return cljs.core.fix.call(null, (n - rem) / d)
};
cljs.core.rem = function rem(n, d) {
  var q = cljs.core.quot.call(null, n, d);
  return n - d * q
};
cljs.core.rand = function() {
  var rand = null;
  var rand__0 = function() {
    return Math.random.call(null)
  };
  var rand__1 = function(n) {
    return n * rand.call(null)
  };
  rand = function(n) {
    switch(arguments.length) {
      case 0:
        return rand__0.call(this);
      case 1:
        return rand__1.call(this, n)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  rand.cljs$core$IFn$_invoke$arity$0 = rand__0;
  rand.cljs$core$IFn$_invoke$arity$1 = rand__1;
  return rand
}();
cljs.core.rand_int = function rand_int(n) {
  return cljs.core.fix.call(null, cljs.core.rand.call(null, n))
};
cljs.core.bit_xor = function bit_xor(x, y) {
  return x ^ y
};
cljs.core.bit_and = function bit_and(x, y) {
  return x & y
};
cljs.core.bit_or = function bit_or(x, y) {
  return x | y
};
cljs.core.bit_and_not = function bit_and_not(x, y) {
  return x & ~y
};
cljs.core.bit_clear = function bit_clear(x, n) {
  return x & ~(1 << n)
};
cljs.core.bit_flip = function bit_flip(x, n) {
  return x ^ 1 << n
};
cljs.core.bit_not = function bit_not(x) {
  return~x
};
cljs.core.bit_set = function bit_set(x, n) {
  return x | 1 << n
};
cljs.core.bit_test = function bit_test(x, n) {
  return(x & 1 << n) != 0
};
cljs.core.bit_shift_left = function bit_shift_left(x, n) {
  return x << n
};
cljs.core.bit_shift_right = function bit_shift_right(x, n) {
  return x >> n
};
cljs.core.bit_shift_right_zero_fill = function bit_shift_right_zero_fill(x, n) {
  return x >>> n
};
cljs.core.unsigned_bit_shift_right = function unsigned_bit_shift_right(x, n) {
  return x >>> n
};
cljs.core.bit_count = function bit_count(v) {
  var v__$1 = v - (v >> 1 & 1431655765);
  var v__$2 = (v__$1 & 858993459) + (v__$1 >> 2 & 858993459);
  return(v__$2 + (v__$2 >> 4) & 252645135) * 16843009 >> 24
};
cljs.core._EQ__EQ_ = function() {
  var _EQ__EQ_ = null;
  var _EQ__EQ___1 = function(x) {
    return true
  };
  var _EQ__EQ___2 = function(x, y) {
    return cljs.core._equiv.call(null, x, y)
  };
  var _EQ__EQ___3 = function() {
    var G__425347__delegate = function(x, y, more) {
      while(true) {
        if(_EQ__EQ_.call(null, x, y)) {
          if(cljs.core.next.call(null, more)) {
            var G__425348 = y;
            var G__425349 = cljs.core.first.call(null, more);
            var G__425350 = cljs.core.next.call(null, more);
            x = G__425348;
            y = G__425349;
            more = G__425350;
            continue
          }else {
            return _EQ__EQ_.call(null, y, cljs.core.first.call(null, more))
          }
        }else {
          return false
        }
        break
      }
    };
    var G__425347 = function(x, y, var_args) {
      var more = null;
      if(arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__425347__delegate.call(this, x, y, more)
    };
    G__425347.cljs$lang$maxFixedArity = 2;
    G__425347.cljs$lang$applyTo = function(arglist__425351) {
      var x = cljs.core.first(arglist__425351);
      arglist__425351 = cljs.core.next(arglist__425351);
      var y = cljs.core.first(arglist__425351);
      var more = cljs.core.rest(arglist__425351);
      return G__425347__delegate(x, y, more)
    };
    G__425347.cljs$core$IFn$_invoke$arity$variadic = G__425347__delegate;
    return G__425347
  }();
  _EQ__EQ_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return _EQ__EQ___1.call(this, x);
      case 2:
        return _EQ__EQ___2.call(this, x, y);
      default:
        return _EQ__EQ___3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _EQ__EQ_.cljs$lang$maxFixedArity = 2;
  _EQ__EQ_.cljs$lang$applyTo = _EQ__EQ___3.cljs$lang$applyTo;
  _EQ__EQ_.cljs$core$IFn$_invoke$arity$1 = _EQ__EQ___1;
  _EQ__EQ_.cljs$core$IFn$_invoke$arity$2 = _EQ__EQ___2;
  _EQ__EQ_.cljs$core$IFn$_invoke$arity$variadic = _EQ__EQ___3.cljs$core$IFn$_invoke$arity$variadic;
  return _EQ__EQ_
}();
cljs.core.pos_QMARK_ = function pos_QMARK_(n) {
  return n > 0
};
cljs.core.zero_QMARK_ = function zero_QMARK_(n) {
  return n === 0
};
cljs.core.neg_QMARK_ = function neg_QMARK_(x) {
  return x < 0
};
cljs.core.nthnext = function nthnext(coll, n) {
  var n__$1 = n;
  var xs = cljs.core.seq.call(null, coll);
  while(true) {
    if(xs && n__$1 > 0) {
      var G__425352 = n__$1 - 1;
      var G__425353 = cljs.core.next.call(null, xs);
      n__$1 = G__425352;
      xs = G__425353;
      continue
    }else {
      return xs
    }
    break
  }
};
cljs.core.str = function() {
  var str = null;
  var str__0 = function() {
    return""
  };
  var str__1 = function(x) {
    if(x == null) {
      return""
    }else {
      return x.toString()
    }
  };
  var str__2 = function() {
    var G__425354__delegate = function(x, ys) {
      var sb = new goog.string.StringBuffer(str.call(null, x));
      var more = ys;
      while(true) {
        if(cljs.core.truth_(more)) {
          var G__425355 = sb.append(str.call(null, cljs.core.first.call(null, more)));
          var G__425356 = cljs.core.next.call(null, more);
          sb = G__425355;
          more = G__425356;
          continue
        }else {
          return sb.toString()
        }
        break
      }
    };
    var G__425354 = function(x, var_args) {
      var ys = null;
      if(arguments.length > 1) {
        ys = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
      }
      return G__425354__delegate.call(this, x, ys)
    };
    G__425354.cljs$lang$maxFixedArity = 1;
    G__425354.cljs$lang$applyTo = function(arglist__425357) {
      var x = cljs.core.first(arglist__425357);
      var ys = cljs.core.rest(arglist__425357);
      return G__425354__delegate(x, ys)
    };
    G__425354.cljs$core$IFn$_invoke$arity$variadic = G__425354__delegate;
    return G__425354
  }();
  str = function(x, var_args) {
    var ys = var_args;
    switch(arguments.length) {
      case 0:
        return str__0.call(this);
      case 1:
        return str__1.call(this, x);
      default:
        return str__2.cljs$core$IFn$_invoke$arity$variadic(x, cljs.core.array_seq(arguments, 1))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  str.cljs$lang$maxFixedArity = 1;
  str.cljs$lang$applyTo = str__2.cljs$lang$applyTo;
  str.cljs$core$IFn$_invoke$arity$0 = str__0;
  str.cljs$core$IFn$_invoke$arity$1 = str__1;
  str.cljs$core$IFn$_invoke$arity$variadic = str__2.cljs$core$IFn$_invoke$arity$variadic;
  return str
}();
cljs.core.subs = function() {
  var subs = null;
  var subs__2 = function(s, start) {
    return s.substring(start)
  };
  var subs__3 = function(s, start, end) {
    return s.substring(start, end)
  };
  subs = function(s, start, end) {
    switch(arguments.length) {
      case 2:
        return subs__2.call(this, s, start);
      case 3:
        return subs__3.call(this, s, start, end)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  subs.cljs$core$IFn$_invoke$arity$2 = subs__2;
  subs.cljs$core$IFn$_invoke$arity$3 = subs__3;
  return subs
}();
cljs.core.equiv_sequential = function equiv_sequential(x, y) {
  return cljs.core.boolean$.call(null, cljs.core.sequential_QMARK_.call(null, y) ? function() {
    var xs = cljs.core.seq.call(null, x);
    var ys = cljs.core.seq.call(null, y);
    while(true) {
      if(xs == null) {
        return ys == null
      }else {
        if(ys == null) {
          return false
        }else {
          if(cljs.core._EQ_.call(null, cljs.core.first.call(null, xs), cljs.core.first.call(null, ys))) {
            var G__425358 = cljs.core.next.call(null, xs);
            var G__425359 = cljs.core.next.call(null, ys);
            xs = G__425358;
            ys = G__425359;
            continue
          }else {
            if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
              return false
            }else {
              return null
            }
          }
        }
      }
      break
    }
  }() : null)
};
cljs.core.hash_combine = function hash_combine(seed, hash) {
  return seed ^ hash + 2654435769 + (seed << 6) + (seed >> 2)
};
cljs.core.hash_coll = function hash_coll(coll) {
  if(cljs.core.seq.call(null, coll)) {
    var res = cljs.core.hash.call(null, cljs.core.first.call(null, coll));
    var s = cljs.core.next.call(null, coll);
    while(true) {
      if(s == null) {
        return res
      }else {
        var G__425360 = cljs.core.hash_combine.call(null, res, cljs.core.hash.call(null, cljs.core.first.call(null, s)));
        var G__425361 = cljs.core.next.call(null, s);
        res = G__425360;
        s = G__425361;
        continue
      }
      break
    }
  }else {
    return 0
  }
};
cljs.core.hash_imap = function hash_imap(m) {
  var h = 0;
  var s = cljs.core.seq.call(null, m);
  while(true) {
    if(s) {
      var e = cljs.core.first.call(null, s);
      var G__425362 = (h + (cljs.core.hash.call(null, cljs.core.key.call(null, e)) ^ cljs.core.hash.call(null, cljs.core.val.call(null, e)))) % 4503599627370496;
      var G__425363 = cljs.core.next.call(null, s);
      h = G__425362;
      s = G__425363;
      continue
    }else {
      return h
    }
    break
  }
};
cljs.core.hash_iset = function hash_iset(s) {
  var h = 0;
  var s__$1 = cljs.core.seq.call(null, s);
  while(true) {
    if(s__$1) {
      var e = cljs.core.first.call(null, s__$1);
      var G__425364 = (h + cljs.core.hash.call(null, e)) % 4503599627370496;
      var G__425365 = cljs.core.next.call(null, s__$1);
      h = G__425364;
      s__$1 = G__425365;
      continue
    }else {
      return h
    }
    break
  }
};
cljs.core.extend_object_BANG_ = function extend_object_BANG_(obj, fn_map) {
  var seq__425372_425378 = cljs.core.seq.call(null, fn_map);
  var chunk__425373_425379 = null;
  var count__425374_425380 = 0;
  var i__425375_425381 = 0;
  while(true) {
    if(i__425375_425381 < count__425374_425380) {
      var vec__425376_425382 = cljs.core._nth.call(null, chunk__425373_425379, i__425375_425381);
      var key_name_425383 = cljs.core.nth.call(null, vec__425376_425382, 0, null);
      var f_425384 = cljs.core.nth.call(null, vec__425376_425382, 1, null);
      var str_name_425385 = cljs.core.name.call(null, key_name_425383);
      obj[str_name_425385] = f_425384;
      var G__425386 = seq__425372_425378;
      var G__425387 = chunk__425373_425379;
      var G__425388 = count__425374_425380;
      var G__425389 = i__425375_425381 + 1;
      seq__425372_425378 = G__425386;
      chunk__425373_425379 = G__425387;
      count__425374_425380 = G__425388;
      i__425375_425381 = G__425389;
      continue
    }else {
      var temp__4092__auto___425390 = cljs.core.seq.call(null, seq__425372_425378);
      if(temp__4092__auto___425390) {
        var seq__425372_425391__$1 = temp__4092__auto___425390;
        if(cljs.core.chunked_seq_QMARK_.call(null, seq__425372_425391__$1)) {
          var c__4009__auto___425392 = cljs.core.chunk_first.call(null, seq__425372_425391__$1);
          var G__425393 = cljs.core.chunk_rest.call(null, seq__425372_425391__$1);
          var G__425394 = c__4009__auto___425392;
          var G__425395 = cljs.core.count.call(null, c__4009__auto___425392);
          var G__425396 = 0;
          seq__425372_425378 = G__425393;
          chunk__425373_425379 = G__425394;
          count__425374_425380 = G__425395;
          i__425375_425381 = G__425396;
          continue
        }else {
          var vec__425377_425397 = cljs.core.first.call(null, seq__425372_425391__$1);
          var key_name_425398 = cljs.core.nth.call(null, vec__425377_425397, 0, null);
          var f_425399 = cljs.core.nth.call(null, vec__425377_425397, 1, null);
          var str_name_425400 = cljs.core.name.call(null, key_name_425398);
          obj[str_name_425400] = f_425399;
          var G__425401 = cljs.core.next.call(null, seq__425372_425391__$1);
          var G__425402 = null;
          var G__425403 = 0;
          var G__425404 = 0;
          seq__425372_425378 = G__425401;
          chunk__425373_425379 = G__425402;
          count__425374_425380 = G__425403;
          i__425375_425381 = G__425404;
          continue
        }
      }else {
      }
    }
    break
  }
  return obj
};
cljs.core.List = function(meta, first, rest, count, __hash) {
  this.meta = meta;
  this.first = first;
  this.rest = rest;
  this.count = count;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 65937646
};
cljs.core.List.cljs$lang$type = true;
cljs.core.List.cljs$lang$ctorStr = "cljs.core/List";
cljs.core.List.cljs$lang$ctorPrWriter = function(this__3829__auto__, writer__3830__auto__, opt__3831__auto__) {
  return cljs.core._write.call(null, writer__3830__auto__, "cljs.core/List")
};
cljs.core.List.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__3696__auto__ = self__.__hash;
  if(!(h__3696__auto__ == null)) {
    return h__3696__auto__
  }else {
    var h__3696__auto____$1 = cljs.core.hash_coll.call(null, coll__$1);
    self__.__hash = h__3696__auto____$1;
    return h__3696__auto____$1
  }
};
cljs.core.List.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if(self__.count === 1) {
    return null
  }else {
    return self__.rest
  }
};
cljs.core.List.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.List(self__.meta, o, coll__$1, self__.count + 1, null)
};
cljs.core.List.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll)
};
cljs.core.List.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, coll__$1)
};
cljs.core.List.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, start, coll__$1)
};
cljs.core.List.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1
};
cljs.core.List.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.count
};
cljs.core.List.prototype.cljs$core$IStack$_peek$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.first
};
cljs.core.List.prototype.cljs$core$IStack$_pop$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._rest.call(null, coll__$1)
};
cljs.core.List.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.first
};
cljs.core.List.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if(self__.count === 1) {
    return cljs.core.List.EMPTY
  }else {
    return self__.rest
  }
};
cljs.core.List.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other)
};
cljs.core.List.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.List(meta__$1, self__.first, self__.rest, self__.count, self__.__hash)
};
cljs.core.List.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta
};
cljs.core.List.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.List.EMPTY
};
cljs.core.__GT_List = function __GT_List(meta, first, rest, count, __hash) {
  return new cljs.core.List(meta, first, rest, count, __hash)
};
cljs.core.EmptyList = function(meta) {
  this.meta = meta;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 65937614
};
cljs.core.EmptyList.cljs$lang$type = true;
cljs.core.EmptyList.cljs$lang$ctorStr = "cljs.core/EmptyList";
cljs.core.EmptyList.cljs$lang$ctorPrWriter = function(this__3829__auto__, writer__3830__auto__, opt__3831__auto__) {
  return cljs.core._write.call(null, writer__3830__auto__, "cljs.core/EmptyList")
};
cljs.core.EmptyList.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return 0
};
cljs.core.EmptyList.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return null
};
cljs.core.EmptyList.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.List(self__.meta, o, null, 1, null)
};
cljs.core.EmptyList.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll)
};
cljs.core.EmptyList.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, coll__$1)
};
cljs.core.EmptyList.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, start, coll__$1)
};
cljs.core.EmptyList.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return null
};
cljs.core.EmptyList.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return 0
};
cljs.core.EmptyList.prototype.cljs$core$IStack$_peek$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return null
};
cljs.core.EmptyList.prototype.cljs$core$IStack$_pop$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  throw new Error("Can't pop empty list");
};
cljs.core.EmptyList.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return null
};
cljs.core.EmptyList.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.List.EMPTY
};
cljs.core.EmptyList.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other)
};
cljs.core.EmptyList.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.EmptyList(meta__$1)
};
cljs.core.EmptyList.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta
};
cljs.core.EmptyList.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1
};
cljs.core.__GT_EmptyList = function __GT_EmptyList(meta) {
  return new cljs.core.EmptyList(meta)
};
cljs.core.List.EMPTY = new cljs.core.EmptyList(null);
cljs.core.reversible_QMARK_ = function reversible_QMARK_(coll) {
  var G__425406 = coll;
  if(G__425406) {
    var bit__3911__auto__ = G__425406.cljs$lang$protocol_mask$partition0$ & 134217728;
    if(bit__3911__auto__ || G__425406.cljs$core$IReversible$) {
      return true
    }else {
      if(!G__425406.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IReversible, G__425406)
      }else {
        return false
      }
    }
  }else {
    return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IReversible, G__425406)
  }
};
cljs.core.rseq = function rseq(coll) {
  return cljs.core._rseq.call(null, coll)
};
cljs.core.reverse = function reverse(coll) {
  if(cljs.core.reversible_QMARK_.call(null, coll)) {
    return cljs.core.rseq.call(null, coll)
  }else {
    return cljs.core.reduce.call(null, cljs.core.conj, cljs.core.List.EMPTY, coll)
  }
};
cljs.core.list = function() {
  var list__delegate = function(xs) {
    var arr = xs instanceof cljs.core.IndexedSeq ? xs.arr : function() {
      var arr = [];
      var xs__$1 = xs;
      while(true) {
        if(!(xs__$1 == null)) {
          arr.push(cljs.core._first.call(null, xs__$1));
          var G__425407 = cljs.core._next.call(null, xs__$1);
          xs__$1 = G__425407;
          continue
        }else {
          return arr
        }
        break
      }
    }();
    var i = arr.length;
    var r = cljs.core.List.EMPTY;
    while(true) {
      if(i > 0) {
        var G__425408 = i - 1;
        var G__425409 = cljs.core._conj.call(null, r, arr[i - 1]);
        i = G__425408;
        r = G__425409;
        continue
      }else {
        return r
      }
      break
    }
  };
  var list = function(var_args) {
    var xs = null;
    if(arguments.length > 0) {
      xs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return list__delegate.call(this, xs)
  };
  list.cljs$lang$maxFixedArity = 0;
  list.cljs$lang$applyTo = function(arglist__425410) {
    var xs = cljs.core.seq(arglist__425410);
    return list__delegate(xs)
  };
  list.cljs$core$IFn$_invoke$arity$variadic = list__delegate;
  return list
}();
cljs.core.Cons = function(meta, first, rest, __hash) {
  this.meta = meta;
  this.first = first;
  this.rest = rest;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 65929452
};
cljs.core.Cons.cljs$lang$type = true;
cljs.core.Cons.cljs$lang$ctorStr = "cljs.core/Cons";
cljs.core.Cons.cljs$lang$ctorPrWriter = function(this__3829__auto__, writer__3830__auto__, opt__3831__auto__) {
  return cljs.core._write.call(null, writer__3830__auto__, "cljs.core/Cons")
};
cljs.core.Cons.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__3696__auto__ = self__.__hash;
  if(!(h__3696__auto__ == null)) {
    return h__3696__auto__
  }else {
    var h__3696__auto____$1 = cljs.core.hash_coll.call(null, coll__$1);
    self__.__hash = h__3696__auto____$1;
    return h__3696__auto____$1
  }
};
cljs.core.Cons.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if(self__.rest == null) {
    return null
  }else {
    return cljs.core.seq.call(null, self__.rest)
  }
};
cljs.core.Cons.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.Cons(null, o, coll__$1, self__.__hash)
};
cljs.core.Cons.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll)
};
cljs.core.Cons.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, coll__$1)
};
cljs.core.Cons.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, start, coll__$1)
};
cljs.core.Cons.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1
};
cljs.core.Cons.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.first
};
cljs.core.Cons.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if(self__.rest == null) {
    return cljs.core.List.EMPTY
  }else {
    return self__.rest
  }
};
cljs.core.Cons.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other)
};
cljs.core.Cons.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.Cons(meta__$1, self__.first, self__.rest, self__.__hash)
};
cljs.core.Cons.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta
};
cljs.core.Cons.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, self__.meta)
};
cljs.core.__GT_Cons = function __GT_Cons(meta, first, rest, __hash) {
  return new cljs.core.Cons(meta, first, rest, __hash)
};
cljs.core.cons = function cons(x, coll) {
  if(function() {
    var or__3285__auto__ = coll == null;
    if(or__3285__auto__) {
      return or__3285__auto__
    }else {
      var G__425414 = coll;
      if(G__425414) {
        var bit__3904__auto__ = G__425414.cljs$lang$protocol_mask$partition0$ & 64;
        if(bit__3904__auto__ || G__425414.cljs$core$ISeq$) {
          return true
        }else {
          return false
        }
      }else {
        return false
      }
    }
  }()) {
    return new cljs.core.Cons(null, x, coll, null)
  }else {
    return new cljs.core.Cons(null, x, cljs.core.seq.call(null, coll), null)
  }
};
cljs.core.list_QMARK_ = function list_QMARK_(x) {
  var G__425416 = x;
  if(G__425416) {
    var bit__3911__auto__ = G__425416.cljs$lang$protocol_mask$partition0$ & 33554432;
    if(bit__3911__auto__ || G__425416.cljs$core$IList$) {
      return true
    }else {
      if(!G__425416.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IList, G__425416)
      }else {
        return false
      }
    }
  }else {
    return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IList, G__425416)
  }
};
cljs.core.Keyword = function(ns, name, fqn, _hash) {
  this.ns = ns;
  this.name = name;
  this.fqn = fqn;
  this._hash = _hash;
  this.cljs$lang$protocol_mask$partition0$ = 2153775105;
  this.cljs$lang$protocol_mask$partition1$ = 4096
};
cljs.core.Keyword.cljs$lang$type = true;
cljs.core.Keyword.cljs$lang$ctorStr = "cljs.core/Keyword";
cljs.core.Keyword.cljs$lang$ctorPrWriter = function(this__3829__auto__, writer__3830__auto__, opt__3831__auto__) {
  return cljs.core._write.call(null, writer__3830__auto__, "cljs.core/Keyword")
};
cljs.core.Keyword.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(o, writer, _) {
  var self__ = this;
  var o__$1 = this;
  return cljs.core._write.call(null, writer, [cljs.core.str(":"), cljs.core.str(self__.fqn)].join(""))
};
cljs.core.Keyword.prototype.cljs$core$INamed$_name$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.name
};
cljs.core.Keyword.prototype.cljs$core$INamed$_namespace$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.ns
};
cljs.core.Keyword.prototype.cljs$core$IHash$_hash$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  if(self__._hash == null) {
    self__._hash = cljs.core.hash_combine.call(null, cljs.core.hash.call(null, self__.ns), cljs.core.hash.call(null, self__.name)) + 2654435769;
    return self__._hash
  }else {
    return self__._hash
  }
};
cljs.core.Keyword.prototype.call = function() {
  var G__425418 = null;
  var G__425418__2 = function(self__, coll) {
    var self__ = this;
    var self____$1 = this;
    var kw = self____$1;
    return cljs.core.get.call(null, coll, kw)
  };
  var G__425418__3 = function(self__, coll, not_found) {
    var self__ = this;
    var self____$1 = this;
    var kw = self____$1;
    return cljs.core.get.call(null, coll, kw, not_found)
  };
  G__425418 = function(self__, coll, not_found) {
    switch(arguments.length) {
      case 2:
        return G__425418__2.call(this, self__, coll);
      case 3:
        return G__425418__3.call(this, self__, coll, not_found)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  return G__425418
}();
cljs.core.Keyword.prototype.apply = function(self__, args425417) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone.call(null, args425417)))
};
cljs.core.Keyword.prototype.cljs$core$IFn$_invoke$arity$1 = function(coll) {
  var self__ = this;
  var kw = this;
  return cljs.core.get.call(null, coll, kw)
};
cljs.core.Keyword.prototype.cljs$core$IFn$_invoke$arity$2 = function(coll, not_found) {
  var self__ = this;
  var kw = this;
  return cljs.core.get.call(null, coll, kw, not_found)
};
cljs.core.Keyword.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(_, other) {
  var self__ = this;
  var ___$1 = this;
  if(other instanceof cljs.core.Keyword) {
    return self__.fqn === other.fqn
  }else {
    return false
  }
};
cljs.core.Keyword.prototype.toString = function() {
  var self__ = this;
  var _ = this;
  return[cljs.core.str(":"), cljs.core.str(self__.fqn)].join("")
};
cljs.core.__GT_Keyword = function __GT_Keyword(ns, name, fqn, _hash) {
  return new cljs.core.Keyword(ns, name, fqn, _hash)
};
cljs.core.keyword_QMARK_ = function keyword_QMARK_(x) {
  return x instanceof cljs.core.Keyword
};
cljs.core.keyword_identical_QMARK_ = function keyword_identical_QMARK_(x, y) {
  if(x === y) {
    return true
  }else {
    if(x instanceof cljs.core.Keyword && y instanceof cljs.core.Keyword) {
      return x.fqn === y.fqn
    }else {
      return false
    }
  }
};
cljs.core.namespace = function namespace(x) {
  if(function() {
    var G__425420 = x;
    if(G__425420) {
      var bit__3904__auto__ = G__425420.cljs$lang$protocol_mask$partition1$ & 4096;
      if(bit__3904__auto__ || G__425420.cljs$core$INamed$) {
        return true
      }else {
        return false
      }
    }else {
      return false
    }
  }()) {
    return cljs.core._namespace.call(null, x)
  }else {
    throw new Error([cljs.core.str("Doesn't support namespace: "), cljs.core.str(x)].join(""));
  }
};
cljs.core.keyword = function() {
  var keyword = null;
  var keyword__1 = function(name) {
    if(name instanceof cljs.core.Keyword) {
      return name
    }else {
      if(name instanceof cljs.core.Symbol) {
        return new cljs.core.Keyword(cljs.core.namespace.call(null, name), cljs.core.name.call(null, name), name.str, null)
      }else {
        if(typeof name === "string") {
          var parts = name.split("/");
          if(parts.length === 2) {
            return new cljs.core.Keyword(parts[0], parts[1], name, null)
          }else {
            return new cljs.core.Keyword(null, parts[0], name, null)
          }
        }else {
          return null
        }
      }
    }
  };
  var keyword__2 = function(ns, name) {
    return new cljs.core.Keyword(ns, name, [cljs.core.str(cljs.core.truth_(ns) ? [cljs.core.str(ns), cljs.core.str("/")].join("") : null), cljs.core.str(name)].join(""), null)
  };
  keyword = function(ns, name) {
    switch(arguments.length) {
      case 1:
        return keyword__1.call(this, ns);
      case 2:
        return keyword__2.call(this, ns, name)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  keyword.cljs$core$IFn$_invoke$arity$1 = keyword__1;
  keyword.cljs$core$IFn$_invoke$arity$2 = keyword__2;
  return keyword
}();
cljs.core.LazySeq = function(meta, fn, s, __hash) {
  this.meta = meta;
  this.fn = fn;
  this.s = s;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32374988
};
cljs.core.LazySeq.cljs$lang$type = true;
cljs.core.LazySeq.cljs$lang$ctorStr = "cljs.core/LazySeq";
cljs.core.LazySeq.cljs$lang$ctorPrWriter = function(this__3829__auto__, writer__3830__auto__, opt__3831__auto__) {
  return cljs.core._write.call(null, writer__3830__auto__, "cljs.core/LazySeq")
};
cljs.core.LazySeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__3696__auto__ = self__.__hash;
  if(!(h__3696__auto__ == null)) {
    return h__3696__auto__
  }else {
    var h__3696__auto____$1 = cljs.core.hash_coll.call(null, coll__$1);
    self__.__hash = h__3696__auto____$1;
    return h__3696__auto____$1
  }
};
cljs.core.LazySeq.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  cljs.core._seq.call(null, coll__$1);
  if(self__.s == null) {
    return null
  }else {
    return cljs.core.next.call(null, self__.s)
  }
};
cljs.core.LazySeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons.call(null, o, coll__$1)
};
cljs.core.LazySeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll)
};
cljs.core.LazySeq.prototype.sval = function() {
  var self__ = this;
  var coll = this;
  if(self__.fn == null) {
    return self__.s
  }else {
    self__.s = self__.fn.call(null);
    self__.fn = null;
    return self__.s
  }
};
cljs.core.LazySeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, coll__$1)
};
cljs.core.LazySeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, start, coll__$1)
};
cljs.core.LazySeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  coll__$1.sval();
  if(self__.s == null) {
    return null
  }else {
    var ls = self__.s;
    while(true) {
      if(ls instanceof cljs.core.LazySeq) {
        var G__425421 = ls.sval();
        ls = G__425421;
        continue
      }else {
        self__.s = ls;
        return cljs.core.seq.call(null, self__.s)
      }
      break
    }
  }
};
cljs.core.LazySeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  cljs.core._seq.call(null, coll__$1);
  if(self__.s == null) {
    return null
  }else {
    return cljs.core.first.call(null, self__.s)
  }
};
cljs.core.LazySeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  cljs.core._seq.call(null, coll__$1);
  if(!(self__.s == null)) {
    return cljs.core.rest.call(null, self__.s)
  }else {
    return cljs.core.List.EMPTY
  }
};
cljs.core.LazySeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other)
};
cljs.core.LazySeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.LazySeq(meta__$1, self__.fn, self__.s, self__.__hash)
};
cljs.core.LazySeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta
};
cljs.core.LazySeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, self__.meta)
};
cljs.core.__GT_LazySeq = function __GT_LazySeq(meta, fn, s, __hash) {
  return new cljs.core.LazySeq(meta, fn, s, __hash)
};
cljs.core.ChunkBuffer = function(buf, end) {
  this.buf = buf;
  this.end = end;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 2
};
cljs.core.ChunkBuffer.cljs$lang$type = true;
cljs.core.ChunkBuffer.cljs$lang$ctorStr = "cljs.core/ChunkBuffer";
cljs.core.ChunkBuffer.cljs$lang$ctorPrWriter = function(this__3829__auto__, writer__3830__auto__, opt__3831__auto__) {
  return cljs.core._write.call(null, writer__3830__auto__, "cljs.core/ChunkBuffer")
};
cljs.core.ChunkBuffer.prototype.cljs$core$ICounted$_count$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.end
};
cljs.core.ChunkBuffer.prototype.add = function(o) {
  var self__ = this;
  var _ = this;
  self__.buf[self__.end] = o;
  return self__.end = self__.end + 1
};
cljs.core.ChunkBuffer.prototype.chunk = function(o) {
  var self__ = this;
  var _ = this;
  var ret = new cljs.core.ArrayChunk(self__.buf, 0, self__.end);
  self__.buf = null;
  return ret
};
cljs.core.__GT_ChunkBuffer = function __GT_ChunkBuffer(buf, end) {
  return new cljs.core.ChunkBuffer(buf, end)
};
cljs.core.chunk_buffer = function chunk_buffer(capacity) {
  return new cljs.core.ChunkBuffer(new Array(capacity), 0)
};
cljs.core.ArrayChunk = function(arr, off, end) {
  this.arr = arr;
  this.off = off;
  this.end = end;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 524306
};
cljs.core.ArrayChunk.cljs$lang$type = true;
cljs.core.ArrayChunk.cljs$lang$ctorStr = "cljs.core/ArrayChunk";
cljs.core.ArrayChunk.cljs$lang$ctorPrWriter = function(this__3829__auto__, writer__3830__auto__, opt__3831__auto__) {
  return cljs.core._write.call(null, writer__3830__auto__, "cljs.core/ArrayChunk")
};
cljs.core.ArrayChunk.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.array_reduce.call(null, self__.arr, f, self__.arr[self__.off], self__.off + 1)
};
cljs.core.ArrayChunk.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.array_reduce.call(null, self__.arr, f, start, self__.off)
};
cljs.core.ArrayChunk.prototype.cljs$core$IChunk$ = true;
cljs.core.ArrayChunk.prototype.cljs$core$IChunk$_drop_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if(self__.off === self__.end) {
    throw new Error("-drop-first of empty chunk");
  }else {
    return new cljs.core.ArrayChunk(self__.arr, self__.off + 1, self__.end)
  }
};
cljs.core.ArrayChunk.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, i) {
  var self__ = this;
  var coll__$1 = this;
  return self__.arr[self__.off + i]
};
cljs.core.ArrayChunk.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, i, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if(i >= 0 && i < self__.end - self__.off) {
    return self__.arr[self__.off + i]
  }else {
    return not_found
  }
};
cljs.core.ArrayChunk.prototype.cljs$core$ICounted$_count$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.end - self__.off
};
cljs.core.__GT_ArrayChunk = function __GT_ArrayChunk(arr, off, end) {
  return new cljs.core.ArrayChunk(arr, off, end)
};
cljs.core.array_chunk = function() {
  var array_chunk = null;
  var array_chunk__1 = function(arr) {
    return new cljs.core.ArrayChunk(arr, 0, arr.length)
  };
  var array_chunk__2 = function(arr, off) {
    return new cljs.core.ArrayChunk(arr, off, arr.length)
  };
  var array_chunk__3 = function(arr, off, end) {
    return new cljs.core.ArrayChunk(arr, off, end)
  };
  array_chunk = function(arr, off, end) {
    switch(arguments.length) {
      case 1:
        return array_chunk__1.call(this, arr);
      case 2:
        return array_chunk__2.call(this, arr, off);
      case 3:
        return array_chunk__3.call(this, arr, off, end)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  array_chunk.cljs$core$IFn$_invoke$arity$1 = array_chunk__1;
  array_chunk.cljs$core$IFn$_invoke$arity$2 = array_chunk__2;
  array_chunk.cljs$core$IFn$_invoke$arity$3 = array_chunk__3;
  return array_chunk
}();
cljs.core.ChunkedCons = function(chunk, more, meta, __hash) {
  this.chunk = chunk;
  this.more = more;
  this.meta = meta;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 31850732;
  this.cljs$lang$protocol_mask$partition1$ = 1536
};
cljs.core.ChunkedCons.cljs$lang$type = true;
cljs.core.ChunkedCons.cljs$lang$ctorStr = "cljs.core/ChunkedCons";
cljs.core.ChunkedCons.cljs$lang$ctorPrWriter = function(this__3829__auto__, writer__3830__auto__, opt__3831__auto__) {
  return cljs.core._write.call(null, writer__3830__auto__, "cljs.core/ChunkedCons")
};
cljs.core.ChunkedCons.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__3696__auto__ = self__.__hash;
  if(!(h__3696__auto__ == null)) {
    return h__3696__auto__
  }else {
    var h__3696__auto____$1 = cljs.core.hash_coll.call(null, coll__$1);
    self__.__hash = h__3696__auto____$1;
    return h__3696__auto____$1
  }
};
cljs.core.ChunkedCons.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if(cljs.core._count.call(null, self__.chunk) > 1) {
    return new cljs.core.ChunkedCons(cljs.core._drop_first.call(null, self__.chunk), self__.more, self__.meta, null)
  }else {
    var more__$1 = cljs.core._seq.call(null, self__.more);
    if(more__$1 == null) {
      return null
    }else {
      return more__$1
    }
  }
};
cljs.core.ChunkedCons.prototype.cljs$core$ICollection$_conj$arity$2 = function(this$, o) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core.cons.call(null, o, this$__$1)
};
cljs.core.ChunkedCons.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll)
};
cljs.core.ChunkedCons.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1
};
cljs.core.ChunkedCons.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._nth.call(null, self__.chunk, 0)
};
cljs.core.ChunkedCons.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if(cljs.core._count.call(null, self__.chunk) > 1) {
    return new cljs.core.ChunkedCons(cljs.core._drop_first.call(null, self__.chunk), self__.more, self__.meta, null)
  }else {
    if(self__.more == null) {
      return cljs.core.List.EMPTY
    }else {
      return self__.more
    }
  }
};
cljs.core.ChunkedCons.prototype.cljs$core$IChunkedNext$_chunked_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if(self__.more == null) {
    return null
  }else {
    return self__.more
  }
};
cljs.core.ChunkedCons.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other)
};
cljs.core.ChunkedCons.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, m) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.ChunkedCons(self__.chunk, self__.more, m, self__.__hash)
};
cljs.core.ChunkedCons.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta
};
cljs.core.ChunkedCons.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, self__.meta)
};
cljs.core.ChunkedCons.prototype.cljs$core$IChunkedSeq$_chunked_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.chunk
};
cljs.core.ChunkedCons.prototype.cljs$core$IChunkedSeq$_chunked_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if(self__.more == null) {
    return cljs.core.List.EMPTY
  }else {
    return self__.more
  }
};
cljs.core.__GT_ChunkedCons = function __GT_ChunkedCons(chunk, more, meta, __hash) {
  return new cljs.core.ChunkedCons(chunk, more, meta, __hash)
};
cljs.core.chunk_cons = function chunk_cons(chunk, rest) {
  if(cljs.core._count.call(null, chunk) === 0) {
    return rest
  }else {
    return new cljs.core.ChunkedCons(chunk, rest, null, null)
  }
};
cljs.core.chunk_append = function chunk_append(b, x) {
  return b.add(x)
};
cljs.core.chunk = function chunk(b) {
  return b.chunk()
};
cljs.core.chunk_first = function chunk_first(s) {
  return cljs.core._chunked_first.call(null, s)
};
cljs.core.chunk_rest = function chunk_rest(s) {
  return cljs.core._chunked_rest.call(null, s)
};
cljs.core.chunk_next = function chunk_next(s) {
  if(function() {
    var G__425423 = s;
    if(G__425423) {
      var bit__3904__auto__ = G__425423.cljs$lang$protocol_mask$partition1$ & 1024;
      if(bit__3904__auto__ || G__425423.cljs$core$IChunkedNext$) {
        return true
      }else {
        return false
      }
    }else {
      return false
    }
  }()) {
    return cljs.core._chunked_next.call(null, s)
  }else {
    return cljs.core.seq.call(null, cljs.core._chunked_rest.call(null, s))
  }
};
cljs.core.to_array = function to_array(s) {
  var ary = [];
  var s__$1 = s;
  while(true) {
    if(cljs.core.seq.call(null, s__$1)) {
      ary.push(cljs.core.first.call(null, s__$1));
      var G__425424 = cljs.core.next.call(null, s__$1);
      s__$1 = G__425424;
      continue
    }else {
      return ary
    }
    break
  }
};
cljs.core.to_array_2d = function to_array_2d(coll) {
  var ret = new Array(cljs.core.count.call(null, coll));
  var i_425425 = 0;
  var xs_425426 = cljs.core.seq.call(null, coll);
  while(true) {
    if(xs_425426) {
      ret[i_425425] = cljs.core.to_array.call(null, cljs.core.first.call(null, xs_425426));
      var G__425427 = i_425425 + 1;
      var G__425428 = cljs.core.next.call(null, xs_425426);
      i_425425 = G__425427;
      xs_425426 = G__425428;
      continue
    }else {
    }
    break
  }
  return ret
};
cljs.core.int_array = function() {
  var int_array = null;
  var int_array__1 = function(size_or_seq) {
    if(typeof size_or_seq === "number") {
      return int_array.call(null, size_or_seq, null)
    }else {
      return cljs.core.into_array.call(null, size_or_seq)
    }
  };
  var int_array__2 = function(size, init_val_or_seq) {
    var a = new Array(size);
    if(cljs.core.seq_QMARK_.call(null, init_val_or_seq)) {
      var s = cljs.core.seq.call(null, init_val_or_seq);
      var i = 0;
      var s__$1 = s;
      while(true) {
        if(s__$1 && i < size) {
          a[i] = cljs.core.first.call(null, s__$1);
          var G__425429 = i + 1;
          var G__425430 = cljs.core.next.call(null, s__$1);
          i = G__425429;
          s__$1 = G__425430;
          continue
        }else {
          return a
        }
        break
      }
    }else {
      var n__4108__auto___425431 = size;
      var i_425432 = 0;
      while(true) {
        if(i_425432 < n__4108__auto___425431) {
          a[i_425432] = init_val_or_seq;
          var G__425433 = i_425432 + 1;
          i_425432 = G__425433;
          continue
        }else {
        }
        break
      }
      return a
    }
  };
  int_array = function(size, init_val_or_seq) {
    switch(arguments.length) {
      case 1:
        return int_array__1.call(this, size);
      case 2:
        return int_array__2.call(this, size, init_val_or_seq)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  int_array.cljs$core$IFn$_invoke$arity$1 = int_array__1;
  int_array.cljs$core$IFn$_invoke$arity$2 = int_array__2;
  return int_array
}();
cljs.core.long_array = function() {
  var long_array = null;
  var long_array__1 = function(size_or_seq) {
    if(typeof size_or_seq === "number") {
      return long_array.call(null, size_or_seq, null)
    }else {
      return cljs.core.into_array.call(null, size_or_seq)
    }
  };
  var long_array__2 = function(size, init_val_or_seq) {
    var a = new Array(size);
    if(cljs.core.seq_QMARK_.call(null, init_val_or_seq)) {
      var s = cljs.core.seq.call(null, init_val_or_seq);
      var i = 0;
      var s__$1 = s;
      while(true) {
        if(s__$1 && i < size) {
          a[i] = cljs.core.first.call(null, s__$1);
          var G__425434 = i + 1;
          var G__425435 = cljs.core.next.call(null, s__$1);
          i = G__425434;
          s__$1 = G__425435;
          continue
        }else {
          return a
        }
        break
      }
    }else {
      var n__4108__auto___425436 = size;
      var i_425437 = 0;
      while(true) {
        if(i_425437 < n__4108__auto___425436) {
          a[i_425437] = init_val_or_seq;
          var G__425438 = i_425437 + 1;
          i_425437 = G__425438;
          continue
        }else {
        }
        break
      }
      return a
    }
  };
  long_array = function(size, init_val_or_seq) {
    switch(arguments.length) {
      case 1:
        return long_array__1.call(this, size);
      case 2:
        return long_array__2.call(this, size, init_val_or_seq)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  long_array.cljs$core$IFn$_invoke$arity$1 = long_array__1;
  long_array.cljs$core$IFn$_invoke$arity$2 = long_array__2;
  return long_array
}();
cljs.core.double_array = function() {
  var double_array = null;
  var double_array__1 = function(size_or_seq) {
    if(typeof size_or_seq === "number") {
      return double_array.call(null, size_or_seq, null)
    }else {
      return cljs.core.into_array.call(null, size_or_seq)
    }
  };
  var double_array__2 = function(size, init_val_or_seq) {
    var a = new Array(size);
    if(cljs.core.seq_QMARK_.call(null, init_val_or_seq)) {
      var s = cljs.core.seq.call(null, init_val_or_seq);
      var i = 0;
      var s__$1 = s;
      while(true) {
        if(s__$1 && i < size) {
          a[i] = cljs.core.first.call(null, s__$1);
          var G__425439 = i + 1;
          var G__425440 = cljs.core.next.call(null, s__$1);
          i = G__425439;
          s__$1 = G__425440;
          continue
        }else {
          return a
        }
        break
      }
    }else {
      var n__4108__auto___425441 = size;
      var i_425442 = 0;
      while(true) {
        if(i_425442 < n__4108__auto___425441) {
          a[i_425442] = init_val_or_seq;
          var G__425443 = i_425442 + 1;
          i_425442 = G__425443;
          continue
        }else {
        }
        break
      }
      return a
    }
  };
  double_array = function(size, init_val_or_seq) {
    switch(arguments.length) {
      case 1:
        return double_array__1.call(this, size);
      case 2:
        return double_array__2.call(this, size, init_val_or_seq)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  double_array.cljs$core$IFn$_invoke$arity$1 = double_array__1;
  double_array.cljs$core$IFn$_invoke$arity$2 = double_array__2;
  return double_array
}();
cljs.core.object_array = function() {
  var object_array = null;
  var object_array__1 = function(size_or_seq) {
    if(typeof size_or_seq === "number") {
      return object_array.call(null, size_or_seq, null)
    }else {
      return cljs.core.into_array.call(null, size_or_seq)
    }
  };
  var object_array__2 = function(size, init_val_or_seq) {
    var a = new Array(size);
    if(cljs.core.seq_QMARK_.call(null, init_val_or_seq)) {
      var s = cljs.core.seq.call(null, init_val_or_seq);
      var i = 0;
      var s__$1 = s;
      while(true) {
        if(s__$1 && i < size) {
          a[i] = cljs.core.first.call(null, s__$1);
          var G__425444 = i + 1;
          var G__425445 = cljs.core.next.call(null, s__$1);
          i = G__425444;
          s__$1 = G__425445;
          continue
        }else {
          return a
        }
        break
      }
    }else {
      var n__4108__auto___425446 = size;
      var i_425447 = 0;
      while(true) {
        if(i_425447 < n__4108__auto___425446) {
          a[i_425447] = init_val_or_seq;
          var G__425448 = i_425447 + 1;
          i_425447 = G__425448;
          continue
        }else {
        }
        break
      }
      return a
    }
  };
  object_array = function(size, init_val_or_seq) {
    switch(arguments.length) {
      case 1:
        return object_array__1.call(this, size);
      case 2:
        return object_array__2.call(this, size, init_val_or_seq)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  object_array.cljs$core$IFn$_invoke$arity$1 = object_array__1;
  object_array.cljs$core$IFn$_invoke$arity$2 = object_array__2;
  return object_array
}();
cljs.core.bounded_count = function bounded_count(s, n) {
  if(cljs.core.counted_QMARK_.call(null, s)) {
    return cljs.core.count.call(null, s)
  }else {
    var s__$1 = s;
    var i = n;
    var sum = 0;
    while(true) {
      if(i > 0 && cljs.core.seq.call(null, s__$1)) {
        var G__425449 = cljs.core.next.call(null, s__$1);
        var G__425450 = i - 1;
        var G__425451 = sum + 1;
        s__$1 = G__425449;
        i = G__425450;
        sum = G__425451;
        continue
      }else {
        return sum
      }
      break
    }
  }
};
cljs.core.spread = function spread(arglist) {
  if(arglist == null) {
    return null
  }else {
    if(cljs.core.next.call(null, arglist) == null) {
      return cljs.core.seq.call(null, cljs.core.first.call(null, arglist))
    }else {
      if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        return cljs.core.cons.call(null, cljs.core.first.call(null, arglist), spread.call(null, cljs.core.next.call(null, arglist)))
      }else {
        return null
      }
    }
  }
};
cljs.core.concat = function() {
  var concat = null;
  var concat__0 = function() {
    return new cljs.core.LazySeq(null, function() {
      return null
    }, null, null)
  };
  var concat__1 = function(x) {
    return new cljs.core.LazySeq(null, function() {
      return x
    }, null, null)
  };
  var concat__2 = function(x, y) {
    return new cljs.core.LazySeq(null, function() {
      var s = cljs.core.seq.call(null, x);
      if(s) {
        if(cljs.core.chunked_seq_QMARK_.call(null, s)) {
          return cljs.core.chunk_cons.call(null, cljs.core.chunk_first.call(null, s), concat.call(null, cljs.core.chunk_rest.call(null, s), y))
        }else {
          return cljs.core.cons.call(null, cljs.core.first.call(null, s), concat.call(null, cljs.core.rest.call(null, s), y))
        }
      }else {
        return y
      }
    }, null, null)
  };
  var concat__3 = function() {
    var G__425452__delegate = function(x, y, zs) {
      var cat = function cat(xys, zs__$1) {
        return new cljs.core.LazySeq(null, function() {
          var xys__$1 = cljs.core.seq.call(null, xys);
          if(xys__$1) {
            if(cljs.core.chunked_seq_QMARK_.call(null, xys__$1)) {
              return cljs.core.chunk_cons.call(null, cljs.core.chunk_first.call(null, xys__$1), cat.call(null, cljs.core.chunk_rest.call(null, xys__$1), zs__$1))
            }else {
              return cljs.core.cons.call(null, cljs.core.first.call(null, xys__$1), cat.call(null, cljs.core.rest.call(null, xys__$1), zs__$1))
            }
          }else {
            if(cljs.core.truth_(zs__$1)) {
              return cat.call(null, cljs.core.first.call(null, zs__$1), cljs.core.next.call(null, zs__$1))
            }else {
              return null
            }
          }
        }, null, null)
      };
      return cat.call(null, concat.call(null, x, y), zs)
    };
    var G__425452 = function(x, y, var_args) {
      var zs = null;
      if(arguments.length > 2) {
        zs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__425452__delegate.call(this, x, y, zs)
    };
    G__425452.cljs$lang$maxFixedArity = 2;
    G__425452.cljs$lang$applyTo = function(arglist__425453) {
      var x = cljs.core.first(arglist__425453);
      arglist__425453 = cljs.core.next(arglist__425453);
      var y = cljs.core.first(arglist__425453);
      var zs = cljs.core.rest(arglist__425453);
      return G__425452__delegate(x, y, zs)
    };
    G__425452.cljs$core$IFn$_invoke$arity$variadic = G__425452__delegate;
    return G__425452
  }();
  concat = function(x, y, var_args) {
    var zs = var_args;
    switch(arguments.length) {
      case 0:
        return concat__0.call(this);
      case 1:
        return concat__1.call(this, x);
      case 2:
        return concat__2.call(this, x, y);
      default:
        return concat__3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  concat.cljs$lang$maxFixedArity = 2;
  concat.cljs$lang$applyTo = concat__3.cljs$lang$applyTo;
  concat.cljs$core$IFn$_invoke$arity$0 = concat__0;
  concat.cljs$core$IFn$_invoke$arity$1 = concat__1;
  concat.cljs$core$IFn$_invoke$arity$2 = concat__2;
  concat.cljs$core$IFn$_invoke$arity$variadic = concat__3.cljs$core$IFn$_invoke$arity$variadic;
  return concat
}();
cljs.core.list_STAR_ = function() {
  var list_STAR_ = null;
  var list_STAR___1 = function(args) {
    return cljs.core.seq.call(null, args)
  };
  var list_STAR___2 = function(a, args) {
    return cljs.core.cons.call(null, a, args)
  };
  var list_STAR___3 = function(a, b, args) {
    return cljs.core.cons.call(null, a, cljs.core.cons.call(null, b, args))
  };
  var list_STAR___4 = function(a, b, c, args) {
    return cljs.core.cons.call(null, a, cljs.core.cons.call(null, b, cljs.core.cons.call(null, c, args)))
  };
  var list_STAR___5 = function() {
    var G__425454__delegate = function(a, b, c, d, more) {
      return cljs.core.cons.call(null, a, cljs.core.cons.call(null, b, cljs.core.cons.call(null, c, cljs.core.cons.call(null, d, cljs.core.spread.call(null, more)))))
    };
    var G__425454 = function(a, b, c, d, var_args) {
      var more = null;
      if(arguments.length > 4) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 4), 0)
      }
      return G__425454__delegate.call(this, a, b, c, d, more)
    };
    G__425454.cljs$lang$maxFixedArity = 4;
    G__425454.cljs$lang$applyTo = function(arglist__425455) {
      var a = cljs.core.first(arglist__425455);
      arglist__425455 = cljs.core.next(arglist__425455);
      var b = cljs.core.first(arglist__425455);
      arglist__425455 = cljs.core.next(arglist__425455);
      var c = cljs.core.first(arglist__425455);
      arglist__425455 = cljs.core.next(arglist__425455);
      var d = cljs.core.first(arglist__425455);
      var more = cljs.core.rest(arglist__425455);
      return G__425454__delegate(a, b, c, d, more)
    };
    G__425454.cljs$core$IFn$_invoke$arity$variadic = G__425454__delegate;
    return G__425454
  }();
  list_STAR_ = function(a, b, c, d, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return list_STAR___1.call(this, a);
      case 2:
        return list_STAR___2.call(this, a, b);
      case 3:
        return list_STAR___3.call(this, a, b, c);
      case 4:
        return list_STAR___4.call(this, a, b, c, d);
      default:
        return list_STAR___5.cljs$core$IFn$_invoke$arity$variadic(a, b, c, d, cljs.core.array_seq(arguments, 4))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  list_STAR_.cljs$lang$maxFixedArity = 4;
  list_STAR_.cljs$lang$applyTo = list_STAR___5.cljs$lang$applyTo;
  list_STAR_.cljs$core$IFn$_invoke$arity$1 = list_STAR___1;
  list_STAR_.cljs$core$IFn$_invoke$arity$2 = list_STAR___2;
  list_STAR_.cljs$core$IFn$_invoke$arity$3 = list_STAR___3;
  list_STAR_.cljs$core$IFn$_invoke$arity$4 = list_STAR___4;
  list_STAR_.cljs$core$IFn$_invoke$arity$variadic = list_STAR___5.cljs$core$IFn$_invoke$arity$variadic;
  return list_STAR_
}();
cljs.core.transient$ = function transient$(coll) {
  return cljs.core._as_transient.call(null, coll)
};
cljs.core.persistent_BANG_ = function persistent_BANG_(tcoll) {
  return cljs.core._persistent_BANG_.call(null, tcoll)
};
cljs.core.conj_BANG_ = function conj_BANG_(tcoll, val) {
  return cljs.core._conj_BANG_.call(null, tcoll, val)
};
cljs.core.assoc_BANG_ = function assoc_BANG_(tcoll, key, val) {
  return cljs.core._assoc_BANG_.call(null, tcoll, key, val)
};
cljs.core.dissoc_BANG_ = function dissoc_BANG_(tcoll, key) {
  return cljs.core._dissoc_BANG_.call(null, tcoll, key)
};
cljs.core.pop_BANG_ = function pop_BANG_(tcoll) {
  return cljs.core._pop_BANG_.call(null, tcoll)
};
cljs.core.disj_BANG_ = function disj_BANG_(tcoll, val) {
  return cljs.core._disjoin_BANG_.call(null, tcoll, val)
};
cljs.core.apply_to = function apply_to(f, argc, args) {
  var args__$1 = cljs.core.seq.call(null, args);
  if(argc === 0) {
    return f.call(null)
  }else {
    var a = cljs.core._first.call(null, args__$1);
    var args__$2 = cljs.core._rest.call(null, args__$1);
    if(argc === 1) {
      if(f.cljs$core$IFn$_invoke$arity$1) {
        return f.cljs$core$IFn$_invoke$arity$1(a)
      }else {
        return f.call(null, a)
      }
    }else {
      var b = cljs.core._first.call(null, args__$2);
      var args__$3 = cljs.core._rest.call(null, args__$2);
      if(argc === 2) {
        if(f.cljs$core$IFn$_invoke$arity$2) {
          return f.cljs$core$IFn$_invoke$arity$2(a, b)
        }else {
          return f.call(null, a, b)
        }
      }else {
        var c = cljs.core._first.call(null, args__$3);
        var args__$4 = cljs.core._rest.call(null, args__$3);
        if(argc === 3) {
          if(f.cljs$core$IFn$_invoke$arity$3) {
            return f.cljs$core$IFn$_invoke$arity$3(a, b, c)
          }else {
            return f.call(null, a, b, c)
          }
        }else {
          var d = cljs.core._first.call(null, args__$4);
          var args__$5 = cljs.core._rest.call(null, args__$4);
          if(argc === 4) {
            if(f.cljs$core$IFn$_invoke$arity$4) {
              return f.cljs$core$IFn$_invoke$arity$4(a, b, c, d)
            }else {
              return f.call(null, a, b, c, d)
            }
          }else {
            var e = cljs.core._first.call(null, args__$5);
            var args__$6 = cljs.core._rest.call(null, args__$5);
            if(argc === 5) {
              if(f.cljs$core$IFn$_invoke$arity$5) {
                return f.cljs$core$IFn$_invoke$arity$5(a, b, c, d, e)
              }else {
                return f.call(null, a, b, c, d, e)
              }
            }else {
              var f__$1 = cljs.core._first.call(null, args__$6);
              var args__$7 = cljs.core._rest.call(null, args__$6);
              if(argc === 6) {
                if(f__$1.cljs$core$IFn$_invoke$arity$6) {
                  return f__$1.cljs$core$IFn$_invoke$arity$6(a, b, c, d, e, f__$1)
                }else {
                  return f__$1.call(null, a, b, c, d, e, f__$1)
                }
              }else {
                var g = cljs.core._first.call(null, args__$7);
                var args__$8 = cljs.core._rest.call(null, args__$7);
                if(argc === 7) {
                  if(f__$1.cljs$core$IFn$_invoke$arity$7) {
                    return f__$1.cljs$core$IFn$_invoke$arity$7(a, b, c, d, e, f__$1, g)
                  }else {
                    return f__$1.call(null, a, b, c, d, e, f__$1, g)
                  }
                }else {
                  var h = cljs.core._first.call(null, args__$8);
                  var args__$9 = cljs.core._rest.call(null, args__$8);
                  if(argc === 8) {
                    if(f__$1.cljs$core$IFn$_invoke$arity$8) {
                      return f__$1.cljs$core$IFn$_invoke$arity$8(a, b, c, d, e, f__$1, g, h)
                    }else {
                      return f__$1.call(null, a, b, c, d, e, f__$1, g, h)
                    }
                  }else {
                    var i = cljs.core._first.call(null, args__$9);
                    var args__$10 = cljs.core._rest.call(null, args__$9);
                    if(argc === 9) {
                      if(f__$1.cljs$core$IFn$_invoke$arity$9) {
                        return f__$1.cljs$core$IFn$_invoke$arity$9(a, b, c, d, e, f__$1, g, h, i)
                      }else {
                        return f__$1.call(null, a, b, c, d, e, f__$1, g, h, i)
                      }
                    }else {
                      var j = cljs.core._first.call(null, args__$10);
                      var args__$11 = cljs.core._rest.call(null, args__$10);
                      if(argc === 10) {
                        if(f__$1.cljs$core$IFn$_invoke$arity$10) {
                          return f__$1.cljs$core$IFn$_invoke$arity$10(a, b, c, d, e, f__$1, g, h, i, j)
                        }else {
                          return f__$1.call(null, a, b, c, d, e, f__$1, g, h, i, j)
                        }
                      }else {
                        var k = cljs.core._first.call(null, args__$11);
                        var args__$12 = cljs.core._rest.call(null, args__$11);
                        if(argc === 11) {
                          if(f__$1.cljs$core$IFn$_invoke$arity$11) {
                            return f__$1.cljs$core$IFn$_invoke$arity$11(a, b, c, d, e, f__$1, g, h, i, j, k)
                          }else {
                            return f__$1.call(null, a, b, c, d, e, f__$1, g, h, i, j, k)
                          }
                        }else {
                          var l = cljs.core._first.call(null, args__$12);
                          var args__$13 = cljs.core._rest.call(null, args__$12);
                          if(argc === 12) {
                            if(f__$1.cljs$core$IFn$_invoke$arity$12) {
                              return f__$1.cljs$core$IFn$_invoke$arity$12(a, b, c, d, e, f__$1, g, h, i, j, k, l)
                            }else {
                              return f__$1.call(null, a, b, c, d, e, f__$1, g, h, i, j, k, l)
                            }
                          }else {
                            var m = cljs.core._first.call(null, args__$13);
                            var args__$14 = cljs.core._rest.call(null, args__$13);
                            if(argc === 13) {
                              if(f__$1.cljs$core$IFn$_invoke$arity$13) {
                                return f__$1.cljs$core$IFn$_invoke$arity$13(a, b, c, d, e, f__$1, g, h, i, j, k, l, m)
                              }else {
                                return f__$1.call(null, a, b, c, d, e, f__$1, g, h, i, j, k, l, m)
                              }
                            }else {
                              var n = cljs.core._first.call(null, args__$14);
                              var args__$15 = cljs.core._rest.call(null, args__$14);
                              if(argc === 14) {
                                if(f__$1.cljs$core$IFn$_invoke$arity$14) {
                                  return f__$1.cljs$core$IFn$_invoke$arity$14(a, b, c, d, e, f__$1, g, h, i, j, k, l, m, n)
                                }else {
                                  return f__$1.call(null, a, b, c, d, e, f__$1, g, h, i, j, k, l, m, n)
                                }
                              }else {
                                var o = cljs.core._first.call(null, args__$15);
                                var args__$16 = cljs.core._rest.call(null, args__$15);
                                if(argc === 15) {
                                  if(f__$1.cljs$core$IFn$_invoke$arity$15) {
                                    return f__$1.cljs$core$IFn$_invoke$arity$15(a, b, c, d, e, f__$1, g, h, i, j, k, l, m, n, o)
                                  }else {
                                    return f__$1.call(null, a, b, c, d, e, f__$1, g, h, i, j, k, l, m, n, o)
                                  }
                                }else {
                                  var p = cljs.core._first.call(null, args__$16);
                                  var args__$17 = cljs.core._rest.call(null, args__$16);
                                  if(argc === 16) {
                                    if(f__$1.cljs$core$IFn$_invoke$arity$16) {
                                      return f__$1.cljs$core$IFn$_invoke$arity$16(a, b, c, d, e, f__$1, g, h, i, j, k, l, m, n, o, p)
                                    }else {
                                      return f__$1.call(null, a, b, c, d, e, f__$1, g, h, i, j, k, l, m, n, o, p)
                                    }
                                  }else {
                                    var q = cljs.core._first.call(null, args__$17);
                                    var args__$18 = cljs.core._rest.call(null, args__$17);
                                    if(argc === 17) {
                                      if(f__$1.cljs$core$IFn$_invoke$arity$17) {
                                        return f__$1.cljs$core$IFn$_invoke$arity$17(a, b, c, d, e, f__$1, g, h, i, j, k, l, m, n, o, p, q)
                                      }else {
                                        return f__$1.call(null, a, b, c, d, e, f__$1, g, h, i, j, k, l, m, n, o, p, q)
                                      }
                                    }else {
                                      var r = cljs.core._first.call(null, args__$18);
                                      var args__$19 = cljs.core._rest.call(null, args__$18);
                                      if(argc === 18) {
                                        if(f__$1.cljs$core$IFn$_invoke$arity$18) {
                                          return f__$1.cljs$core$IFn$_invoke$arity$18(a, b, c, d, e, f__$1, g, h, i, j, k, l, m, n, o, p, q, r)
                                        }else {
                                          return f__$1.call(null, a, b, c, d, e, f__$1, g, h, i, j, k, l, m, n, o, p, q, r)
                                        }
                                      }else {
                                        var s = cljs.core._first.call(null, args__$19);
                                        var args__$20 = cljs.core._rest.call(null, args__$19);
                                        if(argc === 19) {
                                          if(f__$1.cljs$core$IFn$_invoke$arity$19) {
                                            return f__$1.cljs$core$IFn$_invoke$arity$19(a, b, c, d, e, f__$1, g, h, i, j, k, l, m, n, o, p, q, r, s)
                                          }else {
                                            return f__$1.call(null, a, b, c, d, e, f__$1, g, h, i, j, k, l, m, n, o, p, q, r, s)
                                          }
                                        }else {
                                          var t = cljs.core._first.call(null, args__$20);
                                          var args__$21 = cljs.core._rest.call(null, args__$20);
                                          if(argc === 20) {
                                            if(f__$1.cljs$core$IFn$_invoke$arity$20) {
                                              return f__$1.cljs$core$IFn$_invoke$arity$20(a, b, c, d, e, f__$1, g, h, i, j, k, l, m, n, o, p, q, r, s, t)
                                            }else {
                                              return f__$1.call(null, a, b, c, d, e, f__$1, g, h, i, j, k, l, m, n, o, p, q, r, s, t)
                                            }
                                          }else {
                                            throw new Error("Only up to 20 arguments supported on functions");
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
};
cljs.core.apply = function() {
  var apply = null;
  var apply__2 = function(f, args) {
    var fixed_arity = f.cljs$lang$maxFixedArity;
    if(f.cljs$lang$applyTo) {
      var bc = cljs.core.bounded_count.call(null, args, fixed_arity + 1);
      if(bc <= fixed_arity) {
        return cljs.core.apply_to.call(null, f, bc, args)
      }else {
        return f.cljs$lang$applyTo(args)
      }
    }else {
      return f.apply(f, cljs.core.to_array.call(null, args))
    }
  };
  var apply__3 = function(f, x, args) {
    var arglist = cljs.core.list_STAR_.call(null, x, args);
    var fixed_arity = f.cljs$lang$maxFixedArity;
    if(f.cljs$lang$applyTo) {
      var bc = cljs.core.bounded_count.call(null, arglist, fixed_arity + 1);
      if(bc <= fixed_arity) {
        return cljs.core.apply_to.call(null, f, bc, arglist)
      }else {
        return f.cljs$lang$applyTo(arglist)
      }
    }else {
      return f.apply(f, cljs.core.to_array.call(null, arglist))
    }
  };
  var apply__4 = function(f, x, y, args) {
    var arglist = cljs.core.list_STAR_.call(null, x, y, args);
    var fixed_arity = f.cljs$lang$maxFixedArity;
    if(f.cljs$lang$applyTo) {
      var bc = cljs.core.bounded_count.call(null, arglist, fixed_arity + 1);
      if(bc <= fixed_arity) {
        return cljs.core.apply_to.call(null, f, bc, arglist)
      }else {
        return f.cljs$lang$applyTo(arglist)
      }
    }else {
      return f.apply(f, cljs.core.to_array.call(null, arglist))
    }
  };
  var apply__5 = function(f, x, y, z, args) {
    var arglist = cljs.core.list_STAR_.call(null, x, y, z, args);
    var fixed_arity = f.cljs$lang$maxFixedArity;
    if(f.cljs$lang$applyTo) {
      var bc = cljs.core.bounded_count.call(null, arglist, fixed_arity + 1);
      if(bc <= fixed_arity) {
        return cljs.core.apply_to.call(null, f, bc, arglist)
      }else {
        return f.cljs$lang$applyTo(arglist)
      }
    }else {
      return f.apply(f, cljs.core.to_array.call(null, arglist))
    }
  };
  var apply__6 = function() {
    var G__425456__delegate = function(f, a, b, c, d, args) {
      var arglist = cljs.core.cons.call(null, a, cljs.core.cons.call(null, b, cljs.core.cons.call(null, c, cljs.core.cons.call(null, d, cljs.core.spread.call(null, args)))));
      var fixed_arity = f.cljs$lang$maxFixedArity;
      if(f.cljs$lang$applyTo) {
        var bc = cljs.core.bounded_count.call(null, arglist, fixed_arity + 1);
        if(bc <= fixed_arity) {
          return cljs.core.apply_to.call(null, f, bc, arglist)
        }else {
          return f.cljs$lang$applyTo(arglist)
        }
      }else {
        return f.apply(f, cljs.core.to_array.call(null, arglist))
      }
    };
    var G__425456 = function(f, a, b, c, d, var_args) {
      var args = null;
      if(arguments.length > 5) {
        args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 5), 0)
      }
      return G__425456__delegate.call(this, f, a, b, c, d, args)
    };
    G__425456.cljs$lang$maxFixedArity = 5;
    G__425456.cljs$lang$applyTo = function(arglist__425457) {
      var f = cljs.core.first(arglist__425457);
      arglist__425457 = cljs.core.next(arglist__425457);
      var a = cljs.core.first(arglist__425457);
      arglist__425457 = cljs.core.next(arglist__425457);
      var b = cljs.core.first(arglist__425457);
      arglist__425457 = cljs.core.next(arglist__425457);
      var c = cljs.core.first(arglist__425457);
      arglist__425457 = cljs.core.next(arglist__425457);
      var d = cljs.core.first(arglist__425457);
      var args = cljs.core.rest(arglist__425457);
      return G__425456__delegate(f, a, b, c, d, args)
    };
    G__425456.cljs$core$IFn$_invoke$arity$variadic = G__425456__delegate;
    return G__425456
  }();
  apply = function(f, a, b, c, d, var_args) {
    var args = var_args;
    switch(arguments.length) {
      case 2:
        return apply__2.call(this, f, a);
      case 3:
        return apply__3.call(this, f, a, b);
      case 4:
        return apply__4.call(this, f, a, b, c);
      case 5:
        return apply__5.call(this, f, a, b, c, d);
      default:
        return apply__6.cljs$core$IFn$_invoke$arity$variadic(f, a, b, c, d, cljs.core.array_seq(arguments, 5))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  apply.cljs$lang$maxFixedArity = 5;
  apply.cljs$lang$applyTo = apply__6.cljs$lang$applyTo;
  apply.cljs$core$IFn$_invoke$arity$2 = apply__2;
  apply.cljs$core$IFn$_invoke$arity$3 = apply__3;
  apply.cljs$core$IFn$_invoke$arity$4 = apply__4;
  apply.cljs$core$IFn$_invoke$arity$5 = apply__5;
  apply.cljs$core$IFn$_invoke$arity$variadic = apply__6.cljs$core$IFn$_invoke$arity$variadic;
  return apply
}();
cljs.core.vary_meta = function() {
  var vary_meta__delegate = function(obj, f, args) {
    return cljs.core.with_meta.call(null, obj, cljs.core.apply.call(null, f, cljs.core.meta.call(null, obj), args))
  };
  var vary_meta = function(obj, f, var_args) {
    var args = null;
    if(arguments.length > 2) {
      args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
    }
    return vary_meta__delegate.call(this, obj, f, args)
  };
  vary_meta.cljs$lang$maxFixedArity = 2;
  vary_meta.cljs$lang$applyTo = function(arglist__425458) {
    var obj = cljs.core.first(arglist__425458);
    arglist__425458 = cljs.core.next(arglist__425458);
    var f = cljs.core.first(arglist__425458);
    var args = cljs.core.rest(arglist__425458);
    return vary_meta__delegate(obj, f, args)
  };
  vary_meta.cljs$core$IFn$_invoke$arity$variadic = vary_meta__delegate;
  return vary_meta
}();
cljs.core.not_EQ_ = function() {
  var not_EQ_ = null;
  var not_EQ___1 = function(x) {
    return false
  };
  var not_EQ___2 = function(x, y) {
    return!cljs.core._EQ_.call(null, x, y)
  };
  var not_EQ___3 = function() {
    var G__425459__delegate = function(x, y, more) {
      return cljs.core.not.call(null, cljs.core.apply.call(null, cljs.core._EQ_, x, y, more))
    };
    var G__425459 = function(x, y, var_args) {
      var more = null;
      if(arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__425459__delegate.call(this, x, y, more)
    };
    G__425459.cljs$lang$maxFixedArity = 2;
    G__425459.cljs$lang$applyTo = function(arglist__425460) {
      var x = cljs.core.first(arglist__425460);
      arglist__425460 = cljs.core.next(arglist__425460);
      var y = cljs.core.first(arglist__425460);
      var more = cljs.core.rest(arglist__425460);
      return G__425459__delegate(x, y, more)
    };
    G__425459.cljs$core$IFn$_invoke$arity$variadic = G__425459__delegate;
    return G__425459
  }();
  not_EQ_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return not_EQ___1.call(this, x);
      case 2:
        return not_EQ___2.call(this, x, y);
      default:
        return not_EQ___3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  not_EQ_.cljs$lang$maxFixedArity = 2;
  not_EQ_.cljs$lang$applyTo = not_EQ___3.cljs$lang$applyTo;
  not_EQ_.cljs$core$IFn$_invoke$arity$1 = not_EQ___1;
  not_EQ_.cljs$core$IFn$_invoke$arity$2 = not_EQ___2;
  not_EQ_.cljs$core$IFn$_invoke$arity$variadic = not_EQ___3.cljs$core$IFn$_invoke$arity$variadic;
  return not_EQ_
}();
cljs.core.not_empty = function not_empty(coll) {
  if(cljs.core.seq.call(null, coll)) {
    return coll
  }else {
    return null
  }
};
cljs.core.every_QMARK_ = function every_QMARK_(pred, coll) {
  while(true) {
    if(cljs.core.seq.call(null, coll) == null) {
      return true
    }else {
      if(cljs.core.truth_(pred.call(null, cljs.core.first.call(null, coll)))) {
        var G__425461 = pred;
        var G__425462 = cljs.core.next.call(null, coll);
        pred = G__425461;
        coll = G__425462;
        continue
      }else {
        if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          return false
        }else {
          return null
        }
      }
    }
    break
  }
};
cljs.core.not_every_QMARK_ = function not_every_QMARK_(pred, coll) {
  return!cljs.core.every_QMARK_.call(null, pred, coll)
};
cljs.core.some = function some(pred, coll) {
  while(true) {
    if(cljs.core.seq.call(null, coll)) {
      var or__3285__auto__ = pred.call(null, cljs.core.first.call(null, coll));
      if(cljs.core.truth_(or__3285__auto__)) {
        return or__3285__auto__
      }else {
        var G__425463 = pred;
        var G__425464 = cljs.core.next.call(null, coll);
        pred = G__425463;
        coll = G__425464;
        continue
      }
    }else {
      return null
    }
    break
  }
};
cljs.core.not_any_QMARK_ = function not_any_QMARK_(pred, coll) {
  return cljs.core.not.call(null, cljs.core.some.call(null, pred, coll))
};
cljs.core.even_QMARK_ = function even_QMARK_(n) {
  if(cljs.core.integer_QMARK_.call(null, n)) {
    return(n & 1) === 0
  }else {
    throw new Error([cljs.core.str("Argument must be an integer: "), cljs.core.str(n)].join(""));
  }
};
cljs.core.odd_QMARK_ = function odd_QMARK_(n) {
  return!cljs.core.even_QMARK_.call(null, n)
};
cljs.core.identity = function identity(x) {
  return x
};
cljs.core.complement = function complement(f) {
  return function() {
    var G__425465 = null;
    var G__425465__0 = function() {
      return cljs.core.not.call(null, f.call(null))
    };
    var G__425465__1 = function(x) {
      return cljs.core.not.call(null, f.call(null, x))
    };
    var G__425465__2 = function(x, y) {
      return cljs.core.not.call(null, f.call(null, x, y))
    };
    var G__425465__3 = function() {
      var G__425466__delegate = function(x, y, zs) {
        return cljs.core.not.call(null, cljs.core.apply.call(null, f, x, y, zs))
      };
      var G__425466 = function(x, y, var_args) {
        var zs = null;
        if(arguments.length > 2) {
          zs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
        }
        return G__425466__delegate.call(this, x, y, zs)
      };
      G__425466.cljs$lang$maxFixedArity = 2;
      G__425466.cljs$lang$applyTo = function(arglist__425467) {
        var x = cljs.core.first(arglist__425467);
        arglist__425467 = cljs.core.next(arglist__425467);
        var y = cljs.core.first(arglist__425467);
        var zs = cljs.core.rest(arglist__425467);
        return G__425466__delegate(x, y, zs)
      };
      G__425466.cljs$core$IFn$_invoke$arity$variadic = G__425466__delegate;
      return G__425466
    }();
    G__425465 = function(x, y, var_args) {
      var zs = var_args;
      switch(arguments.length) {
        case 0:
          return G__425465__0.call(this);
        case 1:
          return G__425465__1.call(this, x);
        case 2:
          return G__425465__2.call(this, x, y);
        default:
          return G__425465__3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    G__425465.cljs$lang$maxFixedArity = 2;
    G__425465.cljs$lang$applyTo = G__425465__3.cljs$lang$applyTo;
    return G__425465
  }()
};
cljs.core.constantly = function constantly(x) {
  return function() {
    var G__425468__delegate = function(args) {
      return x
    };
    var G__425468 = function(var_args) {
      var args = null;
      if(arguments.length > 0) {
        args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
      }
      return G__425468__delegate.call(this, args)
    };
    G__425468.cljs$lang$maxFixedArity = 0;
    G__425468.cljs$lang$applyTo = function(arglist__425469) {
      var args = cljs.core.seq(arglist__425469);
      return G__425468__delegate(args)
    };
    G__425468.cljs$core$IFn$_invoke$arity$variadic = G__425468__delegate;
    return G__425468
  }()
};
cljs.core.comp = function() {
  var comp = null;
  var comp__0 = function() {
    return cljs.core.identity
  };
  var comp__1 = function(f) {
    return f
  };
  var comp__2 = function(f, g) {
    return function() {
      var G__425470 = null;
      var G__425470__0 = function() {
        return f.call(null, g.call(null))
      };
      var G__425470__1 = function(x) {
        return f.call(null, g.call(null, x))
      };
      var G__425470__2 = function(x, y) {
        return f.call(null, g.call(null, x, y))
      };
      var G__425470__3 = function(x, y, z) {
        return f.call(null, g.call(null, x, y, z))
      };
      var G__425470__4 = function() {
        var G__425471__delegate = function(x, y, z, args) {
          return f.call(null, cljs.core.apply.call(null, g, x, y, z, args))
        };
        var G__425471 = function(x, y, z, var_args) {
          var args = null;
          if(arguments.length > 3) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
          }
          return G__425471__delegate.call(this, x, y, z, args)
        };
        G__425471.cljs$lang$maxFixedArity = 3;
        G__425471.cljs$lang$applyTo = function(arglist__425472) {
          var x = cljs.core.first(arglist__425472);
          arglist__425472 = cljs.core.next(arglist__425472);
          var y = cljs.core.first(arglist__425472);
          arglist__425472 = cljs.core.next(arglist__425472);
          var z = cljs.core.first(arglist__425472);
          var args = cljs.core.rest(arglist__425472);
          return G__425471__delegate(x, y, z, args)
        };
        G__425471.cljs$core$IFn$_invoke$arity$variadic = G__425471__delegate;
        return G__425471
      }();
      G__425470 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return G__425470__0.call(this);
          case 1:
            return G__425470__1.call(this, x);
          case 2:
            return G__425470__2.call(this, x, y);
          case 3:
            return G__425470__3.call(this, x, y, z);
          default:
            return G__425470__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3))
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__425470.cljs$lang$maxFixedArity = 3;
      G__425470.cljs$lang$applyTo = G__425470__4.cljs$lang$applyTo;
      return G__425470
    }()
  };
  var comp__3 = function(f, g, h) {
    return function() {
      var G__425473 = null;
      var G__425473__0 = function() {
        return f.call(null, g.call(null, h.call(null)))
      };
      var G__425473__1 = function(x) {
        return f.call(null, g.call(null, h.call(null, x)))
      };
      var G__425473__2 = function(x, y) {
        return f.call(null, g.call(null, h.call(null, x, y)))
      };
      var G__425473__3 = function(x, y, z) {
        return f.call(null, g.call(null, h.call(null, x, y, z)))
      };
      var G__425473__4 = function() {
        var G__425474__delegate = function(x, y, z, args) {
          return f.call(null, g.call(null, cljs.core.apply.call(null, h, x, y, z, args)))
        };
        var G__425474 = function(x, y, z, var_args) {
          var args = null;
          if(arguments.length > 3) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
          }
          return G__425474__delegate.call(this, x, y, z, args)
        };
        G__425474.cljs$lang$maxFixedArity = 3;
        G__425474.cljs$lang$applyTo = function(arglist__425475) {
          var x = cljs.core.first(arglist__425475);
          arglist__425475 = cljs.core.next(arglist__425475);
          var y = cljs.core.first(arglist__425475);
          arglist__425475 = cljs.core.next(arglist__425475);
          var z = cljs.core.first(arglist__425475);
          var args = cljs.core.rest(arglist__425475);
          return G__425474__delegate(x, y, z, args)
        };
        G__425474.cljs$core$IFn$_invoke$arity$variadic = G__425474__delegate;
        return G__425474
      }();
      G__425473 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return G__425473__0.call(this);
          case 1:
            return G__425473__1.call(this, x);
          case 2:
            return G__425473__2.call(this, x, y);
          case 3:
            return G__425473__3.call(this, x, y, z);
          default:
            return G__425473__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3))
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__425473.cljs$lang$maxFixedArity = 3;
      G__425473.cljs$lang$applyTo = G__425473__4.cljs$lang$applyTo;
      return G__425473
    }()
  };
  var comp__4 = function() {
    var G__425476__delegate = function(f1, f2, f3, fs) {
      var fs__$1 = cljs.core.reverse.call(null, cljs.core.list_STAR_.call(null, f1, f2, f3, fs));
      return function() {
        var G__425477__delegate = function(args) {
          var ret = cljs.core.apply.call(null, cljs.core.first.call(null, fs__$1), args);
          var fs__$2 = cljs.core.next.call(null, fs__$1);
          while(true) {
            if(fs__$2) {
              var G__425478 = cljs.core.first.call(null, fs__$2).call(null, ret);
              var G__425479 = cljs.core.next.call(null, fs__$2);
              ret = G__425478;
              fs__$2 = G__425479;
              continue
            }else {
              return ret
            }
            break
          }
        };
        var G__425477 = function(var_args) {
          var args = null;
          if(arguments.length > 0) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
          }
          return G__425477__delegate.call(this, args)
        };
        G__425477.cljs$lang$maxFixedArity = 0;
        G__425477.cljs$lang$applyTo = function(arglist__425480) {
          var args = cljs.core.seq(arglist__425480);
          return G__425477__delegate(args)
        };
        G__425477.cljs$core$IFn$_invoke$arity$variadic = G__425477__delegate;
        return G__425477
      }()
    };
    var G__425476 = function(f1, f2, f3, var_args) {
      var fs = null;
      if(arguments.length > 3) {
        fs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
      }
      return G__425476__delegate.call(this, f1, f2, f3, fs)
    };
    G__425476.cljs$lang$maxFixedArity = 3;
    G__425476.cljs$lang$applyTo = function(arglist__425481) {
      var f1 = cljs.core.first(arglist__425481);
      arglist__425481 = cljs.core.next(arglist__425481);
      var f2 = cljs.core.first(arglist__425481);
      arglist__425481 = cljs.core.next(arglist__425481);
      var f3 = cljs.core.first(arglist__425481);
      var fs = cljs.core.rest(arglist__425481);
      return G__425476__delegate(f1, f2, f3, fs)
    };
    G__425476.cljs$core$IFn$_invoke$arity$variadic = G__425476__delegate;
    return G__425476
  }();
  comp = function(f1, f2, f3, var_args) {
    var fs = var_args;
    switch(arguments.length) {
      case 0:
        return comp__0.call(this);
      case 1:
        return comp__1.call(this, f1);
      case 2:
        return comp__2.call(this, f1, f2);
      case 3:
        return comp__3.call(this, f1, f2, f3);
      default:
        return comp__4.cljs$core$IFn$_invoke$arity$variadic(f1, f2, f3, cljs.core.array_seq(arguments, 3))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  comp.cljs$lang$maxFixedArity = 3;
  comp.cljs$lang$applyTo = comp__4.cljs$lang$applyTo;
  comp.cljs$core$IFn$_invoke$arity$0 = comp__0;
  comp.cljs$core$IFn$_invoke$arity$1 = comp__1;
  comp.cljs$core$IFn$_invoke$arity$2 = comp__2;
  comp.cljs$core$IFn$_invoke$arity$3 = comp__3;
  comp.cljs$core$IFn$_invoke$arity$variadic = comp__4.cljs$core$IFn$_invoke$arity$variadic;
  return comp
}();
cljs.core.partial = function() {
  var partial = null;
  var partial__1 = function(f) {
    return f
  };
  var partial__2 = function(f, arg1) {
    return function() {
      var G__425482__delegate = function(args) {
        return cljs.core.apply.call(null, f, arg1, args)
      };
      var G__425482 = function(var_args) {
        var args = null;
        if(arguments.length > 0) {
          args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
        }
        return G__425482__delegate.call(this, args)
      };
      G__425482.cljs$lang$maxFixedArity = 0;
      G__425482.cljs$lang$applyTo = function(arglist__425483) {
        var args = cljs.core.seq(arglist__425483);
        return G__425482__delegate(args)
      };
      G__425482.cljs$core$IFn$_invoke$arity$variadic = G__425482__delegate;
      return G__425482
    }()
  };
  var partial__3 = function(f, arg1, arg2) {
    return function() {
      var G__425484__delegate = function(args) {
        return cljs.core.apply.call(null, f, arg1, arg2, args)
      };
      var G__425484 = function(var_args) {
        var args = null;
        if(arguments.length > 0) {
          args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
        }
        return G__425484__delegate.call(this, args)
      };
      G__425484.cljs$lang$maxFixedArity = 0;
      G__425484.cljs$lang$applyTo = function(arglist__425485) {
        var args = cljs.core.seq(arglist__425485);
        return G__425484__delegate(args)
      };
      G__425484.cljs$core$IFn$_invoke$arity$variadic = G__425484__delegate;
      return G__425484
    }()
  };
  var partial__4 = function(f, arg1, arg2, arg3) {
    return function() {
      var G__425486__delegate = function(args) {
        return cljs.core.apply.call(null, f, arg1, arg2, arg3, args)
      };
      var G__425486 = function(var_args) {
        var args = null;
        if(arguments.length > 0) {
          args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
        }
        return G__425486__delegate.call(this, args)
      };
      G__425486.cljs$lang$maxFixedArity = 0;
      G__425486.cljs$lang$applyTo = function(arglist__425487) {
        var args = cljs.core.seq(arglist__425487);
        return G__425486__delegate(args)
      };
      G__425486.cljs$core$IFn$_invoke$arity$variadic = G__425486__delegate;
      return G__425486
    }()
  };
  var partial__5 = function() {
    var G__425488__delegate = function(f, arg1, arg2, arg3, more) {
      return function() {
        var G__425489__delegate = function(args) {
          return cljs.core.apply.call(null, f, arg1, arg2, arg3, cljs.core.concat.call(null, more, args))
        };
        var G__425489 = function(var_args) {
          var args = null;
          if(arguments.length > 0) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
          }
          return G__425489__delegate.call(this, args)
        };
        G__425489.cljs$lang$maxFixedArity = 0;
        G__425489.cljs$lang$applyTo = function(arglist__425490) {
          var args = cljs.core.seq(arglist__425490);
          return G__425489__delegate(args)
        };
        G__425489.cljs$core$IFn$_invoke$arity$variadic = G__425489__delegate;
        return G__425489
      }()
    };
    var G__425488 = function(f, arg1, arg2, arg3, var_args) {
      var more = null;
      if(arguments.length > 4) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 4), 0)
      }
      return G__425488__delegate.call(this, f, arg1, arg2, arg3, more)
    };
    G__425488.cljs$lang$maxFixedArity = 4;
    G__425488.cljs$lang$applyTo = function(arglist__425491) {
      var f = cljs.core.first(arglist__425491);
      arglist__425491 = cljs.core.next(arglist__425491);
      var arg1 = cljs.core.first(arglist__425491);
      arglist__425491 = cljs.core.next(arglist__425491);
      var arg2 = cljs.core.first(arglist__425491);
      arglist__425491 = cljs.core.next(arglist__425491);
      var arg3 = cljs.core.first(arglist__425491);
      var more = cljs.core.rest(arglist__425491);
      return G__425488__delegate(f, arg1, arg2, arg3, more)
    };
    G__425488.cljs$core$IFn$_invoke$arity$variadic = G__425488__delegate;
    return G__425488
  }();
  partial = function(f, arg1, arg2, arg3, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return partial__1.call(this, f);
      case 2:
        return partial__2.call(this, f, arg1);
      case 3:
        return partial__3.call(this, f, arg1, arg2);
      case 4:
        return partial__4.call(this, f, arg1, arg2, arg3);
      default:
        return partial__5.cljs$core$IFn$_invoke$arity$variadic(f, arg1, arg2, arg3, cljs.core.array_seq(arguments, 4))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  partial.cljs$lang$maxFixedArity = 4;
  partial.cljs$lang$applyTo = partial__5.cljs$lang$applyTo;
  partial.cljs$core$IFn$_invoke$arity$1 = partial__1;
  partial.cljs$core$IFn$_invoke$arity$2 = partial__2;
  partial.cljs$core$IFn$_invoke$arity$3 = partial__3;
  partial.cljs$core$IFn$_invoke$arity$4 = partial__4;
  partial.cljs$core$IFn$_invoke$arity$variadic = partial__5.cljs$core$IFn$_invoke$arity$variadic;
  return partial
}();
cljs.core.fnil = function() {
  var fnil = null;
  var fnil__2 = function(f, x) {
    return function() {
      var G__425492 = null;
      var G__425492__1 = function(a) {
        return f.call(null, a == null ? x : a)
      };
      var G__425492__2 = function(a, b) {
        return f.call(null, a == null ? x : a, b)
      };
      var G__425492__3 = function(a, b, c) {
        return f.call(null, a == null ? x : a, b, c)
      };
      var G__425492__4 = function() {
        var G__425493__delegate = function(a, b, c, ds) {
          return cljs.core.apply.call(null, f, a == null ? x : a, b, c, ds)
        };
        var G__425493 = function(a, b, c, var_args) {
          var ds = null;
          if(arguments.length > 3) {
            ds = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
          }
          return G__425493__delegate.call(this, a, b, c, ds)
        };
        G__425493.cljs$lang$maxFixedArity = 3;
        G__425493.cljs$lang$applyTo = function(arglist__425494) {
          var a = cljs.core.first(arglist__425494);
          arglist__425494 = cljs.core.next(arglist__425494);
          var b = cljs.core.first(arglist__425494);
          arglist__425494 = cljs.core.next(arglist__425494);
          var c = cljs.core.first(arglist__425494);
          var ds = cljs.core.rest(arglist__425494);
          return G__425493__delegate(a, b, c, ds)
        };
        G__425493.cljs$core$IFn$_invoke$arity$variadic = G__425493__delegate;
        return G__425493
      }();
      G__425492 = function(a, b, c, var_args) {
        var ds = var_args;
        switch(arguments.length) {
          case 1:
            return G__425492__1.call(this, a);
          case 2:
            return G__425492__2.call(this, a, b);
          case 3:
            return G__425492__3.call(this, a, b, c);
          default:
            return G__425492__4.cljs$core$IFn$_invoke$arity$variadic(a, b, c, cljs.core.array_seq(arguments, 3))
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__425492.cljs$lang$maxFixedArity = 3;
      G__425492.cljs$lang$applyTo = G__425492__4.cljs$lang$applyTo;
      return G__425492
    }()
  };
  var fnil__3 = function(f, x, y) {
    return function() {
      var G__425495 = null;
      var G__425495__2 = function(a, b) {
        return f.call(null, a == null ? x : a, b == null ? y : b)
      };
      var G__425495__3 = function(a, b, c) {
        return f.call(null, a == null ? x : a, b == null ? y : b, c)
      };
      var G__425495__4 = function() {
        var G__425496__delegate = function(a, b, c, ds) {
          return cljs.core.apply.call(null, f, a == null ? x : a, b == null ? y : b, c, ds)
        };
        var G__425496 = function(a, b, c, var_args) {
          var ds = null;
          if(arguments.length > 3) {
            ds = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
          }
          return G__425496__delegate.call(this, a, b, c, ds)
        };
        G__425496.cljs$lang$maxFixedArity = 3;
        G__425496.cljs$lang$applyTo = function(arglist__425497) {
          var a = cljs.core.first(arglist__425497);
          arglist__425497 = cljs.core.next(arglist__425497);
          var b = cljs.core.first(arglist__425497);
          arglist__425497 = cljs.core.next(arglist__425497);
          var c = cljs.core.first(arglist__425497);
          var ds = cljs.core.rest(arglist__425497);
          return G__425496__delegate(a, b, c, ds)
        };
        G__425496.cljs$core$IFn$_invoke$arity$variadic = G__425496__delegate;
        return G__425496
      }();
      G__425495 = function(a, b, c, var_args) {
        var ds = var_args;
        switch(arguments.length) {
          case 2:
            return G__425495__2.call(this, a, b);
          case 3:
            return G__425495__3.call(this, a, b, c);
          default:
            return G__425495__4.cljs$core$IFn$_invoke$arity$variadic(a, b, c, cljs.core.array_seq(arguments, 3))
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__425495.cljs$lang$maxFixedArity = 3;
      G__425495.cljs$lang$applyTo = G__425495__4.cljs$lang$applyTo;
      return G__425495
    }()
  };
  var fnil__4 = function(f, x, y, z) {
    return function() {
      var G__425498 = null;
      var G__425498__2 = function(a, b) {
        return f.call(null, a == null ? x : a, b == null ? y : b)
      };
      var G__425498__3 = function(a, b, c) {
        return f.call(null, a == null ? x : a, b == null ? y : b, c == null ? z : c)
      };
      var G__425498__4 = function() {
        var G__425499__delegate = function(a, b, c, ds) {
          return cljs.core.apply.call(null, f, a == null ? x : a, b == null ? y : b, c == null ? z : c, ds)
        };
        var G__425499 = function(a, b, c, var_args) {
          var ds = null;
          if(arguments.length > 3) {
            ds = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
          }
          return G__425499__delegate.call(this, a, b, c, ds)
        };
        G__425499.cljs$lang$maxFixedArity = 3;
        G__425499.cljs$lang$applyTo = function(arglist__425500) {
          var a = cljs.core.first(arglist__425500);
          arglist__425500 = cljs.core.next(arglist__425500);
          var b = cljs.core.first(arglist__425500);
          arglist__425500 = cljs.core.next(arglist__425500);
          var c = cljs.core.first(arglist__425500);
          var ds = cljs.core.rest(arglist__425500);
          return G__425499__delegate(a, b, c, ds)
        };
        G__425499.cljs$core$IFn$_invoke$arity$variadic = G__425499__delegate;
        return G__425499
      }();
      G__425498 = function(a, b, c, var_args) {
        var ds = var_args;
        switch(arguments.length) {
          case 2:
            return G__425498__2.call(this, a, b);
          case 3:
            return G__425498__3.call(this, a, b, c);
          default:
            return G__425498__4.cljs$core$IFn$_invoke$arity$variadic(a, b, c, cljs.core.array_seq(arguments, 3))
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__425498.cljs$lang$maxFixedArity = 3;
      G__425498.cljs$lang$applyTo = G__425498__4.cljs$lang$applyTo;
      return G__425498
    }()
  };
  fnil = function(f, x, y, z) {
    switch(arguments.length) {
      case 2:
        return fnil__2.call(this, f, x);
      case 3:
        return fnil__3.call(this, f, x, y);
      case 4:
        return fnil__4.call(this, f, x, y, z)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  fnil.cljs$core$IFn$_invoke$arity$2 = fnil__2;
  fnil.cljs$core$IFn$_invoke$arity$3 = fnil__3;
  fnil.cljs$core$IFn$_invoke$arity$4 = fnil__4;
  return fnil
}();
cljs.core.map_indexed = function map_indexed(f, coll) {
  var mapi = function mapi(idx, coll__$1) {
    return new cljs.core.LazySeq(null, function() {
      var temp__4092__auto__ = cljs.core.seq.call(null, coll__$1);
      if(temp__4092__auto__) {
        var s = temp__4092__auto__;
        if(cljs.core.chunked_seq_QMARK_.call(null, s)) {
          var c = cljs.core.chunk_first.call(null, s);
          var size = cljs.core.count.call(null, c);
          var b = cljs.core.chunk_buffer.call(null, size);
          var n__4108__auto___425501 = size;
          var i_425502 = 0;
          while(true) {
            if(i_425502 < n__4108__auto___425501) {
              cljs.core.chunk_append.call(null, b, f.call(null, idx + i_425502, cljs.core._nth.call(null, c, i_425502)));
              var G__425503 = i_425502 + 1;
              i_425502 = G__425503;
              continue
            }else {
            }
            break
          }
          return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b), mapi.call(null, idx + size, cljs.core.chunk_rest.call(null, s)))
        }else {
          return cljs.core.cons.call(null, f.call(null, idx, cljs.core.first.call(null, s)), mapi.call(null, idx + 1, cljs.core.rest.call(null, s)))
        }
      }else {
        return null
      }
    }, null, null)
  };
  return mapi.call(null, 0, coll)
};
cljs.core.keep = function keep(f, coll) {
  return new cljs.core.LazySeq(null, function() {
    var temp__4092__auto__ = cljs.core.seq.call(null, coll);
    if(temp__4092__auto__) {
      var s = temp__4092__auto__;
      if(cljs.core.chunked_seq_QMARK_.call(null, s)) {
        var c = cljs.core.chunk_first.call(null, s);
        var size = cljs.core.count.call(null, c);
        var b = cljs.core.chunk_buffer.call(null, size);
        var n__4108__auto___425504 = size;
        var i_425505 = 0;
        while(true) {
          if(i_425505 < n__4108__auto___425504) {
            var x_425506 = f.call(null, cljs.core._nth.call(null, c, i_425505));
            if(x_425506 == null) {
            }else {
              cljs.core.chunk_append.call(null, b, x_425506)
            }
            var G__425507 = i_425505 + 1;
            i_425505 = G__425507;
            continue
          }else {
          }
          break
        }
        return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b), keep.call(null, f, cljs.core.chunk_rest.call(null, s)))
      }else {
        var x = f.call(null, cljs.core.first.call(null, s));
        if(x == null) {
          return keep.call(null, f, cljs.core.rest.call(null, s))
        }else {
          return cljs.core.cons.call(null, x, keep.call(null, f, cljs.core.rest.call(null, s)))
        }
      }
    }else {
      return null
    }
  }, null, null)
};
cljs.core.keep_indexed = function keep_indexed(f, coll) {
  var keepi = function keepi(idx, coll__$1) {
    return new cljs.core.LazySeq(null, function() {
      var temp__4092__auto__ = cljs.core.seq.call(null, coll__$1);
      if(temp__4092__auto__) {
        var s = temp__4092__auto__;
        if(cljs.core.chunked_seq_QMARK_.call(null, s)) {
          var c = cljs.core.chunk_first.call(null, s);
          var size = cljs.core.count.call(null, c);
          var b = cljs.core.chunk_buffer.call(null, size);
          var n__4108__auto___425508 = size;
          var i_425509 = 0;
          while(true) {
            if(i_425509 < n__4108__auto___425508) {
              var x_425510 = f.call(null, idx + i_425509, cljs.core._nth.call(null, c, i_425509));
              if(x_425510 == null) {
              }else {
                cljs.core.chunk_append.call(null, b, x_425510)
              }
              var G__425511 = i_425509 + 1;
              i_425509 = G__425511;
              continue
            }else {
            }
            break
          }
          return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b), keepi.call(null, idx + size, cljs.core.chunk_rest.call(null, s)))
        }else {
          var x = f.call(null, idx, cljs.core.first.call(null, s));
          if(x == null) {
            return keepi.call(null, idx + 1, cljs.core.rest.call(null, s))
          }else {
            return cljs.core.cons.call(null, x, keepi.call(null, idx + 1, cljs.core.rest.call(null, s)))
          }
        }
      }else {
        return null
      }
    }, null, null)
  };
  return keepi.call(null, 0, coll)
};
cljs.core.every_pred = function() {
  var every_pred = null;
  var every_pred__1 = function(p) {
    return function() {
      var ep1 = null;
      var ep1__0 = function() {
        return true
      };
      var ep1__1 = function(x) {
        return cljs.core.boolean$.call(null, p.call(null, x))
      };
      var ep1__2 = function(x, y) {
        return cljs.core.boolean$.call(null, function() {
          var and__3273__auto__ = p.call(null, x);
          if(cljs.core.truth_(and__3273__auto__)) {
            return p.call(null, y)
          }else {
            return and__3273__auto__
          }
        }())
      };
      var ep1__3 = function(x, y, z) {
        return cljs.core.boolean$.call(null, function() {
          var and__3273__auto__ = p.call(null, x);
          if(cljs.core.truth_(and__3273__auto__)) {
            var and__3273__auto____$1 = p.call(null, y);
            if(cljs.core.truth_(and__3273__auto____$1)) {
              return p.call(null, z)
            }else {
              return and__3273__auto____$1
            }
          }else {
            return and__3273__auto__
          }
        }())
      };
      var ep1__4 = function() {
        var G__425518__delegate = function(x, y, z, args) {
          return cljs.core.boolean$.call(null, ep1.call(null, x, y, z) && cljs.core.every_QMARK_.call(null, p, args))
        };
        var G__425518 = function(x, y, z, var_args) {
          var args = null;
          if(arguments.length > 3) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
          }
          return G__425518__delegate.call(this, x, y, z, args)
        };
        G__425518.cljs$lang$maxFixedArity = 3;
        G__425518.cljs$lang$applyTo = function(arglist__425519) {
          var x = cljs.core.first(arglist__425519);
          arglist__425519 = cljs.core.next(arglist__425519);
          var y = cljs.core.first(arglist__425519);
          arglist__425519 = cljs.core.next(arglist__425519);
          var z = cljs.core.first(arglist__425519);
          var args = cljs.core.rest(arglist__425519);
          return G__425518__delegate(x, y, z, args)
        };
        G__425518.cljs$core$IFn$_invoke$arity$variadic = G__425518__delegate;
        return G__425518
      }();
      ep1 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return ep1__0.call(this);
          case 1:
            return ep1__1.call(this, x);
          case 2:
            return ep1__2.call(this, x, y);
          case 3:
            return ep1__3.call(this, x, y, z);
          default:
            return ep1__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3))
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      ep1.cljs$lang$maxFixedArity = 3;
      ep1.cljs$lang$applyTo = ep1__4.cljs$lang$applyTo;
      ep1.cljs$core$IFn$_invoke$arity$0 = ep1__0;
      ep1.cljs$core$IFn$_invoke$arity$1 = ep1__1;
      ep1.cljs$core$IFn$_invoke$arity$2 = ep1__2;
      ep1.cljs$core$IFn$_invoke$arity$3 = ep1__3;
      ep1.cljs$core$IFn$_invoke$arity$variadic = ep1__4.cljs$core$IFn$_invoke$arity$variadic;
      return ep1
    }()
  };
  var every_pred__2 = function(p1, p2) {
    return function() {
      var ep2 = null;
      var ep2__0 = function() {
        return true
      };
      var ep2__1 = function(x) {
        return cljs.core.boolean$.call(null, function() {
          var and__3273__auto__ = p1.call(null, x);
          if(cljs.core.truth_(and__3273__auto__)) {
            return p2.call(null, x)
          }else {
            return and__3273__auto__
          }
        }())
      };
      var ep2__2 = function(x, y) {
        return cljs.core.boolean$.call(null, function() {
          var and__3273__auto__ = p1.call(null, x);
          if(cljs.core.truth_(and__3273__auto__)) {
            var and__3273__auto____$1 = p1.call(null, y);
            if(cljs.core.truth_(and__3273__auto____$1)) {
              var and__3273__auto____$2 = p2.call(null, x);
              if(cljs.core.truth_(and__3273__auto____$2)) {
                return p2.call(null, y)
              }else {
                return and__3273__auto____$2
              }
            }else {
              return and__3273__auto____$1
            }
          }else {
            return and__3273__auto__
          }
        }())
      };
      var ep2__3 = function(x, y, z) {
        return cljs.core.boolean$.call(null, function() {
          var and__3273__auto__ = p1.call(null, x);
          if(cljs.core.truth_(and__3273__auto__)) {
            var and__3273__auto____$1 = p1.call(null, y);
            if(cljs.core.truth_(and__3273__auto____$1)) {
              var and__3273__auto____$2 = p1.call(null, z);
              if(cljs.core.truth_(and__3273__auto____$2)) {
                var and__3273__auto____$3 = p2.call(null, x);
                if(cljs.core.truth_(and__3273__auto____$3)) {
                  var and__3273__auto____$4 = p2.call(null, y);
                  if(cljs.core.truth_(and__3273__auto____$4)) {
                    return p2.call(null, z)
                  }else {
                    return and__3273__auto____$4
                  }
                }else {
                  return and__3273__auto____$3
                }
              }else {
                return and__3273__auto____$2
              }
            }else {
              return and__3273__auto____$1
            }
          }else {
            return and__3273__auto__
          }
        }())
      };
      var ep2__4 = function() {
        var G__425520__delegate = function(x, y, z, args) {
          return cljs.core.boolean$.call(null, ep2.call(null, x, y, z) && cljs.core.every_QMARK_.call(null, function(p1__425512_SHARP_) {
            var and__3273__auto__ = p1.call(null, p1__425512_SHARP_);
            if(cljs.core.truth_(and__3273__auto__)) {
              return p2.call(null, p1__425512_SHARP_)
            }else {
              return and__3273__auto__
            }
          }, args))
        };
        var G__425520 = function(x, y, z, var_args) {
          var args = null;
          if(arguments.length > 3) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
          }
          return G__425520__delegate.call(this, x, y, z, args)
        };
        G__425520.cljs$lang$maxFixedArity = 3;
        G__425520.cljs$lang$applyTo = function(arglist__425521) {
          var x = cljs.core.first(arglist__425521);
          arglist__425521 = cljs.core.next(arglist__425521);
          var y = cljs.core.first(arglist__425521);
          arglist__425521 = cljs.core.next(arglist__425521);
          var z = cljs.core.first(arglist__425521);
          var args = cljs.core.rest(arglist__425521);
          return G__425520__delegate(x, y, z, args)
        };
        G__425520.cljs$core$IFn$_invoke$arity$variadic = G__425520__delegate;
        return G__425520
      }();
      ep2 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return ep2__0.call(this);
          case 1:
            return ep2__1.call(this, x);
          case 2:
            return ep2__2.call(this, x, y);
          case 3:
            return ep2__3.call(this, x, y, z);
          default:
            return ep2__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3))
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      ep2.cljs$lang$maxFixedArity = 3;
      ep2.cljs$lang$applyTo = ep2__4.cljs$lang$applyTo;
      ep2.cljs$core$IFn$_invoke$arity$0 = ep2__0;
      ep2.cljs$core$IFn$_invoke$arity$1 = ep2__1;
      ep2.cljs$core$IFn$_invoke$arity$2 = ep2__2;
      ep2.cljs$core$IFn$_invoke$arity$3 = ep2__3;
      ep2.cljs$core$IFn$_invoke$arity$variadic = ep2__4.cljs$core$IFn$_invoke$arity$variadic;
      return ep2
    }()
  };
  var every_pred__3 = function(p1, p2, p3) {
    return function() {
      var ep3 = null;
      var ep3__0 = function() {
        return true
      };
      var ep3__1 = function(x) {
        return cljs.core.boolean$.call(null, function() {
          var and__3273__auto__ = p1.call(null, x);
          if(cljs.core.truth_(and__3273__auto__)) {
            var and__3273__auto____$1 = p2.call(null, x);
            if(cljs.core.truth_(and__3273__auto____$1)) {
              return p3.call(null, x)
            }else {
              return and__3273__auto____$1
            }
          }else {
            return and__3273__auto__
          }
        }())
      };
      var ep3__2 = function(x, y) {
        return cljs.core.boolean$.call(null, function() {
          var and__3273__auto__ = p1.call(null, x);
          if(cljs.core.truth_(and__3273__auto__)) {
            var and__3273__auto____$1 = p2.call(null, x);
            if(cljs.core.truth_(and__3273__auto____$1)) {
              var and__3273__auto____$2 = p3.call(null, x);
              if(cljs.core.truth_(and__3273__auto____$2)) {
                var and__3273__auto____$3 = p1.call(null, y);
                if(cljs.core.truth_(and__3273__auto____$3)) {
                  var and__3273__auto____$4 = p2.call(null, y);
                  if(cljs.core.truth_(and__3273__auto____$4)) {
                    return p3.call(null, y)
                  }else {
                    return and__3273__auto____$4
                  }
                }else {
                  return and__3273__auto____$3
                }
              }else {
                return and__3273__auto____$2
              }
            }else {
              return and__3273__auto____$1
            }
          }else {
            return and__3273__auto__
          }
        }())
      };
      var ep3__3 = function(x, y, z) {
        return cljs.core.boolean$.call(null, function() {
          var and__3273__auto__ = p1.call(null, x);
          if(cljs.core.truth_(and__3273__auto__)) {
            var and__3273__auto____$1 = p2.call(null, x);
            if(cljs.core.truth_(and__3273__auto____$1)) {
              var and__3273__auto____$2 = p3.call(null, x);
              if(cljs.core.truth_(and__3273__auto____$2)) {
                var and__3273__auto____$3 = p1.call(null, y);
                if(cljs.core.truth_(and__3273__auto____$3)) {
                  var and__3273__auto____$4 = p2.call(null, y);
                  if(cljs.core.truth_(and__3273__auto____$4)) {
                    var and__3273__auto____$5 = p3.call(null, y);
                    if(cljs.core.truth_(and__3273__auto____$5)) {
                      var and__3273__auto____$6 = p1.call(null, z);
                      if(cljs.core.truth_(and__3273__auto____$6)) {
                        var and__3273__auto____$7 = p2.call(null, z);
                        if(cljs.core.truth_(and__3273__auto____$7)) {
                          return p3.call(null, z)
                        }else {
                          return and__3273__auto____$7
                        }
                      }else {
                        return and__3273__auto____$6
                      }
                    }else {
                      return and__3273__auto____$5
                    }
                  }else {
                    return and__3273__auto____$4
                  }
                }else {
                  return and__3273__auto____$3
                }
              }else {
                return and__3273__auto____$2
              }
            }else {
              return and__3273__auto____$1
            }
          }else {
            return and__3273__auto__
          }
        }())
      };
      var ep3__4 = function() {
        var G__425522__delegate = function(x, y, z, args) {
          return cljs.core.boolean$.call(null, ep3.call(null, x, y, z) && cljs.core.every_QMARK_.call(null, function(p1__425513_SHARP_) {
            var and__3273__auto__ = p1.call(null, p1__425513_SHARP_);
            if(cljs.core.truth_(and__3273__auto__)) {
              var and__3273__auto____$1 = p2.call(null, p1__425513_SHARP_);
              if(cljs.core.truth_(and__3273__auto____$1)) {
                return p3.call(null, p1__425513_SHARP_)
              }else {
                return and__3273__auto____$1
              }
            }else {
              return and__3273__auto__
            }
          }, args))
        };
        var G__425522 = function(x, y, z, var_args) {
          var args = null;
          if(arguments.length > 3) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
          }
          return G__425522__delegate.call(this, x, y, z, args)
        };
        G__425522.cljs$lang$maxFixedArity = 3;
        G__425522.cljs$lang$applyTo = function(arglist__425523) {
          var x = cljs.core.first(arglist__425523);
          arglist__425523 = cljs.core.next(arglist__425523);
          var y = cljs.core.first(arglist__425523);
          arglist__425523 = cljs.core.next(arglist__425523);
          var z = cljs.core.first(arglist__425523);
          var args = cljs.core.rest(arglist__425523);
          return G__425522__delegate(x, y, z, args)
        };
        G__425522.cljs$core$IFn$_invoke$arity$variadic = G__425522__delegate;
        return G__425522
      }();
      ep3 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return ep3__0.call(this);
          case 1:
            return ep3__1.call(this, x);
          case 2:
            return ep3__2.call(this, x, y);
          case 3:
            return ep3__3.call(this, x, y, z);
          default:
            return ep3__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3))
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      ep3.cljs$lang$maxFixedArity = 3;
      ep3.cljs$lang$applyTo = ep3__4.cljs$lang$applyTo;
      ep3.cljs$core$IFn$_invoke$arity$0 = ep3__0;
      ep3.cljs$core$IFn$_invoke$arity$1 = ep3__1;
      ep3.cljs$core$IFn$_invoke$arity$2 = ep3__2;
      ep3.cljs$core$IFn$_invoke$arity$3 = ep3__3;
      ep3.cljs$core$IFn$_invoke$arity$variadic = ep3__4.cljs$core$IFn$_invoke$arity$variadic;
      return ep3
    }()
  };
  var every_pred__4 = function() {
    var G__425524__delegate = function(p1, p2, p3, ps) {
      var ps__$1 = cljs.core.list_STAR_.call(null, p1, p2, p3, ps);
      return function() {
        var epn = null;
        var epn__0 = function() {
          return true
        };
        var epn__1 = function(x) {
          return cljs.core.every_QMARK_.call(null, function(p1__425514_SHARP_) {
            return p1__425514_SHARP_.call(null, x)
          }, ps__$1)
        };
        var epn__2 = function(x, y) {
          return cljs.core.every_QMARK_.call(null, function(p1__425515_SHARP_) {
            var and__3273__auto__ = p1__425515_SHARP_.call(null, x);
            if(cljs.core.truth_(and__3273__auto__)) {
              return p1__425515_SHARP_.call(null, y)
            }else {
              return and__3273__auto__
            }
          }, ps__$1)
        };
        var epn__3 = function(x, y, z) {
          return cljs.core.every_QMARK_.call(null, function(p1__425516_SHARP_) {
            var and__3273__auto__ = p1__425516_SHARP_.call(null, x);
            if(cljs.core.truth_(and__3273__auto__)) {
              var and__3273__auto____$1 = p1__425516_SHARP_.call(null, y);
              if(cljs.core.truth_(and__3273__auto____$1)) {
                return p1__425516_SHARP_.call(null, z)
              }else {
                return and__3273__auto____$1
              }
            }else {
              return and__3273__auto__
            }
          }, ps__$1)
        };
        var epn__4 = function() {
          var G__425525__delegate = function(x, y, z, args) {
            return cljs.core.boolean$.call(null, epn.call(null, x, y, z) && cljs.core.every_QMARK_.call(null, function(p1__425517_SHARP_) {
              return cljs.core.every_QMARK_.call(null, p1__425517_SHARP_, args)
            }, ps__$1))
          };
          var G__425525 = function(x, y, z, var_args) {
            var args = null;
            if(arguments.length > 3) {
              args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
            }
            return G__425525__delegate.call(this, x, y, z, args)
          };
          G__425525.cljs$lang$maxFixedArity = 3;
          G__425525.cljs$lang$applyTo = function(arglist__425526) {
            var x = cljs.core.first(arglist__425526);
            arglist__425526 = cljs.core.next(arglist__425526);
            var y = cljs.core.first(arglist__425526);
            arglist__425526 = cljs.core.next(arglist__425526);
            var z = cljs.core.first(arglist__425526);
            var args = cljs.core.rest(arglist__425526);
            return G__425525__delegate(x, y, z, args)
          };
          G__425525.cljs$core$IFn$_invoke$arity$variadic = G__425525__delegate;
          return G__425525
        }();
        epn = function(x, y, z, var_args) {
          var args = var_args;
          switch(arguments.length) {
            case 0:
              return epn__0.call(this);
            case 1:
              return epn__1.call(this, x);
            case 2:
              return epn__2.call(this, x, y);
            case 3:
              return epn__3.call(this, x, y, z);
            default:
              return epn__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3))
          }
          throw new Error("Invalid arity: " + arguments.length);
        };
        epn.cljs$lang$maxFixedArity = 3;
        epn.cljs$lang$applyTo = epn__4.cljs$lang$applyTo;
        epn.cljs$core$IFn$_invoke$arity$0 = epn__0;
        epn.cljs$core$IFn$_invoke$arity$1 = epn__1;
        epn.cljs$core$IFn$_invoke$arity$2 = epn__2;
        epn.cljs$core$IFn$_invoke$arity$3 = epn__3;
        epn.cljs$core$IFn$_invoke$arity$variadic = epn__4.cljs$core$IFn$_invoke$arity$variadic;
        return epn
      }()
    };
    var G__425524 = function(p1, p2, p3, var_args) {
      var ps = null;
      if(arguments.length > 3) {
        ps = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
      }
      return G__425524__delegate.call(this, p1, p2, p3, ps)
    };
    G__425524.cljs$lang$maxFixedArity = 3;
    G__425524.cljs$lang$applyTo = function(arglist__425527) {
      var p1 = cljs.core.first(arglist__425527);
      arglist__425527 = cljs.core.next(arglist__425527);
      var p2 = cljs.core.first(arglist__425527);
      arglist__425527 = cljs.core.next(arglist__425527);
      var p3 = cljs.core.first(arglist__425527);
      var ps = cljs.core.rest(arglist__425527);
      return G__425524__delegate(p1, p2, p3, ps)
    };
    G__425524.cljs$core$IFn$_invoke$arity$variadic = G__425524__delegate;
    return G__425524
  }();
  every_pred = function(p1, p2, p3, var_args) {
    var ps = var_args;
    switch(arguments.length) {
      case 1:
        return every_pred__1.call(this, p1);
      case 2:
        return every_pred__2.call(this, p1, p2);
      case 3:
        return every_pred__3.call(this, p1, p2, p3);
      default:
        return every_pred__4.cljs$core$IFn$_invoke$arity$variadic(p1, p2, p3, cljs.core.array_seq(arguments, 3))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  every_pred.cljs$lang$maxFixedArity = 3;
  every_pred.cljs$lang$applyTo = every_pred__4.cljs$lang$applyTo;
  every_pred.cljs$core$IFn$_invoke$arity$1 = every_pred__1;
  every_pred.cljs$core$IFn$_invoke$arity$2 = every_pred__2;
  every_pred.cljs$core$IFn$_invoke$arity$3 = every_pred__3;
  every_pred.cljs$core$IFn$_invoke$arity$variadic = every_pred__4.cljs$core$IFn$_invoke$arity$variadic;
  return every_pred
}();
cljs.core.some_fn = function() {
  var some_fn = null;
  var some_fn__1 = function(p) {
    return function() {
      var sp1 = null;
      var sp1__0 = function() {
        return null
      };
      var sp1__1 = function(x) {
        return p.call(null, x)
      };
      var sp1__2 = function(x, y) {
        var or__3285__auto__ = p.call(null, x);
        if(cljs.core.truth_(or__3285__auto__)) {
          return or__3285__auto__
        }else {
          return p.call(null, y)
        }
      };
      var sp1__3 = function(x, y, z) {
        var or__3285__auto__ = p.call(null, x);
        if(cljs.core.truth_(or__3285__auto__)) {
          return or__3285__auto__
        }else {
          var or__3285__auto____$1 = p.call(null, y);
          if(cljs.core.truth_(or__3285__auto____$1)) {
            return or__3285__auto____$1
          }else {
            return p.call(null, z)
          }
        }
      };
      var sp1__4 = function() {
        var G__425534__delegate = function(x, y, z, args) {
          var or__3285__auto__ = sp1.call(null, x, y, z);
          if(cljs.core.truth_(or__3285__auto__)) {
            return or__3285__auto__
          }else {
            return cljs.core.some.call(null, p, args)
          }
        };
        var G__425534 = function(x, y, z, var_args) {
          var args = null;
          if(arguments.length > 3) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
          }
          return G__425534__delegate.call(this, x, y, z, args)
        };
        G__425534.cljs$lang$maxFixedArity = 3;
        G__425534.cljs$lang$applyTo = function(arglist__425535) {
          var x = cljs.core.first(arglist__425535);
          arglist__425535 = cljs.core.next(arglist__425535);
          var y = cljs.core.first(arglist__425535);
          arglist__425535 = cljs.core.next(arglist__425535);
          var z = cljs.core.first(arglist__425535);
          var args = cljs.core.rest(arglist__425535);
          return G__425534__delegate(x, y, z, args)
        };
        G__425534.cljs$core$IFn$_invoke$arity$variadic = G__425534__delegate;
        return G__425534
      }();
      sp1 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return sp1__0.call(this);
          case 1:
            return sp1__1.call(this, x);
          case 2:
            return sp1__2.call(this, x, y);
          case 3:
            return sp1__3.call(this, x, y, z);
          default:
            return sp1__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3))
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      sp1.cljs$lang$maxFixedArity = 3;
      sp1.cljs$lang$applyTo = sp1__4.cljs$lang$applyTo;
      sp1.cljs$core$IFn$_invoke$arity$0 = sp1__0;
      sp1.cljs$core$IFn$_invoke$arity$1 = sp1__1;
      sp1.cljs$core$IFn$_invoke$arity$2 = sp1__2;
      sp1.cljs$core$IFn$_invoke$arity$3 = sp1__3;
      sp1.cljs$core$IFn$_invoke$arity$variadic = sp1__4.cljs$core$IFn$_invoke$arity$variadic;
      return sp1
    }()
  };
  var some_fn__2 = function(p1, p2) {
    return function() {
      var sp2 = null;
      var sp2__0 = function() {
        return null
      };
      var sp2__1 = function(x) {
        var or__3285__auto__ = p1.call(null, x);
        if(cljs.core.truth_(or__3285__auto__)) {
          return or__3285__auto__
        }else {
          return p2.call(null, x)
        }
      };
      var sp2__2 = function(x, y) {
        var or__3285__auto__ = p1.call(null, x);
        if(cljs.core.truth_(or__3285__auto__)) {
          return or__3285__auto__
        }else {
          var or__3285__auto____$1 = p1.call(null, y);
          if(cljs.core.truth_(or__3285__auto____$1)) {
            return or__3285__auto____$1
          }else {
            var or__3285__auto____$2 = p2.call(null, x);
            if(cljs.core.truth_(or__3285__auto____$2)) {
              return or__3285__auto____$2
            }else {
              return p2.call(null, y)
            }
          }
        }
      };
      var sp2__3 = function(x, y, z) {
        var or__3285__auto__ = p1.call(null, x);
        if(cljs.core.truth_(or__3285__auto__)) {
          return or__3285__auto__
        }else {
          var or__3285__auto____$1 = p1.call(null, y);
          if(cljs.core.truth_(or__3285__auto____$1)) {
            return or__3285__auto____$1
          }else {
            var or__3285__auto____$2 = p1.call(null, z);
            if(cljs.core.truth_(or__3285__auto____$2)) {
              return or__3285__auto____$2
            }else {
              var or__3285__auto____$3 = p2.call(null, x);
              if(cljs.core.truth_(or__3285__auto____$3)) {
                return or__3285__auto____$3
              }else {
                var or__3285__auto____$4 = p2.call(null, y);
                if(cljs.core.truth_(or__3285__auto____$4)) {
                  return or__3285__auto____$4
                }else {
                  return p2.call(null, z)
                }
              }
            }
          }
        }
      };
      var sp2__4 = function() {
        var G__425536__delegate = function(x, y, z, args) {
          var or__3285__auto__ = sp2.call(null, x, y, z);
          if(cljs.core.truth_(or__3285__auto__)) {
            return or__3285__auto__
          }else {
            return cljs.core.some.call(null, function(p1__425528_SHARP_) {
              var or__3285__auto____$1 = p1.call(null, p1__425528_SHARP_);
              if(cljs.core.truth_(or__3285__auto____$1)) {
                return or__3285__auto____$1
              }else {
                return p2.call(null, p1__425528_SHARP_)
              }
            }, args)
          }
        };
        var G__425536 = function(x, y, z, var_args) {
          var args = null;
          if(arguments.length > 3) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
          }
          return G__425536__delegate.call(this, x, y, z, args)
        };
        G__425536.cljs$lang$maxFixedArity = 3;
        G__425536.cljs$lang$applyTo = function(arglist__425537) {
          var x = cljs.core.first(arglist__425537);
          arglist__425537 = cljs.core.next(arglist__425537);
          var y = cljs.core.first(arglist__425537);
          arglist__425537 = cljs.core.next(arglist__425537);
          var z = cljs.core.first(arglist__425537);
          var args = cljs.core.rest(arglist__425537);
          return G__425536__delegate(x, y, z, args)
        };
        G__425536.cljs$core$IFn$_invoke$arity$variadic = G__425536__delegate;
        return G__425536
      }();
      sp2 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return sp2__0.call(this);
          case 1:
            return sp2__1.call(this, x);
          case 2:
            return sp2__2.call(this, x, y);
          case 3:
            return sp2__3.call(this, x, y, z);
          default:
            return sp2__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3))
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      sp2.cljs$lang$maxFixedArity = 3;
      sp2.cljs$lang$applyTo = sp2__4.cljs$lang$applyTo;
      sp2.cljs$core$IFn$_invoke$arity$0 = sp2__0;
      sp2.cljs$core$IFn$_invoke$arity$1 = sp2__1;
      sp2.cljs$core$IFn$_invoke$arity$2 = sp2__2;
      sp2.cljs$core$IFn$_invoke$arity$3 = sp2__3;
      sp2.cljs$core$IFn$_invoke$arity$variadic = sp2__4.cljs$core$IFn$_invoke$arity$variadic;
      return sp2
    }()
  };
  var some_fn__3 = function(p1, p2, p3) {
    return function() {
      var sp3 = null;
      var sp3__0 = function() {
        return null
      };
      var sp3__1 = function(x) {
        var or__3285__auto__ = p1.call(null, x);
        if(cljs.core.truth_(or__3285__auto__)) {
          return or__3285__auto__
        }else {
          var or__3285__auto____$1 = p2.call(null, x);
          if(cljs.core.truth_(or__3285__auto____$1)) {
            return or__3285__auto____$1
          }else {
            return p3.call(null, x)
          }
        }
      };
      var sp3__2 = function(x, y) {
        var or__3285__auto__ = p1.call(null, x);
        if(cljs.core.truth_(or__3285__auto__)) {
          return or__3285__auto__
        }else {
          var or__3285__auto____$1 = p2.call(null, x);
          if(cljs.core.truth_(or__3285__auto____$1)) {
            return or__3285__auto____$1
          }else {
            var or__3285__auto____$2 = p3.call(null, x);
            if(cljs.core.truth_(or__3285__auto____$2)) {
              return or__3285__auto____$2
            }else {
              var or__3285__auto____$3 = p1.call(null, y);
              if(cljs.core.truth_(or__3285__auto____$3)) {
                return or__3285__auto____$3
              }else {
                var or__3285__auto____$4 = p2.call(null, y);
                if(cljs.core.truth_(or__3285__auto____$4)) {
                  return or__3285__auto____$4
                }else {
                  return p3.call(null, y)
                }
              }
            }
          }
        }
      };
      var sp3__3 = function(x, y, z) {
        var or__3285__auto__ = p1.call(null, x);
        if(cljs.core.truth_(or__3285__auto__)) {
          return or__3285__auto__
        }else {
          var or__3285__auto____$1 = p2.call(null, x);
          if(cljs.core.truth_(or__3285__auto____$1)) {
            return or__3285__auto____$1
          }else {
            var or__3285__auto____$2 = p3.call(null, x);
            if(cljs.core.truth_(or__3285__auto____$2)) {
              return or__3285__auto____$2
            }else {
              var or__3285__auto____$3 = p1.call(null, y);
              if(cljs.core.truth_(or__3285__auto____$3)) {
                return or__3285__auto____$3
              }else {
                var or__3285__auto____$4 = p2.call(null, y);
                if(cljs.core.truth_(or__3285__auto____$4)) {
                  return or__3285__auto____$4
                }else {
                  var or__3285__auto____$5 = p3.call(null, y);
                  if(cljs.core.truth_(or__3285__auto____$5)) {
                    return or__3285__auto____$5
                  }else {
                    var or__3285__auto____$6 = p1.call(null, z);
                    if(cljs.core.truth_(or__3285__auto____$6)) {
                      return or__3285__auto____$6
                    }else {
                      var or__3285__auto____$7 = p2.call(null, z);
                      if(cljs.core.truth_(or__3285__auto____$7)) {
                        return or__3285__auto____$7
                      }else {
                        return p3.call(null, z)
                      }
                    }
                  }
                }
              }
            }
          }
        }
      };
      var sp3__4 = function() {
        var G__425538__delegate = function(x, y, z, args) {
          var or__3285__auto__ = sp3.call(null, x, y, z);
          if(cljs.core.truth_(or__3285__auto__)) {
            return or__3285__auto__
          }else {
            return cljs.core.some.call(null, function(p1__425529_SHARP_) {
              var or__3285__auto____$1 = p1.call(null, p1__425529_SHARP_);
              if(cljs.core.truth_(or__3285__auto____$1)) {
                return or__3285__auto____$1
              }else {
                var or__3285__auto____$2 = p2.call(null, p1__425529_SHARP_);
                if(cljs.core.truth_(or__3285__auto____$2)) {
                  return or__3285__auto____$2
                }else {
                  return p3.call(null, p1__425529_SHARP_)
                }
              }
            }, args)
          }
        };
        var G__425538 = function(x, y, z, var_args) {
          var args = null;
          if(arguments.length > 3) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
          }
          return G__425538__delegate.call(this, x, y, z, args)
        };
        G__425538.cljs$lang$maxFixedArity = 3;
        G__425538.cljs$lang$applyTo = function(arglist__425539) {
          var x = cljs.core.first(arglist__425539);
          arglist__425539 = cljs.core.next(arglist__425539);
          var y = cljs.core.first(arglist__425539);
          arglist__425539 = cljs.core.next(arglist__425539);
          var z = cljs.core.first(arglist__425539);
          var args = cljs.core.rest(arglist__425539);
          return G__425538__delegate(x, y, z, args)
        };
        G__425538.cljs$core$IFn$_invoke$arity$variadic = G__425538__delegate;
        return G__425538
      }();
      sp3 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return sp3__0.call(this);
          case 1:
            return sp3__1.call(this, x);
          case 2:
            return sp3__2.call(this, x, y);
          case 3:
            return sp3__3.call(this, x, y, z);
          default:
            return sp3__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3))
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      sp3.cljs$lang$maxFixedArity = 3;
      sp3.cljs$lang$applyTo = sp3__4.cljs$lang$applyTo;
      sp3.cljs$core$IFn$_invoke$arity$0 = sp3__0;
      sp3.cljs$core$IFn$_invoke$arity$1 = sp3__1;
      sp3.cljs$core$IFn$_invoke$arity$2 = sp3__2;
      sp3.cljs$core$IFn$_invoke$arity$3 = sp3__3;
      sp3.cljs$core$IFn$_invoke$arity$variadic = sp3__4.cljs$core$IFn$_invoke$arity$variadic;
      return sp3
    }()
  };
  var some_fn__4 = function() {
    var G__425540__delegate = function(p1, p2, p3, ps) {
      var ps__$1 = cljs.core.list_STAR_.call(null, p1, p2, p3, ps);
      return function() {
        var spn = null;
        var spn__0 = function() {
          return null
        };
        var spn__1 = function(x) {
          return cljs.core.some.call(null, function(p1__425530_SHARP_) {
            return p1__425530_SHARP_.call(null, x)
          }, ps__$1)
        };
        var spn__2 = function(x, y) {
          return cljs.core.some.call(null, function(p1__425531_SHARP_) {
            var or__3285__auto__ = p1__425531_SHARP_.call(null, x);
            if(cljs.core.truth_(or__3285__auto__)) {
              return or__3285__auto__
            }else {
              return p1__425531_SHARP_.call(null, y)
            }
          }, ps__$1)
        };
        var spn__3 = function(x, y, z) {
          return cljs.core.some.call(null, function(p1__425532_SHARP_) {
            var or__3285__auto__ = p1__425532_SHARP_.call(null, x);
            if(cljs.core.truth_(or__3285__auto__)) {
              return or__3285__auto__
            }else {
              var or__3285__auto____$1 = p1__425532_SHARP_.call(null, y);
              if(cljs.core.truth_(or__3285__auto____$1)) {
                return or__3285__auto____$1
              }else {
                return p1__425532_SHARP_.call(null, z)
              }
            }
          }, ps__$1)
        };
        var spn__4 = function() {
          var G__425541__delegate = function(x, y, z, args) {
            var or__3285__auto__ = spn.call(null, x, y, z);
            if(cljs.core.truth_(or__3285__auto__)) {
              return or__3285__auto__
            }else {
              return cljs.core.some.call(null, function(p1__425533_SHARP_) {
                return cljs.core.some.call(null, p1__425533_SHARP_, args)
              }, ps__$1)
            }
          };
          var G__425541 = function(x, y, z, var_args) {
            var args = null;
            if(arguments.length > 3) {
              args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
            }
            return G__425541__delegate.call(this, x, y, z, args)
          };
          G__425541.cljs$lang$maxFixedArity = 3;
          G__425541.cljs$lang$applyTo = function(arglist__425542) {
            var x = cljs.core.first(arglist__425542);
            arglist__425542 = cljs.core.next(arglist__425542);
            var y = cljs.core.first(arglist__425542);
            arglist__425542 = cljs.core.next(arglist__425542);
            var z = cljs.core.first(arglist__425542);
            var args = cljs.core.rest(arglist__425542);
            return G__425541__delegate(x, y, z, args)
          };
          G__425541.cljs$core$IFn$_invoke$arity$variadic = G__425541__delegate;
          return G__425541
        }();
        spn = function(x, y, z, var_args) {
          var args = var_args;
          switch(arguments.length) {
            case 0:
              return spn__0.call(this);
            case 1:
              return spn__1.call(this, x);
            case 2:
              return spn__2.call(this, x, y);
            case 3:
              return spn__3.call(this, x, y, z);
            default:
              return spn__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3))
          }
          throw new Error("Invalid arity: " + arguments.length);
        };
        spn.cljs$lang$maxFixedArity = 3;
        spn.cljs$lang$applyTo = spn__4.cljs$lang$applyTo;
        spn.cljs$core$IFn$_invoke$arity$0 = spn__0;
        spn.cljs$core$IFn$_invoke$arity$1 = spn__1;
        spn.cljs$core$IFn$_invoke$arity$2 = spn__2;
        spn.cljs$core$IFn$_invoke$arity$3 = spn__3;
        spn.cljs$core$IFn$_invoke$arity$variadic = spn__4.cljs$core$IFn$_invoke$arity$variadic;
        return spn
      }()
    };
    var G__425540 = function(p1, p2, p3, var_args) {
      var ps = null;
      if(arguments.length > 3) {
        ps = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
      }
      return G__425540__delegate.call(this, p1, p2, p3, ps)
    };
    G__425540.cljs$lang$maxFixedArity = 3;
    G__425540.cljs$lang$applyTo = function(arglist__425543) {
      var p1 = cljs.core.first(arglist__425543);
      arglist__425543 = cljs.core.next(arglist__425543);
      var p2 = cljs.core.first(arglist__425543);
      arglist__425543 = cljs.core.next(arglist__425543);
      var p3 = cljs.core.first(arglist__425543);
      var ps = cljs.core.rest(arglist__425543);
      return G__425540__delegate(p1, p2, p3, ps)
    };
    G__425540.cljs$core$IFn$_invoke$arity$variadic = G__425540__delegate;
    return G__425540
  }();
  some_fn = function(p1, p2, p3, var_args) {
    var ps = var_args;
    switch(arguments.length) {
      case 1:
        return some_fn__1.call(this, p1);
      case 2:
        return some_fn__2.call(this, p1, p2);
      case 3:
        return some_fn__3.call(this, p1, p2, p3);
      default:
        return some_fn__4.cljs$core$IFn$_invoke$arity$variadic(p1, p2, p3, cljs.core.array_seq(arguments, 3))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  some_fn.cljs$lang$maxFixedArity = 3;
  some_fn.cljs$lang$applyTo = some_fn__4.cljs$lang$applyTo;
  some_fn.cljs$core$IFn$_invoke$arity$1 = some_fn__1;
  some_fn.cljs$core$IFn$_invoke$arity$2 = some_fn__2;
  some_fn.cljs$core$IFn$_invoke$arity$3 = some_fn__3;
  some_fn.cljs$core$IFn$_invoke$arity$variadic = some_fn__4.cljs$core$IFn$_invoke$arity$variadic;
  return some_fn
}();
cljs.core.map = function() {
  var map = null;
  var map__2 = function(f, coll) {
    return new cljs.core.LazySeq(null, function() {
      var temp__4092__auto__ = cljs.core.seq.call(null, coll);
      if(temp__4092__auto__) {
        var s = temp__4092__auto__;
        if(cljs.core.chunked_seq_QMARK_.call(null, s)) {
          var c = cljs.core.chunk_first.call(null, s);
          var size = cljs.core.count.call(null, c);
          var b = cljs.core.chunk_buffer.call(null, size);
          var n__4108__auto___425545 = size;
          var i_425546 = 0;
          while(true) {
            if(i_425546 < n__4108__auto___425545) {
              cljs.core.chunk_append.call(null, b, f.call(null, cljs.core._nth.call(null, c, i_425546)));
              var G__425547 = i_425546 + 1;
              i_425546 = G__425547;
              continue
            }else {
            }
            break
          }
          return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b), map.call(null, f, cljs.core.chunk_rest.call(null, s)))
        }else {
          return cljs.core.cons.call(null, f.call(null, cljs.core.first.call(null, s)), map.call(null, f, cljs.core.rest.call(null, s)))
        }
      }else {
        return null
      }
    }, null, null)
  };
  var map__3 = function(f, c1, c2) {
    return new cljs.core.LazySeq(null, function() {
      var s1 = cljs.core.seq.call(null, c1);
      var s2 = cljs.core.seq.call(null, c2);
      if(s1 && s2) {
        return cljs.core.cons.call(null, f.call(null, cljs.core.first.call(null, s1), cljs.core.first.call(null, s2)), map.call(null, f, cljs.core.rest.call(null, s1), cljs.core.rest.call(null, s2)))
      }else {
        return null
      }
    }, null, null)
  };
  var map__4 = function(f, c1, c2, c3) {
    return new cljs.core.LazySeq(null, function() {
      var s1 = cljs.core.seq.call(null, c1);
      var s2 = cljs.core.seq.call(null, c2);
      var s3 = cljs.core.seq.call(null, c3);
      if(s1 && s2 && s3) {
        return cljs.core.cons.call(null, f.call(null, cljs.core.first.call(null, s1), cljs.core.first.call(null, s2), cljs.core.first.call(null, s3)), map.call(null, f, cljs.core.rest.call(null, s1), cljs.core.rest.call(null, s2), cljs.core.rest.call(null, s3)))
      }else {
        return null
      }
    }, null, null)
  };
  var map__5 = function() {
    var G__425548__delegate = function(f, c1, c2, c3, colls) {
      var step = function step(cs) {
        return new cljs.core.LazySeq(null, function() {
          var ss = map.call(null, cljs.core.seq, cs);
          if(cljs.core.every_QMARK_.call(null, cljs.core.identity, ss)) {
            return cljs.core.cons.call(null, map.call(null, cljs.core.first, ss), step.call(null, map.call(null, cljs.core.rest, ss)))
          }else {
            return null
          }
        }, null, null)
      };
      return map.call(null, function(p1__425544_SHARP_) {
        return cljs.core.apply.call(null, f, p1__425544_SHARP_)
      }, step.call(null, cljs.core.conj.call(null, colls, c3, c2, c1)))
    };
    var G__425548 = function(f, c1, c2, c3, var_args) {
      var colls = null;
      if(arguments.length > 4) {
        colls = cljs.core.array_seq(Array.prototype.slice.call(arguments, 4), 0)
      }
      return G__425548__delegate.call(this, f, c1, c2, c3, colls)
    };
    G__425548.cljs$lang$maxFixedArity = 4;
    G__425548.cljs$lang$applyTo = function(arglist__425549) {
      var f = cljs.core.first(arglist__425549);
      arglist__425549 = cljs.core.next(arglist__425549);
      var c1 = cljs.core.first(arglist__425549);
      arglist__425549 = cljs.core.next(arglist__425549);
      var c2 = cljs.core.first(arglist__425549);
      arglist__425549 = cljs.core.next(arglist__425549);
      var c3 = cljs.core.first(arglist__425549);
      var colls = cljs.core.rest(arglist__425549);
      return G__425548__delegate(f, c1, c2, c3, colls)
    };
    G__425548.cljs$core$IFn$_invoke$arity$variadic = G__425548__delegate;
    return G__425548
  }();
  map = function(f, c1, c2, c3, var_args) {
    var colls = var_args;
    switch(arguments.length) {
      case 2:
        return map__2.call(this, f, c1);
      case 3:
        return map__3.call(this, f, c1, c2);
      case 4:
        return map__4.call(this, f, c1, c2, c3);
      default:
        return map__5.cljs$core$IFn$_invoke$arity$variadic(f, c1, c2, c3, cljs.core.array_seq(arguments, 4))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  map.cljs$lang$maxFixedArity = 4;
  map.cljs$lang$applyTo = map__5.cljs$lang$applyTo;
  map.cljs$core$IFn$_invoke$arity$2 = map__2;
  map.cljs$core$IFn$_invoke$arity$3 = map__3;
  map.cljs$core$IFn$_invoke$arity$4 = map__4;
  map.cljs$core$IFn$_invoke$arity$variadic = map__5.cljs$core$IFn$_invoke$arity$variadic;
  return map
}();
cljs.core.take = function take(n, coll) {
  return new cljs.core.LazySeq(null, function() {
    if(n > 0) {
      var temp__4092__auto__ = cljs.core.seq.call(null, coll);
      if(temp__4092__auto__) {
        var s = temp__4092__auto__;
        return cljs.core.cons.call(null, cljs.core.first.call(null, s), take.call(null, n - 1, cljs.core.rest.call(null, s)))
      }else {
        return null
      }
    }else {
      return null
    }
  }, null, null)
};
cljs.core.drop = function drop(n, coll) {
  var step = function(n__$1, coll__$1) {
    while(true) {
      var s = cljs.core.seq.call(null, coll__$1);
      if(n__$1 > 0 && s) {
        var G__425550 = n__$1 - 1;
        var G__425551 = cljs.core.rest.call(null, s);
        n__$1 = G__425550;
        coll__$1 = G__425551;
        continue
      }else {
        return s
      }
      break
    }
  };
  return new cljs.core.LazySeq(null, function() {
    return step.call(null, n, coll)
  }, null, null)
};
cljs.core.drop_last = function() {
  var drop_last = null;
  var drop_last__1 = function(s) {
    return drop_last.call(null, 1, s)
  };
  var drop_last__2 = function(n, s) {
    return cljs.core.map.call(null, function(x, _) {
      return x
    }, s, cljs.core.drop.call(null, n, s))
  };
  drop_last = function(n, s) {
    switch(arguments.length) {
      case 1:
        return drop_last__1.call(this, n);
      case 2:
        return drop_last__2.call(this, n, s)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  drop_last.cljs$core$IFn$_invoke$arity$1 = drop_last__1;
  drop_last.cljs$core$IFn$_invoke$arity$2 = drop_last__2;
  return drop_last
}();
cljs.core.take_last = function take_last(n, coll) {
  var s = cljs.core.seq.call(null, coll);
  var lead = cljs.core.seq.call(null, cljs.core.drop.call(null, n, coll));
  while(true) {
    if(lead) {
      var G__425552 = cljs.core.next.call(null, s);
      var G__425553 = cljs.core.next.call(null, lead);
      s = G__425552;
      lead = G__425553;
      continue
    }else {
      return s
    }
    break
  }
};
cljs.core.drop_while = function drop_while(pred, coll) {
  var step = function(pred__$1, coll__$1) {
    while(true) {
      var s = cljs.core.seq.call(null, coll__$1);
      if(cljs.core.truth_(function() {
        var and__3273__auto__ = s;
        if(and__3273__auto__) {
          return pred__$1.call(null, cljs.core.first.call(null, s))
        }else {
          return and__3273__auto__
        }
      }())) {
        var G__425554 = pred__$1;
        var G__425555 = cljs.core.rest.call(null, s);
        pred__$1 = G__425554;
        coll__$1 = G__425555;
        continue
      }else {
        return s
      }
      break
    }
  };
  return new cljs.core.LazySeq(null, function() {
    return step.call(null, pred, coll)
  }, null, null)
};
cljs.core.cycle = function cycle(coll) {
  return new cljs.core.LazySeq(null, function() {
    var temp__4092__auto__ = cljs.core.seq.call(null, coll);
    if(temp__4092__auto__) {
      var s = temp__4092__auto__;
      return cljs.core.concat.call(null, s, cycle.call(null, s))
    }else {
      return null
    }
  }, null, null)
};
cljs.core.split_at = function split_at(n, coll) {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.take.call(null, n, coll), cljs.core.drop.call(null, n, coll)], null)
};
cljs.core.repeat = function() {
  var repeat = null;
  var repeat__1 = function(x) {
    return new cljs.core.LazySeq(null, function() {
      return cljs.core.cons.call(null, x, repeat.call(null, x))
    }, null, null)
  };
  var repeat__2 = function(n, x) {
    return cljs.core.take.call(null, n, repeat.call(null, x))
  };
  repeat = function(n, x) {
    switch(arguments.length) {
      case 1:
        return repeat__1.call(this, n);
      case 2:
        return repeat__2.call(this, n, x)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  repeat.cljs$core$IFn$_invoke$arity$1 = repeat__1;
  repeat.cljs$core$IFn$_invoke$arity$2 = repeat__2;
  return repeat
}();
cljs.core.replicate = function replicate(n, x) {
  return cljs.core.take.call(null, n, cljs.core.repeat.call(null, x))
};
cljs.core.repeatedly = function() {
  var repeatedly = null;
  var repeatedly__1 = function(f) {
    return new cljs.core.LazySeq(null, function() {
      return cljs.core.cons.call(null, f.call(null), repeatedly.call(null, f))
    }, null, null)
  };
  var repeatedly__2 = function(n, f) {
    return cljs.core.take.call(null, n, repeatedly.call(null, f))
  };
  repeatedly = function(n, f) {
    switch(arguments.length) {
      case 1:
        return repeatedly__1.call(this, n);
      case 2:
        return repeatedly__2.call(this, n, f)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  repeatedly.cljs$core$IFn$_invoke$arity$1 = repeatedly__1;
  repeatedly.cljs$core$IFn$_invoke$arity$2 = repeatedly__2;
  return repeatedly
}();
cljs.core.iterate = function iterate(f, x) {
  return cljs.core.cons.call(null, x, new cljs.core.LazySeq(null, function() {
    return iterate.call(null, f, f.call(null, x))
  }, null, null))
};
cljs.core.interleave = function() {
  var interleave = null;
  var interleave__2 = function(c1, c2) {
    return new cljs.core.LazySeq(null, function() {
      var s1 = cljs.core.seq.call(null, c1);
      var s2 = cljs.core.seq.call(null, c2);
      if(s1 && s2) {
        return cljs.core.cons.call(null, cljs.core.first.call(null, s1), cljs.core.cons.call(null, cljs.core.first.call(null, s2), interleave.call(null, cljs.core.rest.call(null, s1), cljs.core.rest.call(null, s2))))
      }else {
        return null
      }
    }, null, null)
  };
  var interleave__3 = function() {
    var G__425556__delegate = function(c1, c2, colls) {
      return new cljs.core.LazySeq(null, function() {
        var ss = cljs.core.map.call(null, cljs.core.seq, cljs.core.conj.call(null, colls, c2, c1));
        if(cljs.core.every_QMARK_.call(null, cljs.core.identity, ss)) {
          return cljs.core.concat.call(null, cljs.core.map.call(null, cljs.core.first, ss), cljs.core.apply.call(null, interleave, cljs.core.map.call(null, cljs.core.rest, ss)))
        }else {
          return null
        }
      }, null, null)
    };
    var G__425556 = function(c1, c2, var_args) {
      var colls = null;
      if(arguments.length > 2) {
        colls = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__425556__delegate.call(this, c1, c2, colls)
    };
    G__425556.cljs$lang$maxFixedArity = 2;
    G__425556.cljs$lang$applyTo = function(arglist__425557) {
      var c1 = cljs.core.first(arglist__425557);
      arglist__425557 = cljs.core.next(arglist__425557);
      var c2 = cljs.core.first(arglist__425557);
      var colls = cljs.core.rest(arglist__425557);
      return G__425556__delegate(c1, c2, colls)
    };
    G__425556.cljs$core$IFn$_invoke$arity$variadic = G__425556__delegate;
    return G__425556
  }();
  interleave = function(c1, c2, var_args) {
    var colls = var_args;
    switch(arguments.length) {
      case 2:
        return interleave__2.call(this, c1, c2);
      default:
        return interleave__3.cljs$core$IFn$_invoke$arity$variadic(c1, c2, cljs.core.array_seq(arguments, 2))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  interleave.cljs$lang$maxFixedArity = 2;
  interleave.cljs$lang$applyTo = interleave__3.cljs$lang$applyTo;
  interleave.cljs$core$IFn$_invoke$arity$2 = interleave__2;
  interleave.cljs$core$IFn$_invoke$arity$variadic = interleave__3.cljs$core$IFn$_invoke$arity$variadic;
  return interleave
}();
cljs.core.interpose = function interpose(sep, coll) {
  return cljs.core.drop.call(null, 1, cljs.core.interleave.call(null, cljs.core.repeat.call(null, sep), coll))
};
cljs.core.flatten1 = function flatten1(colls) {
  var cat = function cat(coll, colls__$1) {
    return new cljs.core.LazySeq(null, function() {
      var temp__4090__auto__ = cljs.core.seq.call(null, coll);
      if(temp__4090__auto__) {
        var coll__$1 = temp__4090__auto__;
        return cljs.core.cons.call(null, cljs.core.first.call(null, coll__$1), cat.call(null, cljs.core.rest.call(null, coll__$1), colls__$1))
      }else {
        if(cljs.core.seq.call(null, colls__$1)) {
          return cat.call(null, cljs.core.first.call(null, colls__$1), cljs.core.rest.call(null, colls__$1))
        }else {
          return null
        }
      }
    }, null, null)
  };
  return cat.call(null, null, colls)
};
cljs.core.mapcat = function() {
  var mapcat = null;
  var mapcat__2 = function(f, coll) {
    return cljs.core.flatten1.call(null, cljs.core.map.call(null, f, coll))
  };
  var mapcat__3 = function() {
    var G__425558__delegate = function(f, coll, colls) {
      return cljs.core.flatten1.call(null, cljs.core.apply.call(null, cljs.core.map, f, coll, colls))
    };
    var G__425558 = function(f, coll, var_args) {
      var colls = null;
      if(arguments.length > 2) {
        colls = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__425558__delegate.call(this, f, coll, colls)
    };
    G__425558.cljs$lang$maxFixedArity = 2;
    G__425558.cljs$lang$applyTo = function(arglist__425559) {
      var f = cljs.core.first(arglist__425559);
      arglist__425559 = cljs.core.next(arglist__425559);
      var coll = cljs.core.first(arglist__425559);
      var colls = cljs.core.rest(arglist__425559);
      return G__425558__delegate(f, coll, colls)
    };
    G__425558.cljs$core$IFn$_invoke$arity$variadic = G__425558__delegate;
    return G__425558
  }();
  mapcat = function(f, coll, var_args) {
    var colls = var_args;
    switch(arguments.length) {
      case 2:
        return mapcat__2.call(this, f, coll);
      default:
        return mapcat__3.cljs$core$IFn$_invoke$arity$variadic(f, coll, cljs.core.array_seq(arguments, 2))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  mapcat.cljs$lang$maxFixedArity = 2;
  mapcat.cljs$lang$applyTo = mapcat__3.cljs$lang$applyTo;
  mapcat.cljs$core$IFn$_invoke$arity$2 = mapcat__2;
  mapcat.cljs$core$IFn$_invoke$arity$variadic = mapcat__3.cljs$core$IFn$_invoke$arity$variadic;
  return mapcat
}();
cljs.core.filter = function filter(pred, coll) {
  return new cljs.core.LazySeq(null, function() {
    var temp__4092__auto__ = cljs.core.seq.call(null, coll);
    if(temp__4092__auto__) {
      var s = temp__4092__auto__;
      if(cljs.core.chunked_seq_QMARK_.call(null, s)) {
        var c = cljs.core.chunk_first.call(null, s);
        var size = cljs.core.count.call(null, c);
        var b = cljs.core.chunk_buffer.call(null, size);
        var n__4108__auto___425560 = size;
        var i_425561 = 0;
        while(true) {
          if(i_425561 < n__4108__auto___425560) {
            if(cljs.core.truth_(pred.call(null, cljs.core._nth.call(null, c, i_425561)))) {
              cljs.core.chunk_append.call(null, b, cljs.core._nth.call(null, c, i_425561))
            }else {
            }
            var G__425562 = i_425561 + 1;
            i_425561 = G__425562;
            continue
          }else {
          }
          break
        }
        return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b), filter.call(null, pred, cljs.core.chunk_rest.call(null, s)))
      }else {
        var f = cljs.core.first.call(null, s);
        var r = cljs.core.rest.call(null, s);
        if(cljs.core.truth_(pred.call(null, f))) {
          return cljs.core.cons.call(null, f, filter.call(null, pred, r))
        }else {
          return filter.call(null, pred, r)
        }
      }
    }else {
      return null
    }
  }, null, null)
};
cljs.core.remove = function remove(pred, coll) {
  return cljs.core.filter.call(null, cljs.core.complement.call(null, pred), coll)
};
cljs.core.tree_seq = function tree_seq(branch_QMARK_, children, root) {
  var walk = function walk(node) {
    return new cljs.core.LazySeq(null, function() {
      return cljs.core.cons.call(null, node, cljs.core.truth_(branch_QMARK_.call(null, node)) ? cljs.core.mapcat.call(null, walk, children.call(null, node)) : null)
    }, null, null)
  };
  return walk.call(null, root)
};
cljs.core.flatten = function flatten(x) {
  return cljs.core.filter.call(null, function(p1__425563_SHARP_) {
    return!cljs.core.sequential_QMARK_.call(null, p1__425563_SHARP_)
  }, cljs.core.rest.call(null, cljs.core.tree_seq.call(null, cljs.core.sequential_QMARK_, cljs.core.seq, x)))
};
cljs.core.into = function into(to, from) {
  if(!(to == null)) {
    if(function() {
      var G__425565 = to;
      if(G__425565) {
        var bit__3904__auto__ = G__425565.cljs$lang$protocol_mask$partition1$ & 4;
        if(bit__3904__auto__ || G__425565.cljs$core$IEditableCollection$) {
          return true
        }else {
          return false
        }
      }else {
        return false
      }
    }()) {
      return cljs.core.persistent_BANG_.call(null, cljs.core.reduce.call(null, cljs.core._conj_BANG_, cljs.core.transient$.call(null, to), from))
    }else {
      return cljs.core.reduce.call(null, cljs.core._conj, to, from)
    }
  }else {
    return cljs.core.reduce.call(null, cljs.core.conj, cljs.core.List.EMPTY, from)
  }
};
cljs.core.mapv = function() {
  var mapv = null;
  var mapv__2 = function(f, coll) {
    return cljs.core.persistent_BANG_.call(null, cljs.core.reduce.call(null, function(v, o) {
      return cljs.core.conj_BANG_.call(null, v, f.call(null, o))
    }, cljs.core.transient$.call(null, cljs.core.PersistentVector.EMPTY), coll))
  };
  var mapv__3 = function(f, c1, c2) {
    return cljs.core.into.call(null, cljs.core.PersistentVector.EMPTY, cljs.core.map.call(null, f, c1, c2))
  };
  var mapv__4 = function(f, c1, c2, c3) {
    return cljs.core.into.call(null, cljs.core.PersistentVector.EMPTY, cljs.core.map.call(null, f, c1, c2, c3))
  };
  var mapv__5 = function() {
    var G__425566__delegate = function(f, c1, c2, c3, colls) {
      return cljs.core.into.call(null, cljs.core.PersistentVector.EMPTY, cljs.core.apply.call(null, cljs.core.map, f, c1, c2, c3, colls))
    };
    var G__425566 = function(f, c1, c2, c3, var_args) {
      var colls = null;
      if(arguments.length > 4) {
        colls = cljs.core.array_seq(Array.prototype.slice.call(arguments, 4), 0)
      }
      return G__425566__delegate.call(this, f, c1, c2, c3, colls)
    };
    G__425566.cljs$lang$maxFixedArity = 4;
    G__425566.cljs$lang$applyTo = function(arglist__425567) {
      var f = cljs.core.first(arglist__425567);
      arglist__425567 = cljs.core.next(arglist__425567);
      var c1 = cljs.core.first(arglist__425567);
      arglist__425567 = cljs.core.next(arglist__425567);
      var c2 = cljs.core.first(arglist__425567);
      arglist__425567 = cljs.core.next(arglist__425567);
      var c3 = cljs.core.first(arglist__425567);
      var colls = cljs.core.rest(arglist__425567);
      return G__425566__delegate(f, c1, c2, c3, colls)
    };
    G__425566.cljs$core$IFn$_invoke$arity$variadic = G__425566__delegate;
    return G__425566
  }();
  mapv = function(f, c1, c2, c3, var_args) {
    var colls = var_args;
    switch(arguments.length) {
      case 2:
        return mapv__2.call(this, f, c1);
      case 3:
        return mapv__3.call(this, f, c1, c2);
      case 4:
        return mapv__4.call(this, f, c1, c2, c3);
      default:
        return mapv__5.cljs$core$IFn$_invoke$arity$variadic(f, c1, c2, c3, cljs.core.array_seq(arguments, 4))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  mapv.cljs$lang$maxFixedArity = 4;
  mapv.cljs$lang$applyTo = mapv__5.cljs$lang$applyTo;
  mapv.cljs$core$IFn$_invoke$arity$2 = mapv__2;
  mapv.cljs$core$IFn$_invoke$arity$3 = mapv__3;
  mapv.cljs$core$IFn$_invoke$arity$4 = mapv__4;
  mapv.cljs$core$IFn$_invoke$arity$variadic = mapv__5.cljs$core$IFn$_invoke$arity$variadic;
  return mapv
}();
cljs.core.filterv = function filterv(pred, coll) {
  return cljs.core.persistent_BANG_.call(null, cljs.core.reduce.call(null, function(v, o) {
    if(cljs.core.truth_(pred.call(null, o))) {
      return cljs.core.conj_BANG_.call(null, v, o)
    }else {
      return v
    }
  }, cljs.core.transient$.call(null, cljs.core.PersistentVector.EMPTY), coll))
};
cljs.core.partition = function() {
  var partition = null;
  var partition__2 = function(n, coll) {
    return partition.call(null, n, n, coll)
  };
  var partition__3 = function(n, step, coll) {
    return new cljs.core.LazySeq(null, function() {
      var temp__4092__auto__ = cljs.core.seq.call(null, coll);
      if(temp__4092__auto__) {
        var s = temp__4092__auto__;
        var p = cljs.core.take.call(null, n, s);
        if(n === cljs.core.count.call(null, p)) {
          return cljs.core.cons.call(null, p, partition.call(null, n, step, cljs.core.drop.call(null, step, s)))
        }else {
          return null
        }
      }else {
        return null
      }
    }, null, null)
  };
  var partition__4 = function(n, step, pad, coll) {
    return new cljs.core.LazySeq(null, function() {
      var temp__4092__auto__ = cljs.core.seq.call(null, coll);
      if(temp__4092__auto__) {
        var s = temp__4092__auto__;
        var p = cljs.core.take.call(null, n, s);
        if(n === cljs.core.count.call(null, p)) {
          return cljs.core.cons.call(null, p, partition.call(null, n, step, pad, cljs.core.drop.call(null, step, s)))
        }else {
          return cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.take.call(null, n, cljs.core.concat.call(null, p, pad)))
        }
      }else {
        return null
      }
    }, null, null)
  };
  partition = function(n, step, pad, coll) {
    switch(arguments.length) {
      case 2:
        return partition__2.call(this, n, step);
      case 3:
        return partition__3.call(this, n, step, pad);
      case 4:
        return partition__4.call(this, n, step, pad, coll)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  partition.cljs$core$IFn$_invoke$arity$2 = partition__2;
  partition.cljs$core$IFn$_invoke$arity$3 = partition__3;
  partition.cljs$core$IFn$_invoke$arity$4 = partition__4;
  return partition
}();
cljs.core.get_in = function() {
  var get_in = null;
  var get_in__2 = function(m, ks) {
    return get_in.call(null, m, ks, null)
  };
  var get_in__3 = function(m, ks, not_found) {
    var sentinel = cljs.core.lookup_sentinel;
    var m__$1 = m;
    var ks__$1 = cljs.core.seq.call(null, ks);
    while(true) {
      if(ks__$1) {
        if(!function() {
          var G__425569 = m__$1;
          if(G__425569) {
            var bit__3911__auto__ = G__425569.cljs$lang$protocol_mask$partition0$ & 256;
            if(bit__3911__auto__ || G__425569.cljs$core$ILookup$) {
              return true
            }else {
              if(!G__425569.cljs$lang$protocol_mask$partition0$) {
                return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ILookup, G__425569)
              }else {
                return false
              }
            }
          }else {
            return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ILookup, G__425569)
          }
        }()) {
          return not_found
        }else {
          var m__$2 = cljs.core.get.call(null, m__$1, cljs.core.first.call(null, ks__$1), sentinel);
          if(sentinel === m__$2) {
            return not_found
          }else {
            var G__425570 = sentinel;
            var G__425571 = m__$2;
            var G__425572 = cljs.core.next.call(null, ks__$1);
            sentinel = G__425570;
            m__$1 = G__425571;
            ks__$1 = G__425572;
            continue
          }
        }
      }else {
        return m__$1
      }
      break
    }
  };
  get_in = function(m, ks, not_found) {
    switch(arguments.length) {
      case 2:
        return get_in__2.call(this, m, ks);
      case 3:
        return get_in__3.call(this, m, ks, not_found)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  get_in.cljs$core$IFn$_invoke$arity$2 = get_in__2;
  get_in.cljs$core$IFn$_invoke$arity$3 = get_in__3;
  return get_in
}();
cljs.core.assoc_in = function assoc_in(m, p__425573, v) {
  var vec__425575 = p__425573;
  var k = cljs.core.nth.call(null, vec__425575, 0, null);
  var ks = cljs.core.nthnext.call(null, vec__425575, 1);
  if(ks) {
    return cljs.core.assoc.call(null, m, k, assoc_in.call(null, cljs.core.get.call(null, m, k), ks, v))
  }else {
    return cljs.core.assoc.call(null, m, k, v)
  }
};
cljs.core.update_in = function() {
  var update_in = null;
  var update_in__3 = function(m, p__425576, f) {
    var vec__425586 = p__425576;
    var k = cljs.core.nth.call(null, vec__425586, 0, null);
    var ks = cljs.core.nthnext.call(null, vec__425586, 1);
    if(ks) {
      return cljs.core.assoc.call(null, m, k, update_in.call(null, cljs.core.get.call(null, m, k), ks, f))
    }else {
      return cljs.core.assoc.call(null, m, k, f.call(null, cljs.core.get.call(null, m, k)))
    }
  };
  var update_in__4 = function(m, p__425577, f, a) {
    var vec__425587 = p__425577;
    var k = cljs.core.nth.call(null, vec__425587, 0, null);
    var ks = cljs.core.nthnext.call(null, vec__425587, 1);
    if(ks) {
      return cljs.core.assoc.call(null, m, k, update_in.call(null, cljs.core.get.call(null, m, k), ks, f, a))
    }else {
      return cljs.core.assoc.call(null, m, k, f.call(null, cljs.core.get.call(null, m, k), a))
    }
  };
  var update_in__5 = function(m, p__425578, f, a, b) {
    var vec__425588 = p__425578;
    var k = cljs.core.nth.call(null, vec__425588, 0, null);
    var ks = cljs.core.nthnext.call(null, vec__425588, 1);
    if(ks) {
      return cljs.core.assoc.call(null, m, k, update_in.call(null, cljs.core.get.call(null, m, k), ks, f, a, b))
    }else {
      return cljs.core.assoc.call(null, m, k, f.call(null, cljs.core.get.call(null, m, k), a, b))
    }
  };
  var update_in__6 = function(m, p__425579, f, a, b, c) {
    var vec__425589 = p__425579;
    var k = cljs.core.nth.call(null, vec__425589, 0, null);
    var ks = cljs.core.nthnext.call(null, vec__425589, 1);
    if(ks) {
      return cljs.core.assoc.call(null, m, k, update_in.call(null, cljs.core.get.call(null, m, k), ks, f, a, b, c))
    }else {
      return cljs.core.assoc.call(null, m, k, f.call(null, cljs.core.get.call(null, m, k), a, b, c))
    }
  };
  var update_in__7 = function() {
    var G__425591__delegate = function(m, p__425580, f, a, b, c, args) {
      var vec__425590 = p__425580;
      var k = cljs.core.nth.call(null, vec__425590, 0, null);
      var ks = cljs.core.nthnext.call(null, vec__425590, 1);
      if(ks) {
        return cljs.core.assoc.call(null, m, k, cljs.core.apply.call(null, update_in, cljs.core.get.call(null, m, k), ks, f, a, b, c, args))
      }else {
        return cljs.core.assoc.call(null, m, k, cljs.core.apply.call(null, f, cljs.core.get.call(null, m, k), a, b, c, args))
      }
    };
    var G__425591 = function(m, p__425580, f, a, b, c, var_args) {
      var args = null;
      if(arguments.length > 6) {
        args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 6), 0)
      }
      return G__425591__delegate.call(this, m, p__425580, f, a, b, c, args)
    };
    G__425591.cljs$lang$maxFixedArity = 6;
    G__425591.cljs$lang$applyTo = function(arglist__425592) {
      var m = cljs.core.first(arglist__425592);
      arglist__425592 = cljs.core.next(arglist__425592);
      var p__425580 = cljs.core.first(arglist__425592);
      arglist__425592 = cljs.core.next(arglist__425592);
      var f = cljs.core.first(arglist__425592);
      arglist__425592 = cljs.core.next(arglist__425592);
      var a = cljs.core.first(arglist__425592);
      arglist__425592 = cljs.core.next(arglist__425592);
      var b = cljs.core.first(arglist__425592);
      arglist__425592 = cljs.core.next(arglist__425592);
      var c = cljs.core.first(arglist__425592);
      var args = cljs.core.rest(arglist__425592);
      return G__425591__delegate(m, p__425580, f, a, b, c, args)
    };
    G__425591.cljs$core$IFn$_invoke$arity$variadic = G__425591__delegate;
    return G__425591
  }();
  update_in = function(m, p__425580, f, a, b, c, var_args) {
    var args = var_args;
    switch(arguments.length) {
      case 3:
        return update_in__3.call(this, m, p__425580, f);
      case 4:
        return update_in__4.call(this, m, p__425580, f, a);
      case 5:
        return update_in__5.call(this, m, p__425580, f, a, b);
      case 6:
        return update_in__6.call(this, m, p__425580, f, a, b, c);
      default:
        return update_in__7.cljs$core$IFn$_invoke$arity$variadic(m, p__425580, f, a, b, c, cljs.core.array_seq(arguments, 6))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  update_in.cljs$lang$maxFixedArity = 6;
  update_in.cljs$lang$applyTo = update_in__7.cljs$lang$applyTo;
  update_in.cljs$core$IFn$_invoke$arity$3 = update_in__3;
  update_in.cljs$core$IFn$_invoke$arity$4 = update_in__4;
  update_in.cljs$core$IFn$_invoke$arity$5 = update_in__5;
  update_in.cljs$core$IFn$_invoke$arity$6 = update_in__6;
  update_in.cljs$core$IFn$_invoke$arity$variadic = update_in__7.cljs$core$IFn$_invoke$arity$variadic;
  return update_in
}();
cljs.core.VectorNode = function(edit, arr) {
  this.edit = edit;
  this.arr = arr
};
cljs.core.VectorNode.cljs$lang$type = true;
cljs.core.VectorNode.cljs$lang$ctorStr = "cljs.core/VectorNode";
cljs.core.VectorNode.cljs$lang$ctorPrWriter = function(this__3832__auto__, writer__3833__auto__, opts__3834__auto__) {
  return cljs.core._write.call(null, writer__3833__auto__, "cljs.core/VectorNode")
};
cljs.core.__GT_VectorNode = function __GT_VectorNode(edit, arr) {
  return new cljs.core.VectorNode(edit, arr)
};
cljs.core.pv_fresh_node = function pv_fresh_node(edit) {
  return new cljs.core.VectorNode(edit, new Array(32))
};
cljs.core.pv_aget = function pv_aget(node, idx) {
  return node.arr[idx]
};
cljs.core.pv_aset = function pv_aset(node, idx, val) {
  return node.arr[idx] = val
};
cljs.core.pv_clone_node = function pv_clone_node(node) {
  return new cljs.core.VectorNode(node.edit, cljs.core.aclone.call(null, node.arr))
};
cljs.core.tail_off = function tail_off(pv) {
  var cnt = pv.cnt;
  if(cnt < 32) {
    return 0
  }else {
    return cnt - 1 >>> 5 << 5
  }
};
cljs.core.new_path = function new_path(edit, level, node) {
  var ll = level;
  var ret = node;
  while(true) {
    if(ll === 0) {
      return ret
    }else {
      var embed = ret;
      var r = cljs.core.pv_fresh_node.call(null, edit);
      var _ = cljs.core.pv_aset.call(null, r, 0, embed);
      var G__425593 = ll - 5;
      var G__425594 = r;
      ll = G__425593;
      ret = G__425594;
      continue
    }
    break
  }
};
cljs.core.push_tail = function push_tail(pv, level, parent, tailnode) {
  var ret = cljs.core.pv_clone_node.call(null, parent);
  var subidx = pv.cnt - 1 >>> level & 31;
  if(5 === level) {
    cljs.core.pv_aset.call(null, ret, subidx, tailnode);
    return ret
  }else {
    var child = cljs.core.pv_aget.call(null, parent, subidx);
    if(!(child == null)) {
      var node_to_insert = push_tail.call(null, pv, level - 5, child, tailnode);
      cljs.core.pv_aset.call(null, ret, subidx, node_to_insert);
      return ret
    }else {
      var node_to_insert = cljs.core.new_path.call(null, null, level - 5, tailnode);
      cljs.core.pv_aset.call(null, ret, subidx, node_to_insert);
      return ret
    }
  }
};
cljs.core.vector_index_out_of_bounds = function vector_index_out_of_bounds(i, cnt) {
  throw new Error([cljs.core.str("No item "), cljs.core.str(i), cljs.core.str(" in vector of length "), cljs.core.str(cnt)].join(""));
};
cljs.core.array_for = function array_for(pv, i) {
  if(0 <= i && i < pv.cnt) {
    if(i >= cljs.core.tail_off.call(null, pv)) {
      return pv.tail
    }else {
      var node = pv.root;
      var level = pv.shift;
      while(true) {
        if(level > 0) {
          var G__425595 = cljs.core.pv_aget.call(null, node, i >>> level & 31);
          var G__425596 = level - 5;
          node = G__425595;
          level = G__425596;
          continue
        }else {
          return node.arr
        }
        break
      }
    }
  }else {
    return cljs.core.vector_index_out_of_bounds.call(null, i, pv.cnt)
  }
};
cljs.core.do_assoc = function do_assoc(pv, level, node, i, val) {
  var ret = cljs.core.pv_clone_node.call(null, node);
  if(level === 0) {
    cljs.core.pv_aset.call(null, ret, i & 31, val);
    return ret
  }else {
    var subidx = i >>> level & 31;
    cljs.core.pv_aset.call(null, ret, subidx, do_assoc.call(null, pv, level - 5, cljs.core.pv_aget.call(null, node, subidx), i, val));
    return ret
  }
};
cljs.core.pop_tail = function pop_tail(pv, level, node) {
  var subidx = pv.cnt - 2 >>> level & 31;
  if(level > 5) {
    var new_child = pop_tail.call(null, pv, level - 5, cljs.core.pv_aget.call(null, node, subidx));
    if(new_child == null && subidx === 0) {
      return null
    }else {
      var ret = cljs.core.pv_clone_node.call(null, node);
      cljs.core.pv_aset.call(null, ret, subidx, new_child);
      return ret
    }
  }else {
    if(subidx === 0) {
      return null
    }else {
      if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        var ret = cljs.core.pv_clone_node.call(null, node);
        cljs.core.pv_aset.call(null, ret, subidx, null);
        return ret
      }else {
        return null
      }
    }
  }
};
cljs.core.PersistentVector = function(meta, cnt, shift, root, tail, __hash) {
  this.meta = meta;
  this.cnt = cnt;
  this.shift = shift;
  this.root = root;
  this.tail = tail;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 4;
  this.cljs$lang$protocol_mask$partition0$ = 167668511
};
cljs.core.PersistentVector.cljs$lang$type = true;
cljs.core.PersistentVector.cljs$lang$ctorStr = "cljs.core/PersistentVector";
cljs.core.PersistentVector.cljs$lang$ctorPrWriter = function(this__3829__auto__, writer__3830__auto__, opt__3831__auto__) {
  return cljs.core._write.call(null, writer__3830__auto__, "cljs.core/PersistentVector")
};
cljs.core.PersistentVector.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.TransientVector(self__.cnt, self__.shift, cljs.core.tv_editable_root.call(null, self__.root), cljs.core.tv_editable_tail.call(null, self__.tail))
};
cljs.core.PersistentVector.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__3696__auto__ = self__.__hash;
  if(!(h__3696__auto__ == null)) {
    return h__3696__auto__
  }else {
    var h__3696__auto____$1 = cljs.core.hash_coll.call(null, coll__$1);
    self__.__hash = h__3696__auto____$1;
    return h__3696__auto____$1
  }
};
cljs.core.PersistentVector.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._nth.call(null, coll__$1, k, null)
};
cljs.core.PersistentVector.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._nth.call(null, coll__$1, k, not_found)
};
cljs.core.PersistentVector.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var self__ = this;
  var coll__$1 = this;
  if(0 <= k && k < self__.cnt) {
    if(cljs.core.tail_off.call(null, coll__$1) <= k) {
      var new_tail = cljs.core.aclone.call(null, self__.tail);
      new_tail[k & 31] = v;
      return new cljs.core.PersistentVector(self__.meta, self__.cnt, self__.shift, self__.root, new_tail, null)
    }else {
      return new cljs.core.PersistentVector(self__.meta, self__.cnt, self__.shift, cljs.core.do_assoc.call(null, coll__$1, self__.shift, self__.root, k, v), self__.tail, null)
    }
  }else {
    if(k === self__.cnt) {
      return cljs.core._conj.call(null, coll__$1, v)
    }else {
      if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        throw new Error([cljs.core.str("Index "), cljs.core.str(k), cljs.core.str(" out of bounds  [0,"), cljs.core.str(self__.cnt), cljs.core.str("]")].join(""));
      }else {
        return null
      }
    }
  }
};
cljs.core.PersistentVector.prototype.call = function() {
  var G__425598 = null;
  var G__425598__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$IIndexed$_nth$arity$2(null, k)
  };
  var G__425598__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$IIndexed$_nth$arity$3(null, k, not_found)
  };
  G__425598 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__425598__2.call(this, self__, k);
      case 3:
        return G__425598__3.call(this, self__, k, not_found)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  return G__425598
}();
cljs.core.PersistentVector.prototype.apply = function(self__, args425597) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone.call(null, args425597)))
};
cljs.core.PersistentVector.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$IIndexed$_nth$arity$2(null, k)
};
cljs.core.PersistentVector.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$IIndexed$_nth$arity$3(null, k, not_found)
};
cljs.core.PersistentVector.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(v, f, init) {
  var self__ = this;
  var v__$1 = this;
  var step_init = [0, init];
  var i = 0;
  while(true) {
    if(i < self__.cnt) {
      var arr = cljs.core.array_for.call(null, v__$1, i);
      var len = arr.length;
      var init__$1 = function() {
        var j = 0;
        var init__$1 = step_init[1];
        while(true) {
          if(j < len) {
            var init__$2 = f.call(null, init__$1, j + i, arr[j]);
            if(cljs.core.reduced_QMARK_.call(null, init__$2)) {
              return init__$2
            }else {
              var G__425599 = j + 1;
              var G__425600 = init__$2;
              j = G__425599;
              init__$1 = G__425600;
              continue
            }
          }else {
            step_init[0] = len;
            step_init[1] = init__$1;
            return init__$1
          }
          break
        }
      }();
      if(cljs.core.reduced_QMARK_.call(null, init__$1)) {
        return cljs.core.deref.call(null, init__$1)
      }else {
        var G__425601 = i + step_init[0];
        i = G__425601;
        continue
      }
    }else {
      return step_init[1]
    }
    break
  }
};
cljs.core.PersistentVector.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  if(self__.cnt - cljs.core.tail_off.call(null, coll__$1) < 32) {
    var len = self__.tail.length;
    var new_tail = new Array(len + 1);
    var n__4108__auto___425602 = len;
    var i_425603 = 0;
    while(true) {
      if(i_425603 < n__4108__auto___425602) {
        new_tail[i_425603] = self__.tail[i_425603];
        var G__425604 = i_425603 + 1;
        i_425603 = G__425604;
        continue
      }else {
      }
      break
    }
    new_tail[len] = o;
    return new cljs.core.PersistentVector(self__.meta, self__.cnt + 1, self__.shift, self__.root, new_tail, null)
  }else {
    var root_overflow_QMARK_ = self__.cnt >>> 5 > 1 << self__.shift;
    var new_shift = root_overflow_QMARK_ ? self__.shift + 5 : self__.shift;
    var new_root = root_overflow_QMARK_ ? function() {
      var n_r = cljs.core.pv_fresh_node.call(null, null);
      cljs.core.pv_aset.call(null, n_r, 0, self__.root);
      cljs.core.pv_aset.call(null, n_r, 1, cljs.core.new_path.call(null, null, self__.shift, new cljs.core.VectorNode(null, self__.tail)));
      return n_r
    }() : cljs.core.push_tail.call(null, coll__$1, self__.shift, self__.root, new cljs.core.VectorNode(null, self__.tail));
    return new cljs.core.PersistentVector(self__.meta, self__.cnt + 1, new_shift, new_root, [o], null)
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IReversible$_rseq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if(self__.cnt > 0) {
    return new cljs.core.RSeq(coll__$1, self__.cnt - 1, null)
  }else {
    return null
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IMapEntry$_key$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._nth.call(null, coll__$1, 0)
};
cljs.core.PersistentVector.prototype.cljs$core$IMapEntry$_val$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._nth.call(null, coll__$1, 1)
};
cljs.core.PersistentVector.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll)
};
cljs.core.PersistentVector.prototype.cljs$core$IReduce$_reduce$arity$2 = function(v, f) {
  var self__ = this;
  var v__$1 = this;
  return cljs.core.ci_reduce.call(null, v__$1, f)
};
cljs.core.PersistentVector.prototype.cljs$core$IReduce$_reduce$arity$3 = function(v, f, start) {
  var self__ = this;
  var v__$1 = this;
  return cljs.core.ci_reduce.call(null, v__$1, f, start)
};
cljs.core.PersistentVector.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if(self__.cnt === 0) {
    return null
  }else {
    if(self__.cnt < 32) {
      return cljs.core.array_seq.call(null, self__.tail)
    }else {
      if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        return cljs.core.chunked_seq.call(null, coll__$1, 0, 0)
      }else {
        return null
      }
    }
  }
};
cljs.core.PersistentVector.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.cnt
};
cljs.core.PersistentVector.prototype.cljs$core$IStack$_peek$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if(self__.cnt > 0) {
    return cljs.core._nth.call(null, coll__$1, self__.cnt - 1)
  }else {
    return null
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IStack$_pop$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if(self__.cnt === 0) {
    throw new Error("Can't pop empty vector");
  }else {
    if(1 === self__.cnt) {
      return cljs.core._with_meta.call(null, cljs.core.PersistentVector.EMPTY, self__.meta)
    }else {
      if(1 < self__.cnt - cljs.core.tail_off.call(null, coll__$1)) {
        return new cljs.core.PersistentVector(self__.meta, self__.cnt - 1, self__.shift, self__.root, self__.tail.slice(0, -1), null)
      }else {
        if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          var new_tail = cljs.core.array_for.call(null, coll__$1, self__.cnt - 2);
          var nr = cljs.core.pop_tail.call(null, coll__$1, self__.shift, self__.root);
          var new_root = nr == null ? cljs.core.PersistentVector.EMPTY_NODE : nr;
          var cnt_1 = self__.cnt - 1;
          if(5 < self__.shift && cljs.core.pv_aget.call(null, new_root, 1) == null) {
            return new cljs.core.PersistentVector(self__.meta, cnt_1, self__.shift - 5, cljs.core.pv_aget.call(null, new_root, 0), new_tail, null)
          }else {
            return new cljs.core.PersistentVector(self__.meta, cnt_1, self__.shift, new_root, new_tail, null)
          }
        }else {
          return null
        }
      }
    }
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IVector$_assoc_n$arity$3 = function(coll, n, val) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._assoc.call(null, coll__$1, n, val)
};
cljs.core.PersistentVector.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other)
};
cljs.core.PersistentVector.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentVector(meta__$1, self__.cnt, self__.shift, self__.root, self__.tail, self__.__hash)
};
cljs.core.PersistentVector.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta
};
cljs.core.PersistentVector.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, n) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.array_for.call(null, coll__$1, n)[n & 31]
};
cljs.core.PersistentVector.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, n, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if(0 <= n && n < self__.cnt) {
    return cljs.core._nth.call(null, coll__$1, n)
  }else {
    return not_found
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta.call(null, cljs.core.PersistentVector.EMPTY, self__.meta)
};
cljs.core.__GT_PersistentVector = function __GT_PersistentVector(meta, cnt, shift, root, tail, __hash) {
  return new cljs.core.PersistentVector(meta, cnt, shift, root, tail, __hash)
};
cljs.core.PersistentVector.EMPTY_NODE = new cljs.core.VectorNode(null, new Array(32));
cljs.core.PersistentVector.EMPTY = new cljs.core.PersistentVector(null, 0, 5, cljs.core.PersistentVector.EMPTY_NODE, [], 0);
cljs.core.PersistentVector.fromArray = function(xs, no_clone) {
  var l = xs.length;
  var xs__$1 = no_clone ? xs : cljs.core.aclone.call(null, xs);
  if(l < 32) {
    return new cljs.core.PersistentVector(null, l, 5, cljs.core.PersistentVector.EMPTY_NODE, xs__$1, null)
  }else {
    var node = xs__$1.slice(0, 32);
    var v = new cljs.core.PersistentVector(null, 32, 5, cljs.core.PersistentVector.EMPTY_NODE, node, null);
    var i = 32;
    var out = cljs.core._as_transient.call(null, v);
    while(true) {
      if(i < l) {
        var G__425605 = i + 1;
        var G__425606 = cljs.core.conj_BANG_.call(null, out, xs__$1[i]);
        i = G__425605;
        out = G__425606;
        continue
      }else {
        return cljs.core.persistent_BANG_.call(null, out)
      }
      break
    }
  }
};
cljs.core.vec = function vec(coll) {
  return cljs.core._persistent_BANG_.call(null, cljs.core.reduce.call(null, cljs.core._conj_BANG_, cljs.core._as_transient.call(null, cljs.core.PersistentVector.EMPTY), coll))
};
cljs.core.vector = function() {
  var vector__delegate = function(args) {
    if(args instanceof cljs.core.IndexedSeq) {
      return cljs.core.PersistentVector.fromArray.call(null, args.arr, true)
    }else {
      return cljs.core.vec.call(null, args)
    }
  };
  var vector = function(var_args) {
    var args = null;
    if(arguments.length > 0) {
      args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return vector__delegate.call(this, args)
  };
  vector.cljs$lang$maxFixedArity = 0;
  vector.cljs$lang$applyTo = function(arglist__425607) {
    var args = cljs.core.seq(arglist__425607);
    return vector__delegate(args)
  };
  vector.cljs$core$IFn$_invoke$arity$variadic = vector__delegate;
  return vector
}();
cljs.core.ChunkedSeq = function(vec, node, i, off, meta, __hash) {
  this.vec = vec;
  this.node = node;
  this.i = i;
  this.off = off;
  this.meta = meta;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 32243948;
  this.cljs$lang$protocol_mask$partition1$ = 1536
};
cljs.core.ChunkedSeq.cljs$lang$type = true;
cljs.core.ChunkedSeq.cljs$lang$ctorStr = "cljs.core/ChunkedSeq";
cljs.core.ChunkedSeq.cljs$lang$ctorPrWriter = function(this__3829__auto__, writer__3830__auto__, opt__3831__auto__) {
  return cljs.core._write.call(null, writer__3830__auto__, "cljs.core/ChunkedSeq")
};
cljs.core.ChunkedSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__3696__auto__ = self__.__hash;
  if(!(h__3696__auto__ == null)) {
    return h__3696__auto__
  }else {
    var h__3696__auto____$1 = cljs.core.hash_coll.call(null, coll__$1);
    self__.__hash = h__3696__auto____$1;
    return h__3696__auto____$1
  }
};
cljs.core.ChunkedSeq.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if(self__.off + 1 < self__.node.length) {
    var s = cljs.core.chunked_seq.call(null, self__.vec, self__.node, self__.i, self__.off + 1);
    if(s == null) {
      return null
    }else {
      return s
    }
  }else {
    return cljs.core._chunked_next.call(null, coll__$1)
  }
};
cljs.core.ChunkedSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons.call(null, o, coll__$1)
};
cljs.core.ChunkedSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll)
};
cljs.core.ChunkedSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.ci_reduce.call(null, cljs.core.subvec.call(null, self__.vec, self__.i + self__.off, cljs.core.count.call(null, self__.vec)), f)
};
cljs.core.ChunkedSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.ci_reduce.call(null, cljs.core.subvec.call(null, self__.vec, self__.i + self__.off, cljs.core.count.call(null, self__.vec)), f, start)
};
cljs.core.ChunkedSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1
};
cljs.core.ChunkedSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.node[self__.off]
};
cljs.core.ChunkedSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if(self__.off + 1 < self__.node.length) {
    var s = cljs.core.chunked_seq.call(null, self__.vec, self__.node, self__.i, self__.off + 1);
    if(s == null) {
      return cljs.core.List.EMPTY
    }else {
      return s
    }
  }else {
    return cljs.core._chunked_rest.call(null, coll__$1)
  }
};
cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedNext$_chunked_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var l = self__.node.length;
  var s = self__.i + l < cljs.core._count.call(null, self__.vec) ? cljs.core.chunked_seq.call(null, self__.vec, self__.i + l, 0) : null;
  if(s == null) {
    return null
  }else {
    return s
  }
};
cljs.core.ChunkedSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other)
};
cljs.core.ChunkedSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, m) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.chunked_seq.call(null, self__.vec, self__.node, self__.i, self__.off, m)
};
cljs.core.ChunkedSeq.prototype.cljs$core$IWithMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta
};
cljs.core.ChunkedSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta.call(null, cljs.core.PersistentVector.EMPTY, self__.meta)
};
cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedSeq$_chunked_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.array_chunk.call(null, self__.node, self__.off)
};
cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedSeq$_chunked_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var l = self__.node.length;
  var s = self__.i + l < cljs.core._count.call(null, self__.vec) ? cljs.core.chunked_seq.call(null, self__.vec, self__.i + l, 0) : null;
  if(s == null) {
    return cljs.core.List.EMPTY
  }else {
    return s
  }
};
cljs.core.__GT_ChunkedSeq = function __GT_ChunkedSeq(vec, node, i, off, meta, __hash) {
  return new cljs.core.ChunkedSeq(vec, node, i, off, meta, __hash)
};
cljs.core.chunked_seq = function() {
  var chunked_seq = null;
  var chunked_seq__3 = function(vec, i, off) {
    return new cljs.core.ChunkedSeq(vec, cljs.core.array_for.call(null, vec, i), i, off, null, null)
  };
  var chunked_seq__4 = function(vec, node, i, off) {
    return new cljs.core.ChunkedSeq(vec, node, i, off, null, null)
  };
  var chunked_seq__5 = function(vec, node, i, off, meta) {
    return new cljs.core.ChunkedSeq(vec, node, i, off, meta, null)
  };
  chunked_seq = function(vec, node, i, off, meta) {
    switch(arguments.length) {
      case 3:
        return chunked_seq__3.call(this, vec, node, i);
      case 4:
        return chunked_seq__4.call(this, vec, node, i, off);
      case 5:
        return chunked_seq__5.call(this, vec, node, i, off, meta)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  chunked_seq.cljs$core$IFn$_invoke$arity$3 = chunked_seq__3;
  chunked_seq.cljs$core$IFn$_invoke$arity$4 = chunked_seq__4;
  chunked_seq.cljs$core$IFn$_invoke$arity$5 = chunked_seq__5;
  return chunked_seq
}();
cljs.core.Subvec = function(meta, v, start, end, __hash) {
  this.meta = meta;
  this.v = v;
  this.start = start;
  this.end = end;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32400159
};
cljs.core.Subvec.cljs$lang$type = true;
cljs.core.Subvec.cljs$lang$ctorStr = "cljs.core/Subvec";
cljs.core.Subvec.cljs$lang$ctorPrWriter = function(this__3829__auto__, writer__3830__auto__, opt__3831__auto__) {
  return cljs.core._write.call(null, writer__3830__auto__, "cljs.core/Subvec")
};
cljs.core.Subvec.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__3696__auto__ = self__.__hash;
  if(!(h__3696__auto__ == null)) {
    return h__3696__auto__
  }else {
    var h__3696__auto____$1 = cljs.core.hash_coll.call(null, coll__$1);
    self__.__hash = h__3696__auto____$1;
    return h__3696__auto____$1
  }
};
cljs.core.Subvec.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._nth.call(null, coll__$1, k, null)
};
cljs.core.Subvec.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._nth.call(null, coll__$1, k, not_found)
};
cljs.core.Subvec.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, key, val) {
  var self__ = this;
  var coll__$1 = this;
  var v_pos = self__.start + key;
  return cljs.core.build_subvec.call(null, self__.meta, cljs.core.assoc.call(null, self__.v, v_pos, val), self__.start, function() {
    var x__3592__auto__ = self__.end;
    var y__3593__auto__ = v_pos + 1;
    return x__3592__auto__ > y__3593__auto__ ? x__3592__auto__ : y__3593__auto__
  }(), null)
};
cljs.core.Subvec.prototype.call = function() {
  var G__425609 = null;
  var G__425609__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$IIndexed$_nth$arity$2(null, k)
  };
  var G__425609__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$IIndexed$_nth$arity$3(null, k, not_found)
  };
  G__425609 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__425609__2.call(this, self__, k);
      case 3:
        return G__425609__3.call(this, self__, k, not_found)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  return G__425609
}();
cljs.core.Subvec.prototype.apply = function(self__, args425608) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone.call(null, args425608)))
};
cljs.core.Subvec.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$IIndexed$_nth$arity$2(null, k)
};
cljs.core.Subvec.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$IIndexed$_nth$arity$3(null, k, not_found)
};
cljs.core.Subvec.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.build_subvec.call(null, self__.meta, cljs.core._assoc_n.call(null, self__.v, self__.end, o), self__.start, self__.end + 1, null)
};
cljs.core.Subvec.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll)
};
cljs.core.Subvec.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.ci_reduce.call(null, coll__$1, f)
};
cljs.core.Subvec.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start__$1) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.ci_reduce.call(null, coll__$1, f, start__$1)
};
cljs.core.Subvec.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var subvec_seq = function subvec_seq(i) {
    if(i === self__.end) {
      return null
    }else {
      return cljs.core.cons.call(null, cljs.core._nth.call(null, self__.v, i), new cljs.core.LazySeq(null, function() {
        return subvec_seq.call(null, i + 1)
      }, null, null))
    }
  };
  return subvec_seq.call(null, self__.start)
};
cljs.core.Subvec.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.end - self__.start
};
cljs.core.Subvec.prototype.cljs$core$IStack$_peek$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._nth.call(null, self__.v, self__.end - 1)
};
cljs.core.Subvec.prototype.cljs$core$IStack$_pop$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if(self__.start === self__.end) {
    throw new Error("Can't pop empty vector");
  }else {
    return cljs.core.build_subvec.call(null, self__.meta, self__.v, self__.start, self__.end - 1, null)
  }
};
cljs.core.Subvec.prototype.cljs$core$IVector$_assoc_n$arity$3 = function(coll, n, val) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._assoc.call(null, coll__$1, n, val)
};
cljs.core.Subvec.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other)
};
cljs.core.Subvec.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.build_subvec.call(null, meta__$1, self__.v, self__.start, self__.end, self__.__hash)
};
cljs.core.Subvec.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta
};
cljs.core.Subvec.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, n) {
  var self__ = this;
  var coll__$1 = this;
  if(n < 0 || self__.end <= self__.start + n) {
    return cljs.core.vector_index_out_of_bounds.call(null, n, self__.end - self__.start)
  }else {
    return cljs.core._nth.call(null, self__.v, self__.start + n)
  }
};
cljs.core.Subvec.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, n, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if(n < 0 || self__.end <= self__.start + n) {
    return not_found
  }else {
    return cljs.core._nth.call(null, self__.v, self__.start + n, not_found)
  }
};
cljs.core.Subvec.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta.call(null, cljs.core.PersistentVector.EMPTY, self__.meta)
};
cljs.core.__GT_Subvec = function __GT_Subvec(meta, v, start, end, __hash) {
  return new cljs.core.Subvec(meta, v, start, end, __hash)
};
cljs.core.build_subvec = function build_subvec(meta, v, start, end, __hash) {
  while(true) {
    if(v instanceof cljs.core.Subvec) {
      var G__425610 = meta;
      var G__425611 = v.v;
      var G__425612 = v.start + start;
      var G__425613 = v.start + end;
      var G__425614 = __hash;
      meta = G__425610;
      v = G__425611;
      start = G__425612;
      end = G__425613;
      __hash = G__425614;
      continue
    }else {
      var c = cljs.core.count.call(null, v);
      if(start < 0 || end < 0 || start > c || end > c) {
        throw new Error("Index out of bounds");
      }else {
      }
      return new cljs.core.Subvec(meta, v, start, end, __hash)
    }
    break
  }
};
cljs.core.subvec = function() {
  var subvec = null;
  var subvec__2 = function(v, start) {
    return subvec.call(null, v, start, cljs.core.count.call(null, v))
  };
  var subvec__3 = function(v, start, end) {
    return cljs.core.build_subvec.call(null, null, v, start, end, null)
  };
  subvec = function(v, start, end) {
    switch(arguments.length) {
      case 2:
        return subvec__2.call(this, v, start);
      case 3:
        return subvec__3.call(this, v, start, end)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  subvec.cljs$core$IFn$_invoke$arity$2 = subvec__2;
  subvec.cljs$core$IFn$_invoke$arity$3 = subvec__3;
  return subvec
}();
cljs.core.tv_ensure_editable = function tv_ensure_editable(edit, node) {
  if(edit === node.edit) {
    return node
  }else {
    return new cljs.core.VectorNode(edit, cljs.core.aclone.call(null, node.arr))
  }
};
cljs.core.tv_editable_root = function tv_editable_root(node) {
  return new cljs.core.VectorNode(function() {
    var obj425618 = {};
    return obj425618
  }(), cljs.core.aclone.call(null, node.arr))
};
cljs.core.tv_editable_tail = function tv_editable_tail(tl) {
  var ret = new Array(32);
  cljs.core.array_copy.call(null, tl, 0, ret, 0, tl.length);
  return ret
};
cljs.core.tv_push_tail = function tv_push_tail(tv, level, parent, tail_node) {
  var ret = cljs.core.tv_ensure_editable.call(null, tv.root.edit, parent);
  var subidx = tv.cnt - 1 >>> level & 31;
  cljs.core.pv_aset.call(null, ret, subidx, level === 5 ? tail_node : function() {
    var child = cljs.core.pv_aget.call(null, ret, subidx);
    if(!(child == null)) {
      return tv_push_tail.call(null, tv, level - 5, child, tail_node)
    }else {
      return cljs.core.new_path.call(null, tv.root.edit, level - 5, tail_node)
    }
  }());
  return ret
};
cljs.core.tv_pop_tail = function tv_pop_tail(tv, level, node) {
  var node__$1 = cljs.core.tv_ensure_editable.call(null, tv.root.edit, node);
  var subidx = tv.cnt - 2 >>> level & 31;
  if(level > 5) {
    var new_child = tv_pop_tail.call(null, tv, level - 5, cljs.core.pv_aget.call(null, node__$1, subidx));
    if(new_child == null && subidx === 0) {
      return null
    }else {
      cljs.core.pv_aset.call(null, node__$1, subidx, new_child);
      return node__$1
    }
  }else {
    if(subidx === 0) {
      return null
    }else {
      if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        cljs.core.pv_aset.call(null, node__$1, subidx, null);
        return node__$1
      }else {
        return null
      }
    }
  }
};
cljs.core.editable_array_for = function editable_array_for(tv, i) {
  if(0 <= i && i < tv.cnt) {
    if(i >= cljs.core.tail_off.call(null, tv)) {
      return tv.tail
    }else {
      var root = tv.root;
      var node = root;
      var level = tv.shift;
      while(true) {
        if(level > 0) {
          var G__425619 = cljs.core.tv_ensure_editable.call(null, root.edit, cljs.core.pv_aget.call(null, node, i >>> level & 31));
          var G__425620 = level - 5;
          node = G__425619;
          level = G__425620;
          continue
        }else {
          return node.arr
        }
        break
      }
    }
  }else {
    throw new Error([cljs.core.str("No item "), cljs.core.str(i), cljs.core.str(" in transient vector of length "), cljs.core.str(tv.cnt)].join(""));
  }
};
cljs.core.TransientVector = function(cnt, shift, root, tail) {
  this.cnt = cnt;
  this.shift = shift;
  this.root = root;
  this.tail = tail;
  this.cljs$lang$protocol_mask$partition0$ = 275;
  this.cljs$lang$protocol_mask$partition1$ = 88
};
cljs.core.TransientVector.cljs$lang$type = true;
cljs.core.TransientVector.cljs$lang$ctorStr = "cljs.core/TransientVector";
cljs.core.TransientVector.cljs$lang$ctorPrWriter = function(this__3829__auto__, writer__3830__auto__, opt__3831__auto__) {
  return cljs.core._write.call(null, writer__3830__auto__, "cljs.core/TransientVector")
};
cljs.core.TransientVector.prototype.call = function() {
  var G__425622 = null;
  var G__425622__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$2(null, k)
  };
  var G__425622__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found)
  };
  G__425622 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__425622__2.call(this, self__, k);
      case 3:
        return G__425622__3.call(this, self__, k, not_found)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  return G__425622
}();
cljs.core.TransientVector.prototype.apply = function(self__, args425621) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone.call(null, args425621)))
};
cljs.core.TransientVector.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$2(null, k)
};
cljs.core.TransientVector.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found)
};
cljs.core.TransientVector.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._nth.call(null, coll__$1, k, null)
};
cljs.core.TransientVector.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._nth.call(null, coll__$1, k, not_found)
};
cljs.core.TransientVector.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, n) {
  var self__ = this;
  var coll__$1 = this;
  if(self__.root.edit) {
    return cljs.core.array_for.call(null, coll__$1, n)[n & 31]
  }else {
    throw new Error("nth after persistent!");
  }
};
cljs.core.TransientVector.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, n, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if(0 <= n && n < self__.cnt) {
    return cljs.core._nth.call(null, coll__$1, n)
  }else {
    return not_found
  }
};
cljs.core.TransientVector.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if(self__.root.edit) {
    return self__.cnt
  }else {
    throw new Error("count after persistent!");
  }
};
cljs.core.TransientVector.prototype.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3 = function(tcoll, n, val) {
  var self__ = this;
  var tcoll__$1 = this;
  if(self__.root.edit) {
    if(0 <= n && n < self__.cnt) {
      if(cljs.core.tail_off.call(null, tcoll__$1) <= n) {
        self__.tail[n & 31] = val;
        return tcoll__$1
      }else {
        var new_root = function go(level, node) {
          var node__$1 = cljs.core.tv_ensure_editable.call(null, self__.root.edit, node);
          if(level === 0) {
            cljs.core.pv_aset.call(null, node__$1, n & 31, val);
            return node__$1
          }else {
            var subidx = n >>> level & 31;
            cljs.core.pv_aset.call(null, node__$1, subidx, go.call(null, level - 5, cljs.core.pv_aget.call(null, node__$1, subidx)));
            return node__$1
          }
        }.call(null, self__.shift, self__.root);
        self__.root = new_root;
        return tcoll__$1
      }
    }else {
      if(n === self__.cnt) {
        return cljs.core._conj_BANG_.call(null, tcoll__$1, val)
      }else {
        if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          throw new Error([cljs.core.str("Index "), cljs.core.str(n), cljs.core.str(" out of bounds for TransientVector of length"), cljs.core.str(self__.cnt)].join(""));
        }else {
          return null
        }
      }
    }
  }else {
    throw new Error("assoc! after persistent!");
  }
};
cljs.core.TransientVector.prototype.cljs$core$ITransientVector$_pop_BANG_$arity$1 = function(tcoll) {
  var self__ = this;
  var tcoll__$1 = this;
  if(self__.root.edit) {
    if(self__.cnt === 0) {
      throw new Error("Can't pop empty vector");
    }else {
      if(1 === self__.cnt) {
        self__.cnt = 0;
        return tcoll__$1
      }else {
        if((self__.cnt - 1 & 31) > 0) {
          self__.cnt = self__.cnt - 1;
          return tcoll__$1
        }else {
          if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
            var new_tail = cljs.core.editable_array_for.call(null, tcoll__$1, self__.cnt - 2);
            var new_root = function() {
              var nr = cljs.core.tv_pop_tail.call(null, tcoll__$1, self__.shift, self__.root);
              if(!(nr == null)) {
                return nr
              }else {
                return new cljs.core.VectorNode(self__.root.edit, new Array(32))
              }
            }();
            if(5 < self__.shift && cljs.core.pv_aget.call(null, new_root, 1) == null) {
              var new_root__$1 = cljs.core.tv_ensure_editable.call(null, self__.root.edit, cljs.core.pv_aget.call(null, new_root, 0));
              self__.root = new_root__$1;
              self__.shift = self__.shift - 5;
              self__.cnt = self__.cnt - 1;
              self__.tail = new_tail;
              return tcoll__$1
            }else {
              self__.root = new_root;
              self__.cnt = self__.cnt - 1;
              self__.tail = new_tail;
              return tcoll__$1
            }
          }else {
            return null
          }
        }
      }
    }
  }else {
    throw new Error("pop! after persistent!");
  }
};
cljs.core.TransientVector.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = function(tcoll, key, val) {
  var self__ = this;
  var tcoll__$1 = this;
  return cljs.core._assoc_n_BANG_.call(null, tcoll__$1, key, val)
};
cljs.core.TransientVector.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = function(tcoll, o) {
  var self__ = this;
  var tcoll__$1 = this;
  if(self__.root.edit) {
    if(self__.cnt - cljs.core.tail_off.call(null, tcoll__$1) < 32) {
      self__.tail[self__.cnt & 31] = o;
      self__.cnt = self__.cnt + 1;
      return tcoll__$1
    }else {
      var tail_node = new cljs.core.VectorNode(self__.root.edit, self__.tail);
      var new_tail = new Array(32);
      new_tail[0] = o;
      self__.tail = new_tail;
      if(self__.cnt >>> 5 > 1 << self__.shift) {
        var new_root_array = new Array(32);
        var new_shift = self__.shift + 5;
        new_root_array[0] = self__.root;
        new_root_array[1] = cljs.core.new_path.call(null, self__.root.edit, self__.shift, tail_node);
        self__.root = new cljs.core.VectorNode(self__.root.edit, new_root_array);
        self__.shift = new_shift;
        self__.cnt = self__.cnt + 1;
        return tcoll__$1
      }else {
        var new_root = cljs.core.tv_push_tail.call(null, tcoll__$1, self__.shift, self__.root, tail_node);
        self__.root = new_root;
        self__.cnt = self__.cnt + 1;
        return tcoll__$1
      }
    }
  }else {
    throw new Error("conj! after persistent!");
  }
};
cljs.core.TransientVector.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = function(tcoll) {
  var self__ = this;
  var tcoll__$1 = this;
  if(self__.root.edit) {
    self__.root.edit = null;
    var len = self__.cnt - cljs.core.tail_off.call(null, tcoll__$1);
    var trimmed_tail = new Array(len);
    cljs.core.array_copy.call(null, self__.tail, 0, trimmed_tail, 0, len);
    return new cljs.core.PersistentVector(null, self__.cnt, self__.shift, self__.root, trimmed_tail, null)
  }else {
    throw new Error("persistent! called twice");
  }
};
cljs.core.__GT_TransientVector = function __GT_TransientVector(cnt, shift, root, tail) {
  return new cljs.core.TransientVector(cnt, shift, root, tail)
};
cljs.core.PersistentQueueSeq = function(meta, front, rear, __hash) {
  this.meta = meta;
  this.front = front;
  this.rear = rear;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 31850572
};
cljs.core.PersistentQueueSeq.cljs$lang$type = true;
cljs.core.PersistentQueueSeq.cljs$lang$ctorStr = "cljs.core/PersistentQueueSeq";
cljs.core.PersistentQueueSeq.cljs$lang$ctorPrWriter = function(this__3829__auto__, writer__3830__auto__, opt__3831__auto__) {
  return cljs.core._write.call(null, writer__3830__auto__, "cljs.core/PersistentQueueSeq")
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__3696__auto__ = self__.__hash;
  if(!(h__3696__auto__ == null)) {
    return h__3696__auto__
  }else {
    var h__3696__auto____$1 = cljs.core.hash_coll.call(null, coll__$1);
    self__.__hash = h__3696__auto____$1;
    return h__3696__auto____$1
  }
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons.call(null, o, coll__$1)
};
cljs.core.PersistentQueueSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll)
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.first.call(null, self__.front)
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var temp__4090__auto__ = cljs.core.next.call(null, self__.front);
  if(temp__4090__auto__) {
    var f1 = temp__4090__auto__;
    return new cljs.core.PersistentQueueSeq(self__.meta, f1, self__.rear, null)
  }else {
    if(self__.rear == null) {
      return cljs.core._empty.call(null, coll__$1)
    }else {
      return new cljs.core.PersistentQueueSeq(self__.meta, self__.rear, null, null)
    }
  }
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other)
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentQueueSeq(meta__$1, self__.front, self__.rear, self__.__hash)
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, self__.meta)
};
cljs.core.__GT_PersistentQueueSeq = function __GT_PersistentQueueSeq(meta, front, rear, __hash) {
  return new cljs.core.PersistentQueueSeq(meta, front, rear, __hash)
};
cljs.core.PersistentQueue = function(meta, count, front, rear, __hash) {
  this.meta = meta;
  this.count = count;
  this.front = front;
  this.rear = rear;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 31858766
};
cljs.core.PersistentQueue.cljs$lang$type = true;
cljs.core.PersistentQueue.cljs$lang$ctorStr = "cljs.core/PersistentQueue";
cljs.core.PersistentQueue.cljs$lang$ctorPrWriter = function(this__3829__auto__, writer__3830__auto__, opt__3831__auto__) {
  return cljs.core._write.call(null, writer__3830__auto__, "cljs.core/PersistentQueue")
};
cljs.core.PersistentQueue.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__3696__auto__ = self__.__hash;
  if(!(h__3696__auto__ == null)) {
    return h__3696__auto__
  }else {
    var h__3696__auto____$1 = cljs.core.hash_coll.call(null, coll__$1);
    self__.__hash = h__3696__auto____$1;
    return h__3696__auto____$1
  }
};
cljs.core.PersistentQueue.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  if(cljs.core.truth_(self__.front)) {
    return new cljs.core.PersistentQueue(self__.meta, self__.count + 1, self__.front, cljs.core.conj.call(null, function() {
      var or__3285__auto__ = self__.rear;
      if(cljs.core.truth_(or__3285__auto__)) {
        return or__3285__auto__
      }else {
        return cljs.core.PersistentVector.EMPTY
      }
    }(), o), null)
  }else {
    return new cljs.core.PersistentQueue(self__.meta, self__.count + 1, cljs.core.conj.call(null, self__.front, o), cljs.core.PersistentVector.EMPTY, null)
  }
};
cljs.core.PersistentQueue.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll)
};
cljs.core.PersistentQueue.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var rear__$1 = cljs.core.seq.call(null, self__.rear);
  if(cljs.core.truth_(function() {
    var or__3285__auto__ = self__.front;
    if(cljs.core.truth_(or__3285__auto__)) {
      return or__3285__auto__
    }else {
      return rear__$1
    }
  }())) {
    return new cljs.core.PersistentQueueSeq(null, self__.front, cljs.core.seq.call(null, rear__$1), null)
  }else {
    return null
  }
};
cljs.core.PersistentQueue.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.count
};
cljs.core.PersistentQueue.prototype.cljs$core$IStack$_peek$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.first.call(null, self__.front)
};
cljs.core.PersistentQueue.prototype.cljs$core$IStack$_pop$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if(cljs.core.truth_(self__.front)) {
    var temp__4090__auto__ = cljs.core.next.call(null, self__.front);
    if(temp__4090__auto__) {
      var f1 = temp__4090__auto__;
      return new cljs.core.PersistentQueue(self__.meta, self__.count - 1, f1, self__.rear, null)
    }else {
      return new cljs.core.PersistentQueue(self__.meta, self__.count - 1, cljs.core.seq.call(null, self__.rear), cljs.core.PersistentVector.EMPTY, null)
    }
  }else {
    return coll__$1
  }
};
cljs.core.PersistentQueue.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.first.call(null, self__.front)
};
cljs.core.PersistentQueue.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.rest.call(null, cljs.core.seq.call(null, coll__$1))
};
cljs.core.PersistentQueue.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other)
};
cljs.core.PersistentQueue.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentQueue(meta__$1, self__.count, self__.front, self__.rear, self__.__hash)
};
cljs.core.PersistentQueue.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta
};
cljs.core.PersistentQueue.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.PersistentQueue.EMPTY
};
cljs.core.__GT_PersistentQueue = function __GT_PersistentQueue(meta, count, front, rear, __hash) {
  return new cljs.core.PersistentQueue(meta, count, front, rear, __hash)
};
cljs.core.PersistentQueue.EMPTY = new cljs.core.PersistentQueue(null, 0, null, cljs.core.PersistentVector.EMPTY, 0);
cljs.core.NeverEquiv = function() {
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 2097152
};
cljs.core.NeverEquiv.cljs$lang$type = true;
cljs.core.NeverEquiv.cljs$lang$ctorStr = "cljs.core/NeverEquiv";
cljs.core.NeverEquiv.cljs$lang$ctorPrWriter = function(this__3829__auto__, writer__3830__auto__, opt__3831__auto__) {
  return cljs.core._write.call(null, writer__3830__auto__, "cljs.core/NeverEquiv")
};
cljs.core.NeverEquiv.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(o, other) {
  var self__ = this;
  var o__$1 = this;
  return false
};
cljs.core.__GT_NeverEquiv = function __GT_NeverEquiv() {
  return new cljs.core.NeverEquiv
};
cljs.core.never_equiv = new cljs.core.NeverEquiv;
cljs.core.equiv_map = function equiv_map(x, y) {
  return cljs.core.boolean$.call(null, cljs.core.map_QMARK_.call(null, y) ? cljs.core.count.call(null, x) === cljs.core.count.call(null, y) ? cljs.core.every_QMARK_.call(null, cljs.core.identity, cljs.core.map.call(null, function(xkv) {
    return cljs.core._EQ_.call(null, cljs.core.get.call(null, y, cljs.core.first.call(null, xkv), cljs.core.never_equiv), cljs.core.second.call(null, xkv))
  }, x)) : null : null)
};
cljs.core.scan_array = function scan_array(incr, k, array) {
  var len = array.length;
  var i = 0;
  while(true) {
    if(i < len) {
      if(k === array[i]) {
        return i
      }else {
        var G__425623 = i + incr;
        i = G__425623;
        continue
      }
    }else {
      return null
    }
    break
  }
};
cljs.core.obj_map_compare_keys = function obj_map_compare_keys(a, b) {
  var a__$1 = cljs.core.hash.call(null, a);
  var b__$1 = cljs.core.hash.call(null, b);
  if(a__$1 < b__$1) {
    return-1
  }else {
    if(a__$1 > b__$1) {
      return 1
    }else {
      if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        return 0
      }else {
        return null
      }
    }
  }
};
cljs.core.obj_map__GT_hash_map = function obj_map__GT_hash_map(m, k, v) {
  var ks = m.keys;
  var len = ks.length;
  var so = m.strobj;
  var mm = cljs.core.meta.call(null, m);
  var i = 0;
  var out = cljs.core.transient$.call(null, cljs.core.PersistentHashMap.EMPTY);
  while(true) {
    if(i < len) {
      var k__$1 = ks[i];
      var G__425624 = i + 1;
      var G__425625 = cljs.core.assoc_BANG_.call(null, out, k__$1, so[k__$1]);
      i = G__425624;
      out = G__425625;
      continue
    }else {
      return cljs.core.with_meta.call(null, cljs.core.persistent_BANG_.call(null, cljs.core.assoc_BANG_.call(null, out, k, v)), mm)
    }
    break
  }
};
cljs.core.obj_clone = function obj_clone(obj, ks) {
  var new_obj = function() {
    var obj425629 = {};
    return obj425629
  }();
  var l = ks.length;
  var i_425630 = 0;
  while(true) {
    if(i_425630 < l) {
      var k_425631 = ks[i_425630];
      new_obj[k_425631] = obj[k_425631];
      var G__425632 = i_425630 + 1;
      i_425630 = G__425632;
      continue
    }else {
    }
    break
  }
  return new_obj
};
cljs.core.ObjMap = function(meta, keys, strobj, update_count, __hash) {
  this.meta = meta;
  this.keys = keys;
  this.strobj = strobj;
  this.update_count = update_count;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 4;
  this.cljs$lang$protocol_mask$partition0$ = 16123663
};
cljs.core.ObjMap.cljs$lang$type = true;
cljs.core.ObjMap.cljs$lang$ctorStr = "cljs.core/ObjMap";
cljs.core.ObjMap.cljs$lang$ctorPrWriter = function(this__3829__auto__, writer__3830__auto__, opt__3831__auto__) {
  return cljs.core._write.call(null, writer__3830__auto__, "cljs.core/ObjMap")
};
cljs.core.ObjMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.transient$.call(null, cljs.core.into.call(null, cljs.core.PersistentHashMap.EMPTY, coll__$1))
};
cljs.core.ObjMap.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__3696__auto__ = self__.__hash;
  if(!(h__3696__auto__ == null)) {
    return h__3696__auto__
  }else {
    var h__3696__auto____$1 = cljs.core.hash_imap.call(null, coll__$1);
    self__.__hash = h__3696__auto____$1;
    return h__3696__auto____$1
  }
};
cljs.core.ObjMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._lookup.call(null, coll__$1, k, null)
};
cljs.core.ObjMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if(goog.isString(k) && !(cljs.core.scan_array.call(null, 1, k, self__.keys) == null)) {
    return self__.strobj[k]
  }else {
    return not_found
  }
};
cljs.core.ObjMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var self__ = this;
  var coll__$1 = this;
  if(goog.isString(k)) {
    if(self__.update_count > cljs.core.ObjMap.HASHMAP_THRESHOLD || self__.keys.length >= cljs.core.ObjMap.HASHMAP_THRESHOLD) {
      return cljs.core.obj_map__GT_hash_map.call(null, coll__$1, k, v)
    }else {
      if(!(cljs.core.scan_array.call(null, 1, k, self__.keys) == null)) {
        var new_strobj = cljs.core.obj_clone.call(null, self__.strobj, self__.keys);
        new_strobj[k] = v;
        return new cljs.core.ObjMap(self__.meta, self__.keys, new_strobj, self__.update_count + 1, null)
      }else {
        var new_strobj = cljs.core.obj_clone.call(null, self__.strobj, self__.keys);
        var new_keys = cljs.core.aclone.call(null, self__.keys);
        new_strobj[k] = v;
        new_keys.push(k);
        return new cljs.core.ObjMap(self__.meta, new_keys, new_strobj, self__.update_count + 1, null)
      }
    }
  }else {
    return cljs.core.obj_map__GT_hash_map.call(null, coll__$1, k, v)
  }
};
cljs.core.ObjMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  if(goog.isString(k) && !(cljs.core.scan_array.call(null, 1, k, self__.keys) == null)) {
    return true
  }else {
    return false
  }
};
cljs.core.ObjMap.prototype.call = function() {
  var G__425635 = null;
  var G__425635__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$2(null, k)
  };
  var G__425635__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found)
  };
  G__425635 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__425635__2.call(this, self__, k);
      case 3:
        return G__425635__3.call(this, self__, k, not_found)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  return G__425635
}();
cljs.core.ObjMap.prototype.apply = function(self__, args425634) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone.call(null, args425634)))
};
cljs.core.ObjMap.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$2(null, k)
};
cljs.core.ObjMap.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found)
};
cljs.core.ObjMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(coll, f, init) {
  var self__ = this;
  var coll__$1 = this;
  var len = self__.keys.length;
  var keys__$1 = self__.keys.sort(cljs.core.obj_map_compare_keys);
  var init__$1 = init;
  while(true) {
    if(cljs.core.seq.call(null, keys__$1)) {
      var k = cljs.core.first.call(null, keys__$1);
      var init__$2 = f.call(null, init__$1, k, self__.strobj[k]);
      if(cljs.core.reduced_QMARK_.call(null, init__$2)) {
        return cljs.core.deref.call(null, init__$2)
      }else {
        var G__425636 = cljs.core.rest.call(null, keys__$1);
        var G__425637 = init__$2;
        keys__$1 = G__425636;
        init__$1 = G__425637;
        continue
      }
    }else {
      return init__$1
    }
    break
  }
};
cljs.core.ObjMap.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, entry) {
  var self__ = this;
  var coll__$1 = this;
  if(cljs.core.vector_QMARK_.call(null, entry)) {
    return cljs.core._assoc.call(null, coll__$1, cljs.core._nth.call(null, entry, 0), cljs.core._nth.call(null, entry, 1))
  }else {
    return cljs.core.reduce.call(null, cljs.core._conj, coll__$1, entry)
  }
};
cljs.core.ObjMap.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll)
};
cljs.core.ObjMap.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if(self__.keys.length > 0) {
    return cljs.core.map.call(null, function(p1__425633_SHARP_) {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [p1__425633_SHARP_, self__.strobj[p1__425633_SHARP_]], null)
    }, self__.keys.sort(cljs.core.obj_map_compare_keys))
  }else {
    return null
  }
};
cljs.core.ObjMap.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.keys.length
};
cljs.core.ObjMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_map.call(null, coll__$1, other)
};
cljs.core.ObjMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.ObjMap(meta__$1, self__.keys, self__.strobj, self__.update_count, self__.__hash)
};
cljs.core.ObjMap.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta
};
cljs.core.ObjMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta.call(null, cljs.core.ObjMap.EMPTY, self__.meta)
};
cljs.core.ObjMap.prototype.cljs$core$IMap$_dissoc$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  if(goog.isString(k) && !(cljs.core.scan_array.call(null, 1, k, self__.keys) == null)) {
    var new_keys = cljs.core.aclone.call(null, self__.keys);
    var new_strobj = cljs.core.obj_clone.call(null, self__.strobj, self__.keys);
    new_keys.splice(cljs.core.scan_array.call(null, 1, k, new_keys), 1);
    delete new_strobj[k];
    return new cljs.core.ObjMap(self__.meta, new_keys, new_strobj, self__.update_count + 1, null)
  }else {
    return coll__$1
  }
};
cljs.core.__GT_ObjMap = function __GT_ObjMap(meta, keys, strobj, update_count, __hash) {
  return new cljs.core.ObjMap(meta, keys, strobj, update_count, __hash)
};
cljs.core.ObjMap.EMPTY = new cljs.core.ObjMap(null, [], function() {
  var obj425639 = {};
  return obj425639
}(), 0, 0);
cljs.core.ObjMap.HASHMAP_THRESHOLD = 8;
cljs.core.ObjMap.fromObject = function(ks, obj) {
  return new cljs.core.ObjMap(null, ks, obj, 0, null)
};
cljs.core.array_map_index_of_nil_QMARK_ = function array_map_index_of_nil_QMARK_(arr, m, k) {
  var len = arr.length;
  var i = 0;
  while(true) {
    if(len <= i) {
      return-1
    }else {
      if(arr[i] == null) {
        return i
      }else {
        if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          var G__425640 = i + 2;
          i = G__425640;
          continue
        }else {
          return null
        }
      }
    }
    break
  }
};
cljs.core.array_map_index_of_keyword_QMARK_ = function array_map_index_of_keyword_QMARK_(arr, m, k) {
  var len = arr.length;
  var kstr = k.fqn;
  var i = 0;
  while(true) {
    if(len <= i) {
      return-1
    }else {
      if(function() {
        var k_SINGLEQUOTE_ = arr[i];
        return k_SINGLEQUOTE_ instanceof cljs.core.Keyword && kstr === k_SINGLEQUOTE_.fqn
      }()) {
        return i
      }else {
        if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          var G__425641 = i + 2;
          i = G__425641;
          continue
        }else {
          return null
        }
      }
    }
    break
  }
};
cljs.core.array_map_index_of_symbol_QMARK_ = function array_map_index_of_symbol_QMARK_(arr, m, k) {
  var len = arr.length;
  var kstr = k.str;
  var i = 0;
  while(true) {
    if(len <= i) {
      return-1
    }else {
      if(function() {
        var k_SINGLEQUOTE_ = arr[i];
        return k_SINGLEQUOTE_ instanceof cljs.core.Symbol && kstr === k_SINGLEQUOTE_.str
      }()) {
        return i
      }else {
        if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          var G__425642 = i + 2;
          i = G__425642;
          continue
        }else {
          return null
        }
      }
    }
    break
  }
};
cljs.core.array_map_index_of_identical_QMARK_ = function array_map_index_of_identical_QMARK_(arr, m, k) {
  var len = arr.length;
  var i = 0;
  while(true) {
    if(len <= i) {
      return-1
    }else {
      if(k === arr[i]) {
        return i
      }else {
        if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          var G__425643 = i + 2;
          i = G__425643;
          continue
        }else {
          return null
        }
      }
    }
    break
  }
};
cljs.core.array_map_index_of_equiv_QMARK_ = function array_map_index_of_equiv_QMARK_(arr, m, k) {
  var len = arr.length;
  var i = 0;
  while(true) {
    if(len <= i) {
      return-1
    }else {
      if(cljs.core._EQ_.call(null, k, arr[i])) {
        return i
      }else {
        if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          var G__425644 = i + 2;
          i = G__425644;
          continue
        }else {
          return null
        }
      }
    }
    break
  }
};
cljs.core.array_map_index_of = function array_map_index_of(m, k) {
  var arr = m.arr;
  if(k instanceof cljs.core.Keyword) {
    return cljs.core.array_map_index_of_keyword_QMARK_.call(null, arr, m, k)
  }else {
    if(goog.isString(k) || typeof k === "number") {
      return cljs.core.array_map_index_of_identical_QMARK_.call(null, arr, m, k)
    }else {
      if(k instanceof cljs.core.Symbol) {
        return cljs.core.array_map_index_of_symbol_QMARK_.call(null, arr, m, k)
      }else {
        if(k == null) {
          return cljs.core.array_map_index_of_nil_QMARK_.call(null, arr, m, k)
        }else {
          if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
            return cljs.core.array_map_index_of_equiv_QMARK_.call(null, arr, m, k)
          }else {
            return null
          }
        }
      }
    }
  }
};
cljs.core.array_map_extend_kv = function array_map_extend_kv(m, k, v) {
  var arr = m.arr;
  var l = arr.length;
  var narr = new Array(l + 2);
  var i_425645 = 0;
  while(true) {
    if(i_425645 < l) {
      narr[i_425645] = arr[i_425645];
      var G__425646 = i_425645 + 1;
      i_425645 = G__425646;
      continue
    }else {
    }
    break
  }
  narr[l] = k;
  narr[l + 1] = v;
  return narr
};
cljs.core.PersistentArrayMapSeq = function(arr, i, _meta) {
  this.arr = arr;
  this.i = i;
  this._meta = _meta;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32374990
};
cljs.core.PersistentArrayMapSeq.cljs$lang$type = true;
cljs.core.PersistentArrayMapSeq.cljs$lang$ctorStr = "cljs.core/PersistentArrayMapSeq";
cljs.core.PersistentArrayMapSeq.cljs$lang$ctorPrWriter = function(this__3829__auto__, writer__3830__auto__, opt__3831__auto__) {
  return cljs.core._write.call(null, writer__3830__auto__, "cljs.core/PersistentArrayMapSeq")
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.hash_coll.call(null, coll__$1)
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if(self__.i < self__.arr.length - 2) {
    return new cljs.core.PersistentArrayMapSeq(self__.arr, self__.i + 2, self__._meta)
  }else {
    return null
  }
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons.call(null, o, coll__$1)
};
cljs.core.PersistentArrayMapSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll)
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, coll__$1)
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, start, coll__$1)
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return(self__.arr.length - self__.i) / 2
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.arr[self__.i], self__.arr[self__.i + 1]], null)
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if(self__.i < self__.arr.length - 2) {
    return new cljs.core.PersistentArrayMapSeq(self__.arr, self__.i + 2, self__._meta)
  }else {
    return cljs.core.List.EMPTY
  }
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other)
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, new_meta) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentArrayMapSeq(self__.arr, self__.i, new_meta)
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__._meta
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, self__._meta)
};
cljs.core.__GT_PersistentArrayMapSeq = function __GT_PersistentArrayMapSeq(arr, i, _meta) {
  return new cljs.core.PersistentArrayMapSeq(arr, i, _meta)
};
cljs.core.persistent_array_map_seq = function persistent_array_map_seq(arr, i, _meta) {
  if(i <= arr.length - 2) {
    return new cljs.core.PersistentArrayMapSeq(arr, i, _meta)
  }else {
    return null
  }
};
cljs.core.PersistentArrayMap = function(meta, cnt, arr, __hash) {
  this.meta = meta;
  this.cnt = cnt;
  this.arr = arr;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 4;
  this.cljs$lang$protocol_mask$partition0$ = 16123663
};
cljs.core.PersistentArrayMap.cljs$lang$type = true;
cljs.core.PersistentArrayMap.cljs$lang$ctorStr = "cljs.core/PersistentArrayMap";
cljs.core.PersistentArrayMap.cljs$lang$ctorPrWriter = function(this__3829__auto__, writer__3830__auto__, opt__3831__auto__) {
  return cljs.core._write.call(null, writer__3830__auto__, "cljs.core/PersistentArrayMap")
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.TransientArrayMap(function() {
    var obj425649 = {};
    return obj425649
  }(), self__.arr.length, cljs.core.aclone.call(null, self__.arr))
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__3696__auto__ = self__.__hash;
  if(!(h__3696__auto__ == null)) {
    return h__3696__auto__
  }else {
    var h__3696__auto____$1 = cljs.core.hash_imap.call(null, coll__$1);
    self__.__hash = h__3696__auto____$1;
    return h__3696__auto____$1
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._lookup.call(null, coll__$1, k, null)
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  var coll__$1 = this;
  var idx = cljs.core.array_map_index_of.call(null, coll__$1, k);
  if(idx === -1) {
    return not_found
  }else {
    return self__.arr[idx + 1]
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var self__ = this;
  var coll__$1 = this;
  var idx = cljs.core.array_map_index_of.call(null, coll__$1, k);
  if(idx === -1) {
    if(self__.cnt < cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD) {
      var arr__$1 = cljs.core.array_map_extend_kv.call(null, coll__$1, k, v);
      return new cljs.core.PersistentArrayMap(self__.meta, self__.cnt + 1, arr__$1, null)
    }else {
      return cljs.core._with_meta.call(null, cljs.core._assoc.call(null, cljs.core.into.call(null, cljs.core.PersistentHashMap.EMPTY, coll__$1), k, v), self__.meta)
    }
  }else {
    if(v === self__.arr[idx + 1]) {
      return coll__$1
    }else {
      if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        var arr__$1 = function() {
          var G__425650 = cljs.core.aclone.call(null, self__.arr);
          G__425650[idx + 1] = v;
          return G__425650
        }();
        return new cljs.core.PersistentArrayMap(self__.meta, self__.cnt, arr__$1, null)
      }else {
        return null
      }
    }
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return!(cljs.core.array_map_index_of.call(null, coll__$1, k) === -1)
};
cljs.core.PersistentArrayMap.prototype.call = function() {
  var G__425651 = null;
  var G__425651__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$2(null, k)
  };
  var G__425651__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found)
  };
  G__425651 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__425651__2.call(this, self__, k);
      case 3:
        return G__425651__3.call(this, self__, k, not_found)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  return G__425651
}();
cljs.core.PersistentArrayMap.prototype.apply = function(self__, args425647) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone.call(null, args425647)))
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$2(null, k)
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found)
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(coll, f, init) {
  var self__ = this;
  var coll__$1 = this;
  var len = self__.arr.length;
  var i = 0;
  var init__$1 = init;
  while(true) {
    if(i < len) {
      var init__$2 = f.call(null, init__$1, self__.arr[i], self__.arr[i + 1]);
      if(cljs.core.reduced_QMARK_.call(null, init__$2)) {
        return cljs.core.deref.call(null, init__$2)
      }else {
        var G__425652 = i + 2;
        var G__425653 = init__$2;
        i = G__425652;
        init__$1 = G__425653;
        continue
      }
    }else {
      return init__$1
    }
    break
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, entry) {
  var self__ = this;
  var coll__$1 = this;
  if(cljs.core.vector_QMARK_.call(null, entry)) {
    return cljs.core._assoc.call(null, coll__$1, cljs.core._nth.call(null, entry, 0), cljs.core._nth.call(null, entry, 1))
  }else {
    return cljs.core.reduce.call(null, cljs.core._conj, coll__$1, entry)
  }
};
cljs.core.PersistentArrayMap.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll)
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.persistent_array_map_seq.call(null, self__.arr, 0, null)
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.cnt
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_map.call(null, coll__$1, other)
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentArrayMap(meta__$1, self__.cnt, self__.arr, self__.__hash)
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._with_meta.call(null, cljs.core.PersistentArrayMap.EMPTY, self__.meta)
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IMap$_dissoc$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  var idx = cljs.core.array_map_index_of.call(null, coll__$1, k);
  if(idx >= 0) {
    var len = self__.arr.length;
    var new_len = len - 2;
    if(new_len === 0) {
      return cljs.core._empty.call(null, coll__$1)
    }else {
      var new_arr = new Array(new_len);
      var s = 0;
      var d = 0;
      while(true) {
        if(s >= len) {
          return new cljs.core.PersistentArrayMap(self__.meta, self__.cnt - 1, new_arr, null)
        }else {
          if(cljs.core._EQ_.call(null, k, self__.arr[s])) {
            var G__425654 = s + 2;
            var G__425655 = d;
            s = G__425654;
            d = G__425655;
            continue
          }else {
            if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
              new_arr[d] = self__.arr[s];
              new_arr[d + 1] = self__.arr[s + 1];
              var G__425656 = s + 2;
              var G__425657 = d + 2;
              s = G__425656;
              d = G__425657;
              continue
            }else {
              return null
            }
          }
        }
        break
      }
    }
  }else {
    return coll__$1
  }
};
cljs.core.__GT_PersistentArrayMap = function __GT_PersistentArrayMap(meta, cnt, arr, __hash) {
  return new cljs.core.PersistentArrayMap(meta, cnt, arr, __hash)
};
cljs.core.PersistentArrayMap.EMPTY = new cljs.core.PersistentArrayMap(null, 0, [], null);
cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD = 8;
cljs.core.PersistentArrayMap.fromArray = function(arr, no_clone, no_check) {
  var arr__$1 = no_clone ? arr : cljs.core.aclone.call(null, arr);
  if(no_check) {
    var cnt = arr__$1.length / 2;
    return new cljs.core.PersistentArrayMap(null, cnt, arr__$1, null)
  }else {
    var len = arr__$1.length;
    var i = 0;
    var ret = cljs.core.transient$.call(null, cljs.core.PersistentArrayMap.EMPTY);
    while(true) {
      if(i < len) {
        var G__425658 = i + 2;
        var G__425659 = cljs.core._assoc_BANG_.call(null, ret, arr__$1[i], arr__$1[i + 1]);
        i = G__425658;
        ret = G__425659;
        continue
      }else {
        return cljs.core._persistent_BANG_.call(null, ret)
      }
      break
    }
  }
};
cljs.core.TransientArrayMap = function(editable_QMARK_, len, arr) {
  this.editable_QMARK_ = editable_QMARK_;
  this.len = len;
  this.arr = arr;
  this.cljs$lang$protocol_mask$partition1$ = 56;
  this.cljs$lang$protocol_mask$partition0$ = 258
};
cljs.core.TransientArrayMap.cljs$lang$type = true;
cljs.core.TransientArrayMap.cljs$lang$ctorStr = "cljs.core/TransientArrayMap";
cljs.core.TransientArrayMap.cljs$lang$ctorPrWriter = function(this__3829__auto__, writer__3830__auto__, opt__3831__auto__) {
  return cljs.core._write.call(null, writer__3830__auto__, "cljs.core/TransientArrayMap")
};
cljs.core.TransientArrayMap.prototype.cljs$core$ITransientMap$_dissoc_BANG_$arity$2 = function(tcoll, key) {
  var self__ = this;
  var tcoll__$1 = this;
  if(cljs.core.truth_(self__.editable_QMARK_)) {
    var idx = cljs.core.array_map_index_of.call(null, tcoll__$1, key);
    if(idx >= 0) {
      self__.arr[idx] = self__.arr[self__.len - 2];
      self__.arr[idx + 1] = self__.arr[self__.len - 1];
      var G__425660_425662 = self__.arr;
      G__425660_425662.pop();
      G__425660_425662.pop();
      self__.len = self__.len - 2
    }else {
    }
    return tcoll__$1
  }else {
    throw new Error("dissoc! after persistent!");
  }
};
cljs.core.TransientArrayMap.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = function(tcoll, key, val) {
  var self__ = this;
  var tcoll__$1 = this;
  if(cljs.core.truth_(self__.editable_QMARK_)) {
    var idx = cljs.core.array_map_index_of.call(null, tcoll__$1, key);
    if(idx === -1) {
      if(self__.len + 2 <= 2 * cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD) {
        self__.len = self__.len + 2;
        self__.arr.push(key);
        self__.arr.push(val);
        return tcoll__$1
      }else {
        return cljs.core.assoc_BANG_.call(null, cljs.core.array__GT_transient_hash_map.call(null, self__.len, self__.arr), key, val)
      }
    }else {
      if(val === self__.arr[idx + 1]) {
        return tcoll__$1
      }else {
        self__.arr[idx + 1] = val;
        return tcoll__$1
      }
    }
  }else {
    throw new Error("assoc! after persistent!");
  }
};
cljs.core.TransientArrayMap.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = function(tcoll, o) {
  var self__ = this;
  var tcoll__$1 = this;
  if(cljs.core.truth_(self__.editable_QMARK_)) {
    if(function() {
      var G__425661 = o;
      if(G__425661) {
        var bit__3911__auto__ = G__425661.cljs$lang$protocol_mask$partition0$ & 2048;
        if(bit__3911__auto__ || G__425661.cljs$core$IMapEntry$) {
          return true
        }else {
          if(!G__425661.cljs$lang$protocol_mask$partition0$) {
            return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IMapEntry, G__425661)
          }else {
            return false
          }
        }
      }else {
        return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IMapEntry, G__425661)
      }
    }()) {
      return cljs.core._assoc_BANG_.call(null, tcoll__$1, cljs.core.key.call(null, o), cljs.core.val.call(null, o))
    }else {
      var es = cljs.core.seq.call(null, o);
      var tcoll__$2 = tcoll__$1;
      while(true) {
        var temp__4090__auto__ = cljs.core.first.call(null, es);
        if(cljs.core.truth_(temp__4090__auto__)) {
          var e = temp__4090__auto__;
          var G__425663 = cljs.core.next.call(null, es);
          var G__425664 = cljs.core._assoc_BANG_.call(null, tcoll__$2, cljs.core.key.call(null, e), cljs.core.val.call(null, e));
          es = G__425663;
          tcoll__$2 = G__425664;
          continue
        }else {
          return tcoll__$2
        }
        break
      }
    }
  }else {
    throw new Error("conj! after persistent!");
  }
};
cljs.core.TransientArrayMap.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = function(tcoll) {
  var self__ = this;
  var tcoll__$1 = this;
  if(cljs.core.truth_(self__.editable_QMARK_)) {
    self__.editable_QMARK_ = false;
    return new cljs.core.PersistentArrayMap(null, cljs.core.quot.call(null, self__.len, 2), self__.arr, null)
  }else {
    throw new Error("persistent! called twice");
  }
};
cljs.core.TransientArrayMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(tcoll, k) {
  var self__ = this;
  var tcoll__$1 = this;
  return cljs.core._lookup.call(null, tcoll__$1, k, null)
};
cljs.core.TransientArrayMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(tcoll, k, not_found) {
  var self__ = this;
  var tcoll__$1 = this;
  if(cljs.core.truth_(self__.editable_QMARK_)) {
    var idx = cljs.core.array_map_index_of.call(null, tcoll__$1, k);
    if(idx === -1) {
      return not_found
    }else {
      return self__.arr[idx + 1]
    }
  }else {
    throw new Error("lookup after persistent!");
  }
};
cljs.core.TransientArrayMap.prototype.cljs$core$ICounted$_count$arity$1 = function(tcoll) {
  var self__ = this;
  var tcoll__$1 = this;
  if(cljs.core.truth_(self__.editable_QMARK_)) {
    return cljs.core.quot.call(null, self__.len, 2)
  }else {
    throw new Error("count after persistent!");
  }
};
cljs.core.__GT_TransientArrayMap = function __GT_TransientArrayMap(editable_QMARK_, len, arr) {
  return new cljs.core.TransientArrayMap(editable_QMARK_, len, arr)
};
cljs.core.array__GT_transient_hash_map = function array__GT_transient_hash_map(len, arr) {
  var out = cljs.core.transient$.call(null, cljs.core.PersistentHashMap.EMPTY);
  var i = 0;
  while(true) {
    if(i < len) {
      var G__425665 = cljs.core.assoc_BANG_.call(null, out, arr[i], arr[i + 1]);
      var G__425666 = i + 2;
      out = G__425665;
      i = G__425666;
      continue
    }else {
      return out
    }
    break
  }
};
cljs.core.Box = function(val) {
  this.val = val
};
cljs.core.Box.cljs$lang$type = true;
cljs.core.Box.cljs$lang$ctorStr = "cljs.core/Box";
cljs.core.Box.cljs$lang$ctorPrWriter = function(this__3832__auto__, writer__3833__auto__, opts__3834__auto__) {
  return cljs.core._write.call(null, writer__3833__auto__, "cljs.core/Box")
};
cljs.core.__GT_Box = function __GT_Box(val) {
  return new cljs.core.Box(val)
};
cljs.core.key_test = function key_test(key, other) {
  if(key === other) {
    return true
  }else {
    if(cljs.core.keyword_identical_QMARK_.call(null, key, other)) {
      return true
    }else {
      if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        return cljs.core._EQ_.call(null, key, other)
      }else {
        return null
      }
    }
  }
};
cljs.core.mask = function mask(hash, shift) {
  return hash >>> shift & 31
};
cljs.core.clone_and_set = function() {
  var clone_and_set = null;
  var clone_and_set__3 = function(arr, i, a) {
    var G__425669 = cljs.core.aclone.call(null, arr);
    G__425669[i] = a;
    return G__425669
  };
  var clone_and_set__5 = function(arr, i, a, j, b) {
    var G__425670 = cljs.core.aclone.call(null, arr);
    G__425670[i] = a;
    G__425670[j] = b;
    return G__425670
  };
  clone_and_set = function(arr, i, a, j, b) {
    switch(arguments.length) {
      case 3:
        return clone_and_set__3.call(this, arr, i, a);
      case 5:
        return clone_and_set__5.call(this, arr, i, a, j, b)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  clone_and_set.cljs$core$IFn$_invoke$arity$3 = clone_and_set__3;
  clone_and_set.cljs$core$IFn$_invoke$arity$5 = clone_and_set__5;
  return clone_and_set
}();
cljs.core.remove_pair = function remove_pair(arr, i) {
  var new_arr = new Array(arr.length - 2);
  cljs.core.array_copy.call(null, arr, 0, new_arr, 0, 2 * i);
  cljs.core.array_copy.call(null, arr, 2 * (i + 1), new_arr, 2 * i, new_arr.length - 2 * i);
  return new_arr
};
cljs.core.bitmap_indexed_node_index = function bitmap_indexed_node_index(bitmap, bit) {
  return cljs.core.bit_count.call(null, bitmap & bit - 1)
};
cljs.core.bitpos = function bitpos(hash, shift) {
  return 1 << (hash >>> shift & 31)
};
cljs.core.edit_and_set = function() {
  var edit_and_set = null;
  var edit_and_set__4 = function(inode, edit, i, a) {
    var editable = inode.ensure_editable(edit);
    editable.arr[i] = a;
    return editable
  };
  var edit_and_set__6 = function(inode, edit, i, a, j, b) {
    var editable = inode.ensure_editable(edit);
    editable.arr[i] = a;
    editable.arr[j] = b;
    return editable
  };
  edit_and_set = function(inode, edit, i, a, j, b) {
    switch(arguments.length) {
      case 4:
        return edit_and_set__4.call(this, inode, edit, i, a);
      case 6:
        return edit_and_set__6.call(this, inode, edit, i, a, j, b)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  edit_and_set.cljs$core$IFn$_invoke$arity$4 = edit_and_set__4;
  edit_and_set.cljs$core$IFn$_invoke$arity$6 = edit_and_set__6;
  return edit_and_set
}();
cljs.core.inode_kv_reduce = function inode_kv_reduce(arr, f, init) {
  var len = arr.length;
  var i = 0;
  var init__$1 = init;
  while(true) {
    if(i < len) {
      var init__$2 = function() {
        var k = arr[i];
        if(!(k == null)) {
          return f.call(null, init__$1, k, arr[i + 1])
        }else {
          var node = arr[i + 1];
          if(!(node == null)) {
            return node.kv_reduce(f, init__$1)
          }else {
            return init__$1
          }
        }
      }();
      if(cljs.core.reduced_QMARK_.call(null, init__$2)) {
        return cljs.core.deref.call(null, init__$2)
      }else {
        var G__425671 = i + 2;
        var G__425672 = init__$2;
        i = G__425671;
        init__$1 = G__425672;
        continue
      }
    }else {
      return init__$1
    }
    break
  }
};
cljs.core.BitmapIndexedNode = function(edit, bitmap, arr) {
  this.edit = edit;
  this.bitmap = bitmap;
  this.arr = arr
};
cljs.core.BitmapIndexedNode.cljs$lang$type = true;
cljs.core.BitmapIndexedNode.cljs$lang$ctorStr = "cljs.core/BitmapIndexedNode";
cljs.core.BitmapIndexedNode.cljs$lang$ctorPrWriter = function(this__3829__auto__, writer__3830__auto__, opt__3831__auto__) {
  return cljs.core._write.call(null, writer__3830__auto__, "cljs.core/BitmapIndexedNode")
};
cljs.core.BitmapIndexedNode.prototype.edit_and_remove_pair = function(e, bit, i) {
  var self__ = this;
  var inode = this;
  if(self__.bitmap === bit) {
    return null
  }else {
    var editable = inode.ensure_editable(e);
    var earr = editable.arr;
    var len = earr.length;
    editable.bitmap = bit ^ editable.bitmap;
    cljs.core.array_copy.call(null, earr, 2 * (i + 1), earr, 2 * i, len - 2 * (i + 1));
    earr[len - 2] = null;
    earr[len - 1] = null;
    return editable
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_assoc_BANG_ = function(edit__$1, shift, hash, key, val, added_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var bit = 1 << (hash >>> shift & 31);
  var idx = cljs.core.bitmap_indexed_node_index.call(null, self__.bitmap, bit);
  if((self__.bitmap & bit) === 0) {
    var n = cljs.core.bit_count.call(null, self__.bitmap);
    if(2 * n < self__.arr.length) {
      var editable = inode.ensure_editable(edit__$1);
      var earr = editable.arr;
      added_leaf_QMARK_.val = true;
      cljs.core.array_copy_downward.call(null, earr, 2 * idx, earr, 2 * (idx + 1), 2 * (n - idx));
      earr[2 * idx] = key;
      earr[2 * idx + 1] = val;
      editable.bitmap = editable.bitmap | bit;
      return editable
    }else {
      if(n >= 16) {
        var nodes = new Array(32);
        var jdx = hash >>> shift & 31;
        nodes[jdx] = cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit__$1, shift + 5, hash, key, val, added_leaf_QMARK_);
        var i_425673 = 0;
        var j_425674 = 0;
        while(true) {
          if(i_425673 < 32) {
            if((self__.bitmap >>> i_425673 & 1) === 0) {
              var G__425675 = i_425673 + 1;
              var G__425676 = j_425674;
              i_425673 = G__425675;
              j_425674 = G__425676;
              continue
            }else {
              nodes[i_425673] = !(self__.arr[j_425674] == null) ? cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit__$1, shift + 5, cljs.core.hash.call(null, self__.arr[j_425674]), self__.arr[j_425674], self__.arr[j_425674 + 1], added_leaf_QMARK_) : self__.arr[j_425674 + 1];
              var G__425677 = i_425673 + 1;
              var G__425678 = j_425674 + 2;
              i_425673 = G__425677;
              j_425674 = G__425678;
              continue
            }
          }else {
          }
          break
        }
        return new cljs.core.ArrayNode(edit__$1, n + 1, nodes)
      }else {
        if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          var new_arr = new Array(2 * (n + 4));
          cljs.core.array_copy.call(null, self__.arr, 0, new_arr, 0, 2 * idx);
          new_arr[2 * idx] = key;
          new_arr[2 * idx + 1] = val;
          cljs.core.array_copy.call(null, self__.arr, 2 * idx, new_arr, 2 * (idx + 1), 2 * (n - idx));
          added_leaf_QMARK_.val = true;
          var editable = inode.ensure_editable(edit__$1);
          editable.arr = new_arr;
          editable.bitmap = editable.bitmap | bit;
          return editable
        }else {
          return null
        }
      }
    }
  }else {
    var key_or_nil = self__.arr[2 * idx];
    var val_or_node = self__.arr[2 * idx + 1];
    if(key_or_nil == null) {
      var n = val_or_node.inode_assoc_BANG_(edit__$1, shift + 5, hash, key, val, added_leaf_QMARK_);
      if(n === val_or_node) {
        return inode
      }else {
        return cljs.core.edit_and_set.call(null, inode, edit__$1, 2 * idx + 1, n)
      }
    }else {
      if(cljs.core.key_test.call(null, key, key_or_nil)) {
        if(val === val_or_node) {
          return inode
        }else {
          return cljs.core.edit_and_set.call(null, inode, edit__$1, 2 * idx + 1, val)
        }
      }else {
        if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          added_leaf_QMARK_.val = true;
          return cljs.core.edit_and_set.call(null, inode, edit__$1, 2 * idx, null, 2 * idx + 1, cljs.core.create_node.call(null, edit__$1, shift + 5, key_or_nil, val_or_node, hash, key, val))
        }else {
          return null
        }
      }
    }
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_seq = function() {
  var self__ = this;
  var inode = this;
  return cljs.core.create_inode_seq.call(null, self__.arr)
};
cljs.core.BitmapIndexedNode.prototype.inode_without_BANG_ = function(edit__$1, shift, hash, key, removed_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var bit = 1 << (hash >>> shift & 31);
  if((self__.bitmap & bit) === 0) {
    return inode
  }else {
    var idx = cljs.core.bitmap_indexed_node_index.call(null, self__.bitmap, bit);
    var key_or_nil = self__.arr[2 * idx];
    var val_or_node = self__.arr[2 * idx + 1];
    if(key_or_nil == null) {
      var n = val_or_node.inode_without_BANG_(edit__$1, shift + 5, hash, key, removed_leaf_QMARK_);
      if(n === val_or_node) {
        return inode
      }else {
        if(!(n == null)) {
          return cljs.core.edit_and_set.call(null, inode, edit__$1, 2 * idx + 1, n)
        }else {
          if(self__.bitmap === bit) {
            return null
          }else {
            if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
              return inode.edit_and_remove_pair(edit__$1, bit, idx)
            }else {
              return null
            }
          }
        }
      }
    }else {
      if(cljs.core.key_test.call(null, key, key_or_nil)) {
        removed_leaf_QMARK_[0] = true;
        return inode.edit_and_remove_pair(edit__$1, bit, idx)
      }else {
        if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          return inode
        }else {
          return null
        }
      }
    }
  }
};
cljs.core.BitmapIndexedNode.prototype.ensure_editable = function(e) {
  var self__ = this;
  var inode = this;
  if(e === self__.edit) {
    return inode
  }else {
    var n = cljs.core.bit_count.call(null, self__.bitmap);
    var new_arr = new Array(n < 0 ? 4 : 2 * (n + 1));
    cljs.core.array_copy.call(null, self__.arr, 0, new_arr, 0, 2 * n);
    return new cljs.core.BitmapIndexedNode(e, self__.bitmap, new_arr)
  }
};
cljs.core.BitmapIndexedNode.prototype.kv_reduce = function(f, init) {
  var self__ = this;
  var inode = this;
  return cljs.core.inode_kv_reduce.call(null, self__.arr, f, init)
};
cljs.core.BitmapIndexedNode.prototype.inode_find = function(shift, hash, key, not_found) {
  var self__ = this;
  var inode = this;
  var bit = 1 << (hash >>> shift & 31);
  if((self__.bitmap & bit) === 0) {
    return not_found
  }else {
    var idx = cljs.core.bitmap_indexed_node_index.call(null, self__.bitmap, bit);
    var key_or_nil = self__.arr[2 * idx];
    var val_or_node = self__.arr[2 * idx + 1];
    if(key_or_nil == null) {
      return val_or_node.inode_find(shift + 5, hash, key, not_found)
    }else {
      if(cljs.core.key_test.call(null, key, key_or_nil)) {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [key_or_nil, val_or_node], null)
      }else {
        if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          return not_found
        }else {
          return null
        }
      }
    }
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_without = function(shift, hash, key) {
  var self__ = this;
  var inode = this;
  var bit = 1 << (hash >>> shift & 31);
  if((self__.bitmap & bit) === 0) {
    return inode
  }else {
    var idx = cljs.core.bitmap_indexed_node_index.call(null, self__.bitmap, bit);
    var key_or_nil = self__.arr[2 * idx];
    var val_or_node = self__.arr[2 * idx + 1];
    if(key_or_nil == null) {
      var n = val_or_node.inode_without(shift + 5, hash, key);
      if(n === val_or_node) {
        return inode
      }else {
        if(!(n == null)) {
          return new cljs.core.BitmapIndexedNode(null, self__.bitmap, cljs.core.clone_and_set.call(null, self__.arr, 2 * idx + 1, n))
        }else {
          if(self__.bitmap === bit) {
            return null
          }else {
            if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
              return new cljs.core.BitmapIndexedNode(null, self__.bitmap ^ bit, cljs.core.remove_pair.call(null, self__.arr, idx))
            }else {
              return null
            }
          }
        }
      }
    }else {
      if(cljs.core.key_test.call(null, key, key_or_nil)) {
        return new cljs.core.BitmapIndexedNode(null, self__.bitmap ^ bit, cljs.core.remove_pair.call(null, self__.arr, idx))
      }else {
        if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          return inode
        }else {
          return null
        }
      }
    }
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_assoc = function(shift, hash, key, val, added_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var bit = 1 << (hash >>> shift & 31);
  var idx = cljs.core.bitmap_indexed_node_index.call(null, self__.bitmap, bit);
  if((self__.bitmap & bit) === 0) {
    var n = cljs.core.bit_count.call(null, self__.bitmap);
    if(n >= 16) {
      var nodes = new Array(32);
      var jdx = hash >>> shift & 31;
      nodes[jdx] = cljs.core.BitmapIndexedNode.EMPTY.inode_assoc(shift + 5, hash, key, val, added_leaf_QMARK_);
      var i_425679 = 0;
      var j_425680 = 0;
      while(true) {
        if(i_425679 < 32) {
          if((self__.bitmap >>> i_425679 & 1) === 0) {
            var G__425681 = i_425679 + 1;
            var G__425682 = j_425680;
            i_425679 = G__425681;
            j_425680 = G__425682;
            continue
          }else {
            nodes[i_425679] = !(self__.arr[j_425680] == null) ? cljs.core.BitmapIndexedNode.EMPTY.inode_assoc(shift + 5, cljs.core.hash.call(null, self__.arr[j_425680]), self__.arr[j_425680], self__.arr[j_425680 + 1], added_leaf_QMARK_) : self__.arr[j_425680 + 1];
            var G__425683 = i_425679 + 1;
            var G__425684 = j_425680 + 2;
            i_425679 = G__425683;
            j_425680 = G__425684;
            continue
          }
        }else {
        }
        break
      }
      return new cljs.core.ArrayNode(null, n + 1, nodes)
    }else {
      var new_arr = new Array(2 * (n + 1));
      cljs.core.array_copy.call(null, self__.arr, 0, new_arr, 0, 2 * idx);
      new_arr[2 * idx] = key;
      new_arr[2 * idx + 1] = val;
      cljs.core.array_copy.call(null, self__.arr, 2 * idx, new_arr, 2 * (idx + 1), 2 * (n - idx));
      added_leaf_QMARK_.val = true;
      return new cljs.core.BitmapIndexedNode(null, self__.bitmap | bit, new_arr)
    }
  }else {
    var key_or_nil = self__.arr[2 * idx];
    var val_or_node = self__.arr[2 * idx + 1];
    if(key_or_nil == null) {
      var n = val_or_node.inode_assoc(shift + 5, hash, key, val, added_leaf_QMARK_);
      if(n === val_or_node) {
        return inode
      }else {
        return new cljs.core.BitmapIndexedNode(null, self__.bitmap, cljs.core.clone_and_set.call(null, self__.arr, 2 * idx + 1, n))
      }
    }else {
      if(cljs.core.key_test.call(null, key, key_or_nil)) {
        if(val === val_or_node) {
          return inode
        }else {
          return new cljs.core.BitmapIndexedNode(null, self__.bitmap, cljs.core.clone_and_set.call(null, self__.arr, 2 * idx + 1, val))
        }
      }else {
        if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          added_leaf_QMARK_.val = true;
          return new cljs.core.BitmapIndexedNode(null, self__.bitmap, cljs.core.clone_and_set.call(null, self__.arr, 2 * idx, null, 2 * idx + 1, cljs.core.create_node.call(null, shift + 5, key_or_nil, val_or_node, hash, key, val)))
        }else {
          return null
        }
      }
    }
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_lookup = function(shift, hash, key, not_found) {
  var self__ = this;
  var inode = this;
  var bit = 1 << (hash >>> shift & 31);
  if((self__.bitmap & bit) === 0) {
    return not_found
  }else {
    var idx = cljs.core.bitmap_indexed_node_index.call(null, self__.bitmap, bit);
    var key_or_nil = self__.arr[2 * idx];
    var val_or_node = self__.arr[2 * idx + 1];
    if(key_or_nil == null) {
      return val_or_node.inode_lookup(shift + 5, hash, key, not_found)
    }else {
      if(cljs.core.key_test.call(null, key, key_or_nil)) {
        return val_or_node
      }else {
        if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          return not_found
        }else {
          return null
        }
      }
    }
  }
};
cljs.core.__GT_BitmapIndexedNode = function __GT_BitmapIndexedNode(edit, bitmap, arr) {
  return new cljs.core.BitmapIndexedNode(edit, bitmap, arr)
};
cljs.core.BitmapIndexedNode.EMPTY = new cljs.core.BitmapIndexedNode(null, 0, new Array(0));
cljs.core.pack_array_node = function pack_array_node(array_node, edit, idx) {
  var arr = array_node.arr;
  var len = 2 * (array_node.cnt - 1);
  var new_arr = new Array(len);
  var i = 0;
  var j = 1;
  var bitmap = 0;
  while(true) {
    if(i < len) {
      if(!(i === idx) && !(arr[i] == null)) {
        new_arr[j] = arr[i];
        var G__425685 = i + 1;
        var G__425686 = j + 2;
        var G__425687 = bitmap | 1 << i;
        i = G__425685;
        j = G__425686;
        bitmap = G__425687;
        continue
      }else {
        var G__425688 = i + 1;
        var G__425689 = j;
        var G__425690 = bitmap;
        i = G__425688;
        j = G__425689;
        bitmap = G__425690;
        continue
      }
    }else {
      return new cljs.core.BitmapIndexedNode(edit, bitmap, new_arr)
    }
    break
  }
};
cljs.core.ArrayNode = function(edit, cnt, arr) {
  this.edit = edit;
  this.cnt = cnt;
  this.arr = arr
};
cljs.core.ArrayNode.cljs$lang$type = true;
cljs.core.ArrayNode.cljs$lang$ctorStr = "cljs.core/ArrayNode";
cljs.core.ArrayNode.cljs$lang$ctorPrWriter = function(this__3829__auto__, writer__3830__auto__, opt__3831__auto__) {
  return cljs.core._write.call(null, writer__3830__auto__, "cljs.core/ArrayNode")
};
cljs.core.ArrayNode.prototype.inode_assoc_BANG_ = function(edit__$1, shift, hash, key, val, added_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var idx = hash >>> shift & 31;
  var node = self__.arr[idx];
  if(node == null) {
    var editable = cljs.core.edit_and_set.call(null, inode, edit__$1, idx, cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit__$1, shift + 5, hash, key, val, added_leaf_QMARK_));
    editable.cnt = editable.cnt + 1;
    return editable
  }else {
    var n = node.inode_assoc_BANG_(edit__$1, shift + 5, hash, key, val, added_leaf_QMARK_);
    if(n === node) {
      return inode
    }else {
      return cljs.core.edit_and_set.call(null, inode, edit__$1, idx, n)
    }
  }
};
cljs.core.ArrayNode.prototype.inode_seq = function() {
  var self__ = this;
  var inode = this;
  return cljs.core.create_array_node_seq.call(null, self__.arr)
};
cljs.core.ArrayNode.prototype.inode_without_BANG_ = function(edit__$1, shift, hash, key, removed_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var idx = hash >>> shift & 31;
  var node = self__.arr[idx];
  if(node == null) {
    return inode
  }else {
    var n = node.inode_without_BANG_(edit__$1, shift + 5, hash, key, removed_leaf_QMARK_);
    if(n === node) {
      return inode
    }else {
      if(n == null) {
        if(self__.cnt <= 8) {
          return cljs.core.pack_array_node.call(null, inode, edit__$1, idx)
        }else {
          var editable = cljs.core.edit_and_set.call(null, inode, edit__$1, idx, n);
          editable.cnt = editable.cnt - 1;
          return editable
        }
      }else {
        if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          return cljs.core.edit_and_set.call(null, inode, edit__$1, idx, n)
        }else {
          return null
        }
      }
    }
  }
};
cljs.core.ArrayNode.prototype.ensure_editable = function(e) {
  var self__ = this;
  var inode = this;
  if(e === self__.edit) {
    return inode
  }else {
    return new cljs.core.ArrayNode(e, self__.cnt, cljs.core.aclone.call(null, self__.arr))
  }
};
cljs.core.ArrayNode.prototype.kv_reduce = function(f, init) {
  var self__ = this;
  var inode = this;
  var len = self__.arr.length;
  var i = 0;
  var init__$1 = init;
  while(true) {
    if(i < len) {
      var node = self__.arr[i];
      if(!(node == null)) {
        var init__$2 = node.kv_reduce(f, init__$1);
        if(cljs.core.reduced_QMARK_.call(null, init__$2)) {
          return cljs.core.deref.call(null, init__$2)
        }else {
          var G__425691 = i + 1;
          var G__425692 = init__$2;
          i = G__425691;
          init__$1 = G__425692;
          continue
        }
      }else {
        var G__425693 = i + 1;
        var G__425694 = init__$1;
        i = G__425693;
        init__$1 = G__425694;
        continue
      }
    }else {
      return init__$1
    }
    break
  }
};
cljs.core.ArrayNode.prototype.inode_find = function(shift, hash, key, not_found) {
  var self__ = this;
  var inode = this;
  var idx = hash >>> shift & 31;
  var node = self__.arr[idx];
  if(!(node == null)) {
    return node.inode_find(shift + 5, hash, key, not_found)
  }else {
    return not_found
  }
};
cljs.core.ArrayNode.prototype.inode_without = function(shift, hash, key) {
  var self__ = this;
  var inode = this;
  var idx = hash >>> shift & 31;
  var node = self__.arr[idx];
  if(!(node == null)) {
    var n = node.inode_without(shift + 5, hash, key);
    if(n === node) {
      return inode
    }else {
      if(n == null) {
        if(self__.cnt <= 8) {
          return cljs.core.pack_array_node.call(null, inode, null, idx)
        }else {
          return new cljs.core.ArrayNode(null, self__.cnt - 1, cljs.core.clone_and_set.call(null, self__.arr, idx, n))
        }
      }else {
        if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          return new cljs.core.ArrayNode(null, self__.cnt, cljs.core.clone_and_set.call(null, self__.arr, idx, n))
        }else {
          return null
        }
      }
    }
  }else {
    return inode
  }
};
cljs.core.ArrayNode.prototype.inode_assoc = function(shift, hash, key, val, added_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var idx = hash >>> shift & 31;
  var node = self__.arr[idx];
  if(node == null) {
    return new cljs.core.ArrayNode(null, self__.cnt + 1, cljs.core.clone_and_set.call(null, self__.arr, idx, cljs.core.BitmapIndexedNode.EMPTY.inode_assoc(shift + 5, hash, key, val, added_leaf_QMARK_)))
  }else {
    var n = node.inode_assoc(shift + 5, hash, key, val, added_leaf_QMARK_);
    if(n === node) {
      return inode
    }else {
      return new cljs.core.ArrayNode(null, self__.cnt, cljs.core.clone_and_set.call(null, self__.arr, idx, n))
    }
  }
};
cljs.core.ArrayNode.prototype.inode_lookup = function(shift, hash, key, not_found) {
  var self__ = this;
  var inode = this;
  var idx = hash >>> shift & 31;
  var node = self__.arr[idx];
  if(!(node == null)) {
    return node.inode_lookup(shift + 5, hash, key, not_found)
  }else {
    return not_found
  }
};
cljs.core.__GT_ArrayNode = function __GT_ArrayNode(edit, cnt, arr) {
  return new cljs.core.ArrayNode(edit, cnt, arr)
};
cljs.core.hash_collision_node_find_index = function hash_collision_node_find_index(arr, cnt, key) {
  var lim = 2 * cnt;
  var i = 0;
  while(true) {
    if(i < lim) {
      if(cljs.core.key_test.call(null, key, arr[i])) {
        return i
      }else {
        var G__425695 = i + 2;
        i = G__425695;
        continue
      }
    }else {
      return-1
    }
    break
  }
};
cljs.core.HashCollisionNode = function(edit, collision_hash, cnt, arr) {
  this.edit = edit;
  this.collision_hash = collision_hash;
  this.cnt = cnt;
  this.arr = arr
};
cljs.core.HashCollisionNode.cljs$lang$type = true;
cljs.core.HashCollisionNode.cljs$lang$ctorStr = "cljs.core/HashCollisionNode";
cljs.core.HashCollisionNode.cljs$lang$ctorPrWriter = function(this__3829__auto__, writer__3830__auto__, opt__3831__auto__) {
  return cljs.core._write.call(null, writer__3830__auto__, "cljs.core/HashCollisionNode")
};
cljs.core.HashCollisionNode.prototype.inode_assoc_BANG_ = function(edit__$1, shift, hash, key, val, added_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  if(hash === self__.collision_hash) {
    var idx = cljs.core.hash_collision_node_find_index.call(null, self__.arr, self__.cnt, key);
    if(idx === -1) {
      if(self__.arr.length > 2 * self__.cnt) {
        var editable = cljs.core.edit_and_set.call(null, inode, edit__$1, 2 * self__.cnt, key, 2 * self__.cnt + 1, val);
        added_leaf_QMARK_.val = true;
        editable.cnt = editable.cnt + 1;
        return editable
      }else {
        var len = self__.arr.length;
        var new_arr = new Array(len + 2);
        cljs.core.array_copy.call(null, self__.arr, 0, new_arr, 0, len);
        new_arr[len] = key;
        new_arr[len + 1] = val;
        added_leaf_QMARK_.val = true;
        return inode.ensure_editable_array(edit__$1, self__.cnt + 1, new_arr)
      }
    }else {
      if(self__.arr[idx + 1] === val) {
        return inode
      }else {
        return cljs.core.edit_and_set.call(null, inode, edit__$1, idx + 1, val)
      }
    }
  }else {
    return(new cljs.core.BitmapIndexedNode(edit__$1, 1 << (self__.collision_hash >>> shift & 31), [null, inode, null, null])).inode_assoc_BANG_(edit__$1, shift, hash, key, val, added_leaf_QMARK_)
  }
};
cljs.core.HashCollisionNode.prototype.inode_seq = function() {
  var self__ = this;
  var inode = this;
  return cljs.core.create_inode_seq.call(null, self__.arr)
};
cljs.core.HashCollisionNode.prototype.inode_without_BANG_ = function(edit__$1, shift, hash, key, removed_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var idx = cljs.core.hash_collision_node_find_index.call(null, self__.arr, self__.cnt, key);
  if(idx === -1) {
    return inode
  }else {
    removed_leaf_QMARK_[0] = true;
    if(self__.cnt === 1) {
      return null
    }else {
      var editable = inode.ensure_editable(edit__$1);
      var earr = editable.arr;
      earr[idx] = earr[2 * self__.cnt - 2];
      earr[idx + 1] = earr[2 * self__.cnt - 1];
      earr[2 * self__.cnt - 1] = null;
      earr[2 * self__.cnt - 2] = null;
      editable.cnt = editable.cnt - 1;
      return editable
    }
  }
};
cljs.core.HashCollisionNode.prototype.ensure_editable = function(e) {
  var self__ = this;
  var inode = this;
  if(e === self__.edit) {
    return inode
  }else {
    var new_arr = new Array(2 * (self__.cnt + 1));
    cljs.core.array_copy.call(null, self__.arr, 0, new_arr, 0, 2 * self__.cnt);
    return new cljs.core.HashCollisionNode(e, self__.collision_hash, self__.cnt, new_arr)
  }
};
cljs.core.HashCollisionNode.prototype.kv_reduce = function(f, init) {
  var self__ = this;
  var inode = this;
  return cljs.core.inode_kv_reduce.call(null, self__.arr, f, init)
};
cljs.core.HashCollisionNode.prototype.inode_find = function(shift, hash, key, not_found) {
  var self__ = this;
  var inode = this;
  var idx = cljs.core.hash_collision_node_find_index.call(null, self__.arr, self__.cnt, key);
  if(idx < 0) {
    return not_found
  }else {
    if(cljs.core.key_test.call(null, key, self__.arr[idx])) {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.arr[idx], self__.arr[idx + 1]], null)
    }else {
      if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        return not_found
      }else {
        return null
      }
    }
  }
};
cljs.core.HashCollisionNode.prototype.inode_without = function(shift, hash, key) {
  var self__ = this;
  var inode = this;
  var idx = cljs.core.hash_collision_node_find_index.call(null, self__.arr, self__.cnt, key);
  if(idx === -1) {
    return inode
  }else {
    if(self__.cnt === 1) {
      return null
    }else {
      if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        return new cljs.core.HashCollisionNode(null, self__.collision_hash, self__.cnt - 1, cljs.core.remove_pair.call(null, self__.arr, cljs.core.quot.call(null, idx, 2)))
      }else {
        return null
      }
    }
  }
};
cljs.core.HashCollisionNode.prototype.inode_assoc = function(shift, hash, key, val, added_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  if(hash === self__.collision_hash) {
    var idx = cljs.core.hash_collision_node_find_index.call(null, self__.arr, self__.cnt, key);
    if(idx === -1) {
      var len = 2 * self__.cnt;
      var new_arr = new Array(len + 2);
      cljs.core.array_copy.call(null, self__.arr, 0, new_arr, 0, len);
      new_arr[len] = key;
      new_arr[len + 1] = val;
      added_leaf_QMARK_.val = true;
      return new cljs.core.HashCollisionNode(null, self__.collision_hash, self__.cnt + 1, new_arr)
    }else {
      if(cljs.core._EQ_.call(null, self__.arr[idx], val)) {
        return inode
      }else {
        return new cljs.core.HashCollisionNode(null, self__.collision_hash, self__.cnt, cljs.core.clone_and_set.call(null, self__.arr, idx + 1, val))
      }
    }
  }else {
    return(new cljs.core.BitmapIndexedNode(null, 1 << (self__.collision_hash >>> shift & 31), [null, inode])).inode_assoc(shift, hash, key, val, added_leaf_QMARK_)
  }
};
cljs.core.HashCollisionNode.prototype.inode_lookup = function(shift, hash, key, not_found) {
  var self__ = this;
  var inode = this;
  var idx = cljs.core.hash_collision_node_find_index.call(null, self__.arr, self__.cnt, key);
  if(idx < 0) {
    return not_found
  }else {
    if(cljs.core.key_test.call(null, key, self__.arr[idx])) {
      return self__.arr[idx + 1]
    }else {
      if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        return not_found
      }else {
        return null
      }
    }
  }
};
cljs.core.HashCollisionNode.prototype.ensure_editable_array = function(e, count, array) {
  var self__ = this;
  var inode = this;
  if(e === self__.edit) {
    self__.arr = array;
    self__.cnt = count;
    return inode
  }else {
    return new cljs.core.HashCollisionNode(self__.edit, self__.collision_hash, count, array)
  }
};
cljs.core.__GT_HashCollisionNode = function __GT_HashCollisionNode(edit, collision_hash, cnt, arr) {
  return new cljs.core.HashCollisionNode(edit, collision_hash, cnt, arr)
};
cljs.core.create_node = function() {
  var create_node = null;
  var create_node__6 = function(shift, key1, val1, key2hash, key2, val2) {
    var key1hash = cljs.core.hash.call(null, key1);
    if(key1hash === key2hash) {
      return new cljs.core.HashCollisionNode(null, key1hash, 2, [key1, val1, key2, val2])
    }else {
      var added_leaf_QMARK_ = new cljs.core.Box(false);
      return cljs.core.BitmapIndexedNode.EMPTY.inode_assoc(shift, key1hash, key1, val1, added_leaf_QMARK_).inode_assoc(shift, key2hash, key2, val2, added_leaf_QMARK_)
    }
  };
  var create_node__7 = function(edit, shift, key1, val1, key2hash, key2, val2) {
    var key1hash = cljs.core.hash.call(null, key1);
    if(key1hash === key2hash) {
      return new cljs.core.HashCollisionNode(null, key1hash, 2, [key1, val1, key2, val2])
    }else {
      var added_leaf_QMARK_ = new cljs.core.Box(false);
      return cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit, shift, key1hash, key1, val1, added_leaf_QMARK_).inode_assoc_BANG_(edit, shift, key2hash, key2, val2, added_leaf_QMARK_)
    }
  };
  create_node = function(edit, shift, key1, val1, key2hash, key2, val2) {
    switch(arguments.length) {
      case 6:
        return create_node__6.call(this, edit, shift, key1, val1, key2hash, key2);
      case 7:
        return create_node__7.call(this, edit, shift, key1, val1, key2hash, key2, val2)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  create_node.cljs$core$IFn$_invoke$arity$6 = create_node__6;
  create_node.cljs$core$IFn$_invoke$arity$7 = create_node__7;
  return create_node
}();
cljs.core.NodeSeq = function(meta, nodes, i, s, __hash) {
  this.meta = meta;
  this.nodes = nodes;
  this.i = i;
  this.s = s;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32374860
};
cljs.core.NodeSeq.cljs$lang$type = true;
cljs.core.NodeSeq.cljs$lang$ctorStr = "cljs.core/NodeSeq";
cljs.core.NodeSeq.cljs$lang$ctorPrWriter = function(this__3829__auto__, writer__3830__auto__, opt__3831__auto__) {
  return cljs.core._write.call(null, writer__3830__auto__, "cljs.core/NodeSeq")
};
cljs.core.NodeSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__3696__auto__ = self__.__hash;
  if(!(h__3696__auto__ == null)) {
    return h__3696__auto__
  }else {
    var h__3696__auto____$1 = cljs.core.hash_coll.call(null, coll__$1);
    self__.__hash = h__3696__auto____$1;
    return h__3696__auto____$1
  }
};
cljs.core.NodeSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons.call(null, o, coll__$1)
};
cljs.core.NodeSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll)
};
cljs.core.NodeSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, coll__$1)
};
cljs.core.NodeSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, start, coll__$1)
};
cljs.core.NodeSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return this$__$1
};
cljs.core.NodeSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if(self__.s == null) {
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.nodes[self__.i], self__.nodes[self__.i + 1]], null)
  }else {
    return cljs.core.first.call(null, self__.s)
  }
};
cljs.core.NodeSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if(self__.s == null) {
    return cljs.core.create_inode_seq.call(null, self__.nodes, self__.i + 2, null)
  }else {
    return cljs.core.create_inode_seq.call(null, self__.nodes, self__.i, cljs.core.next.call(null, self__.s))
  }
};
cljs.core.NodeSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other)
};
cljs.core.NodeSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.NodeSeq(meta__$1, self__.nodes, self__.i, self__.s, self__.__hash)
};
cljs.core.NodeSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta
};
cljs.core.NodeSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, self__.meta)
};
cljs.core.__GT_NodeSeq = function __GT_NodeSeq(meta, nodes, i, s, __hash) {
  return new cljs.core.NodeSeq(meta, nodes, i, s, __hash)
};
cljs.core.create_inode_seq = function() {
  var create_inode_seq = null;
  var create_inode_seq__1 = function(nodes) {
    return create_inode_seq.call(null, nodes, 0, null)
  };
  var create_inode_seq__3 = function(nodes, i, s) {
    if(s == null) {
      var len = nodes.length;
      var j = i;
      while(true) {
        if(j < len) {
          if(!(nodes[j] == null)) {
            return new cljs.core.NodeSeq(null, nodes, j, null, null)
          }else {
            var temp__4090__auto__ = nodes[j + 1];
            if(cljs.core.truth_(temp__4090__auto__)) {
              var node = temp__4090__auto__;
              var temp__4090__auto____$1 = node.inode_seq();
              if(cljs.core.truth_(temp__4090__auto____$1)) {
                var node_seq = temp__4090__auto____$1;
                return new cljs.core.NodeSeq(null, nodes, j + 2, node_seq, null)
              }else {
                var G__425696 = j + 2;
                j = G__425696;
                continue
              }
            }else {
              var G__425697 = j + 2;
              j = G__425697;
              continue
            }
          }
        }else {
          return null
        }
        break
      }
    }else {
      return new cljs.core.NodeSeq(null, nodes, i, s, null)
    }
  };
  create_inode_seq = function(nodes, i, s) {
    switch(arguments.length) {
      case 1:
        return create_inode_seq__1.call(this, nodes);
      case 3:
        return create_inode_seq__3.call(this, nodes, i, s)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  create_inode_seq.cljs$core$IFn$_invoke$arity$1 = create_inode_seq__1;
  create_inode_seq.cljs$core$IFn$_invoke$arity$3 = create_inode_seq__3;
  return create_inode_seq
}();
cljs.core.ArrayNodeSeq = function(meta, nodes, i, s, __hash) {
  this.meta = meta;
  this.nodes = nodes;
  this.i = i;
  this.s = s;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32374860
};
cljs.core.ArrayNodeSeq.cljs$lang$type = true;
cljs.core.ArrayNodeSeq.cljs$lang$ctorStr = "cljs.core/ArrayNodeSeq";
cljs.core.ArrayNodeSeq.cljs$lang$ctorPrWriter = function(this__3829__auto__, writer__3830__auto__, opt__3831__auto__) {
  return cljs.core._write.call(null, writer__3830__auto__, "cljs.core/ArrayNodeSeq")
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__3696__auto__ = self__.__hash;
  if(!(h__3696__auto__ == null)) {
    return h__3696__auto__
  }else {
    var h__3696__auto____$1 = cljs.core.hash_coll.call(null, coll__$1);
    self__.__hash = h__3696__auto____$1;
    return h__3696__auto____$1
  }
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons.call(null, o, coll__$1)
};
cljs.core.ArrayNodeSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll)
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, coll__$1)
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, start, coll__$1)
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return this$__$1
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.first.call(null, self__.s)
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.create_array_node_seq.call(null, null, self__.nodes, self__.i, cljs.core.next.call(null, self__.s))
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other)
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.ArrayNodeSeq(meta__$1, self__.nodes, self__.i, self__.s, self__.__hash)
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, self__.meta)
};
cljs.core.__GT_ArrayNodeSeq = function __GT_ArrayNodeSeq(meta, nodes, i, s, __hash) {
  return new cljs.core.ArrayNodeSeq(meta, nodes, i, s, __hash)
};
cljs.core.create_array_node_seq = function() {
  var create_array_node_seq = null;
  var create_array_node_seq__1 = function(nodes) {
    return create_array_node_seq.call(null, null, nodes, 0, null)
  };
  var create_array_node_seq__4 = function(meta, nodes, i, s) {
    if(s == null) {
      var len = nodes.length;
      var j = i;
      while(true) {
        if(j < len) {
          var temp__4090__auto__ = nodes[j];
          if(cljs.core.truth_(temp__4090__auto__)) {
            var nj = temp__4090__auto__;
            var temp__4090__auto____$1 = nj.inode_seq();
            if(cljs.core.truth_(temp__4090__auto____$1)) {
              var ns = temp__4090__auto____$1;
              return new cljs.core.ArrayNodeSeq(meta, nodes, j + 1, ns, null)
            }else {
              var G__425698 = j + 1;
              j = G__425698;
              continue
            }
          }else {
            var G__425699 = j + 1;
            j = G__425699;
            continue
          }
        }else {
          return null
        }
        break
      }
    }else {
      return new cljs.core.ArrayNodeSeq(meta, nodes, i, s, null)
    }
  };
  create_array_node_seq = function(meta, nodes, i, s) {
    switch(arguments.length) {
      case 1:
        return create_array_node_seq__1.call(this, meta);
      case 4:
        return create_array_node_seq__4.call(this, meta, nodes, i, s)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  create_array_node_seq.cljs$core$IFn$_invoke$arity$1 = create_array_node_seq__1;
  create_array_node_seq.cljs$core$IFn$_invoke$arity$4 = create_array_node_seq__4;
  return create_array_node_seq
}();
cljs.core.PersistentHashMap = function(meta, cnt, root, has_nil_QMARK_, nil_val, __hash) {
  this.meta = meta;
  this.cnt = cnt;
  this.root = root;
  this.has_nil_QMARK_ = has_nil_QMARK_;
  this.nil_val = nil_val;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 4;
  this.cljs$lang$protocol_mask$partition0$ = 16123663
};
cljs.core.PersistentHashMap.cljs$lang$type = true;
cljs.core.PersistentHashMap.cljs$lang$ctorStr = "cljs.core/PersistentHashMap";
cljs.core.PersistentHashMap.cljs$lang$ctorPrWriter = function(this__3829__auto__, writer__3830__auto__, opt__3831__auto__) {
  return cljs.core._write.call(null, writer__3830__auto__, "cljs.core/PersistentHashMap")
};
cljs.core.PersistentHashMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.TransientHashMap(function() {
    var obj425702 = {};
    return obj425702
  }(), self__.root, self__.cnt, self__.has_nil_QMARK_, self__.nil_val)
};
cljs.core.PersistentHashMap.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__3696__auto__ = self__.__hash;
  if(!(h__3696__auto__ == null)) {
    return h__3696__auto__
  }else {
    var h__3696__auto____$1 = cljs.core.hash_imap.call(null, coll__$1);
    self__.__hash = h__3696__auto____$1;
    return h__3696__auto____$1
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._lookup.call(null, coll__$1, k, null)
};
cljs.core.PersistentHashMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if(k == null) {
    if(self__.has_nil_QMARK_) {
      return self__.nil_val
    }else {
      return not_found
    }
  }else {
    if(self__.root == null) {
      return not_found
    }else {
      if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        return self__.root.inode_lookup(0, cljs.core.hash.call(null, k), k, not_found)
      }else {
        return null
      }
    }
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var self__ = this;
  var coll__$1 = this;
  if(k == null) {
    if(self__.has_nil_QMARK_ && v === self__.nil_val) {
      return coll__$1
    }else {
      return new cljs.core.PersistentHashMap(self__.meta, self__.has_nil_QMARK_ ? self__.cnt : self__.cnt + 1, self__.root, true, v, null)
    }
  }else {
    var added_leaf_QMARK_ = new cljs.core.Box(false);
    var new_root = (self__.root == null ? cljs.core.BitmapIndexedNode.EMPTY : self__.root).inode_assoc(0, cljs.core.hash.call(null, k), k, v, added_leaf_QMARK_);
    if(new_root === self__.root) {
      return coll__$1
    }else {
      return new cljs.core.PersistentHashMap(self__.meta, added_leaf_QMARK_.val ? self__.cnt + 1 : self__.cnt, new_root, self__.has_nil_QMARK_, self__.nil_val, null)
    }
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  if(k == null) {
    return self__.has_nil_QMARK_
  }else {
    if(self__.root == null) {
      return false
    }else {
      if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        return!(self__.root.inode_lookup(0, cljs.core.hash.call(null, k), k, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)
      }else {
        return null
      }
    }
  }
};
cljs.core.PersistentHashMap.prototype.call = function() {
  var G__425703 = null;
  var G__425703__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$2(null, k)
  };
  var G__425703__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found)
  };
  G__425703 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__425703__2.call(this, self__, k);
      case 3:
        return G__425703__3.call(this, self__, k, not_found)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  return G__425703
}();
cljs.core.PersistentHashMap.prototype.apply = function(self__, args425700) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone.call(null, args425700)))
};
cljs.core.PersistentHashMap.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$2(null, k)
};
cljs.core.PersistentHashMap.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found)
};
cljs.core.PersistentHashMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(coll, f, init) {
  var self__ = this;
  var coll__$1 = this;
  var init__$1 = self__.has_nil_QMARK_ ? f.call(null, init, null, self__.nil_val) : init;
  if(cljs.core.reduced_QMARK_.call(null, init__$1)) {
    return cljs.core.deref.call(null, init__$1)
  }else {
    if(!(self__.root == null)) {
      return self__.root.kv_reduce(f, init__$1)
    }else {
      if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        return init__$1
      }else {
        return null
      }
    }
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, entry) {
  var self__ = this;
  var coll__$1 = this;
  if(cljs.core.vector_QMARK_.call(null, entry)) {
    return cljs.core._assoc.call(null, coll__$1, cljs.core._nth.call(null, entry, 0), cljs.core._nth.call(null, entry, 1))
  }else {
    return cljs.core.reduce.call(null, cljs.core._conj, coll__$1, entry)
  }
};
cljs.core.PersistentHashMap.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll)
};
cljs.core.PersistentHashMap.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if(self__.cnt > 0) {
    var s = !(self__.root == null) ? self__.root.inode_seq() : null;
    if(self__.has_nil_QMARK_) {
      return cljs.core.cons.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, self__.nil_val], null), s)
    }else {
      return s
    }
  }else {
    return null
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.cnt
};
cljs.core.PersistentHashMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_map.call(null, coll__$1, other)
};
cljs.core.PersistentHashMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentHashMap(meta__$1, self__.cnt, self__.root, self__.has_nil_QMARK_, self__.nil_val, self__.__hash)
};
cljs.core.PersistentHashMap.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta
};
cljs.core.PersistentHashMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._with_meta.call(null, cljs.core.PersistentHashMap.EMPTY, self__.meta)
};
cljs.core.PersistentHashMap.prototype.cljs$core$IMap$_dissoc$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  if(k == null) {
    if(self__.has_nil_QMARK_) {
      return new cljs.core.PersistentHashMap(self__.meta, self__.cnt - 1, self__.root, false, null, null)
    }else {
      return coll__$1
    }
  }else {
    if(self__.root == null) {
      return coll__$1
    }else {
      if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        var new_root = self__.root.inode_without(0, cljs.core.hash.call(null, k), k);
        if(new_root === self__.root) {
          return coll__$1
        }else {
          return new cljs.core.PersistentHashMap(self__.meta, self__.cnt - 1, new_root, self__.has_nil_QMARK_, self__.nil_val, null)
        }
      }else {
        return null
      }
    }
  }
};
cljs.core.__GT_PersistentHashMap = function __GT_PersistentHashMap(meta, cnt, root, has_nil_QMARK_, nil_val, __hash) {
  return new cljs.core.PersistentHashMap(meta, cnt, root, has_nil_QMARK_, nil_val, __hash)
};
cljs.core.PersistentHashMap.EMPTY = new cljs.core.PersistentHashMap(null, 0, null, false, null, 0);
cljs.core.PersistentHashMap.fromArrays = function(ks, vs) {
  var len = ks.length;
  var i = 0;
  var out = cljs.core.transient$.call(null, cljs.core.PersistentHashMap.EMPTY);
  while(true) {
    if(i < len) {
      var G__425704 = i + 1;
      var G__425705 = cljs.core._assoc_BANG_.call(null, out, ks[i], vs[i]);
      i = G__425704;
      out = G__425705;
      continue
    }else {
      return cljs.core.persistent_BANG_.call(null, out)
    }
    break
  }
};
cljs.core.TransientHashMap = function(edit, root, count, has_nil_QMARK_, nil_val) {
  this.edit = edit;
  this.root = root;
  this.count = count;
  this.has_nil_QMARK_ = has_nil_QMARK_;
  this.nil_val = nil_val;
  this.cljs$lang$protocol_mask$partition1$ = 56;
  this.cljs$lang$protocol_mask$partition0$ = 258
};
cljs.core.TransientHashMap.cljs$lang$type = true;
cljs.core.TransientHashMap.cljs$lang$ctorStr = "cljs.core/TransientHashMap";
cljs.core.TransientHashMap.cljs$lang$ctorPrWriter = function(this__3829__auto__, writer__3830__auto__, opt__3831__auto__) {
  return cljs.core._write.call(null, writer__3830__auto__, "cljs.core/TransientHashMap")
};
cljs.core.TransientHashMap.prototype.cljs$core$ITransientMap$_dissoc_BANG_$arity$2 = function(tcoll, key) {
  var self__ = this;
  var tcoll__$1 = this;
  return tcoll__$1.without_BANG_(key)
};
cljs.core.TransientHashMap.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = function(tcoll, key, val) {
  var self__ = this;
  var tcoll__$1 = this;
  return tcoll__$1.assoc_BANG_(key, val)
};
cljs.core.TransientHashMap.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = function(tcoll, val) {
  var self__ = this;
  var tcoll__$1 = this;
  return tcoll__$1.conj_BANG_(val)
};
cljs.core.TransientHashMap.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = function(tcoll) {
  var self__ = this;
  var tcoll__$1 = this;
  return tcoll__$1.persistent_BANG_()
};
cljs.core.TransientHashMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(tcoll, k) {
  var self__ = this;
  var tcoll__$1 = this;
  if(k == null) {
    if(self__.has_nil_QMARK_) {
      return self__.nil_val
    }else {
      return null
    }
  }else {
    if(self__.root == null) {
      return null
    }else {
      return self__.root.inode_lookup(0, cljs.core.hash.call(null, k), k)
    }
  }
};
cljs.core.TransientHashMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(tcoll, k, not_found) {
  var self__ = this;
  var tcoll__$1 = this;
  if(k == null) {
    if(self__.has_nil_QMARK_) {
      return self__.nil_val
    }else {
      return not_found
    }
  }else {
    if(self__.root == null) {
      return not_found
    }else {
      return self__.root.inode_lookup(0, cljs.core.hash.call(null, k), k, not_found)
    }
  }
};
cljs.core.TransientHashMap.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if(self__.edit) {
    return self__.count
  }else {
    throw new Error("count after persistent!");
  }
};
cljs.core.TransientHashMap.prototype.conj_BANG_ = function(o) {
  var self__ = this;
  var tcoll = this;
  if(self__.edit) {
    if(function() {
      var G__425706 = o;
      if(G__425706) {
        var bit__3911__auto__ = G__425706.cljs$lang$protocol_mask$partition0$ & 2048;
        if(bit__3911__auto__ || G__425706.cljs$core$IMapEntry$) {
          return true
        }else {
          if(!G__425706.cljs$lang$protocol_mask$partition0$) {
            return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IMapEntry, G__425706)
          }else {
            return false
          }
        }
      }else {
        return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IMapEntry, G__425706)
      }
    }()) {
      return tcoll.assoc_BANG_(cljs.core.key.call(null, o), cljs.core.val.call(null, o))
    }else {
      var es = cljs.core.seq.call(null, o);
      var tcoll__$1 = tcoll;
      while(true) {
        var temp__4090__auto__ = cljs.core.first.call(null, es);
        if(cljs.core.truth_(temp__4090__auto__)) {
          var e = temp__4090__auto__;
          var G__425707 = cljs.core.next.call(null, es);
          var G__425708 = tcoll__$1.assoc_BANG_(cljs.core.key.call(null, e), cljs.core.val.call(null, e));
          es = G__425707;
          tcoll__$1 = G__425708;
          continue
        }else {
          return tcoll__$1
        }
        break
      }
    }
  }else {
    throw new Error("conj! after persistent");
  }
};
cljs.core.TransientHashMap.prototype.assoc_BANG_ = function(k, v) {
  var self__ = this;
  var tcoll = this;
  if(self__.edit) {
    if(k == null) {
      if(self__.nil_val === v) {
      }else {
        self__.nil_val = v
      }
      if(self__.has_nil_QMARK_) {
      }else {
        self__.count = self__.count + 1;
        self__.has_nil_QMARK_ = true
      }
      return tcoll
    }else {
      var added_leaf_QMARK_ = new cljs.core.Box(false);
      var node = (self__.root == null ? cljs.core.BitmapIndexedNode.EMPTY : self__.root).inode_assoc_BANG_(self__.edit, 0, cljs.core.hash.call(null, k), k, v, added_leaf_QMARK_);
      if(node === self__.root) {
      }else {
        self__.root = node
      }
      if(added_leaf_QMARK_.val) {
        self__.count = self__.count + 1
      }else {
      }
      return tcoll
    }
  }else {
    throw new Error("assoc! after persistent!");
  }
};
cljs.core.TransientHashMap.prototype.without_BANG_ = function(k) {
  var self__ = this;
  var tcoll = this;
  if(self__.edit) {
    if(k == null) {
      if(self__.has_nil_QMARK_) {
        self__.has_nil_QMARK_ = false;
        self__.nil_val = null;
        self__.count = self__.count - 1;
        return tcoll
      }else {
        return tcoll
      }
    }else {
      if(self__.root == null) {
        return tcoll
      }else {
        var removed_leaf_QMARK_ = new cljs.core.Box(false);
        var node = self__.root.inode_without_BANG_(self__.edit, 0, cljs.core.hash.call(null, k), k, removed_leaf_QMARK_);
        if(node === self__.root) {
        }else {
          self__.root = node
        }
        if(cljs.core.truth_(removed_leaf_QMARK_[0])) {
          self__.count = self__.count - 1
        }else {
        }
        return tcoll
      }
    }
  }else {
    throw new Error("dissoc! after persistent!");
  }
};
cljs.core.TransientHashMap.prototype.persistent_BANG_ = function() {
  var self__ = this;
  var tcoll = this;
  if(self__.edit) {
    self__.edit = null;
    return new cljs.core.PersistentHashMap(null, self__.count, self__.root, self__.has_nil_QMARK_, self__.nil_val, null)
  }else {
    throw new Error("persistent! called twice");
  }
};
cljs.core.__GT_TransientHashMap = function __GT_TransientHashMap(edit, root, count, has_nil_QMARK_, nil_val) {
  return new cljs.core.TransientHashMap(edit, root, count, has_nil_QMARK_, nil_val)
};
cljs.core.tree_map_seq_push = function tree_map_seq_push(node, stack, ascending_QMARK_) {
  var t = node;
  var stack__$1 = stack;
  while(true) {
    if(!(t == null)) {
      var G__425709 = ascending_QMARK_ ? t.left : t.right;
      var G__425710 = cljs.core.conj.call(null, stack__$1, t);
      t = G__425709;
      stack__$1 = G__425710;
      continue
    }else {
      return stack__$1
    }
    break
  }
};
cljs.core.PersistentTreeMapSeq = function(meta, stack, ascending_QMARK_, cnt, __hash) {
  this.meta = meta;
  this.stack = stack;
  this.ascending_QMARK_ = ascending_QMARK_;
  this.cnt = cnt;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32374862
};
cljs.core.PersistentTreeMapSeq.cljs$lang$type = true;
cljs.core.PersistentTreeMapSeq.cljs$lang$ctorStr = "cljs.core/PersistentTreeMapSeq";
cljs.core.PersistentTreeMapSeq.cljs$lang$ctorPrWriter = function(this__3829__auto__, writer__3830__auto__, opt__3831__auto__) {
  return cljs.core._write.call(null, writer__3830__auto__, "cljs.core/PersistentTreeMapSeq")
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__3696__auto__ = self__.__hash;
  if(!(h__3696__auto__ == null)) {
    return h__3696__auto__
  }else {
    var h__3696__auto____$1 = cljs.core.hash_coll.call(null, coll__$1);
    self__.__hash = h__3696__auto____$1;
    return h__3696__auto____$1
  }
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons.call(null, o, coll__$1)
};
cljs.core.PersistentTreeMapSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll)
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, coll__$1)
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, start, coll__$1)
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return this$__$1
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if(self__.cnt < 0) {
    return cljs.core.count.call(null, cljs.core.next.call(null, coll__$1)) + 1
  }else {
    return self__.cnt
  }
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core.peek.call(null, self__.stack)
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  var t = cljs.core.first.call(null, self__.stack);
  var next_stack = cljs.core.tree_map_seq_push.call(null, self__.ascending_QMARK_ ? t.right : t.left, cljs.core.next.call(null, self__.stack), self__.ascending_QMARK_);
  if(!(next_stack == null)) {
    return new cljs.core.PersistentTreeMapSeq(null, next_stack, self__.ascending_QMARK_, self__.cnt - 1, null)
  }else {
    return cljs.core.List.EMPTY
  }
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other)
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentTreeMapSeq(meta__$1, self__.stack, self__.ascending_QMARK_, self__.cnt, self__.__hash)
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, self__.meta)
};
cljs.core.__GT_PersistentTreeMapSeq = function __GT_PersistentTreeMapSeq(meta, stack, ascending_QMARK_, cnt, __hash) {
  return new cljs.core.PersistentTreeMapSeq(meta, stack, ascending_QMARK_, cnt, __hash)
};
cljs.core.create_tree_map_seq = function create_tree_map_seq(tree, ascending_QMARK_, cnt) {
  return new cljs.core.PersistentTreeMapSeq(null, cljs.core.tree_map_seq_push.call(null, tree, null, ascending_QMARK_), ascending_QMARK_, cnt, null)
};
cljs.core.balance_left = function balance_left(key, val, ins, right) {
  if(ins instanceof cljs.core.RedNode) {
    if(ins.left instanceof cljs.core.RedNode) {
      return new cljs.core.RedNode(ins.key, ins.val, ins.left.blacken(), new cljs.core.BlackNode(key, val, ins.right, right, null), null)
    }else {
      if(ins.right instanceof cljs.core.RedNode) {
        return new cljs.core.RedNode(ins.right.key, ins.right.val, new cljs.core.BlackNode(ins.key, ins.val, ins.left, ins.right.left, null), new cljs.core.BlackNode(key, val, ins.right.right, right, null), null)
      }else {
        if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          return new cljs.core.BlackNode(key, val, ins, right, null)
        }else {
          return null
        }
      }
    }
  }else {
    return new cljs.core.BlackNode(key, val, ins, right, null)
  }
};
cljs.core.balance_right = function balance_right(key, val, left, ins) {
  if(ins instanceof cljs.core.RedNode) {
    if(ins.right instanceof cljs.core.RedNode) {
      return new cljs.core.RedNode(ins.key, ins.val, new cljs.core.BlackNode(key, val, left, ins.left, null), ins.right.blacken(), null)
    }else {
      if(ins.left instanceof cljs.core.RedNode) {
        return new cljs.core.RedNode(ins.left.key, ins.left.val, new cljs.core.BlackNode(key, val, left, ins.left.left, null), new cljs.core.BlackNode(ins.key, ins.val, ins.left.right, ins.right, null), null)
      }else {
        if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          return new cljs.core.BlackNode(key, val, left, ins, null)
        }else {
          return null
        }
      }
    }
  }else {
    return new cljs.core.BlackNode(key, val, left, ins, null)
  }
};
cljs.core.balance_left_del = function balance_left_del(key, val, del, right) {
  if(del instanceof cljs.core.RedNode) {
    return new cljs.core.RedNode(key, val, del.blacken(), right, null)
  }else {
    if(right instanceof cljs.core.BlackNode) {
      return cljs.core.balance_right.call(null, key, val, del, right.redden())
    }else {
      if(right instanceof cljs.core.RedNode && right.left instanceof cljs.core.BlackNode) {
        return new cljs.core.RedNode(right.left.key, right.left.val, new cljs.core.BlackNode(key, val, del, right.left.left, null), cljs.core.balance_right.call(null, right.key, right.val, right.left.right, right.right.redden()), null)
      }else {
        if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          throw new Error("red-black tree invariant violation");
        }else {
          return null
        }
      }
    }
  }
};
cljs.core.balance_right_del = function balance_right_del(key, val, left, del) {
  if(del instanceof cljs.core.RedNode) {
    return new cljs.core.RedNode(key, val, left, del.blacken(), null)
  }else {
    if(left instanceof cljs.core.BlackNode) {
      return cljs.core.balance_left.call(null, key, val, left.redden(), del)
    }else {
      if(left instanceof cljs.core.RedNode && left.right instanceof cljs.core.BlackNode) {
        return new cljs.core.RedNode(left.right.key, left.right.val, cljs.core.balance_left.call(null, left.key, left.val, left.left.redden(), left.right.left), new cljs.core.BlackNode(key, val, left.right.right, del, null), null)
      }else {
        if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          throw new Error("red-black tree invariant violation");
        }else {
          return null
        }
      }
    }
  }
};
cljs.core.tree_map_kv_reduce = function tree_map_kv_reduce(node, f, init) {
  var init__$1 = !(node.left == null) ? tree_map_kv_reduce.call(null, node.left, f, init) : init;
  if(cljs.core.reduced_QMARK_.call(null, init__$1)) {
    return cljs.core.deref.call(null, init__$1)
  }else {
    var init__$2 = f.call(null, init__$1, node.key, node.val);
    if(cljs.core.reduced_QMARK_.call(null, init__$2)) {
      return cljs.core.deref.call(null, init__$2)
    }else {
      var init__$3 = !(node.right == null) ? tree_map_kv_reduce.call(null, node.right, f, init__$2) : init__$2;
      if(cljs.core.reduced_QMARK_.call(null, init__$3)) {
        return cljs.core.deref.call(null, init__$3)
      }else {
        return init__$3
      }
    }
  }
};
cljs.core.BlackNode = function(key, val, left, right, __hash) {
  this.key = key;
  this.val = val;
  this.left = left;
  this.right = right;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32402207
};
cljs.core.BlackNode.cljs$lang$type = true;
cljs.core.BlackNode.cljs$lang$ctorStr = "cljs.core/BlackNode";
cljs.core.BlackNode.cljs$lang$ctorPrWriter = function(this__3829__auto__, writer__3830__auto__, opt__3831__auto__) {
  return cljs.core._write.call(null, writer__3830__auto__, "cljs.core/BlackNode")
};
cljs.core.BlackNode.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__3696__auto__ = self__.__hash;
  if(!(h__3696__auto__ == null)) {
    return h__3696__auto__
  }else {
    var h__3696__auto____$1 = cljs.core.hash_coll.call(null, coll__$1);
    self__.__hash = h__3696__auto____$1;
    return h__3696__auto____$1
  }
};
cljs.core.BlackNode.prototype.cljs$core$ILookup$_lookup$arity$2 = function(node, k) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core._nth.call(null, node__$1, k, null)
};
cljs.core.BlackNode.prototype.cljs$core$ILookup$_lookup$arity$3 = function(node, k, not_found) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core._nth.call(null, node__$1, k, not_found)
};
cljs.core.BlackNode.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(node, k, v) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.assoc.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val], null), k, v)
};
cljs.core.BlackNode.prototype.call = function() {
  var G__425712 = null;
  var G__425712__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var node = self____$1;
    return node.cljs$core$ILookup$_lookup$arity$2(null, k)
  };
  var G__425712__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var node = self____$1;
    return node.cljs$core$ILookup$_lookup$arity$3(null, k, not_found)
  };
  G__425712 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__425712__2.call(this, self__, k);
      case 3:
        return G__425712__3.call(this, self__, k, not_found)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  return G__425712
}();
cljs.core.BlackNode.prototype.apply = function(self__, args425711) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone.call(null, args425711)))
};
cljs.core.BlackNode.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var node = this;
  return node.cljs$core$ILookup$_lookup$arity$2(null, k)
};
cljs.core.BlackNode.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var node = this;
  return node.cljs$core$ILookup$_lookup$arity$3(null, k, not_found)
};
cljs.core.BlackNode.prototype.cljs$core$ICollection$_conj$arity$2 = function(node, o) {
  var self__ = this;
  var node__$1 = this;
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val, o], null)
};
cljs.core.BlackNode.prototype.cljs$core$IMapEntry$_key$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return self__.key
};
cljs.core.BlackNode.prototype.cljs$core$IMapEntry$_val$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return self__.val
};
cljs.core.BlackNode.prototype.add_right = function(ins) {
  var self__ = this;
  var node = this;
  return ins.balance_right(node)
};
cljs.core.BlackNode.prototype.redden = function() {
  var self__ = this;
  var node = this;
  return new cljs.core.RedNode(self__.key, self__.val, self__.left, self__.right, null)
};
cljs.core.BlackNode.prototype.remove_right = function(del) {
  var self__ = this;
  var node = this;
  return cljs.core.balance_right_del.call(null, self__.key, self__.val, self__.left, del)
};
cljs.core.BlackNode.prototype.replace = function(key__$1, val__$1, left__$1, right__$1) {
  var self__ = this;
  var node = this;
  return new cljs.core.BlackNode(key__$1, val__$1, left__$1, right__$1, null)
};
cljs.core.BlackNode.prototype.kv_reduce = function(f, init) {
  var self__ = this;
  var node = this;
  return cljs.core.tree_map_kv_reduce.call(null, node, f, init)
};
cljs.core.BlackNode.prototype.remove_left = function(del) {
  var self__ = this;
  var node = this;
  return cljs.core.balance_left_del.call(null, self__.key, self__.val, del, self__.right)
};
cljs.core.BlackNode.prototype.add_left = function(ins) {
  var self__ = this;
  var node = this;
  return ins.balance_left(node)
};
cljs.core.BlackNode.prototype.balance_left = function(parent) {
  var self__ = this;
  var node = this;
  return new cljs.core.BlackNode(parent.key, parent.val, node, parent.right, null)
};
cljs.core.BlackNode.prototype.balance_right = function(parent) {
  var self__ = this;
  var node = this;
  return new cljs.core.BlackNode(parent.key, parent.val, parent.left, node, null)
};
cljs.core.BlackNode.prototype.blacken = function() {
  var self__ = this;
  var node = this;
  return node
};
cljs.core.BlackNode.prototype.cljs$core$IReduce$_reduce$arity$2 = function(node, f) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.ci_reduce.call(null, node__$1, f)
};
cljs.core.BlackNode.prototype.cljs$core$IReduce$_reduce$arity$3 = function(node, f, start) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.ci_reduce.call(null, node__$1, f, start)
};
cljs.core.BlackNode.prototype.cljs$core$ISeqable$_seq$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, self__.val), self__.key)
};
cljs.core.BlackNode.prototype.cljs$core$ICounted$_count$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return 2
};
cljs.core.BlackNode.prototype.cljs$core$IStack$_peek$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return self__.val
};
cljs.core.BlackNode.prototype.cljs$core$IStack$_pop$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key], null)
};
cljs.core.BlackNode.prototype.cljs$core$IVector$_assoc_n$arity$3 = function(node, n, v) {
  var self__ = this;
  var node__$1 = this;
  return(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val], null)).cljs$core$IVector$_assoc_n$arity$3(null, n, v)
};
cljs.core.BlackNode.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other)
};
cljs.core.BlackNode.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(node, meta) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.with_meta.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val], null), meta)
};
cljs.core.BlackNode.prototype.cljs$core$IMeta$_meta$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return null
};
cljs.core.BlackNode.prototype.cljs$core$IIndexed$_nth$arity$2 = function(node, n) {
  var self__ = this;
  var node__$1 = this;
  if(n === 0) {
    return self__.key
  }else {
    if(n === 1) {
      return self__.val
    }else {
      if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        return null
      }else {
        return null
      }
    }
  }
};
cljs.core.BlackNode.prototype.cljs$core$IIndexed$_nth$arity$3 = function(node, n, not_found) {
  var self__ = this;
  var node__$1 = this;
  if(n === 0) {
    return self__.key
  }else {
    if(n === 1) {
      return self__.val
    }else {
      if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        return not_found
      }else {
        return null
      }
    }
  }
};
cljs.core.BlackNode.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.PersistentVector.EMPTY
};
cljs.core.__GT_BlackNode = function __GT_BlackNode(key, val, left, right, __hash) {
  return new cljs.core.BlackNode(key, val, left, right, __hash)
};
cljs.core.RedNode = function(key, val, left, right, __hash) {
  this.key = key;
  this.val = val;
  this.left = left;
  this.right = right;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32402207
};
cljs.core.RedNode.cljs$lang$type = true;
cljs.core.RedNode.cljs$lang$ctorStr = "cljs.core/RedNode";
cljs.core.RedNode.cljs$lang$ctorPrWriter = function(this__3829__auto__, writer__3830__auto__, opt__3831__auto__) {
  return cljs.core._write.call(null, writer__3830__auto__, "cljs.core/RedNode")
};
cljs.core.RedNode.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__3696__auto__ = self__.__hash;
  if(!(h__3696__auto__ == null)) {
    return h__3696__auto__
  }else {
    var h__3696__auto____$1 = cljs.core.hash_coll.call(null, coll__$1);
    self__.__hash = h__3696__auto____$1;
    return h__3696__auto____$1
  }
};
cljs.core.RedNode.prototype.cljs$core$ILookup$_lookup$arity$2 = function(node, k) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core._nth.call(null, node__$1, k, null)
};
cljs.core.RedNode.prototype.cljs$core$ILookup$_lookup$arity$3 = function(node, k, not_found) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core._nth.call(null, node__$1, k, not_found)
};
cljs.core.RedNode.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(node, k, v) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.assoc.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val], null), k, v)
};
cljs.core.RedNode.prototype.call = function() {
  var G__425714 = null;
  var G__425714__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var node = self____$1;
    return node.cljs$core$ILookup$_lookup$arity$2(null, k)
  };
  var G__425714__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var node = self____$1;
    return node.cljs$core$ILookup$_lookup$arity$3(null, k, not_found)
  };
  G__425714 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__425714__2.call(this, self__, k);
      case 3:
        return G__425714__3.call(this, self__, k, not_found)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  return G__425714
}();
cljs.core.RedNode.prototype.apply = function(self__, args425713) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone.call(null, args425713)))
};
cljs.core.RedNode.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var node = this;
  return node.cljs$core$ILookup$_lookup$arity$2(null, k)
};
cljs.core.RedNode.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var node = this;
  return node.cljs$core$ILookup$_lookup$arity$3(null, k, not_found)
};
cljs.core.RedNode.prototype.cljs$core$ICollection$_conj$arity$2 = function(node, o) {
  var self__ = this;
  var node__$1 = this;
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val, o], null)
};
cljs.core.RedNode.prototype.cljs$core$IMapEntry$_key$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return self__.key
};
cljs.core.RedNode.prototype.cljs$core$IMapEntry$_val$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return self__.val
};
cljs.core.RedNode.prototype.add_right = function(ins) {
  var self__ = this;
  var node = this;
  return new cljs.core.RedNode(self__.key, self__.val, self__.left, ins, null)
};
cljs.core.RedNode.prototype.redden = function() {
  var self__ = this;
  var node = this;
  throw new Error("red-black tree invariant violation");
};
cljs.core.RedNode.prototype.remove_right = function(del) {
  var self__ = this;
  var node = this;
  return new cljs.core.RedNode(self__.key, self__.val, self__.left, del, null)
};
cljs.core.RedNode.prototype.replace = function(key__$1, val__$1, left__$1, right__$1) {
  var self__ = this;
  var node = this;
  return new cljs.core.RedNode(key__$1, val__$1, left__$1, right__$1, null)
};
cljs.core.RedNode.prototype.kv_reduce = function(f, init) {
  var self__ = this;
  var node = this;
  return cljs.core.tree_map_kv_reduce.call(null, node, f, init)
};
cljs.core.RedNode.prototype.remove_left = function(del) {
  var self__ = this;
  var node = this;
  return new cljs.core.RedNode(self__.key, self__.val, del, self__.right, null)
};
cljs.core.RedNode.prototype.add_left = function(ins) {
  var self__ = this;
  var node = this;
  return new cljs.core.RedNode(self__.key, self__.val, ins, self__.right, null)
};
cljs.core.RedNode.prototype.balance_left = function(parent) {
  var self__ = this;
  var node = this;
  if(self__.left instanceof cljs.core.RedNode) {
    return new cljs.core.RedNode(self__.key, self__.val, self__.left.blacken(), new cljs.core.BlackNode(parent.key, parent.val, self__.right, parent.right, null), null)
  }else {
    if(self__.right instanceof cljs.core.RedNode) {
      return new cljs.core.RedNode(self__.right.key, self__.right.val, new cljs.core.BlackNode(self__.key, self__.val, self__.left, self__.right.left, null), new cljs.core.BlackNode(parent.key, parent.val, self__.right.right, parent.right, null), null)
    }else {
      if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        return new cljs.core.BlackNode(parent.key, parent.val, node, parent.right, null)
      }else {
        return null
      }
    }
  }
};
cljs.core.RedNode.prototype.balance_right = function(parent) {
  var self__ = this;
  var node = this;
  if(self__.right instanceof cljs.core.RedNode) {
    return new cljs.core.RedNode(self__.key, self__.val, new cljs.core.BlackNode(parent.key, parent.val, parent.left, self__.left, null), self__.right.blacken(), null)
  }else {
    if(self__.left instanceof cljs.core.RedNode) {
      return new cljs.core.RedNode(self__.left.key, self__.left.val, new cljs.core.BlackNode(parent.key, parent.val, parent.left, self__.left.left, null), new cljs.core.BlackNode(self__.key, self__.val, self__.left.right, self__.right, null), null)
    }else {
      if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        return new cljs.core.BlackNode(parent.key, parent.val, parent.left, node, null)
      }else {
        return null
      }
    }
  }
};
cljs.core.RedNode.prototype.blacken = function() {
  var self__ = this;
  var node = this;
  return new cljs.core.BlackNode(self__.key, self__.val, self__.left, self__.right, null)
};
cljs.core.RedNode.prototype.cljs$core$IReduce$_reduce$arity$2 = function(node, f) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.ci_reduce.call(null, node__$1, f)
};
cljs.core.RedNode.prototype.cljs$core$IReduce$_reduce$arity$3 = function(node, f, start) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.ci_reduce.call(null, node__$1, f, start)
};
cljs.core.RedNode.prototype.cljs$core$ISeqable$_seq$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, self__.val), self__.key)
};
cljs.core.RedNode.prototype.cljs$core$ICounted$_count$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return 2
};
cljs.core.RedNode.prototype.cljs$core$IStack$_peek$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return self__.val
};
cljs.core.RedNode.prototype.cljs$core$IStack$_pop$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key], null)
};
cljs.core.RedNode.prototype.cljs$core$IVector$_assoc_n$arity$3 = function(node, n, v) {
  var self__ = this;
  var node__$1 = this;
  return(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val], null)).cljs$core$IVector$_assoc_n$arity$3(null, n, v)
};
cljs.core.RedNode.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other)
};
cljs.core.RedNode.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(node, meta) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.with_meta.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val], null), meta)
};
cljs.core.RedNode.prototype.cljs$core$IMeta$_meta$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return null
};
cljs.core.RedNode.prototype.cljs$core$IIndexed$_nth$arity$2 = function(node, n) {
  var self__ = this;
  var node__$1 = this;
  if(n === 0) {
    return self__.key
  }else {
    if(n === 1) {
      return self__.val
    }else {
      if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        return null
      }else {
        return null
      }
    }
  }
};
cljs.core.RedNode.prototype.cljs$core$IIndexed$_nth$arity$3 = function(node, n, not_found) {
  var self__ = this;
  var node__$1 = this;
  if(n === 0) {
    return self__.key
  }else {
    if(n === 1) {
      return self__.val
    }else {
      if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        return not_found
      }else {
        return null
      }
    }
  }
};
cljs.core.RedNode.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.PersistentVector.EMPTY
};
cljs.core.__GT_RedNode = function __GT_RedNode(key, val, left, right, __hash) {
  return new cljs.core.RedNode(key, val, left, right, __hash)
};
cljs.core.tree_map_add = function tree_map_add(comp, tree, k, v, found) {
  if(tree == null) {
    return new cljs.core.RedNode(k, v, null, null, null)
  }else {
    var c = comp.call(null, k, tree.key);
    if(c === 0) {
      found[0] = tree;
      return null
    }else {
      if(c < 0) {
        var ins = tree_map_add.call(null, comp, tree.left, k, v, found);
        if(!(ins == null)) {
          return tree.add_left(ins)
        }else {
          return null
        }
      }else {
        if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          var ins = tree_map_add.call(null, comp, tree.right, k, v, found);
          if(!(ins == null)) {
            return tree.add_right(ins)
          }else {
            return null
          }
        }else {
          return null
        }
      }
    }
  }
};
cljs.core.tree_map_append = function tree_map_append(left, right) {
  if(left == null) {
    return right
  }else {
    if(right == null) {
      return left
    }else {
      if(left instanceof cljs.core.RedNode) {
        if(right instanceof cljs.core.RedNode) {
          var app = tree_map_append.call(null, left.right, right.left);
          if(app instanceof cljs.core.RedNode) {
            return new cljs.core.RedNode(app.key, app.val, new cljs.core.RedNode(left.key, left.val, left.left, app.left, null), new cljs.core.RedNode(right.key, right.val, app.right, right.right, null), null)
          }else {
            return new cljs.core.RedNode(left.key, left.val, left.left, new cljs.core.RedNode(right.key, right.val, app, right.right, null), null)
          }
        }else {
          return new cljs.core.RedNode(left.key, left.val, left.left, tree_map_append.call(null, left.right, right), null)
        }
      }else {
        if(right instanceof cljs.core.RedNode) {
          return new cljs.core.RedNode(right.key, right.val, tree_map_append.call(null, left, right.left), right.right, null)
        }else {
          if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
            var app = tree_map_append.call(null, left.right, right.left);
            if(app instanceof cljs.core.RedNode) {
              return new cljs.core.RedNode(app.key, app.val, new cljs.core.BlackNode(left.key, left.val, left.left, app.left, null), new cljs.core.BlackNode(right.key, right.val, app.right, right.right, null), null)
            }else {
              return cljs.core.balance_left_del.call(null, left.key, left.val, left.left, new cljs.core.BlackNode(right.key, right.val, app, right.right, null))
            }
          }else {
            return null
          }
        }
      }
    }
  }
};
cljs.core.tree_map_remove = function tree_map_remove(comp, tree, k, found) {
  if(!(tree == null)) {
    var c = comp.call(null, k, tree.key);
    if(c === 0) {
      found[0] = tree;
      return cljs.core.tree_map_append.call(null, tree.left, tree.right)
    }else {
      if(c < 0) {
        var del = tree_map_remove.call(null, comp, tree.left, k, found);
        if(!(del == null) || !(found[0] == null)) {
          if(tree.left instanceof cljs.core.BlackNode) {
            return cljs.core.balance_left_del.call(null, tree.key, tree.val, del, tree.right)
          }else {
            return new cljs.core.RedNode(tree.key, tree.val, del, tree.right, null)
          }
        }else {
          return null
        }
      }else {
        if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          var del = tree_map_remove.call(null, comp, tree.right, k, found);
          if(!(del == null) || !(found[0] == null)) {
            if(tree.right instanceof cljs.core.BlackNode) {
              return cljs.core.balance_right_del.call(null, tree.key, tree.val, tree.left, del)
            }else {
              return new cljs.core.RedNode(tree.key, tree.val, tree.left, del, null)
            }
          }else {
            return null
          }
        }else {
          return null
        }
      }
    }
  }else {
    return null
  }
};
cljs.core.tree_map_replace = function tree_map_replace(comp, tree, k, v) {
  var tk = tree.key;
  var c = comp.call(null, k, tk);
  if(c === 0) {
    return tree.replace(tk, v, tree.left, tree.right)
  }else {
    if(c < 0) {
      return tree.replace(tk, tree.val, tree_map_replace.call(null, comp, tree.left, k, v), tree.right)
    }else {
      if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        return tree.replace(tk, tree.val, tree.left, tree_map_replace.call(null, comp, tree.right, k, v))
      }else {
        return null
      }
    }
  }
};
cljs.core.PersistentTreeMap = function(comp, tree, cnt, meta, __hash) {
  this.comp = comp;
  this.tree = tree;
  this.cnt = cnt;
  this.meta = meta;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 418776847
};
cljs.core.PersistentTreeMap.cljs$lang$type = true;
cljs.core.PersistentTreeMap.cljs$lang$ctorStr = "cljs.core/PersistentTreeMap";
cljs.core.PersistentTreeMap.cljs$lang$ctorPrWriter = function(this__3829__auto__, writer__3830__auto__, opt__3831__auto__) {
  return cljs.core._write.call(null, writer__3830__auto__, "cljs.core/PersistentTreeMap")
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__3696__auto__ = self__.__hash;
  if(!(h__3696__auto__ == null)) {
    return h__3696__auto__
  }else {
    var h__3696__auto____$1 = cljs.core.hash_imap.call(null, coll__$1);
    self__.__hash = h__3696__auto____$1;
    return h__3696__auto____$1
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._lookup.call(null, coll__$1, k, null)
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  var coll__$1 = this;
  var n = coll__$1.entry_at(k);
  if(!(n == null)) {
    return n.val
  }else {
    return not_found
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var self__ = this;
  var coll__$1 = this;
  var found = [null];
  var t = cljs.core.tree_map_add.call(null, self__.comp, self__.tree, k, v, found);
  if(t == null) {
    var found_node = cljs.core.nth.call(null, found, 0);
    if(cljs.core._EQ_.call(null, v, found_node.val)) {
      return coll__$1
    }else {
      return new cljs.core.PersistentTreeMap(self__.comp, cljs.core.tree_map_replace.call(null, self__.comp, self__.tree, k, v), self__.cnt, self__.meta, null)
    }
  }else {
    return new cljs.core.PersistentTreeMap(self__.comp, t.blacken(), self__.cnt + 1, self__.meta, null)
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return!(coll__$1.entry_at(k) == null)
};
cljs.core.PersistentTreeMap.prototype.call = function() {
  var G__425716 = null;
  var G__425716__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$2(null, k)
  };
  var G__425716__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found)
  };
  G__425716 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__425716__2.call(this, self__, k);
      case 3:
        return G__425716__3.call(this, self__, k, not_found)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  return G__425716
}();
cljs.core.PersistentTreeMap.prototype.apply = function(self__, args425715) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone.call(null, args425715)))
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$2(null, k)
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found)
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(coll, f, init) {
  var self__ = this;
  var coll__$1 = this;
  if(!(self__.tree == null)) {
    return cljs.core.tree_map_kv_reduce.call(null, self__.tree, f, init)
  }else {
    return init
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, entry) {
  var self__ = this;
  var coll__$1 = this;
  if(cljs.core.vector_QMARK_.call(null, entry)) {
    return cljs.core._assoc.call(null, coll__$1, cljs.core._nth.call(null, entry, 0), cljs.core._nth.call(null, entry, 1))
  }else {
    return cljs.core.reduce.call(null, cljs.core._conj, coll__$1, entry)
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IReversible$_rseq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if(self__.cnt > 0) {
    return cljs.core.create_tree_map_seq.call(null, self__.tree, false, self__.cnt)
  }else {
    return null
  }
};
cljs.core.PersistentTreeMap.prototype.entry_at = function(k) {
  var self__ = this;
  var coll = this;
  var t = self__.tree;
  while(true) {
    if(!(t == null)) {
      var c = self__.comp.call(null, k, t.key);
      if(c === 0) {
        return t
      }else {
        if(c < 0) {
          var G__425717 = t.left;
          t = G__425717;
          continue
        }else {
          if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
            var G__425718 = t.right;
            t = G__425718;
            continue
          }else {
            return null
          }
        }
      }
    }else {
      return null
    }
    break
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_sorted_seq$arity$2 = function(coll, ascending_QMARK_) {
  var self__ = this;
  var coll__$1 = this;
  if(self__.cnt > 0) {
    return cljs.core.create_tree_map_seq.call(null, self__.tree, ascending_QMARK_, self__.cnt)
  }else {
    return null
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_sorted_seq_from$arity$3 = function(coll, k, ascending_QMARK_) {
  var self__ = this;
  var coll__$1 = this;
  if(self__.cnt > 0) {
    var stack = null;
    var t = self__.tree;
    while(true) {
      if(!(t == null)) {
        var c = self__.comp.call(null, k, t.key);
        if(c === 0) {
          return new cljs.core.PersistentTreeMapSeq(null, cljs.core.conj.call(null, stack, t), ascending_QMARK_, -1, null)
        }else {
          if(cljs.core.truth_(ascending_QMARK_)) {
            if(c < 0) {
              var G__425719 = cljs.core.conj.call(null, stack, t);
              var G__425720 = t.left;
              stack = G__425719;
              t = G__425720;
              continue
            }else {
              var G__425721 = stack;
              var G__425722 = t.right;
              stack = G__425721;
              t = G__425722;
              continue
            }
          }else {
            if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
              if(c > 0) {
                var G__425723 = cljs.core.conj.call(null, stack, t);
                var G__425724 = t.right;
                stack = G__425723;
                t = G__425724;
                continue
              }else {
                var G__425725 = stack;
                var G__425726 = t.left;
                stack = G__425725;
                t = G__425726;
                continue
              }
            }else {
              return null
            }
          }
        }
      }else {
        if(stack == null) {
          return null
        }else {
          return new cljs.core.PersistentTreeMapSeq(null, stack, ascending_QMARK_, -1, null)
        }
      }
      break
    }
  }else {
    return null
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_entry_key$arity$2 = function(coll, entry) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.key.call(null, entry)
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_comparator$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.comp
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if(self__.cnt > 0) {
    return cljs.core.create_tree_map_seq.call(null, self__.tree, true, self__.cnt)
  }else {
    return null
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.cnt
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_map.call(null, coll__$1, other)
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentTreeMap(self__.comp, self__.tree, self__.cnt, meta__$1, self__.__hash)
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta.call(null, cljs.core.PersistentTreeMap.EMPTY, self__.meta)
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IMap$_dissoc$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  var found = [null];
  var t = cljs.core.tree_map_remove.call(null, self__.comp, self__.tree, k, found);
  if(t == null) {
    if(cljs.core.nth.call(null, found, 0) == null) {
      return coll__$1
    }else {
      return new cljs.core.PersistentTreeMap(self__.comp, null, 0, self__.meta, null)
    }
  }else {
    return new cljs.core.PersistentTreeMap(self__.comp, t.blacken(), self__.cnt - 1, self__.meta, null)
  }
};
cljs.core.__GT_PersistentTreeMap = function __GT_PersistentTreeMap(comp, tree, cnt, meta, __hash) {
  return new cljs.core.PersistentTreeMap(comp, tree, cnt, meta, __hash)
};
cljs.core.PersistentTreeMap.EMPTY = new cljs.core.PersistentTreeMap(cljs.core.compare, null, 0, null, 0);
cljs.core.hash_map = function() {
  var hash_map__delegate = function(keyvals) {
    var in$ = cljs.core.seq.call(null, keyvals);
    var out = cljs.core.transient$.call(null, cljs.core.PersistentHashMap.EMPTY);
    while(true) {
      if(in$) {
        var G__425727 = cljs.core.nnext.call(null, in$);
        var G__425728 = cljs.core.assoc_BANG_.call(null, out, cljs.core.first.call(null, in$), cljs.core.second.call(null, in$));
        in$ = G__425727;
        out = G__425728;
        continue
      }else {
        return cljs.core.persistent_BANG_.call(null, out)
      }
      break
    }
  };
  var hash_map = function(var_args) {
    var keyvals = null;
    if(arguments.length > 0) {
      keyvals = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return hash_map__delegate.call(this, keyvals)
  };
  hash_map.cljs$lang$maxFixedArity = 0;
  hash_map.cljs$lang$applyTo = function(arglist__425729) {
    var keyvals = cljs.core.seq(arglist__425729);
    return hash_map__delegate(keyvals)
  };
  hash_map.cljs$core$IFn$_invoke$arity$variadic = hash_map__delegate;
  return hash_map
}();
cljs.core.array_map = function() {
  var array_map__delegate = function(keyvals) {
    return new cljs.core.PersistentArrayMap(null, cljs.core.quot.call(null, cljs.core.count.call(null, keyvals), 2), cljs.core.apply.call(null, cljs.core.array, keyvals), null)
  };
  var array_map = function(var_args) {
    var keyvals = null;
    if(arguments.length > 0) {
      keyvals = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return array_map__delegate.call(this, keyvals)
  };
  array_map.cljs$lang$maxFixedArity = 0;
  array_map.cljs$lang$applyTo = function(arglist__425730) {
    var keyvals = cljs.core.seq(arglist__425730);
    return array_map__delegate(keyvals)
  };
  array_map.cljs$core$IFn$_invoke$arity$variadic = array_map__delegate;
  return array_map
}();
cljs.core.obj_map = function() {
  var obj_map__delegate = function(keyvals) {
    var ks = [];
    var obj = function() {
      var obj425734 = {};
      return obj425734
    }();
    var kvs = cljs.core.seq.call(null, keyvals);
    while(true) {
      if(kvs) {
        ks.push(cljs.core.first.call(null, kvs));
        obj[cljs.core.first.call(null, kvs)] = cljs.core.second.call(null, kvs);
        var G__425735 = cljs.core.nnext.call(null, kvs);
        kvs = G__425735;
        continue
      }else {
        return cljs.core.ObjMap.fromObject.call(null, ks, obj)
      }
      break
    }
  };
  var obj_map = function(var_args) {
    var keyvals = null;
    if(arguments.length > 0) {
      keyvals = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return obj_map__delegate.call(this, keyvals)
  };
  obj_map.cljs$lang$maxFixedArity = 0;
  obj_map.cljs$lang$applyTo = function(arglist__425736) {
    var keyvals = cljs.core.seq(arglist__425736);
    return obj_map__delegate(keyvals)
  };
  obj_map.cljs$core$IFn$_invoke$arity$variadic = obj_map__delegate;
  return obj_map
}();
cljs.core.sorted_map = function() {
  var sorted_map__delegate = function(keyvals) {
    var in$ = cljs.core.seq.call(null, keyvals);
    var out = cljs.core.PersistentTreeMap.EMPTY;
    while(true) {
      if(in$) {
        var G__425737 = cljs.core.nnext.call(null, in$);
        var G__425738 = cljs.core.assoc.call(null, out, cljs.core.first.call(null, in$), cljs.core.second.call(null, in$));
        in$ = G__425737;
        out = G__425738;
        continue
      }else {
        return out
      }
      break
    }
  };
  var sorted_map = function(var_args) {
    var keyvals = null;
    if(arguments.length > 0) {
      keyvals = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return sorted_map__delegate.call(this, keyvals)
  };
  sorted_map.cljs$lang$maxFixedArity = 0;
  sorted_map.cljs$lang$applyTo = function(arglist__425739) {
    var keyvals = cljs.core.seq(arglist__425739);
    return sorted_map__delegate(keyvals)
  };
  sorted_map.cljs$core$IFn$_invoke$arity$variadic = sorted_map__delegate;
  return sorted_map
}();
cljs.core.sorted_map_by = function() {
  var sorted_map_by__delegate = function(comparator, keyvals) {
    var in$ = cljs.core.seq.call(null, keyvals);
    var out = new cljs.core.PersistentTreeMap(cljs.core.fn__GT_comparator.call(null, comparator), null, 0, null, 0);
    while(true) {
      if(in$) {
        var G__425740 = cljs.core.nnext.call(null, in$);
        var G__425741 = cljs.core.assoc.call(null, out, cljs.core.first.call(null, in$), cljs.core.second.call(null, in$));
        in$ = G__425740;
        out = G__425741;
        continue
      }else {
        return out
      }
      break
    }
  };
  var sorted_map_by = function(comparator, var_args) {
    var keyvals = null;
    if(arguments.length > 1) {
      keyvals = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
    }
    return sorted_map_by__delegate.call(this, comparator, keyvals)
  };
  sorted_map_by.cljs$lang$maxFixedArity = 1;
  sorted_map_by.cljs$lang$applyTo = function(arglist__425742) {
    var comparator = cljs.core.first(arglist__425742);
    var keyvals = cljs.core.rest(arglist__425742);
    return sorted_map_by__delegate(comparator, keyvals)
  };
  sorted_map_by.cljs$core$IFn$_invoke$arity$variadic = sorted_map_by__delegate;
  return sorted_map_by
}();
cljs.core.KeySeq = function(mseq, _meta) {
  this.mseq = mseq;
  this._meta = _meta;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32374988
};
cljs.core.KeySeq.cljs$lang$type = true;
cljs.core.KeySeq.cljs$lang$ctorStr = "cljs.core/KeySeq";
cljs.core.KeySeq.cljs$lang$ctorPrWriter = function(this__3829__auto__, writer__3830__auto__, opt__3831__auto__) {
  return cljs.core._write.call(null, writer__3830__auto__, "cljs.core/KeySeq")
};
cljs.core.KeySeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.hash_coll.call(null, coll__$1)
};
cljs.core.KeySeq.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var nseq = function() {
    var G__425743 = self__.mseq;
    if(G__425743) {
      var bit__3911__auto__ = G__425743.cljs$lang$protocol_mask$partition0$ & 128;
      if(bit__3911__auto__ || G__425743.cljs$core$INext$) {
        return true
      }else {
        if(!G__425743.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.INext, G__425743)
        }else {
          return false
        }
      }
    }else {
      return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.INext, G__425743)
    }
  }() ? cljs.core._next.call(null, self__.mseq) : cljs.core.next.call(null, self__.mseq);
  if(nseq == null) {
    return null
  }else {
    return new cljs.core.KeySeq(nseq, self__._meta)
  }
};
cljs.core.KeySeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons.call(null, o, coll__$1)
};
cljs.core.KeySeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll)
};
cljs.core.KeySeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, coll__$1)
};
cljs.core.KeySeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, start, coll__$1)
};
cljs.core.KeySeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1
};
cljs.core.KeySeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var me = cljs.core._first.call(null, self__.mseq);
  return cljs.core._key.call(null, me)
};
cljs.core.KeySeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var nseq = function() {
    var G__425744 = self__.mseq;
    if(G__425744) {
      var bit__3911__auto__ = G__425744.cljs$lang$protocol_mask$partition0$ & 128;
      if(bit__3911__auto__ || G__425744.cljs$core$INext$) {
        return true
      }else {
        if(!G__425744.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.INext, G__425744)
        }else {
          return false
        }
      }
    }else {
      return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.INext, G__425744)
    }
  }() ? cljs.core._next.call(null, self__.mseq) : cljs.core.next.call(null, self__.mseq);
  if(!(nseq == null)) {
    return new cljs.core.KeySeq(nseq, self__._meta)
  }else {
    return cljs.core.List.EMPTY
  }
};
cljs.core.KeySeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other)
};
cljs.core.KeySeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, new_meta) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.KeySeq(self__.mseq, new_meta)
};
cljs.core.KeySeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__._meta
};
cljs.core.KeySeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, self__._meta)
};
cljs.core.__GT_KeySeq = function __GT_KeySeq(mseq, _meta) {
  return new cljs.core.KeySeq(mseq, _meta)
};
cljs.core.keys = function keys(hash_map) {
  var temp__4092__auto__ = cljs.core.seq.call(null, hash_map);
  if(temp__4092__auto__) {
    var mseq = temp__4092__auto__;
    return new cljs.core.KeySeq(mseq, null)
  }else {
    return null
  }
};
cljs.core.key = function key(map_entry) {
  return cljs.core._key.call(null, map_entry)
};
cljs.core.ValSeq = function(mseq, _meta) {
  this.mseq = mseq;
  this._meta = _meta;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32374988
};
cljs.core.ValSeq.cljs$lang$type = true;
cljs.core.ValSeq.cljs$lang$ctorStr = "cljs.core/ValSeq";
cljs.core.ValSeq.cljs$lang$ctorPrWriter = function(this__3829__auto__, writer__3830__auto__, opt__3831__auto__) {
  return cljs.core._write.call(null, writer__3830__auto__, "cljs.core/ValSeq")
};
cljs.core.ValSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.hash_coll.call(null, coll__$1)
};
cljs.core.ValSeq.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var nseq = function() {
    var G__425745 = self__.mseq;
    if(G__425745) {
      var bit__3911__auto__ = G__425745.cljs$lang$protocol_mask$partition0$ & 128;
      if(bit__3911__auto__ || G__425745.cljs$core$INext$) {
        return true
      }else {
        if(!G__425745.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.INext, G__425745)
        }else {
          return false
        }
      }
    }else {
      return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.INext, G__425745)
    }
  }() ? cljs.core._next.call(null, self__.mseq) : cljs.core.next.call(null, self__.mseq);
  if(nseq == null) {
    return null
  }else {
    return new cljs.core.ValSeq(nseq, self__._meta)
  }
};
cljs.core.ValSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons.call(null, o, coll__$1)
};
cljs.core.ValSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll)
};
cljs.core.ValSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, coll__$1)
};
cljs.core.ValSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, start, coll__$1)
};
cljs.core.ValSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1
};
cljs.core.ValSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var me = cljs.core._first.call(null, self__.mseq);
  return cljs.core._val.call(null, me)
};
cljs.core.ValSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var nseq = function() {
    var G__425746 = self__.mseq;
    if(G__425746) {
      var bit__3911__auto__ = G__425746.cljs$lang$protocol_mask$partition0$ & 128;
      if(bit__3911__auto__ || G__425746.cljs$core$INext$) {
        return true
      }else {
        if(!G__425746.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.INext, G__425746)
        }else {
          return false
        }
      }
    }else {
      return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.INext, G__425746)
    }
  }() ? cljs.core._next.call(null, self__.mseq) : cljs.core.next.call(null, self__.mseq);
  if(!(nseq == null)) {
    return new cljs.core.ValSeq(nseq, self__._meta)
  }else {
    return cljs.core.List.EMPTY
  }
};
cljs.core.ValSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other)
};
cljs.core.ValSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, new_meta) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.ValSeq(self__.mseq, new_meta)
};
cljs.core.ValSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__._meta
};
cljs.core.ValSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, self__._meta)
};
cljs.core.__GT_ValSeq = function __GT_ValSeq(mseq, _meta) {
  return new cljs.core.ValSeq(mseq, _meta)
};
cljs.core.vals = function vals(hash_map) {
  var temp__4092__auto__ = cljs.core.seq.call(null, hash_map);
  if(temp__4092__auto__) {
    var mseq = temp__4092__auto__;
    return new cljs.core.ValSeq(mseq, null)
  }else {
    return null
  }
};
cljs.core.val = function val(map_entry) {
  return cljs.core._val.call(null, map_entry)
};
cljs.core.merge = function() {
  var merge__delegate = function(maps) {
    if(cljs.core.truth_(cljs.core.some.call(null, cljs.core.identity, maps))) {
      return cljs.core.reduce.call(null, function(p1__425747_SHARP_, p2__425748_SHARP_) {
        return cljs.core.conj.call(null, function() {
          var or__3285__auto__ = p1__425747_SHARP_;
          if(cljs.core.truth_(or__3285__auto__)) {
            return or__3285__auto__
          }else {
            return cljs.core.PersistentArrayMap.EMPTY
          }
        }(), p2__425748_SHARP_)
      }, maps)
    }else {
      return null
    }
  };
  var merge = function(var_args) {
    var maps = null;
    if(arguments.length > 0) {
      maps = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return merge__delegate.call(this, maps)
  };
  merge.cljs$lang$maxFixedArity = 0;
  merge.cljs$lang$applyTo = function(arglist__425749) {
    var maps = cljs.core.seq(arglist__425749);
    return merge__delegate(maps)
  };
  merge.cljs$core$IFn$_invoke$arity$variadic = merge__delegate;
  return merge
}();
cljs.core.merge_with = function() {
  var merge_with__delegate = function(f, maps) {
    if(cljs.core.truth_(cljs.core.some.call(null, cljs.core.identity, maps))) {
      var merge_entry = function(m, e) {
        var k = cljs.core.first.call(null, e);
        var v = cljs.core.second.call(null, e);
        if(cljs.core.contains_QMARK_.call(null, m, k)) {
          return cljs.core.assoc.call(null, m, k, f.call(null, cljs.core.get.call(null, m, k), v))
        }else {
          return cljs.core.assoc.call(null, m, k, v)
        }
      };
      var merge2 = function(merge_entry) {
        return function(m1, m2) {
          return cljs.core.reduce.call(null, merge_entry, function() {
            var or__3285__auto__ = m1;
            if(cljs.core.truth_(or__3285__auto__)) {
              return or__3285__auto__
            }else {
              return cljs.core.PersistentArrayMap.EMPTY
            }
          }(), cljs.core.seq.call(null, m2))
        }
      }(merge_entry);
      return cljs.core.reduce.call(null, merge2, maps)
    }else {
      return null
    }
  };
  var merge_with = function(f, var_args) {
    var maps = null;
    if(arguments.length > 1) {
      maps = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
    }
    return merge_with__delegate.call(this, f, maps)
  };
  merge_with.cljs$lang$maxFixedArity = 1;
  merge_with.cljs$lang$applyTo = function(arglist__425750) {
    var f = cljs.core.first(arglist__425750);
    var maps = cljs.core.rest(arglist__425750);
    return merge_with__delegate(f, maps)
  };
  merge_with.cljs$core$IFn$_invoke$arity$variadic = merge_with__delegate;
  return merge_with
}();
cljs.core.select_keys = function select_keys(map, keyseq) {
  var ret = cljs.core.PersistentArrayMap.EMPTY;
  var keys = cljs.core.seq.call(null, keyseq);
  while(true) {
    if(keys) {
      var key = cljs.core.first.call(null, keys);
      var entry = cljs.core.get.call(null, map, key, new cljs.core.Keyword("cljs.core", "not-found", "cljs.core/not-found", 4155500789));
      var G__425751 = cljs.core.not_EQ_.call(null, entry, new cljs.core.Keyword("cljs.core", "not-found", "cljs.core/not-found", 4155500789)) ? cljs.core.assoc.call(null, ret, key, entry) : ret;
      var G__425752 = cljs.core.next.call(null, keys);
      ret = G__425751;
      keys = G__425752;
      continue
    }else {
      return ret
    }
    break
  }
};
cljs.core.PersistentHashSet = function(meta, hash_map, __hash) {
  this.meta = meta;
  this.hash_map = hash_map;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 4;
  this.cljs$lang$protocol_mask$partition0$ = 15077647
};
cljs.core.PersistentHashSet.cljs$lang$type = true;
cljs.core.PersistentHashSet.cljs$lang$ctorStr = "cljs.core/PersistentHashSet";
cljs.core.PersistentHashSet.cljs$lang$ctorPrWriter = function(this__3829__auto__, writer__3830__auto__, opt__3831__auto__) {
  return cljs.core._write.call(null, writer__3830__auto__, "cljs.core/PersistentHashSet")
};
cljs.core.PersistentHashSet.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.TransientHashSet(cljs.core._as_transient.call(null, self__.hash_map))
};
cljs.core.PersistentHashSet.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__3696__auto__ = self__.__hash;
  if(!(h__3696__auto__ == null)) {
    return h__3696__auto__
  }else {
    var h__3696__auto____$1 = cljs.core.hash_iset.call(null, coll__$1);
    self__.__hash = h__3696__auto____$1;
    return h__3696__auto____$1
  }
};
cljs.core.PersistentHashSet.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, v) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._lookup.call(null, coll__$1, v, null)
};
cljs.core.PersistentHashSet.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, v, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if(cljs.core._contains_key_QMARK_.call(null, self__.hash_map, v)) {
    return v
  }else {
    return not_found
  }
};
cljs.core.PersistentHashSet.prototype.call = function() {
  var G__425755 = null;
  var G__425755__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$2(null, k)
  };
  var G__425755__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found)
  };
  G__425755 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__425755__2.call(this, self__, k);
      case 3:
        return G__425755__3.call(this, self__, k, not_found)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  return G__425755
}();
cljs.core.PersistentHashSet.prototype.apply = function(self__, args425754) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone.call(null, args425754)))
};
cljs.core.PersistentHashSet.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$2(null, k)
};
cljs.core.PersistentHashSet.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found)
};
cljs.core.PersistentHashSet.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentHashSet(self__.meta, cljs.core.assoc.call(null, self__.hash_map, o, null), null)
};
cljs.core.PersistentHashSet.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll)
};
cljs.core.PersistentHashSet.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.keys.call(null, self__.hash_map)
};
cljs.core.PersistentHashSet.prototype.cljs$core$ISet$_disjoin$arity$2 = function(coll, v) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentHashSet(self__.meta, cljs.core._dissoc.call(null, self__.hash_map, v), null)
};
cljs.core.PersistentHashSet.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._count.call(null, self__.hash_map)
};
cljs.core.PersistentHashSet.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.set_QMARK_.call(null, other) && cljs.core.count.call(null, coll__$1) === cljs.core.count.call(null, other) && cljs.core.every_QMARK_.call(null, function(p1__425753_SHARP_) {
    return cljs.core.contains_QMARK_.call(null, coll__$1, p1__425753_SHARP_)
  }, other)
};
cljs.core.PersistentHashSet.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentHashSet(meta__$1, self__.hash_map, self__.__hash)
};
cljs.core.PersistentHashSet.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta
};
cljs.core.PersistentHashSet.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta.call(null, cljs.core.PersistentHashSet.EMPTY, self__.meta)
};
cljs.core.__GT_PersistentHashSet = function __GT_PersistentHashSet(meta, hash_map, __hash) {
  return new cljs.core.PersistentHashSet(meta, hash_map, __hash)
};
cljs.core.PersistentHashSet.EMPTY = new cljs.core.PersistentHashSet(null, cljs.core.PersistentArrayMap.EMPTY, 0);
cljs.core.PersistentHashSet.fromArray = function(items, no_clone) {
  var len = items.length;
  if(len <= cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD) {
    var arr = no_clone ? items : cljs.core.aclone.call(null, items);
    var i = 0;
    var out = cljs.core.transient$.call(null, cljs.core.PersistentArrayMap.EMPTY);
    while(true) {
      if(i < len) {
        var G__425756 = i + 1;
        var G__425757 = cljs.core._assoc_BANG_.call(null, out, items[i], null);
        i = G__425756;
        out = G__425757;
        continue
      }else {
        return new cljs.core.PersistentHashSet(null, cljs.core._persistent_BANG_.call(null, out), null)
      }
      break
    }
  }else {
    var i = 0;
    var out = cljs.core.transient$.call(null, cljs.core.PersistentHashSet.EMPTY);
    while(true) {
      if(i < len) {
        var G__425758 = i + 2;
        var G__425759 = cljs.core._conj_BANG_.call(null, out, items[i]);
        i = G__425758;
        out = G__425759;
        continue
      }else {
        return cljs.core._persistent_BANG_.call(null, out)
      }
      break
    }
  }
};
cljs.core.TransientHashSet = function(transient_map) {
  this.transient_map = transient_map;
  this.cljs$lang$protocol_mask$partition0$ = 259;
  this.cljs$lang$protocol_mask$partition1$ = 136
};
cljs.core.TransientHashSet.cljs$lang$type = true;
cljs.core.TransientHashSet.cljs$lang$ctorStr = "cljs.core/TransientHashSet";
cljs.core.TransientHashSet.cljs$lang$ctorPrWriter = function(this__3829__auto__, writer__3830__auto__, opt__3831__auto__) {
  return cljs.core._write.call(null, writer__3830__auto__, "cljs.core/TransientHashSet")
};
cljs.core.TransientHashSet.prototype.call = function() {
  var G__425761 = null;
  var G__425761__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var tcoll = self____$1;
    if(cljs.core._lookup.call(null, self__.transient_map, k, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
      return null
    }else {
      return k
    }
  };
  var G__425761__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var tcoll = self____$1;
    if(cljs.core._lookup.call(null, self__.transient_map, k, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
      return not_found
    }else {
      return k
    }
  };
  G__425761 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__425761__2.call(this, self__, k);
      case 3:
        return G__425761__3.call(this, self__, k, not_found)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  return G__425761
}();
cljs.core.TransientHashSet.prototype.apply = function(self__, args425760) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone.call(null, args425760)))
};
cljs.core.TransientHashSet.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var tcoll = this;
  if(cljs.core._lookup.call(null, self__.transient_map, k, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
    return null
  }else {
    return k
  }
};
cljs.core.TransientHashSet.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var tcoll = this;
  if(cljs.core._lookup.call(null, self__.transient_map, k, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
    return not_found
  }else {
    return k
  }
};
cljs.core.TransientHashSet.prototype.cljs$core$ILookup$_lookup$arity$2 = function(tcoll, v) {
  var self__ = this;
  var tcoll__$1 = this;
  return cljs.core._lookup.call(null, tcoll__$1, v, null)
};
cljs.core.TransientHashSet.prototype.cljs$core$ILookup$_lookup$arity$3 = function(tcoll, v, not_found) {
  var self__ = this;
  var tcoll__$1 = this;
  if(cljs.core._lookup.call(null, self__.transient_map, v, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
    return not_found
  }else {
    return v
  }
};
cljs.core.TransientHashSet.prototype.cljs$core$ICounted$_count$arity$1 = function(tcoll) {
  var self__ = this;
  var tcoll__$1 = this;
  return cljs.core.count.call(null, self__.transient_map)
};
cljs.core.TransientHashSet.prototype.cljs$core$ITransientSet$_disjoin_BANG_$arity$2 = function(tcoll, v) {
  var self__ = this;
  var tcoll__$1 = this;
  self__.transient_map = cljs.core.dissoc_BANG_.call(null, self__.transient_map, v);
  return tcoll__$1
};
cljs.core.TransientHashSet.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = function(tcoll, o) {
  var self__ = this;
  var tcoll__$1 = this;
  self__.transient_map = cljs.core.assoc_BANG_.call(null, self__.transient_map, o, null);
  return tcoll__$1
};
cljs.core.TransientHashSet.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = function(tcoll) {
  var self__ = this;
  var tcoll__$1 = this;
  return new cljs.core.PersistentHashSet(null, cljs.core.persistent_BANG_.call(null, self__.transient_map), null)
};
cljs.core.__GT_TransientHashSet = function __GT_TransientHashSet(transient_map) {
  return new cljs.core.TransientHashSet(transient_map)
};
cljs.core.PersistentTreeSet = function(meta, tree_map, __hash) {
  this.meta = meta;
  this.tree_map = tree_map;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 417730831
};
cljs.core.PersistentTreeSet.cljs$lang$type = true;
cljs.core.PersistentTreeSet.cljs$lang$ctorStr = "cljs.core/PersistentTreeSet";
cljs.core.PersistentTreeSet.cljs$lang$ctorPrWriter = function(this__3829__auto__, writer__3830__auto__, opt__3831__auto__) {
  return cljs.core._write.call(null, writer__3830__auto__, "cljs.core/PersistentTreeSet")
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__3696__auto__ = self__.__hash;
  if(!(h__3696__auto__ == null)) {
    return h__3696__auto__
  }else {
    var h__3696__auto____$1 = cljs.core.hash_iset.call(null, coll__$1);
    self__.__hash = h__3696__auto____$1;
    return h__3696__auto____$1
  }
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, v) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._lookup.call(null, coll__$1, v, null)
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, v, not_found) {
  var self__ = this;
  var coll__$1 = this;
  var n = self__.tree_map.entry_at(v);
  if(!(n == null)) {
    return n.key
  }else {
    return not_found
  }
};
cljs.core.PersistentTreeSet.prototype.call = function() {
  var G__425764 = null;
  var G__425764__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$2(null, k)
  };
  var G__425764__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found)
  };
  G__425764 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__425764__2.call(this, self__, k);
      case 3:
        return G__425764__3.call(this, self__, k, not_found)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  return G__425764
}();
cljs.core.PersistentTreeSet.prototype.apply = function(self__, args425763) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone.call(null, args425763)))
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$2(null, k)
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found)
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentTreeSet(self__.meta, cljs.core.assoc.call(null, self__.tree_map, o, null), null)
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IReversible$_rseq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if(cljs.core.count.call(null, self__.tree_map) > 0) {
    return cljs.core.map.call(null, cljs.core.key, cljs.core.rseq.call(null, self__.tree_map))
  }else {
    return null
  }
};
cljs.core.PersistentTreeSet.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll)
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_sorted_seq$arity$2 = function(coll, ascending_QMARK_) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.map.call(null, cljs.core.key, cljs.core._sorted_seq.call(null, self__.tree_map, ascending_QMARK_))
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_sorted_seq_from$arity$3 = function(coll, k, ascending_QMARK_) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.map.call(null, cljs.core.key, cljs.core._sorted_seq_from.call(null, self__.tree_map, k, ascending_QMARK_))
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_entry_key$arity$2 = function(coll, entry) {
  var self__ = this;
  var coll__$1 = this;
  return entry
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_comparator$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._comparator.call(null, self__.tree_map)
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.keys.call(null, self__.tree_map)
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISet$_disjoin$arity$2 = function(coll, v) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentTreeSet(self__.meta, cljs.core.dissoc.call(null, self__.tree_map, v), null)
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.count.call(null, self__.tree_map)
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.set_QMARK_.call(null, other) && cljs.core.count.call(null, coll__$1) === cljs.core.count.call(null, other) && cljs.core.every_QMARK_.call(null, function(p1__425762_SHARP_) {
    return cljs.core.contains_QMARK_.call(null, coll__$1, p1__425762_SHARP_)
  }, other)
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentTreeSet(meta__$1, self__.tree_map, self__.__hash)
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta.call(null, cljs.core.PersistentTreeSet.EMPTY, self__.meta)
};
cljs.core.__GT_PersistentTreeSet = function __GT_PersistentTreeSet(meta, tree_map, __hash) {
  return new cljs.core.PersistentTreeSet(meta, tree_map, __hash)
};
cljs.core.PersistentTreeSet.EMPTY = new cljs.core.PersistentTreeSet(null, cljs.core.PersistentTreeMap.EMPTY, 0);
cljs.core.set_from_indexed_seq = function set_from_indexed_seq(iseq) {
  var arr = iseq.arr;
  var ret = function() {
    var a__4102__auto__ = arr;
    var i = 0;
    var res = cljs.core._as_transient.call(null, cljs.core.PersistentHashSet.EMPTY);
    while(true) {
      if(i < a__4102__auto__.length) {
        var G__425765 = i + 1;
        var G__425766 = cljs.core._conj_BANG_.call(null, res, arr[i]);
        i = G__425765;
        res = G__425766;
        continue
      }else {
        return res
      }
      break
    }
  }();
  return cljs.core._persistent_BANG_.call(null, ret)
};
cljs.core.set = function set(coll) {
  var in$ = cljs.core.seq.call(null, coll);
  if(in$ == null) {
    return cljs.core.PersistentHashSet.EMPTY
  }else {
    if(in$ instanceof cljs.core.IndexedSeq) {
      return cljs.core.set_from_indexed_seq.call(null, in$)
    }else {
      if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        var in$__$1 = in$;
        var out = cljs.core._as_transient.call(null, cljs.core.PersistentHashSet.EMPTY);
        while(true) {
          if(!(in$__$1 == null)) {
            var G__425767 = cljs.core._next.call(null, in$__$1);
            var G__425768 = cljs.core._conj_BANG_.call(null, out, cljs.core._first.call(null, in$__$1));
            in$__$1 = G__425767;
            out = G__425768;
            continue
          }else {
            return cljs.core._persistent_BANG_.call(null, out)
          }
          break
        }
      }else {
        return null
      }
    }
  }
};
cljs.core.hash_set = function() {
  var hash_set = null;
  var hash_set__0 = function() {
    return cljs.core.PersistentHashSet.EMPTY
  };
  var hash_set__1 = function() {
    var G__425769__delegate = function(keys) {
      return cljs.core.set.call(null, keys)
    };
    var G__425769 = function(var_args) {
      var keys = null;
      if(arguments.length > 0) {
        keys = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
      }
      return G__425769__delegate.call(this, keys)
    };
    G__425769.cljs$lang$maxFixedArity = 0;
    G__425769.cljs$lang$applyTo = function(arglist__425770) {
      var keys = cljs.core.seq(arglist__425770);
      return G__425769__delegate(keys)
    };
    G__425769.cljs$core$IFn$_invoke$arity$variadic = G__425769__delegate;
    return G__425769
  }();
  hash_set = function(var_args) {
    var keys = var_args;
    switch(arguments.length) {
      case 0:
        return hash_set__0.call(this);
      default:
        return hash_set__1.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq(arguments, 0))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  hash_set.cljs$lang$maxFixedArity = 0;
  hash_set.cljs$lang$applyTo = hash_set__1.cljs$lang$applyTo;
  hash_set.cljs$core$IFn$_invoke$arity$0 = hash_set__0;
  hash_set.cljs$core$IFn$_invoke$arity$variadic = hash_set__1.cljs$core$IFn$_invoke$arity$variadic;
  return hash_set
}();
cljs.core.sorted_set = function() {
  var sorted_set__delegate = function(keys) {
    return cljs.core.reduce.call(null, cljs.core._conj, cljs.core.PersistentTreeSet.EMPTY, keys)
  };
  var sorted_set = function(var_args) {
    var keys = null;
    if(arguments.length > 0) {
      keys = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return sorted_set__delegate.call(this, keys)
  };
  sorted_set.cljs$lang$maxFixedArity = 0;
  sorted_set.cljs$lang$applyTo = function(arglist__425771) {
    var keys = cljs.core.seq(arglist__425771);
    return sorted_set__delegate(keys)
  };
  sorted_set.cljs$core$IFn$_invoke$arity$variadic = sorted_set__delegate;
  return sorted_set
}();
cljs.core.sorted_set_by = function() {
  var sorted_set_by__delegate = function(comparator, keys) {
    return cljs.core.reduce.call(null, cljs.core._conj, new cljs.core.PersistentTreeSet(null, cljs.core.sorted_map_by.call(null, comparator), 0), keys)
  };
  var sorted_set_by = function(comparator, var_args) {
    var keys = null;
    if(arguments.length > 1) {
      keys = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
    }
    return sorted_set_by__delegate.call(this, comparator, keys)
  };
  sorted_set_by.cljs$lang$maxFixedArity = 1;
  sorted_set_by.cljs$lang$applyTo = function(arglist__425772) {
    var comparator = cljs.core.first(arglist__425772);
    var keys = cljs.core.rest(arglist__425772);
    return sorted_set_by__delegate(comparator, keys)
  };
  sorted_set_by.cljs$core$IFn$_invoke$arity$variadic = sorted_set_by__delegate;
  return sorted_set_by
}();
cljs.core.replace = function replace(smap, coll) {
  if(cljs.core.vector_QMARK_.call(null, coll)) {
    var n = cljs.core.count.call(null, coll);
    return cljs.core.reduce.call(null, function(v, i) {
      var temp__4090__auto__ = cljs.core.find.call(null, smap, cljs.core.nth.call(null, v, i));
      if(cljs.core.truth_(temp__4090__auto__)) {
        var e = temp__4090__auto__;
        return cljs.core.assoc.call(null, v, i, cljs.core.second.call(null, e))
      }else {
        return v
      }
    }, coll, cljs.core.take.call(null, n, cljs.core.iterate.call(null, cljs.core.inc, 0)))
  }else {
    return cljs.core.map.call(null, function(p1__425773_SHARP_) {
      var temp__4090__auto__ = cljs.core.find.call(null, smap, p1__425773_SHARP_);
      if(cljs.core.truth_(temp__4090__auto__)) {
        var e = temp__4090__auto__;
        return cljs.core.second.call(null, e)
      }else {
        return p1__425773_SHARP_
      }
    }, coll)
  }
};
cljs.core.distinct = function distinct(coll) {
  var step = function step(xs, seen) {
    return new cljs.core.LazySeq(null, function() {
      return function(p__425780, seen__$1) {
        while(true) {
          var vec__425781 = p__425780;
          var f = cljs.core.nth.call(null, vec__425781, 0, null);
          var xs__$1 = vec__425781;
          var temp__4092__auto__ = cljs.core.seq.call(null, xs__$1);
          if(temp__4092__auto__) {
            var s = temp__4092__auto__;
            if(cljs.core.contains_QMARK_.call(null, seen__$1, f)) {
              var G__425782 = cljs.core.rest.call(null, s);
              var G__425783 = seen__$1;
              p__425780 = G__425782;
              seen__$1 = G__425783;
              continue
            }else {
              return cljs.core.cons.call(null, f, step.call(null, cljs.core.rest.call(null, s), cljs.core.conj.call(null, seen__$1, f)))
            }
          }else {
            return null
          }
          break
        }
      }.call(null, xs, seen)
    }, null, null)
  };
  return step.call(null, coll, cljs.core.PersistentHashSet.EMPTY)
};
cljs.core.butlast = function butlast(s) {
  var ret = cljs.core.PersistentVector.EMPTY;
  var s__$1 = s;
  while(true) {
    if(cljs.core.next.call(null, s__$1)) {
      var G__425784 = cljs.core.conj.call(null, ret, cljs.core.first.call(null, s__$1));
      var G__425785 = cljs.core.next.call(null, s__$1);
      ret = G__425784;
      s__$1 = G__425785;
      continue
    }else {
      return cljs.core.seq.call(null, ret)
    }
    break
  }
};
cljs.core.name = function name(x) {
  if(function() {
    var G__425787 = x;
    if(G__425787) {
      var bit__3904__auto__ = G__425787.cljs$lang$protocol_mask$partition1$ & 4096;
      if(bit__3904__auto__ || G__425787.cljs$core$INamed$) {
        return true
      }else {
        return false
      }
    }else {
      return false
    }
  }()) {
    return cljs.core._name.call(null, x)
  }else {
    if(typeof x === "string") {
      return x
    }else {
      throw new Error([cljs.core.str("Doesn't support name: "), cljs.core.str(x)].join(""));
    }
  }
};
cljs.core.zipmap = function zipmap(keys, vals) {
  var map = cljs.core.transient$.call(null, cljs.core.PersistentArrayMap.EMPTY);
  var ks = cljs.core.seq.call(null, keys);
  var vs = cljs.core.seq.call(null, vals);
  while(true) {
    if(ks && vs) {
      var G__425788 = cljs.core.assoc_BANG_.call(null, map, cljs.core.first.call(null, ks), cljs.core.first.call(null, vs));
      var G__425789 = cljs.core.next.call(null, ks);
      var G__425790 = cljs.core.next.call(null, vs);
      map = G__425788;
      ks = G__425789;
      vs = G__425790;
      continue
    }else {
      return cljs.core.persistent_BANG_.call(null, map)
    }
    break
  }
};
cljs.core.max_key = function() {
  var max_key = null;
  var max_key__2 = function(k, x) {
    return x
  };
  var max_key__3 = function(k, x, y) {
    if(k.call(null, x) > k.call(null, y)) {
      return x
    }else {
      return y
    }
  };
  var max_key__4 = function() {
    var G__425793__delegate = function(k, x, y, more) {
      return cljs.core.reduce.call(null, function(p1__425791_SHARP_, p2__425792_SHARP_) {
        return max_key.call(null, k, p1__425791_SHARP_, p2__425792_SHARP_)
      }, max_key.call(null, k, x, y), more)
    };
    var G__425793 = function(k, x, y, var_args) {
      var more = null;
      if(arguments.length > 3) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
      }
      return G__425793__delegate.call(this, k, x, y, more)
    };
    G__425793.cljs$lang$maxFixedArity = 3;
    G__425793.cljs$lang$applyTo = function(arglist__425794) {
      var k = cljs.core.first(arglist__425794);
      arglist__425794 = cljs.core.next(arglist__425794);
      var x = cljs.core.first(arglist__425794);
      arglist__425794 = cljs.core.next(arglist__425794);
      var y = cljs.core.first(arglist__425794);
      var more = cljs.core.rest(arglist__425794);
      return G__425793__delegate(k, x, y, more)
    };
    G__425793.cljs$core$IFn$_invoke$arity$variadic = G__425793__delegate;
    return G__425793
  }();
  max_key = function(k, x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 2:
        return max_key__2.call(this, k, x);
      case 3:
        return max_key__3.call(this, k, x, y);
      default:
        return max_key__4.cljs$core$IFn$_invoke$arity$variadic(k, x, y, cljs.core.array_seq(arguments, 3))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  max_key.cljs$lang$maxFixedArity = 3;
  max_key.cljs$lang$applyTo = max_key__4.cljs$lang$applyTo;
  max_key.cljs$core$IFn$_invoke$arity$2 = max_key__2;
  max_key.cljs$core$IFn$_invoke$arity$3 = max_key__3;
  max_key.cljs$core$IFn$_invoke$arity$variadic = max_key__4.cljs$core$IFn$_invoke$arity$variadic;
  return max_key
}();
cljs.core.min_key = function() {
  var min_key = null;
  var min_key__2 = function(k, x) {
    return x
  };
  var min_key__3 = function(k, x, y) {
    if(k.call(null, x) < k.call(null, y)) {
      return x
    }else {
      return y
    }
  };
  var min_key__4 = function() {
    var G__425797__delegate = function(k, x, y, more) {
      return cljs.core.reduce.call(null, function(p1__425795_SHARP_, p2__425796_SHARP_) {
        return min_key.call(null, k, p1__425795_SHARP_, p2__425796_SHARP_)
      }, min_key.call(null, k, x, y), more)
    };
    var G__425797 = function(k, x, y, var_args) {
      var more = null;
      if(arguments.length > 3) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
      }
      return G__425797__delegate.call(this, k, x, y, more)
    };
    G__425797.cljs$lang$maxFixedArity = 3;
    G__425797.cljs$lang$applyTo = function(arglist__425798) {
      var k = cljs.core.first(arglist__425798);
      arglist__425798 = cljs.core.next(arglist__425798);
      var x = cljs.core.first(arglist__425798);
      arglist__425798 = cljs.core.next(arglist__425798);
      var y = cljs.core.first(arglist__425798);
      var more = cljs.core.rest(arglist__425798);
      return G__425797__delegate(k, x, y, more)
    };
    G__425797.cljs$core$IFn$_invoke$arity$variadic = G__425797__delegate;
    return G__425797
  }();
  min_key = function(k, x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 2:
        return min_key__2.call(this, k, x);
      case 3:
        return min_key__3.call(this, k, x, y);
      default:
        return min_key__4.cljs$core$IFn$_invoke$arity$variadic(k, x, y, cljs.core.array_seq(arguments, 3))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  min_key.cljs$lang$maxFixedArity = 3;
  min_key.cljs$lang$applyTo = min_key__4.cljs$lang$applyTo;
  min_key.cljs$core$IFn$_invoke$arity$2 = min_key__2;
  min_key.cljs$core$IFn$_invoke$arity$3 = min_key__3;
  min_key.cljs$core$IFn$_invoke$arity$variadic = min_key__4.cljs$core$IFn$_invoke$arity$variadic;
  return min_key
}();
cljs.core.partition_all = function() {
  var partition_all = null;
  var partition_all__2 = function(n, coll) {
    return partition_all.call(null, n, n, coll)
  };
  var partition_all__3 = function(n, step, coll) {
    return new cljs.core.LazySeq(null, function() {
      var temp__4092__auto__ = cljs.core.seq.call(null, coll);
      if(temp__4092__auto__) {
        var s = temp__4092__auto__;
        return cljs.core.cons.call(null, cljs.core.take.call(null, n, s), partition_all.call(null, n, step, cljs.core.drop.call(null, step, s)))
      }else {
        return null
      }
    }, null, null)
  };
  partition_all = function(n, step, coll) {
    switch(arguments.length) {
      case 2:
        return partition_all__2.call(this, n, step);
      case 3:
        return partition_all__3.call(this, n, step, coll)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  partition_all.cljs$core$IFn$_invoke$arity$2 = partition_all__2;
  partition_all.cljs$core$IFn$_invoke$arity$3 = partition_all__3;
  return partition_all
}();
cljs.core.take_while = function take_while(pred, coll) {
  return new cljs.core.LazySeq(null, function() {
    var temp__4092__auto__ = cljs.core.seq.call(null, coll);
    if(temp__4092__auto__) {
      var s = temp__4092__auto__;
      if(cljs.core.truth_(pred.call(null, cljs.core.first.call(null, s)))) {
        return cljs.core.cons.call(null, cljs.core.first.call(null, s), take_while.call(null, pred, cljs.core.rest.call(null, s)))
      }else {
        return null
      }
    }else {
      return null
    }
  }, null, null)
};
cljs.core.mk_bound_fn = function mk_bound_fn(sc, test, key) {
  return function(e) {
    var comp = cljs.core._comparator.call(null, sc);
    return test.call(null, comp.call(null, cljs.core._entry_key.call(null, sc, e), key), 0)
  }
};
cljs.core.subseq = function() {
  var subseq = null;
  var subseq__3 = function(sc, test, key) {
    var include = cljs.core.mk_bound_fn.call(null, sc, test, key);
    if(cljs.core.truth_(cljs.core.PersistentHashSet.fromArray([cljs.core._GT_, cljs.core._GT__EQ_], true).call(null, test))) {
      var temp__4092__auto__ = cljs.core._sorted_seq_from.call(null, sc, key, true);
      if(cljs.core.truth_(temp__4092__auto__)) {
        var vec__425801 = temp__4092__auto__;
        var e = cljs.core.nth.call(null, vec__425801, 0, null);
        var s = vec__425801;
        if(cljs.core.truth_(include.call(null, e))) {
          return s
        }else {
          return cljs.core.next.call(null, s)
        }
      }else {
        return null
      }
    }else {
      return cljs.core.take_while.call(null, include, cljs.core._sorted_seq.call(null, sc, true))
    }
  };
  var subseq__5 = function(sc, start_test, start_key, end_test, end_key) {
    var temp__4092__auto__ = cljs.core._sorted_seq_from.call(null, sc, start_key, true);
    if(cljs.core.truth_(temp__4092__auto__)) {
      var vec__425802 = temp__4092__auto__;
      var e = cljs.core.nth.call(null, vec__425802, 0, null);
      var s = vec__425802;
      return cljs.core.take_while.call(null, cljs.core.mk_bound_fn.call(null, sc, end_test, end_key), cljs.core.truth_(cljs.core.mk_bound_fn.call(null, sc, start_test, start_key).call(null, e)) ? s : cljs.core.next.call(null, s))
    }else {
      return null
    }
  };
  subseq = function(sc, start_test, start_key, end_test, end_key) {
    switch(arguments.length) {
      case 3:
        return subseq__3.call(this, sc, start_test, start_key);
      case 5:
        return subseq__5.call(this, sc, start_test, start_key, end_test, end_key)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  subseq.cljs$core$IFn$_invoke$arity$3 = subseq__3;
  subseq.cljs$core$IFn$_invoke$arity$5 = subseq__5;
  return subseq
}();
cljs.core.rsubseq = function() {
  var rsubseq = null;
  var rsubseq__3 = function(sc, test, key) {
    var include = cljs.core.mk_bound_fn.call(null, sc, test, key);
    if(cljs.core.truth_(cljs.core.PersistentHashSet.fromArray([cljs.core._LT_, cljs.core._LT__EQ_], true).call(null, test))) {
      var temp__4092__auto__ = cljs.core._sorted_seq_from.call(null, sc, key, false);
      if(cljs.core.truth_(temp__4092__auto__)) {
        var vec__425805 = temp__4092__auto__;
        var e = cljs.core.nth.call(null, vec__425805, 0, null);
        var s = vec__425805;
        if(cljs.core.truth_(include.call(null, e))) {
          return s
        }else {
          return cljs.core.next.call(null, s)
        }
      }else {
        return null
      }
    }else {
      return cljs.core.take_while.call(null, include, cljs.core._sorted_seq.call(null, sc, false))
    }
  };
  var rsubseq__5 = function(sc, start_test, start_key, end_test, end_key) {
    var temp__4092__auto__ = cljs.core._sorted_seq_from.call(null, sc, end_key, false);
    if(cljs.core.truth_(temp__4092__auto__)) {
      var vec__425806 = temp__4092__auto__;
      var e = cljs.core.nth.call(null, vec__425806, 0, null);
      var s = vec__425806;
      return cljs.core.take_while.call(null, cljs.core.mk_bound_fn.call(null, sc, start_test, start_key), cljs.core.truth_(cljs.core.mk_bound_fn.call(null, sc, end_test, end_key).call(null, e)) ? s : cljs.core.next.call(null, s))
    }else {
      return null
    }
  };
  rsubseq = function(sc, start_test, start_key, end_test, end_key) {
    switch(arguments.length) {
      case 3:
        return rsubseq__3.call(this, sc, start_test, start_key);
      case 5:
        return rsubseq__5.call(this, sc, start_test, start_key, end_test, end_key)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  rsubseq.cljs$core$IFn$_invoke$arity$3 = rsubseq__3;
  rsubseq.cljs$core$IFn$_invoke$arity$5 = rsubseq__5;
  return rsubseq
}();
cljs.core.Range = function(meta, start, end, step, __hash) {
  this.meta = meta;
  this.start = start;
  this.end = end;
  this.step = step;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32375006
};
cljs.core.Range.cljs$lang$type = true;
cljs.core.Range.cljs$lang$ctorStr = "cljs.core/Range";
cljs.core.Range.cljs$lang$ctorPrWriter = function(this__3829__auto__, writer__3830__auto__, opt__3831__auto__) {
  return cljs.core._write.call(null, writer__3830__auto__, "cljs.core/Range")
};
cljs.core.Range.prototype.cljs$core$IHash$_hash$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  var h__3696__auto__ = self__.__hash;
  if(!(h__3696__auto__ == null)) {
    return h__3696__auto__
  }else {
    var h__3696__auto____$1 = cljs.core.hash_coll.call(null, rng__$1);
    self__.__hash = h__3696__auto____$1;
    return h__3696__auto____$1
  }
};
cljs.core.Range.prototype.cljs$core$INext$_next$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  if(self__.step > 0) {
    if(self__.start + self__.step < self__.end) {
      return new cljs.core.Range(self__.meta, self__.start + self__.step, self__.end, self__.step, null)
    }else {
      return null
    }
  }else {
    if(self__.start + self__.step > self__.end) {
      return new cljs.core.Range(self__.meta, self__.start + self__.step, self__.end, self__.step, null)
    }else {
      return null
    }
  }
};
cljs.core.Range.prototype.cljs$core$ICollection$_conj$arity$2 = function(rng, o) {
  var self__ = this;
  var rng__$1 = this;
  return cljs.core.cons.call(null, o, rng__$1)
};
cljs.core.Range.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll)
};
cljs.core.Range.prototype.cljs$core$IReduce$_reduce$arity$2 = function(rng, f) {
  var self__ = this;
  var rng__$1 = this;
  return cljs.core.ci_reduce.call(null, rng__$1, f)
};
cljs.core.Range.prototype.cljs$core$IReduce$_reduce$arity$3 = function(rng, f, s) {
  var self__ = this;
  var rng__$1 = this;
  return cljs.core.ci_reduce.call(null, rng__$1, f, s)
};
cljs.core.Range.prototype.cljs$core$ISeqable$_seq$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  if(self__.step > 0) {
    if(self__.start < self__.end) {
      return rng__$1
    }else {
      return null
    }
  }else {
    if(self__.start > self__.end) {
      return rng__$1
    }else {
      return null
    }
  }
};
cljs.core.Range.prototype.cljs$core$ICounted$_count$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  if(cljs.core.not.call(null, cljs.core._seq.call(null, rng__$1))) {
    return 0
  }else {
    return Math.ceil((self__.end - self__.start) / self__.step)
  }
};
cljs.core.Range.prototype.cljs$core$ISeq$_first$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  return self__.start
};
cljs.core.Range.prototype.cljs$core$ISeq$_rest$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  if(!(cljs.core._seq.call(null, rng__$1) == null)) {
    return new cljs.core.Range(self__.meta, self__.start + self__.step, self__.end, self__.step, null)
  }else {
    return cljs.core.List.EMPTY
  }
};
cljs.core.Range.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(rng, other) {
  var self__ = this;
  var rng__$1 = this;
  return cljs.core.equiv_sequential.call(null, rng__$1, other)
};
cljs.core.Range.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(rng, meta__$1) {
  var self__ = this;
  var rng__$1 = this;
  return new cljs.core.Range(meta__$1, self__.start, self__.end, self__.step, self__.__hash)
};
cljs.core.Range.prototype.cljs$core$IMeta$_meta$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  return self__.meta
};
cljs.core.Range.prototype.cljs$core$IIndexed$_nth$arity$2 = function(rng, n) {
  var self__ = this;
  var rng__$1 = this;
  if(n < cljs.core._count.call(null, rng__$1)) {
    return self__.start + n * self__.step
  }else {
    if(self__.start > self__.end && self__.step === 0) {
      return self__.start
    }else {
      throw new Error("Index out of bounds");
    }
  }
};
cljs.core.Range.prototype.cljs$core$IIndexed$_nth$arity$3 = function(rng, n, not_found) {
  var self__ = this;
  var rng__$1 = this;
  if(n < cljs.core._count.call(null, rng__$1)) {
    return self__.start + n * self__.step
  }else {
    if(self__.start > self__.end && self__.step === 0) {
      return self__.start
    }else {
      return not_found
    }
  }
};
cljs.core.Range.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, self__.meta)
};
cljs.core.__GT_Range = function __GT_Range(meta, start, end, step, __hash) {
  return new cljs.core.Range(meta, start, end, step, __hash)
};
cljs.core.range = function() {
  var range = null;
  var range__0 = function() {
    return range.call(null, 0, Number.MAX_VALUE, 1)
  };
  var range__1 = function(end) {
    return range.call(null, 0, end, 1)
  };
  var range__2 = function(start, end) {
    return range.call(null, start, end, 1)
  };
  var range__3 = function(start, end, step) {
    return new cljs.core.Range(null, start, end, step, null)
  };
  range = function(start, end, step) {
    switch(arguments.length) {
      case 0:
        return range__0.call(this);
      case 1:
        return range__1.call(this, start);
      case 2:
        return range__2.call(this, start, end);
      case 3:
        return range__3.call(this, start, end, step)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  range.cljs$core$IFn$_invoke$arity$0 = range__0;
  range.cljs$core$IFn$_invoke$arity$1 = range__1;
  range.cljs$core$IFn$_invoke$arity$2 = range__2;
  range.cljs$core$IFn$_invoke$arity$3 = range__3;
  return range
}();
cljs.core.take_nth = function take_nth(n, coll) {
  return new cljs.core.LazySeq(null, function() {
    var temp__4092__auto__ = cljs.core.seq.call(null, coll);
    if(temp__4092__auto__) {
      var s = temp__4092__auto__;
      return cljs.core.cons.call(null, cljs.core.first.call(null, s), take_nth.call(null, n, cljs.core.drop.call(null, n, s)))
    }else {
      return null
    }
  }, null, null)
};
cljs.core.split_with = function split_with(pred, coll) {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.take_while.call(null, pred, coll), cljs.core.drop_while.call(null, pred, coll)], null)
};
cljs.core.partition_by = function partition_by(f, coll) {
  return new cljs.core.LazySeq(null, function() {
    var temp__4092__auto__ = cljs.core.seq.call(null, coll);
    if(temp__4092__auto__) {
      var s = temp__4092__auto__;
      var fst = cljs.core.first.call(null, s);
      var fv = f.call(null, fst);
      var run = cljs.core.cons.call(null, fst, cljs.core.take_while.call(null, function(fst, fv) {
        return function(p1__425807_SHARP_) {
          return cljs.core._EQ_.call(null, fv, f.call(null, p1__425807_SHARP_))
        }
      }(fst, fv), cljs.core.next.call(null, s)));
      return cljs.core.cons.call(null, run, partition_by.call(null, f, cljs.core.seq.call(null, cljs.core.drop.call(null, cljs.core.count.call(null, run), s))))
    }else {
      return null
    }
  }, null, null)
};
cljs.core.frequencies = function frequencies(coll) {
  return cljs.core.persistent_BANG_.call(null, cljs.core.reduce.call(null, function(counts, x) {
    return cljs.core.assoc_BANG_.call(null, counts, x, cljs.core.get.call(null, counts, x, 0) + 1)
  }, cljs.core.transient$.call(null, cljs.core.PersistentArrayMap.EMPTY), coll))
};
cljs.core.reductions = function() {
  var reductions = null;
  var reductions__2 = function(f, coll) {
    return new cljs.core.LazySeq(null, function() {
      var temp__4090__auto__ = cljs.core.seq.call(null, coll);
      if(temp__4090__auto__) {
        var s = temp__4090__auto__;
        return reductions.call(null, f, cljs.core.first.call(null, s), cljs.core.rest.call(null, s))
      }else {
        return cljs.core._conj.call(null, cljs.core.List.EMPTY, f.call(null))
      }
    }, null, null)
  };
  var reductions__3 = function(f, init, coll) {
    return cljs.core.cons.call(null, init, new cljs.core.LazySeq(null, function() {
      var temp__4092__auto__ = cljs.core.seq.call(null, coll);
      if(temp__4092__auto__) {
        var s = temp__4092__auto__;
        return reductions.call(null, f, f.call(null, init, cljs.core.first.call(null, s)), cljs.core.rest.call(null, s))
      }else {
        return null
      }
    }, null, null))
  };
  reductions = function(f, init, coll) {
    switch(arguments.length) {
      case 2:
        return reductions__2.call(this, f, init);
      case 3:
        return reductions__3.call(this, f, init, coll)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  reductions.cljs$core$IFn$_invoke$arity$2 = reductions__2;
  reductions.cljs$core$IFn$_invoke$arity$3 = reductions__3;
  return reductions
}();
cljs.core.juxt = function() {
  var juxt = null;
  var juxt__1 = function(f) {
    return function() {
      var G__425818 = null;
      var G__425818__0 = function() {
        return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.call(null)], null)
      };
      var G__425818__1 = function(x) {
        return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.call(null, x)], null)
      };
      var G__425818__2 = function(x, y) {
        return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.call(null, x, y)], null)
      };
      var G__425818__3 = function(x, y, z) {
        return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.call(null, x, y, z)], null)
      };
      var G__425818__4 = function() {
        var G__425819__delegate = function(x, y, z, args) {
          return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.apply.call(null, f, x, y, z, args)], null)
        };
        var G__425819 = function(x, y, z, var_args) {
          var args = null;
          if(arguments.length > 3) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
          }
          return G__425819__delegate.call(this, x, y, z, args)
        };
        G__425819.cljs$lang$maxFixedArity = 3;
        G__425819.cljs$lang$applyTo = function(arglist__425820) {
          var x = cljs.core.first(arglist__425820);
          arglist__425820 = cljs.core.next(arglist__425820);
          var y = cljs.core.first(arglist__425820);
          arglist__425820 = cljs.core.next(arglist__425820);
          var z = cljs.core.first(arglist__425820);
          var args = cljs.core.rest(arglist__425820);
          return G__425819__delegate(x, y, z, args)
        };
        G__425819.cljs$core$IFn$_invoke$arity$variadic = G__425819__delegate;
        return G__425819
      }();
      G__425818 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return G__425818__0.call(this);
          case 1:
            return G__425818__1.call(this, x);
          case 2:
            return G__425818__2.call(this, x, y);
          case 3:
            return G__425818__3.call(this, x, y, z);
          default:
            return G__425818__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3))
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__425818.cljs$lang$maxFixedArity = 3;
      G__425818.cljs$lang$applyTo = G__425818__4.cljs$lang$applyTo;
      return G__425818
    }()
  };
  var juxt__2 = function(f, g) {
    return function() {
      var G__425821 = null;
      var G__425821__0 = function() {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.call(null), g.call(null)], null)
      };
      var G__425821__1 = function(x) {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.call(null, x), g.call(null, x)], null)
      };
      var G__425821__2 = function(x, y) {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.call(null, x, y), g.call(null, x, y)], null)
      };
      var G__425821__3 = function(x, y, z) {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.call(null, x, y, z), g.call(null, x, y, z)], null)
      };
      var G__425821__4 = function() {
        var G__425822__delegate = function(x, y, z, args) {
          return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.apply.call(null, f, x, y, z, args), cljs.core.apply.call(null, g, x, y, z, args)], null)
        };
        var G__425822 = function(x, y, z, var_args) {
          var args = null;
          if(arguments.length > 3) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
          }
          return G__425822__delegate.call(this, x, y, z, args)
        };
        G__425822.cljs$lang$maxFixedArity = 3;
        G__425822.cljs$lang$applyTo = function(arglist__425823) {
          var x = cljs.core.first(arglist__425823);
          arglist__425823 = cljs.core.next(arglist__425823);
          var y = cljs.core.first(arglist__425823);
          arglist__425823 = cljs.core.next(arglist__425823);
          var z = cljs.core.first(arglist__425823);
          var args = cljs.core.rest(arglist__425823);
          return G__425822__delegate(x, y, z, args)
        };
        G__425822.cljs$core$IFn$_invoke$arity$variadic = G__425822__delegate;
        return G__425822
      }();
      G__425821 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return G__425821__0.call(this);
          case 1:
            return G__425821__1.call(this, x);
          case 2:
            return G__425821__2.call(this, x, y);
          case 3:
            return G__425821__3.call(this, x, y, z);
          default:
            return G__425821__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3))
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__425821.cljs$lang$maxFixedArity = 3;
      G__425821.cljs$lang$applyTo = G__425821__4.cljs$lang$applyTo;
      return G__425821
    }()
  };
  var juxt__3 = function(f, g, h) {
    return function() {
      var G__425824 = null;
      var G__425824__0 = function() {
        return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.call(null), g.call(null), h.call(null)], null)
      };
      var G__425824__1 = function(x) {
        return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.call(null, x), g.call(null, x), h.call(null, x)], null)
      };
      var G__425824__2 = function(x, y) {
        return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.call(null, x, y), g.call(null, x, y), h.call(null, x, y)], null)
      };
      var G__425824__3 = function(x, y, z) {
        return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.call(null, x, y, z), g.call(null, x, y, z), h.call(null, x, y, z)], null)
      };
      var G__425824__4 = function() {
        var G__425825__delegate = function(x, y, z, args) {
          return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.apply.call(null, f, x, y, z, args), cljs.core.apply.call(null, g, x, y, z, args), cljs.core.apply.call(null, h, x, y, z, args)], null)
        };
        var G__425825 = function(x, y, z, var_args) {
          var args = null;
          if(arguments.length > 3) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
          }
          return G__425825__delegate.call(this, x, y, z, args)
        };
        G__425825.cljs$lang$maxFixedArity = 3;
        G__425825.cljs$lang$applyTo = function(arglist__425826) {
          var x = cljs.core.first(arglist__425826);
          arglist__425826 = cljs.core.next(arglist__425826);
          var y = cljs.core.first(arglist__425826);
          arglist__425826 = cljs.core.next(arglist__425826);
          var z = cljs.core.first(arglist__425826);
          var args = cljs.core.rest(arglist__425826);
          return G__425825__delegate(x, y, z, args)
        };
        G__425825.cljs$core$IFn$_invoke$arity$variadic = G__425825__delegate;
        return G__425825
      }();
      G__425824 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return G__425824__0.call(this);
          case 1:
            return G__425824__1.call(this, x);
          case 2:
            return G__425824__2.call(this, x, y);
          case 3:
            return G__425824__3.call(this, x, y, z);
          default:
            return G__425824__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3))
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__425824.cljs$lang$maxFixedArity = 3;
      G__425824.cljs$lang$applyTo = G__425824__4.cljs$lang$applyTo;
      return G__425824
    }()
  };
  var juxt__4 = function() {
    var G__425827__delegate = function(f, g, h, fs) {
      var fs__$1 = cljs.core.list_STAR_.call(null, f, g, h, fs);
      return function() {
        var G__425828 = null;
        var G__425828__0 = function() {
          return cljs.core.reduce.call(null, function(p1__425808_SHARP_, p2__425809_SHARP_) {
            return cljs.core.conj.call(null, p1__425808_SHARP_, p2__425809_SHARP_.call(null))
          }, cljs.core.PersistentVector.EMPTY, fs__$1)
        };
        var G__425828__1 = function(x) {
          return cljs.core.reduce.call(null, function(p1__425810_SHARP_, p2__425811_SHARP_) {
            return cljs.core.conj.call(null, p1__425810_SHARP_, p2__425811_SHARP_.call(null, x))
          }, cljs.core.PersistentVector.EMPTY, fs__$1)
        };
        var G__425828__2 = function(x, y) {
          return cljs.core.reduce.call(null, function(p1__425812_SHARP_, p2__425813_SHARP_) {
            return cljs.core.conj.call(null, p1__425812_SHARP_, p2__425813_SHARP_.call(null, x, y))
          }, cljs.core.PersistentVector.EMPTY, fs__$1)
        };
        var G__425828__3 = function(x, y, z) {
          return cljs.core.reduce.call(null, function(p1__425814_SHARP_, p2__425815_SHARP_) {
            return cljs.core.conj.call(null, p1__425814_SHARP_, p2__425815_SHARP_.call(null, x, y, z))
          }, cljs.core.PersistentVector.EMPTY, fs__$1)
        };
        var G__425828__4 = function() {
          var G__425829__delegate = function(x, y, z, args) {
            return cljs.core.reduce.call(null, function(p1__425816_SHARP_, p2__425817_SHARP_) {
              return cljs.core.conj.call(null, p1__425816_SHARP_, cljs.core.apply.call(null, p2__425817_SHARP_, x, y, z, args))
            }, cljs.core.PersistentVector.EMPTY, fs__$1)
          };
          var G__425829 = function(x, y, z, var_args) {
            var args = null;
            if(arguments.length > 3) {
              args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
            }
            return G__425829__delegate.call(this, x, y, z, args)
          };
          G__425829.cljs$lang$maxFixedArity = 3;
          G__425829.cljs$lang$applyTo = function(arglist__425830) {
            var x = cljs.core.first(arglist__425830);
            arglist__425830 = cljs.core.next(arglist__425830);
            var y = cljs.core.first(arglist__425830);
            arglist__425830 = cljs.core.next(arglist__425830);
            var z = cljs.core.first(arglist__425830);
            var args = cljs.core.rest(arglist__425830);
            return G__425829__delegate(x, y, z, args)
          };
          G__425829.cljs$core$IFn$_invoke$arity$variadic = G__425829__delegate;
          return G__425829
        }();
        G__425828 = function(x, y, z, var_args) {
          var args = var_args;
          switch(arguments.length) {
            case 0:
              return G__425828__0.call(this);
            case 1:
              return G__425828__1.call(this, x);
            case 2:
              return G__425828__2.call(this, x, y);
            case 3:
              return G__425828__3.call(this, x, y, z);
            default:
              return G__425828__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3))
          }
          throw new Error("Invalid arity: " + arguments.length);
        };
        G__425828.cljs$lang$maxFixedArity = 3;
        G__425828.cljs$lang$applyTo = G__425828__4.cljs$lang$applyTo;
        return G__425828
      }()
    };
    var G__425827 = function(f, g, h, var_args) {
      var fs = null;
      if(arguments.length > 3) {
        fs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
      }
      return G__425827__delegate.call(this, f, g, h, fs)
    };
    G__425827.cljs$lang$maxFixedArity = 3;
    G__425827.cljs$lang$applyTo = function(arglist__425831) {
      var f = cljs.core.first(arglist__425831);
      arglist__425831 = cljs.core.next(arglist__425831);
      var g = cljs.core.first(arglist__425831);
      arglist__425831 = cljs.core.next(arglist__425831);
      var h = cljs.core.first(arglist__425831);
      var fs = cljs.core.rest(arglist__425831);
      return G__425827__delegate(f, g, h, fs)
    };
    G__425827.cljs$core$IFn$_invoke$arity$variadic = G__425827__delegate;
    return G__425827
  }();
  juxt = function(f, g, h, var_args) {
    var fs = var_args;
    switch(arguments.length) {
      case 1:
        return juxt__1.call(this, f);
      case 2:
        return juxt__2.call(this, f, g);
      case 3:
        return juxt__3.call(this, f, g, h);
      default:
        return juxt__4.cljs$core$IFn$_invoke$arity$variadic(f, g, h, cljs.core.array_seq(arguments, 3))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  juxt.cljs$lang$maxFixedArity = 3;
  juxt.cljs$lang$applyTo = juxt__4.cljs$lang$applyTo;
  juxt.cljs$core$IFn$_invoke$arity$1 = juxt__1;
  juxt.cljs$core$IFn$_invoke$arity$2 = juxt__2;
  juxt.cljs$core$IFn$_invoke$arity$3 = juxt__3;
  juxt.cljs$core$IFn$_invoke$arity$variadic = juxt__4.cljs$core$IFn$_invoke$arity$variadic;
  return juxt
}();
cljs.core.dorun = function() {
  var dorun = null;
  var dorun__1 = function(coll) {
    while(true) {
      if(cljs.core.seq.call(null, coll)) {
        var G__425832 = cljs.core.next.call(null, coll);
        coll = G__425832;
        continue
      }else {
        return null
      }
      break
    }
  };
  var dorun__2 = function(n, coll) {
    while(true) {
      if(cljs.core.seq.call(null, coll) && n > 0) {
        var G__425833 = n - 1;
        var G__425834 = cljs.core.next.call(null, coll);
        n = G__425833;
        coll = G__425834;
        continue
      }else {
        return null
      }
      break
    }
  };
  dorun = function(n, coll) {
    switch(arguments.length) {
      case 1:
        return dorun__1.call(this, n);
      case 2:
        return dorun__2.call(this, n, coll)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  dorun.cljs$core$IFn$_invoke$arity$1 = dorun__1;
  dorun.cljs$core$IFn$_invoke$arity$2 = dorun__2;
  return dorun
}();
cljs.core.doall = function() {
  var doall = null;
  var doall__1 = function(coll) {
    cljs.core.dorun.call(null, coll);
    return coll
  };
  var doall__2 = function(n, coll) {
    cljs.core.dorun.call(null, n, coll);
    return coll
  };
  doall = function(n, coll) {
    switch(arguments.length) {
      case 1:
        return doall__1.call(this, n);
      case 2:
        return doall__2.call(this, n, coll)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  doall.cljs$core$IFn$_invoke$arity$1 = doall__1;
  doall.cljs$core$IFn$_invoke$arity$2 = doall__2;
  return doall
}();
cljs.core.regexp_QMARK_ = function regexp_QMARK_(o) {
  return o instanceof RegExp
};
cljs.core.re_matches = function re_matches(re, s) {
  var matches = re.exec(s);
  if(cljs.core._EQ_.call(null, cljs.core.first.call(null, matches), s)) {
    if(cljs.core.count.call(null, matches) === 1) {
      return cljs.core.first.call(null, matches)
    }else {
      return cljs.core.vec.call(null, matches)
    }
  }else {
    return null
  }
};
cljs.core.re_find = function re_find(re, s) {
  var matches = re.exec(s);
  if(matches == null) {
    return null
  }else {
    if(cljs.core.count.call(null, matches) === 1) {
      return cljs.core.first.call(null, matches)
    }else {
      return cljs.core.vec.call(null, matches)
    }
  }
};
cljs.core.re_seq = function re_seq(re, s) {
  var match_data = cljs.core.re_find.call(null, re, s);
  var match_idx = s.search(re);
  var match_str = cljs.core.coll_QMARK_.call(null, match_data) ? cljs.core.first.call(null, match_data) : match_data;
  var post_match = cljs.core.subs.call(null, s, match_idx + cljs.core.count.call(null, match_str));
  if(cljs.core.truth_(match_data)) {
    return new cljs.core.LazySeq(null, function() {
      return cljs.core.cons.call(null, match_data, cljs.core.seq.call(null, post_match) ? re_seq.call(null, re, post_match) : null)
    }, null, null)
  }else {
    return null
  }
};
cljs.core.re_pattern = function re_pattern(s) {
  var vec__425836 = cljs.core.re_find.call(null, /^(?:\(\?([idmsux]*)\))?(.*)/, s);
  var _ = cljs.core.nth.call(null, vec__425836, 0, null);
  var flags = cljs.core.nth.call(null, vec__425836, 1, null);
  var pattern = cljs.core.nth.call(null, vec__425836, 2, null);
  return new RegExp(pattern, flags)
};
cljs.core.pr_sequential_writer = function pr_sequential_writer(writer, print_one, begin, sep, end, opts, coll) {
  cljs.core._write.call(null, writer, begin);
  if(cljs.core.seq.call(null, coll)) {
    print_one.call(null, cljs.core.first.call(null, coll), writer, opts)
  }else {
  }
  var coll_425837__$1 = cljs.core.next.call(null, coll);
  var n_425838 = (new cljs.core.Keyword(null, "print-length", "print-length", 3960797560)).cljs$core$IFn$_invoke$arity$1(opts);
  while(true) {
    if(coll_425837__$1 && (n_425838 == null || !(n_425838 === 0))) {
      cljs.core._write.call(null, writer, sep);
      print_one.call(null, cljs.core.first.call(null, coll_425837__$1), writer, opts);
      var G__425839 = cljs.core.next.call(null, coll_425837__$1);
      var G__425840 = n_425838 - 1;
      coll_425837__$1 = G__425839;
      n_425838 = G__425840;
      continue
    }else {
    }
    break
  }
  if(cljs.core.truth_((new cljs.core.Keyword(null, "print-length", "print-length", 3960797560)).cljs$core$IFn$_invoke$arity$1(opts))) {
    cljs.core._write.call(null, writer, sep);
    print_one.call(null, "...", writer, opts)
  }else {
  }
  return cljs.core._write.call(null, writer, end)
};
cljs.core.write_all = function() {
  var write_all__delegate = function(writer, ss) {
    var seq__425845 = cljs.core.seq.call(null, ss);
    var chunk__425846 = null;
    var count__425847 = 0;
    var i__425848 = 0;
    while(true) {
      if(i__425848 < count__425847) {
        var s = cljs.core._nth.call(null, chunk__425846, i__425848);
        cljs.core._write.call(null, writer, s);
        var G__425849 = seq__425845;
        var G__425850 = chunk__425846;
        var G__425851 = count__425847;
        var G__425852 = i__425848 + 1;
        seq__425845 = G__425849;
        chunk__425846 = G__425850;
        count__425847 = G__425851;
        i__425848 = G__425852;
        continue
      }else {
        var temp__4092__auto__ = cljs.core.seq.call(null, seq__425845);
        if(temp__4092__auto__) {
          var seq__425845__$1 = temp__4092__auto__;
          if(cljs.core.chunked_seq_QMARK_.call(null, seq__425845__$1)) {
            var c__4009__auto__ = cljs.core.chunk_first.call(null, seq__425845__$1);
            var G__425853 = cljs.core.chunk_rest.call(null, seq__425845__$1);
            var G__425854 = c__4009__auto__;
            var G__425855 = cljs.core.count.call(null, c__4009__auto__);
            var G__425856 = 0;
            seq__425845 = G__425853;
            chunk__425846 = G__425854;
            count__425847 = G__425855;
            i__425848 = G__425856;
            continue
          }else {
            var s = cljs.core.first.call(null, seq__425845__$1);
            cljs.core._write.call(null, writer, s);
            var G__425857 = cljs.core.next.call(null, seq__425845__$1);
            var G__425858 = null;
            var G__425859 = 0;
            var G__425860 = 0;
            seq__425845 = G__425857;
            chunk__425846 = G__425858;
            count__425847 = G__425859;
            i__425848 = G__425860;
            continue
          }
        }else {
          return null
        }
      }
      break
    }
  };
  var write_all = function(writer, var_args) {
    var ss = null;
    if(arguments.length > 1) {
      ss = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
    }
    return write_all__delegate.call(this, writer, ss)
  };
  write_all.cljs$lang$maxFixedArity = 1;
  write_all.cljs$lang$applyTo = function(arglist__425861) {
    var writer = cljs.core.first(arglist__425861);
    var ss = cljs.core.rest(arglist__425861);
    return write_all__delegate(writer, ss)
  };
  write_all.cljs$core$IFn$_invoke$arity$variadic = write_all__delegate;
  return write_all
}();
cljs.core.string_print = function string_print(x) {
  cljs.core._STAR_print_fn_STAR_.call(null, x);
  return null
};
cljs.core.flush = function flush() {
  return null
};
cljs.core.char_escapes = function() {
  var obj425863 = {'"':'\\"', "\\":"\\\\", "\u0008":"\\b", "\u000c":"\\f", "\n":"\\n", "\r":"\\r", "\t":"\\t"};
  return obj425863
}();
cljs.core.quote_string = function quote_string(s) {
  return[cljs.core.str('"'), cljs.core.str(s.replace(RegExp('[\\\\"\u0008\u000c\n\r\t]', "g"), function(match) {
    return cljs.core.char_escapes[match]
  })), cljs.core.str('"')].join("")
};
cljs.core.pr_writer = function pr_writer(obj, writer, opts) {
  if(obj == null) {
    return cljs.core._write.call(null, writer, "nil")
  }else {
    if(void 0 === obj) {
      return cljs.core._write.call(null, writer, "#<undefined>")
    }else {
      if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        if(cljs.core.truth_(function() {
          var and__3273__auto__ = cljs.core.get.call(null, opts, new cljs.core.Keyword(null, "meta", "meta", 1017252215));
          if(cljs.core.truth_(and__3273__auto__)) {
            var and__3273__auto____$1 = function() {
              var G__425869 = obj;
              if(G__425869) {
                var bit__3911__auto__ = G__425869.cljs$lang$protocol_mask$partition0$ & 131072;
                if(bit__3911__auto__ || G__425869.cljs$core$IMeta$) {
                  return true
                }else {
                  if(!G__425869.cljs$lang$protocol_mask$partition0$) {
                    return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IMeta, G__425869)
                  }else {
                    return false
                  }
                }
              }else {
                return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IMeta, G__425869)
              }
            }();
            if(and__3273__auto____$1) {
              return cljs.core.meta.call(null, obj)
            }else {
              return and__3273__auto____$1
            }
          }else {
            return and__3273__auto__
          }
        }())) {
          cljs.core._write.call(null, writer, "^");
          pr_writer.call(null, cljs.core.meta.call(null, obj), writer, opts);
          cljs.core._write.call(null, writer, " ")
        }else {
        }
        if(obj == null) {
          return cljs.core._write.call(null, writer, "nil")
        }else {
          if(obj.cljs$lang$type) {
            return obj.cljs$lang$ctorPrWriter(obj, writer, opts)
          }else {
            if(function() {
              var G__425870 = obj;
              if(G__425870) {
                var bit__3904__auto__ = G__425870.cljs$lang$protocol_mask$partition0$ & 2147483648;
                if(bit__3904__auto__ || G__425870.cljs$core$IPrintWithWriter$) {
                  return true
                }else {
                  return false
                }
              }else {
                return false
              }
            }()) {
              return cljs.core._pr_writer.call(null, obj, writer, opts)
            }else {
              if(cljs.core.type.call(null, obj) === Boolean || typeof obj === "number") {
                return cljs.core._write.call(null, writer, [cljs.core.str(obj)].join(""))
              }else {
                if(obj instanceof Array) {
                  return cljs.core.pr_sequential_writer.call(null, writer, pr_writer, "#<Array [", ", ", "]>", opts, obj)
                }else {
                  if(goog.isString(obj)) {
                    if(cljs.core.truth_((new cljs.core.Keyword(null, "readably", "readably", 4441712502)).cljs$core$IFn$_invoke$arity$1(opts))) {
                      return cljs.core._write.call(null, writer, cljs.core.quote_string.call(null, obj))
                    }else {
                      return cljs.core._write.call(null, writer, obj)
                    }
                  }else {
                    if(cljs.core.fn_QMARK_.call(null, obj)) {
                      return cljs.core.write_all.call(null, writer, "#<", [cljs.core.str(obj)].join(""), ">")
                    }else {
                      if(obj instanceof Date) {
                        var normalize = function(n, len) {
                          var ns = [cljs.core.str(n)].join("");
                          while(true) {
                            if(cljs.core.count.call(null, ns) < len) {
                              var G__425872 = [cljs.core.str("0"), cljs.core.str(ns)].join("");
                              ns = G__425872;
                              continue
                            }else {
                              return ns
                            }
                            break
                          }
                        };
                        return cljs.core.write_all.call(null, writer, '#inst "', [cljs.core.str(obj.getUTCFullYear())].join(""), "-", normalize.call(null, obj.getUTCMonth() + 1, 2), "-", normalize.call(null, obj.getUTCDate(), 2), "T", normalize.call(null, obj.getUTCHours(), 2), ":", normalize.call(null, obj.getUTCMinutes(), 2), ":", normalize.call(null, obj.getUTCSeconds(), 2), ".", normalize.call(null, obj.getUTCMilliseconds(), 3), "-", '00:00"')
                      }else {
                        if(cljs.core.regexp_QMARK_.call(null, obj)) {
                          return cljs.core.write_all.call(null, writer, '#"', obj.source, '"')
                        }else {
                          if(function() {
                            var G__425871 = obj;
                            if(G__425871) {
                              var bit__3911__auto__ = G__425871.cljs$lang$protocol_mask$partition0$ & 2147483648;
                              if(bit__3911__auto__ || G__425871.cljs$core$IPrintWithWriter$) {
                                return true
                              }else {
                                if(!G__425871.cljs$lang$protocol_mask$partition0$) {
                                  return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IPrintWithWriter, G__425871)
                                }else {
                                  return false
                                }
                              }
                            }else {
                              return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IPrintWithWriter, G__425871)
                            }
                          }()) {
                            return cljs.core._pr_writer.call(null, obj, writer, opts)
                          }else {
                            if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                              return cljs.core.write_all.call(null, writer, "#<", [cljs.core.str(obj)].join(""), ">")
                            }else {
                              return null
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }else {
        return null
      }
    }
  }
};
cljs.core.pr_seq_writer = function pr_seq_writer(objs, writer, opts) {
  cljs.core.pr_writer.call(null, cljs.core.first.call(null, objs), writer, opts);
  var seq__425877 = cljs.core.seq.call(null, cljs.core.next.call(null, objs));
  var chunk__425878 = null;
  var count__425879 = 0;
  var i__425880 = 0;
  while(true) {
    if(i__425880 < count__425879) {
      var obj = cljs.core._nth.call(null, chunk__425878, i__425880);
      cljs.core._write.call(null, writer, " ");
      cljs.core.pr_writer.call(null, obj, writer, opts);
      var G__425881 = seq__425877;
      var G__425882 = chunk__425878;
      var G__425883 = count__425879;
      var G__425884 = i__425880 + 1;
      seq__425877 = G__425881;
      chunk__425878 = G__425882;
      count__425879 = G__425883;
      i__425880 = G__425884;
      continue
    }else {
      var temp__4092__auto__ = cljs.core.seq.call(null, seq__425877);
      if(temp__4092__auto__) {
        var seq__425877__$1 = temp__4092__auto__;
        if(cljs.core.chunked_seq_QMARK_.call(null, seq__425877__$1)) {
          var c__4009__auto__ = cljs.core.chunk_first.call(null, seq__425877__$1);
          var G__425885 = cljs.core.chunk_rest.call(null, seq__425877__$1);
          var G__425886 = c__4009__auto__;
          var G__425887 = cljs.core.count.call(null, c__4009__auto__);
          var G__425888 = 0;
          seq__425877 = G__425885;
          chunk__425878 = G__425886;
          count__425879 = G__425887;
          i__425880 = G__425888;
          continue
        }else {
          var obj = cljs.core.first.call(null, seq__425877__$1);
          cljs.core._write.call(null, writer, " ");
          cljs.core.pr_writer.call(null, obj, writer, opts);
          var G__425889 = cljs.core.next.call(null, seq__425877__$1);
          var G__425890 = null;
          var G__425891 = 0;
          var G__425892 = 0;
          seq__425877 = G__425889;
          chunk__425878 = G__425890;
          count__425879 = G__425891;
          i__425880 = G__425892;
          continue
        }
      }else {
        return null
      }
    }
    break
  }
};
cljs.core.pr_sb_with_opts = function pr_sb_with_opts(objs, opts) {
  var sb = new goog.string.StringBuffer;
  var writer = new cljs.core.StringBufferWriter(sb);
  cljs.core.pr_seq_writer.call(null, objs, writer, opts);
  cljs.core._flush.call(null, writer);
  return sb
};
cljs.core.pr_str_with_opts = function pr_str_with_opts(objs, opts) {
  if(cljs.core.empty_QMARK_.call(null, objs)) {
    return""
  }else {
    return[cljs.core.str(cljs.core.pr_sb_with_opts.call(null, objs, opts))].join("")
  }
};
cljs.core.prn_str_with_opts = function prn_str_with_opts(objs, opts) {
  if(cljs.core.empty_QMARK_.call(null, objs)) {
    return"\n"
  }else {
    var sb = cljs.core.pr_sb_with_opts.call(null, objs, opts);
    sb.append("\n");
    return[cljs.core.str(sb)].join("")
  }
};
cljs.core.pr_with_opts = function pr_with_opts(objs, opts) {
  return cljs.core.string_print.call(null, cljs.core.pr_str_with_opts.call(null, objs, opts))
};
cljs.core.newline = function newline(opts) {
  cljs.core.string_print.call(null, "\n");
  if(cljs.core.truth_(cljs.core.get.call(null, opts, new cljs.core.Keyword(null, "flush-on-newline", "flush-on-newline", 4338025857)))) {
    return cljs.core.flush.call(null)
  }else {
    return null
  }
};
cljs.core.pr_str = function() {
  var pr_str__delegate = function(objs) {
    return cljs.core.pr_str_with_opts.call(null, objs, cljs.core.pr_opts.call(null))
  };
  var pr_str = function(var_args) {
    var objs = null;
    if(arguments.length > 0) {
      objs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return pr_str__delegate.call(this, objs)
  };
  pr_str.cljs$lang$maxFixedArity = 0;
  pr_str.cljs$lang$applyTo = function(arglist__425893) {
    var objs = cljs.core.seq(arglist__425893);
    return pr_str__delegate(objs)
  };
  pr_str.cljs$core$IFn$_invoke$arity$variadic = pr_str__delegate;
  return pr_str
}();
cljs.core.prn_str = function() {
  var prn_str__delegate = function(objs) {
    return cljs.core.prn_str_with_opts.call(null, objs, cljs.core.pr_opts.call(null))
  };
  var prn_str = function(var_args) {
    var objs = null;
    if(arguments.length > 0) {
      objs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return prn_str__delegate.call(this, objs)
  };
  prn_str.cljs$lang$maxFixedArity = 0;
  prn_str.cljs$lang$applyTo = function(arglist__425894) {
    var objs = cljs.core.seq(arglist__425894);
    return prn_str__delegate(objs)
  };
  prn_str.cljs$core$IFn$_invoke$arity$variadic = prn_str__delegate;
  return prn_str
}();
cljs.core.pr = function() {
  var pr__delegate = function(objs) {
    return cljs.core.pr_with_opts.call(null, objs, cljs.core.pr_opts.call(null))
  };
  var pr = function(var_args) {
    var objs = null;
    if(arguments.length > 0) {
      objs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return pr__delegate.call(this, objs)
  };
  pr.cljs$lang$maxFixedArity = 0;
  pr.cljs$lang$applyTo = function(arglist__425895) {
    var objs = cljs.core.seq(arglist__425895);
    return pr__delegate(objs)
  };
  pr.cljs$core$IFn$_invoke$arity$variadic = pr__delegate;
  return pr
}();
cljs.core.print = function() {
  var cljs_core_print__delegate = function(objs) {
    return cljs.core.pr_with_opts.call(null, objs, cljs.core.assoc.call(null, cljs.core.pr_opts.call(null), new cljs.core.Keyword(null, "readably", "readably", 4441712502), false))
  };
  var cljs_core_print = function(var_args) {
    var objs = null;
    if(arguments.length > 0) {
      objs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return cljs_core_print__delegate.call(this, objs)
  };
  cljs_core_print.cljs$lang$maxFixedArity = 0;
  cljs_core_print.cljs$lang$applyTo = function(arglist__425896) {
    var objs = cljs.core.seq(arglist__425896);
    return cljs_core_print__delegate(objs)
  };
  cljs_core_print.cljs$core$IFn$_invoke$arity$variadic = cljs_core_print__delegate;
  return cljs_core_print
}();
cljs.core.print_str = function() {
  var print_str__delegate = function(objs) {
    return cljs.core.pr_str_with_opts.call(null, objs, cljs.core.assoc.call(null, cljs.core.pr_opts.call(null), new cljs.core.Keyword(null, "readably", "readably", 4441712502), false))
  };
  var print_str = function(var_args) {
    var objs = null;
    if(arguments.length > 0) {
      objs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return print_str__delegate.call(this, objs)
  };
  print_str.cljs$lang$maxFixedArity = 0;
  print_str.cljs$lang$applyTo = function(arglist__425897) {
    var objs = cljs.core.seq(arglist__425897);
    return print_str__delegate(objs)
  };
  print_str.cljs$core$IFn$_invoke$arity$variadic = print_str__delegate;
  return print_str
}();
cljs.core.println = function() {
  var println__delegate = function(objs) {
    cljs.core.pr_with_opts.call(null, objs, cljs.core.assoc.call(null, cljs.core.pr_opts.call(null), new cljs.core.Keyword(null, "readably", "readably", 4441712502), false));
    if(cljs.core.truth_(cljs.core._STAR_print_newline_STAR_)) {
      return cljs.core.newline.call(null, cljs.core.pr_opts.call(null))
    }else {
      return null
    }
  };
  var println = function(var_args) {
    var objs = null;
    if(arguments.length > 0) {
      objs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return println__delegate.call(this, objs)
  };
  println.cljs$lang$maxFixedArity = 0;
  println.cljs$lang$applyTo = function(arglist__425898) {
    var objs = cljs.core.seq(arglist__425898);
    return println__delegate(objs)
  };
  println.cljs$core$IFn$_invoke$arity$variadic = println__delegate;
  return println
}();
cljs.core.println_str = function() {
  var println_str__delegate = function(objs) {
    return cljs.core.prn_str_with_opts.call(null, objs, cljs.core.assoc.call(null, cljs.core.pr_opts.call(null), new cljs.core.Keyword(null, "readably", "readably", 4441712502), false))
  };
  var println_str = function(var_args) {
    var objs = null;
    if(arguments.length > 0) {
      objs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return println_str__delegate.call(this, objs)
  };
  println_str.cljs$lang$maxFixedArity = 0;
  println_str.cljs$lang$applyTo = function(arglist__425899) {
    var objs = cljs.core.seq(arglist__425899);
    return println_str__delegate(objs)
  };
  println_str.cljs$core$IFn$_invoke$arity$variadic = println_str__delegate;
  return println_str
}();
cljs.core.prn = function() {
  var prn__delegate = function(objs) {
    cljs.core.pr_with_opts.call(null, objs, cljs.core.pr_opts.call(null));
    if(cljs.core.truth_(cljs.core._STAR_print_newline_STAR_)) {
      return cljs.core.newline.call(null, cljs.core.pr_opts.call(null))
    }else {
      return null
    }
  };
  var prn = function(var_args) {
    var objs = null;
    if(arguments.length > 0) {
      objs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return prn__delegate.call(this, objs)
  };
  prn.cljs$lang$maxFixedArity = 0;
  prn.cljs$lang$applyTo = function(arglist__425900) {
    var objs = cljs.core.seq(arglist__425900);
    return prn__delegate(objs)
  };
  prn.cljs$core$IFn$_invoke$arity$variadic = prn__delegate;
  return prn
}();
cljs.core.KeySeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.KeySeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1)
};
cljs.core.IndexedSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.IndexedSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1)
};
cljs.core.Subvec.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.Subvec.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "[", " ", "]", opts, coll__$1)
};
cljs.core.ChunkedCons.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.ChunkedCons.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1)
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentTreeMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  var pr_pair = function(keyval) {
    return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "", " ", "", opts, keyval)
  };
  return cljs.core.pr_sequential_writer.call(null, writer, pr_pair, "{", ", ", "}", opts, coll__$1)
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentArrayMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  var pr_pair = function(keyval) {
    return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "", " ", "", opts, keyval)
  };
  return cljs.core.pr_sequential_writer.call(null, writer, pr_pair, "{", ", ", "}", opts, coll__$1)
};
cljs.core.PersistentQueue.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentQueue.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "#queue [", " ", "]", opts, cljs.core.seq.call(null, coll__$1))
};
cljs.core.LazySeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.LazySeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1)
};
cljs.core.RSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.RSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1)
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentTreeSet.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "#{", " ", "}", opts, coll__$1)
};
cljs.core.NodeSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.NodeSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1)
};
cljs.core.RedNode.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.RedNode.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "[", " ", "]", opts, coll__$1)
};
cljs.core.ChunkedSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.ChunkedSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1)
};
cljs.core.PersistentHashMap.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentHashMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  var pr_pair = function(keyval) {
    return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "", " ", "", opts, keyval)
  };
  return cljs.core.pr_sequential_writer.call(null, writer, pr_pair, "{", ", ", "}", opts, coll__$1)
};
cljs.core.PersistentHashSet.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentHashSet.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "#{", " ", "}", opts, coll__$1)
};
cljs.core.PersistentVector.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentVector.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "[", " ", "]", opts, coll__$1)
};
cljs.core.List.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.List.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1)
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1)
};
cljs.core.EmptyList.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.EmptyList.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core._write.call(null, writer, "()")
};
cljs.core.BlackNode.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.BlackNode.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "[", " ", "]", opts, coll__$1)
};
cljs.core.Cons.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.Cons.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1)
};
cljs.core.Range.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.Range.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1)
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.ArrayNodeSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1)
};
cljs.core.ValSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.ValSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1)
};
cljs.core.ObjMap.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.ObjMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  var pr_pair = function(keyval) {
    return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "", " ", "", opts, keyval)
  };
  return cljs.core.pr_sequential_writer.call(null, writer, pr_pair, "{", ", ", "}", opts, coll__$1)
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1)
};
cljs.core.PersistentVector.prototype.cljs$core$IComparable$ = true;
cljs.core.PersistentVector.prototype.cljs$core$IComparable$_compare$arity$2 = function(x, y) {
  var x__$1 = this;
  return cljs.core.compare_indexed.call(null, x__$1, y)
};
cljs.core.Subvec.prototype.cljs$core$IComparable$ = true;
cljs.core.Subvec.prototype.cljs$core$IComparable$_compare$arity$2 = function(x, y) {
  var x__$1 = this;
  return cljs.core.compare_indexed.call(null, x__$1, y)
};
cljs.core.Keyword.prototype.cljs$core$IComparable$ = true;
cljs.core.Keyword.prototype.cljs$core$IComparable$_compare$arity$2 = function(x, y) {
  var x__$1 = this;
  return cljs.core.compare_symbols.call(null, x__$1, y)
};
cljs.core.Symbol.prototype.cljs$core$IComparable$ = true;
cljs.core.Symbol.prototype.cljs$core$IComparable$_compare$arity$2 = function(x, y) {
  var x__$1 = this;
  return cljs.core.compare_symbols.call(null, x__$1, y)
};
cljs.core.Atom = function(state, meta, validator, watches) {
  this.state = state;
  this.meta = meta;
  this.validator = validator;
  this.watches = watches;
  this.cljs$lang$protocol_mask$partition0$ = 2153938944;
  this.cljs$lang$protocol_mask$partition1$ = 2
};
cljs.core.Atom.cljs$lang$type = true;
cljs.core.Atom.cljs$lang$ctorStr = "cljs.core/Atom";
cljs.core.Atom.cljs$lang$ctorPrWriter = function(this__3829__auto__, writer__3830__auto__, opt__3831__auto__) {
  return cljs.core._write.call(null, writer__3830__auto__, "cljs.core/Atom")
};
cljs.core.Atom.prototype.cljs$core$IHash$_hash$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return goog.getUid(this$__$1)
};
cljs.core.Atom.prototype.cljs$core$IWatchable$_notify_watches$arity$3 = function(this$, oldval, newval) {
  var self__ = this;
  var this$__$1 = this;
  var seq__425901 = cljs.core.seq.call(null, self__.watches);
  var chunk__425902 = null;
  var count__425903 = 0;
  var i__425904 = 0;
  while(true) {
    if(i__425904 < count__425903) {
      var vec__425905 = cljs.core._nth.call(null, chunk__425902, i__425904);
      var key = cljs.core.nth.call(null, vec__425905, 0, null);
      var f = cljs.core.nth.call(null, vec__425905, 1, null);
      f.call(null, key, this$__$1, oldval, newval);
      var G__425907 = seq__425901;
      var G__425908 = chunk__425902;
      var G__425909 = count__425903;
      var G__425910 = i__425904 + 1;
      seq__425901 = G__425907;
      chunk__425902 = G__425908;
      count__425903 = G__425909;
      i__425904 = G__425910;
      continue
    }else {
      var temp__4092__auto__ = cljs.core.seq.call(null, seq__425901);
      if(temp__4092__auto__) {
        var seq__425901__$1 = temp__4092__auto__;
        if(cljs.core.chunked_seq_QMARK_.call(null, seq__425901__$1)) {
          var c__4009__auto__ = cljs.core.chunk_first.call(null, seq__425901__$1);
          var G__425911 = cljs.core.chunk_rest.call(null, seq__425901__$1);
          var G__425912 = c__4009__auto__;
          var G__425913 = cljs.core.count.call(null, c__4009__auto__);
          var G__425914 = 0;
          seq__425901 = G__425911;
          chunk__425902 = G__425912;
          count__425903 = G__425913;
          i__425904 = G__425914;
          continue
        }else {
          var vec__425906 = cljs.core.first.call(null, seq__425901__$1);
          var key = cljs.core.nth.call(null, vec__425906, 0, null);
          var f = cljs.core.nth.call(null, vec__425906, 1, null);
          f.call(null, key, this$__$1, oldval, newval);
          var G__425915 = cljs.core.next.call(null, seq__425901__$1);
          var G__425916 = null;
          var G__425917 = 0;
          var G__425918 = 0;
          seq__425901 = G__425915;
          chunk__425902 = G__425916;
          count__425903 = G__425917;
          i__425904 = G__425918;
          continue
        }
      }else {
        return null
      }
    }
    break
  }
};
cljs.core.Atom.prototype.cljs$core$IWatchable$_add_watch$arity$3 = function(this$, key, f) {
  var self__ = this;
  var this$__$1 = this;
  return this$__$1.watches = cljs.core.assoc.call(null, self__.watches, key, f)
};
cljs.core.Atom.prototype.cljs$core$IWatchable$_remove_watch$arity$2 = function(this$, key) {
  var self__ = this;
  var this$__$1 = this;
  return this$__$1.watches = cljs.core.dissoc.call(null, self__.watches, key)
};
cljs.core.Atom.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(a, writer, opts) {
  var self__ = this;
  var a__$1 = this;
  cljs.core._write.call(null, writer, "#<Atom: ");
  cljs.core.pr_writer.call(null, self__.state, writer, opts);
  return cljs.core._write.call(null, writer, ">")
};
cljs.core.Atom.prototype.cljs$core$IMeta$_meta$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.meta
};
cljs.core.Atom.prototype.cljs$core$IDeref$_deref$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.state
};
cljs.core.Atom.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(o, other) {
  var self__ = this;
  var o__$1 = this;
  return o__$1 === other
};
cljs.core.__GT_Atom = function __GT_Atom(state, meta, validator, watches) {
  return new cljs.core.Atom(state, meta, validator, watches)
};
cljs.core.atom = function() {
  var atom = null;
  var atom__1 = function(x) {
    return new cljs.core.Atom(x, null, null, null)
  };
  var atom__2 = function() {
    var G__425922__delegate = function(x, p__425919) {
      var map__425921 = p__425919;
      var map__425921__$1 = cljs.core.seq_QMARK_.call(null, map__425921) ? cljs.core.apply.call(null, cljs.core.hash_map, map__425921) : map__425921;
      var validator = cljs.core.get.call(null, map__425921__$1, new cljs.core.Keyword(null, "validator", "validator", 4199087812));
      var meta = cljs.core.get.call(null, map__425921__$1, new cljs.core.Keyword(null, "meta", "meta", 1017252215));
      return new cljs.core.Atom(x, meta, validator, null)
    };
    var G__425922 = function(x, var_args) {
      var p__425919 = null;
      if(arguments.length > 1) {
        p__425919 = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
      }
      return G__425922__delegate.call(this, x, p__425919)
    };
    G__425922.cljs$lang$maxFixedArity = 1;
    G__425922.cljs$lang$applyTo = function(arglist__425923) {
      var x = cljs.core.first(arglist__425923);
      var p__425919 = cljs.core.rest(arglist__425923);
      return G__425922__delegate(x, p__425919)
    };
    G__425922.cljs$core$IFn$_invoke$arity$variadic = G__425922__delegate;
    return G__425922
  }();
  atom = function(x, var_args) {
    var p__425919 = var_args;
    switch(arguments.length) {
      case 1:
        return atom__1.call(this, x);
      default:
        return atom__2.cljs$core$IFn$_invoke$arity$variadic(x, cljs.core.array_seq(arguments, 1))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  atom.cljs$lang$maxFixedArity = 1;
  atom.cljs$lang$applyTo = atom__2.cljs$lang$applyTo;
  atom.cljs$core$IFn$_invoke$arity$1 = atom__1;
  atom.cljs$core$IFn$_invoke$arity$variadic = atom__2.cljs$core$IFn$_invoke$arity$variadic;
  return atom
}();
cljs.core.reset_BANG_ = function reset_BANG_(a, new_value) {
  var temp__4092__auto___425924 = a.validator;
  if(cljs.core.truth_(temp__4092__auto___425924)) {
    var validate_425925 = temp__4092__auto___425924;
    if(cljs.core.truth_(validate_425925.call(null, new_value))) {
    }else {
      throw new Error([cljs.core.str("Assert failed: "), cljs.core.str("Validator rejected reference state"), cljs.core.str("\n"), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "validate", "validate", 1233162959, null), new cljs.core.Symbol(null, "new-value", "new-value", 972165309, null))))].join(""));
    }
  }else {
  }
  var old_value_425926 = a.state;
  a.state = new_value;
  cljs.core._notify_watches.call(null, a, old_value_425926, new_value);
  return new_value
};
cljs.core.swap_BANG_ = function() {
  var swap_BANG_ = null;
  var swap_BANG___2 = function(a, f) {
    return cljs.core.reset_BANG_.call(null, a, f.call(null, a.state))
  };
  var swap_BANG___3 = function(a, f, x) {
    return cljs.core.reset_BANG_.call(null, a, f.call(null, a.state, x))
  };
  var swap_BANG___4 = function(a, f, x, y) {
    return cljs.core.reset_BANG_.call(null, a, f.call(null, a.state, x, y))
  };
  var swap_BANG___5 = function(a, f, x, y, z) {
    return cljs.core.reset_BANG_.call(null, a, f.call(null, a.state, x, y, z))
  };
  var swap_BANG___6 = function() {
    var G__425927__delegate = function(a, f, x, y, z, more) {
      return cljs.core.reset_BANG_.call(null, a, cljs.core.apply.call(null, f, a.state, x, y, z, more))
    };
    var G__425927 = function(a, f, x, y, z, var_args) {
      var more = null;
      if(arguments.length > 5) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 5), 0)
      }
      return G__425927__delegate.call(this, a, f, x, y, z, more)
    };
    G__425927.cljs$lang$maxFixedArity = 5;
    G__425927.cljs$lang$applyTo = function(arglist__425928) {
      var a = cljs.core.first(arglist__425928);
      arglist__425928 = cljs.core.next(arglist__425928);
      var f = cljs.core.first(arglist__425928);
      arglist__425928 = cljs.core.next(arglist__425928);
      var x = cljs.core.first(arglist__425928);
      arglist__425928 = cljs.core.next(arglist__425928);
      var y = cljs.core.first(arglist__425928);
      arglist__425928 = cljs.core.next(arglist__425928);
      var z = cljs.core.first(arglist__425928);
      var more = cljs.core.rest(arglist__425928);
      return G__425927__delegate(a, f, x, y, z, more)
    };
    G__425927.cljs$core$IFn$_invoke$arity$variadic = G__425927__delegate;
    return G__425927
  }();
  swap_BANG_ = function(a, f, x, y, z, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 2:
        return swap_BANG___2.call(this, a, f);
      case 3:
        return swap_BANG___3.call(this, a, f, x);
      case 4:
        return swap_BANG___4.call(this, a, f, x, y);
      case 5:
        return swap_BANG___5.call(this, a, f, x, y, z);
      default:
        return swap_BANG___6.cljs$core$IFn$_invoke$arity$variadic(a, f, x, y, z, cljs.core.array_seq(arguments, 5))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  swap_BANG_.cljs$lang$maxFixedArity = 5;
  swap_BANG_.cljs$lang$applyTo = swap_BANG___6.cljs$lang$applyTo;
  swap_BANG_.cljs$core$IFn$_invoke$arity$2 = swap_BANG___2;
  swap_BANG_.cljs$core$IFn$_invoke$arity$3 = swap_BANG___3;
  swap_BANG_.cljs$core$IFn$_invoke$arity$4 = swap_BANG___4;
  swap_BANG_.cljs$core$IFn$_invoke$arity$5 = swap_BANG___5;
  swap_BANG_.cljs$core$IFn$_invoke$arity$variadic = swap_BANG___6.cljs$core$IFn$_invoke$arity$variadic;
  return swap_BANG_
}();
cljs.core.compare_and_set_BANG_ = function compare_and_set_BANG_(a, oldval, newval) {
  if(cljs.core._EQ_.call(null, a.state, oldval)) {
    cljs.core.reset_BANG_.call(null, a, newval);
    return true
  }else {
    return false
  }
};
cljs.core.deref = function deref(o) {
  return cljs.core._deref.call(null, o)
};
cljs.core.set_validator_BANG_ = function set_validator_BANG_(iref, val) {
  return iref.validator = val
};
cljs.core.get_validator = function get_validator(iref) {
  return iref.validator
};
cljs.core.alter_meta_BANG_ = function() {
  var alter_meta_BANG___delegate = function(iref, f, args) {
    return iref.meta = cljs.core.apply.call(null, f, iref.meta, args)
  };
  var alter_meta_BANG_ = function(iref, f, var_args) {
    var args = null;
    if(arguments.length > 2) {
      args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
    }
    return alter_meta_BANG___delegate.call(this, iref, f, args)
  };
  alter_meta_BANG_.cljs$lang$maxFixedArity = 2;
  alter_meta_BANG_.cljs$lang$applyTo = function(arglist__425929) {
    var iref = cljs.core.first(arglist__425929);
    arglist__425929 = cljs.core.next(arglist__425929);
    var f = cljs.core.first(arglist__425929);
    var args = cljs.core.rest(arglist__425929);
    return alter_meta_BANG___delegate(iref, f, args)
  };
  alter_meta_BANG_.cljs$core$IFn$_invoke$arity$variadic = alter_meta_BANG___delegate;
  return alter_meta_BANG_
}();
cljs.core.reset_meta_BANG_ = function reset_meta_BANG_(iref, m) {
  return iref.meta = m
};
cljs.core.add_watch = function add_watch(iref, key, f) {
  return cljs.core._add_watch.call(null, iref, key, f)
};
cljs.core.remove_watch = function remove_watch(iref, key) {
  return cljs.core._remove_watch.call(null, iref, key)
};
cljs.core.gensym_counter = null;
cljs.core.gensym = function() {
  var gensym = null;
  var gensym__0 = function() {
    return gensym.call(null, "G__")
  };
  var gensym__1 = function(prefix_string) {
    if(cljs.core.gensym_counter == null) {
      cljs.core.gensym_counter = cljs.core.atom.call(null, 0)
    }else {
    }
    return cljs.core.symbol.call(null, [cljs.core.str(prefix_string), cljs.core.str(cljs.core.swap_BANG_.call(null, cljs.core.gensym_counter, cljs.core.inc))].join(""))
  };
  gensym = function(prefix_string) {
    switch(arguments.length) {
      case 0:
        return gensym__0.call(this);
      case 1:
        return gensym__1.call(this, prefix_string)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  gensym.cljs$core$IFn$_invoke$arity$0 = gensym__0;
  gensym.cljs$core$IFn$_invoke$arity$1 = gensym__1;
  return gensym
}();
cljs.core.fixture1 = 1;
cljs.core.fixture2 = 2;
cljs.core.Delay = function(state, f) {
  this.state = state;
  this.f = f;
  this.cljs$lang$protocol_mask$partition1$ = 1;
  this.cljs$lang$protocol_mask$partition0$ = 32768
};
cljs.core.Delay.cljs$lang$type = true;
cljs.core.Delay.cljs$lang$ctorStr = "cljs.core/Delay";
cljs.core.Delay.cljs$lang$ctorPrWriter = function(this__3829__auto__, writer__3830__auto__, opt__3831__auto__) {
  return cljs.core._write.call(null, writer__3830__auto__, "cljs.core/Delay")
};
cljs.core.Delay.prototype.cljs$core$IPending$_realized_QMARK_$arity$1 = function(d) {
  var self__ = this;
  var d__$1 = this;
  return(new cljs.core.Keyword(null, "done", "done", 1016993524)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, self__.state))
};
cljs.core.Delay.prototype.cljs$core$IDeref$_deref$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return(new cljs.core.Keyword(null, "value", "value", 1125876963)).cljs$core$IFn$_invoke$arity$1(cljs.core.swap_BANG_.call(null, self__.state, function(p__425930) {
    var map__425931 = p__425930;
    var map__425931__$1 = cljs.core.seq_QMARK_.call(null, map__425931) ? cljs.core.apply.call(null, cljs.core.hash_map, map__425931) : map__425931;
    var curr_state = map__425931__$1;
    var done = cljs.core.get.call(null, map__425931__$1, new cljs.core.Keyword(null, "done", "done", 1016993524));
    if(cljs.core.truth_(done)) {
      return curr_state
    }else {
      return new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "done", "done", 1016993524), true, new cljs.core.Keyword(null, "value", "value", 1125876963), self__.f.call(null)], null)
    }
  }))
};
cljs.core.__GT_Delay = function __GT_Delay(state, f) {
  return new cljs.core.Delay(state, f)
};
cljs.core.delay_QMARK_ = function delay_QMARK_(x) {
  return x instanceof cljs.core.Delay
};
cljs.core.force = function force(x) {
  if(cljs.core.delay_QMARK_.call(null, x)) {
    return cljs.core.deref.call(null, x)
  }else {
    return x
  }
};
cljs.core.realized_QMARK_ = function realized_QMARK_(d) {
  return cljs.core._realized_QMARK_.call(null, d)
};
cljs.core.IEncodeJS = function() {
  var obj425933 = {};
  return obj425933
}();
cljs.core._clj__GT_js = function _clj__GT_js(x) {
  if(function() {
    var and__3273__auto__ = x;
    if(and__3273__auto__) {
      return x.cljs$core$IEncodeJS$_clj__GT_js$arity$1
    }else {
      return and__3273__auto__
    }
  }()) {
    return x.cljs$core$IEncodeJS$_clj__GT_js$arity$1(x)
  }else {
    var x__3888__auto__ = x == null ? null : x;
    return function() {
      var or__3285__auto__ = cljs.core._clj__GT_js[goog.typeOf(x__3888__auto__)];
      if(or__3285__auto__) {
        return or__3285__auto__
      }else {
        var or__3285__auto____$1 = cljs.core._clj__GT_js["_"];
        if(or__3285__auto____$1) {
          return or__3285__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "IEncodeJS.-clj->js", x);
        }
      }
    }().call(null, x)
  }
};
cljs.core._key__GT_js = function _key__GT_js(x) {
  if(function() {
    var and__3273__auto__ = x;
    if(and__3273__auto__) {
      return x.cljs$core$IEncodeJS$_key__GT_js$arity$1
    }else {
      return and__3273__auto__
    }
  }()) {
    return x.cljs$core$IEncodeJS$_key__GT_js$arity$1(x)
  }else {
    var x__3888__auto__ = x == null ? null : x;
    return function() {
      var or__3285__auto__ = cljs.core._key__GT_js[goog.typeOf(x__3888__auto__)];
      if(or__3285__auto__) {
        return or__3285__auto__
      }else {
        var or__3285__auto____$1 = cljs.core._key__GT_js["_"];
        if(or__3285__auto____$1) {
          return or__3285__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "IEncodeJS.-key->js", x);
        }
      }
    }().call(null, x)
  }
};
cljs.core.key__GT_js = function key__GT_js(k) {
  if(function() {
    var G__425935 = k;
    if(G__425935) {
      var bit__3911__auto__ = null;
      if(cljs.core.truth_(function() {
        var or__3285__auto__ = bit__3911__auto__;
        if(cljs.core.truth_(or__3285__auto__)) {
          return or__3285__auto__
        }else {
          return G__425935.cljs$core$IEncodeJS$
        }
      }())) {
        return true
      }else {
        if(!G__425935.cljs$lang$protocol_mask$partition$) {
          return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IEncodeJS, G__425935)
        }else {
          return false
        }
      }
    }else {
      return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IEncodeJS, G__425935)
    }
  }()) {
    return cljs.core._clj__GT_js.call(null, k)
  }else {
    if(typeof k === "string" || typeof k === "number" || k instanceof cljs.core.Keyword || k instanceof cljs.core.Symbol) {
      return cljs.core.clj__GT_js.call(null, k)
    }else {
      return cljs.core.pr_str.call(null, k)
    }
  }
};
cljs.core.clj__GT_js = function clj__GT_js(x) {
  if(x == null) {
    return null
  }else {
    if(function() {
      var G__425945 = x;
      if(G__425945) {
        var bit__3911__auto__ = null;
        if(cljs.core.truth_(function() {
          var or__3285__auto__ = bit__3911__auto__;
          if(cljs.core.truth_(or__3285__auto__)) {
            return or__3285__auto__
          }else {
            return G__425945.cljs$core$IEncodeJS$
          }
        }())) {
          return true
        }else {
          if(!G__425945.cljs$lang$protocol_mask$partition$) {
            return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IEncodeJS, G__425945)
          }else {
            return false
          }
        }
      }else {
        return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IEncodeJS, G__425945)
      }
    }()) {
      return cljs.core._clj__GT_js.call(null, x)
    }else {
      if(x instanceof cljs.core.Keyword) {
        return cljs.core.name.call(null, x)
      }else {
        if(x instanceof cljs.core.Symbol) {
          return[cljs.core.str(x)].join("")
        }else {
          if(cljs.core.map_QMARK_.call(null, x)) {
            var m = function() {
              var obj425947 = {};
              return obj425947
            }();
            var seq__425948_425954 = cljs.core.seq.call(null, x);
            var chunk__425949_425955 = null;
            var count__425950_425956 = 0;
            var i__425951_425957 = 0;
            while(true) {
              if(i__425951_425957 < count__425950_425956) {
                var vec__425952_425958 = cljs.core._nth.call(null, chunk__425949_425955, i__425951_425957);
                var k_425959 = cljs.core.nth.call(null, vec__425952_425958, 0, null);
                var v_425960 = cljs.core.nth.call(null, vec__425952_425958, 1, null);
                m[cljs.core.key__GT_js.call(null, k_425959)] = clj__GT_js.call(null, v_425960);
                var G__425961 = seq__425948_425954;
                var G__425962 = chunk__425949_425955;
                var G__425963 = count__425950_425956;
                var G__425964 = i__425951_425957 + 1;
                seq__425948_425954 = G__425961;
                chunk__425949_425955 = G__425962;
                count__425950_425956 = G__425963;
                i__425951_425957 = G__425964;
                continue
              }else {
                var temp__4092__auto___425965 = cljs.core.seq.call(null, seq__425948_425954);
                if(temp__4092__auto___425965) {
                  var seq__425948_425966__$1 = temp__4092__auto___425965;
                  if(cljs.core.chunked_seq_QMARK_.call(null, seq__425948_425966__$1)) {
                    var c__4009__auto___425967 = cljs.core.chunk_first.call(null, seq__425948_425966__$1);
                    var G__425968 = cljs.core.chunk_rest.call(null, seq__425948_425966__$1);
                    var G__425969 = c__4009__auto___425967;
                    var G__425970 = cljs.core.count.call(null, c__4009__auto___425967);
                    var G__425971 = 0;
                    seq__425948_425954 = G__425968;
                    chunk__425949_425955 = G__425969;
                    count__425950_425956 = G__425970;
                    i__425951_425957 = G__425971;
                    continue
                  }else {
                    var vec__425953_425972 = cljs.core.first.call(null, seq__425948_425966__$1);
                    var k_425973 = cljs.core.nth.call(null, vec__425953_425972, 0, null);
                    var v_425974 = cljs.core.nth.call(null, vec__425953_425972, 1, null);
                    m[cljs.core.key__GT_js.call(null, k_425973)] = clj__GT_js.call(null, v_425974);
                    var G__425975 = cljs.core.next.call(null, seq__425948_425966__$1);
                    var G__425976 = null;
                    var G__425977 = 0;
                    var G__425978 = 0;
                    seq__425948_425954 = G__425975;
                    chunk__425949_425955 = G__425976;
                    count__425950_425956 = G__425977;
                    i__425951_425957 = G__425978;
                    continue
                  }
                }else {
                }
              }
              break
            }
            return m
          }else {
            if(cljs.core.coll_QMARK_.call(null, x)) {
              return cljs.core.apply.call(null, cljs.core.array, cljs.core.map.call(null, clj__GT_js, x))
            }else {
              if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                return x
              }else {
                return null
              }
            }
          }
        }
      }
    }
  }
};
cljs.core.IEncodeClojure = function() {
  var obj425980 = {};
  return obj425980
}();
cljs.core._js__GT_clj = function _js__GT_clj(x, options) {
  if(function() {
    var and__3273__auto__ = x;
    if(and__3273__auto__) {
      return x.cljs$core$IEncodeClojure$_js__GT_clj$arity$2
    }else {
      return and__3273__auto__
    }
  }()) {
    return x.cljs$core$IEncodeClojure$_js__GT_clj$arity$2(x, options)
  }else {
    var x__3888__auto__ = x == null ? null : x;
    return function() {
      var or__3285__auto__ = cljs.core._js__GT_clj[goog.typeOf(x__3888__auto__)];
      if(or__3285__auto__) {
        return or__3285__auto__
      }else {
        var or__3285__auto____$1 = cljs.core._js__GT_clj["_"];
        if(or__3285__auto____$1) {
          return or__3285__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "IEncodeClojure.-js->clj", x);
        }
      }
    }().call(null, x, options)
  }
};
cljs.core.js__GT_clj = function() {
  var js__GT_clj = null;
  var js__GT_clj__1 = function(x) {
    return js__GT_clj.call(null, x, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "keywordize-keys", "keywordize-keys", 4191781672), false], null))
  };
  var js__GT_clj__2 = function() {
    var G__426001__delegate = function(x, opts) {
      if(function() {
        var G__425991 = x;
        if(G__425991) {
          var bit__3911__auto__ = null;
          if(cljs.core.truth_(function() {
            var or__3285__auto__ = bit__3911__auto__;
            if(cljs.core.truth_(or__3285__auto__)) {
              return or__3285__auto__
            }else {
              return G__425991.cljs$core$IEncodeClojure$
            }
          }())) {
            return true
          }else {
            if(!G__425991.cljs$lang$protocol_mask$partition$) {
              return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IEncodeClojure, G__425991)
            }else {
              return false
            }
          }
        }else {
          return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IEncodeClojure, G__425991)
        }
      }()) {
        return cljs.core._js__GT_clj.call(null, x, cljs.core.apply.call(null, cljs.core.array_map, opts))
      }else {
        if(cljs.core.seq.call(null, opts)) {
          var map__425992 = opts;
          var map__425992__$1 = cljs.core.seq_QMARK_.call(null, map__425992) ? cljs.core.apply.call(null, cljs.core.hash_map, map__425992) : map__425992;
          var keywordize_keys = cljs.core.get.call(null, map__425992__$1, new cljs.core.Keyword(null, "keywordize-keys", "keywordize-keys", 4191781672));
          var keyfn = cljs.core.truth_(keywordize_keys) ? cljs.core.keyword : cljs.core.str;
          var f = function(map__425992, map__425992__$1, keywordize_keys, keyfn) {
            return function thisfn(x__$1) {
              if(cljs.core.seq_QMARK_.call(null, x__$1)) {
                return cljs.core.doall.call(null, cljs.core.map.call(null, thisfn, x__$1))
              }else {
                if(cljs.core.coll_QMARK_.call(null, x__$1)) {
                  return cljs.core.into.call(null, cljs.core.empty.call(null, x__$1), cljs.core.map.call(null, thisfn, x__$1))
                }else {
                  if(x__$1 instanceof Array) {
                    return cljs.core.vec.call(null, cljs.core.map.call(null, thisfn, x__$1))
                  }else {
                    if(cljs.core.type.call(null, x__$1) === Object) {
                      return cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, function() {
                        var iter__3978__auto__ = function(map__425992, map__425992__$1, keywordize_keys, keyfn) {
                          return function iter__425997(s__425998) {
                            return new cljs.core.LazySeq(null, function(map__425992, map__425992__$1, keywordize_keys, keyfn) {
                              return function() {
                                var s__425998__$1 = s__425998;
                                while(true) {
                                  var temp__4092__auto__ = cljs.core.seq.call(null, s__425998__$1);
                                  if(temp__4092__auto__) {
                                    var s__425998__$2 = temp__4092__auto__;
                                    if(cljs.core.chunked_seq_QMARK_.call(null, s__425998__$2)) {
                                      var c__3976__auto__ = cljs.core.chunk_first.call(null, s__425998__$2);
                                      var size__3977__auto__ = cljs.core.count.call(null, c__3976__auto__);
                                      var b__426000 = cljs.core.chunk_buffer.call(null, size__3977__auto__);
                                      if(function() {
                                        var i__425999 = 0;
                                        while(true) {
                                          if(i__425999 < size__3977__auto__) {
                                            var k = cljs.core._nth.call(null, c__3976__auto__, i__425999);
                                            cljs.core.chunk_append.call(null, b__426000, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [keyfn.call(null, k), thisfn.call(null, x__$1[k])], null));
                                            var G__426002 = i__425999 + 1;
                                            i__425999 = G__426002;
                                            continue
                                          }else {
                                            return true
                                          }
                                          break
                                        }
                                      }()) {
                                        return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__426000), iter__425997.call(null, cljs.core.chunk_rest.call(null, s__425998__$2)))
                                      }else {
                                        return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__426000), null)
                                      }
                                    }else {
                                      var k = cljs.core.first.call(null, s__425998__$2);
                                      return cljs.core.cons.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [keyfn.call(null, k), thisfn.call(null, x__$1[k])], null), iter__425997.call(null, cljs.core.rest.call(null, s__425998__$2)))
                                    }
                                  }else {
                                    return null
                                  }
                                  break
                                }
                              }
                            }(map__425992, map__425992__$1, keywordize_keys, keyfn), null, null)
                          }
                        }(map__425992, map__425992__$1, keywordize_keys, keyfn);
                        return iter__3978__auto__.call(null, cljs.core.js_keys.call(null, x__$1))
                      }())
                    }else {
                      if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                        return x__$1
                      }else {
                        return null
                      }
                    }
                  }
                }
              }
            }
          }(map__425992, map__425992__$1, keywordize_keys, keyfn);
          return f.call(null, x)
        }else {
          return null
        }
      }
    };
    var G__426001 = function(x, var_args) {
      var opts = null;
      if(arguments.length > 1) {
        opts = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
      }
      return G__426001__delegate.call(this, x, opts)
    };
    G__426001.cljs$lang$maxFixedArity = 1;
    G__426001.cljs$lang$applyTo = function(arglist__426003) {
      var x = cljs.core.first(arglist__426003);
      var opts = cljs.core.rest(arglist__426003);
      return G__426001__delegate(x, opts)
    };
    G__426001.cljs$core$IFn$_invoke$arity$variadic = G__426001__delegate;
    return G__426001
  }();
  js__GT_clj = function(x, var_args) {
    var opts = var_args;
    switch(arguments.length) {
      case 1:
        return js__GT_clj__1.call(this, x);
      default:
        return js__GT_clj__2.cljs$core$IFn$_invoke$arity$variadic(x, cljs.core.array_seq(arguments, 1))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  js__GT_clj.cljs$lang$maxFixedArity = 1;
  js__GT_clj.cljs$lang$applyTo = js__GT_clj__2.cljs$lang$applyTo;
  js__GT_clj.cljs$core$IFn$_invoke$arity$1 = js__GT_clj__1;
  js__GT_clj.cljs$core$IFn$_invoke$arity$variadic = js__GT_clj__2.cljs$core$IFn$_invoke$arity$variadic;
  return js__GT_clj
}();
cljs.core.memoize = function memoize(f) {
  var mem = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
  return function() {
    var G__426004__delegate = function(args) {
      var temp__4090__auto__ = cljs.core.get.call(null, cljs.core.deref.call(null, mem), args);
      if(cljs.core.truth_(temp__4090__auto__)) {
        var v = temp__4090__auto__;
        return v
      }else {
        var ret = cljs.core.apply.call(null, f, args);
        cljs.core.swap_BANG_.call(null, mem, cljs.core.assoc, args, ret);
        return ret
      }
    };
    var G__426004 = function(var_args) {
      var args = null;
      if(arguments.length > 0) {
        args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
      }
      return G__426004__delegate.call(this, args)
    };
    G__426004.cljs$lang$maxFixedArity = 0;
    G__426004.cljs$lang$applyTo = function(arglist__426005) {
      var args = cljs.core.seq(arglist__426005);
      return G__426004__delegate(args)
    };
    G__426004.cljs$core$IFn$_invoke$arity$variadic = G__426004__delegate;
    return G__426004
  }()
};
cljs.core.trampoline = function() {
  var trampoline = null;
  var trampoline__1 = function(f) {
    while(true) {
      var ret = f.call(null);
      if(cljs.core.fn_QMARK_.call(null, ret)) {
        var G__426006 = ret;
        f = G__426006;
        continue
      }else {
        return ret
      }
      break
    }
  };
  var trampoline__2 = function() {
    var G__426007__delegate = function(f, args) {
      return trampoline.call(null, function() {
        return cljs.core.apply.call(null, f, args)
      })
    };
    var G__426007 = function(f, var_args) {
      var args = null;
      if(arguments.length > 1) {
        args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
      }
      return G__426007__delegate.call(this, f, args)
    };
    G__426007.cljs$lang$maxFixedArity = 1;
    G__426007.cljs$lang$applyTo = function(arglist__426008) {
      var f = cljs.core.first(arglist__426008);
      var args = cljs.core.rest(arglist__426008);
      return G__426007__delegate(f, args)
    };
    G__426007.cljs$core$IFn$_invoke$arity$variadic = G__426007__delegate;
    return G__426007
  }();
  trampoline = function(f, var_args) {
    var args = var_args;
    switch(arguments.length) {
      case 1:
        return trampoline__1.call(this, f);
      default:
        return trampoline__2.cljs$core$IFn$_invoke$arity$variadic(f, cljs.core.array_seq(arguments, 1))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  trampoline.cljs$lang$maxFixedArity = 1;
  trampoline.cljs$lang$applyTo = trampoline__2.cljs$lang$applyTo;
  trampoline.cljs$core$IFn$_invoke$arity$1 = trampoline__1;
  trampoline.cljs$core$IFn$_invoke$arity$variadic = trampoline__2.cljs$core$IFn$_invoke$arity$variadic;
  return trampoline
}();
cljs.core.rand = function() {
  var rand = null;
  var rand__0 = function() {
    return rand.call(null, 1)
  };
  var rand__1 = function(n) {
    return Math.random.call(null) * n
  };
  rand = function(n) {
    switch(arguments.length) {
      case 0:
        return rand__0.call(this);
      case 1:
        return rand__1.call(this, n)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  rand.cljs$core$IFn$_invoke$arity$0 = rand__0;
  rand.cljs$core$IFn$_invoke$arity$1 = rand__1;
  return rand
}();
cljs.core.rand_int = function rand_int(n) {
  return Math.floor.call(null, Math.random.call(null) * n)
};
cljs.core.rand_nth = function rand_nth(coll) {
  return cljs.core.nth.call(null, coll, cljs.core.rand_int.call(null, cljs.core.count.call(null, coll)))
};
cljs.core.group_by = function group_by(f, coll) {
  return cljs.core.reduce.call(null, function(ret, x) {
    var k = f.call(null, x);
    return cljs.core.assoc.call(null, ret, k, cljs.core.conj.call(null, cljs.core.get.call(null, ret, k, cljs.core.PersistentVector.EMPTY), x))
  }, cljs.core.PersistentArrayMap.EMPTY, coll)
};
cljs.core.make_hierarchy = function make_hierarchy() {
  return new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "parents", "parents", 4515496059), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "descendants", "descendants", 768214664), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "ancestors", "ancestors", 889955442), cljs.core.PersistentArrayMap.EMPTY], null)
};
cljs.core._global_hierarchy = null;
cljs.core.get_global_hierarchy = function get_global_hierarchy() {
  if(cljs.core._global_hierarchy == null) {
    cljs.core._global_hierarchy = cljs.core.atom.call(null, cljs.core.make_hierarchy.call(null))
  }else {
  }
  return cljs.core._global_hierarchy
};
cljs.core.swap_global_hierarchy_BANG_ = function() {
  var swap_global_hierarchy_BANG___delegate = function(f, args) {
    return cljs.core.apply.call(null, cljs.core.swap_BANG_, cljs.core.get_global_hierarchy.call(null), f, args)
  };
  var swap_global_hierarchy_BANG_ = function(f, var_args) {
    var args = null;
    if(arguments.length > 1) {
      args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
    }
    return swap_global_hierarchy_BANG___delegate.call(this, f, args)
  };
  swap_global_hierarchy_BANG_.cljs$lang$maxFixedArity = 1;
  swap_global_hierarchy_BANG_.cljs$lang$applyTo = function(arglist__426009) {
    var f = cljs.core.first(arglist__426009);
    var args = cljs.core.rest(arglist__426009);
    return swap_global_hierarchy_BANG___delegate(f, args)
  };
  swap_global_hierarchy_BANG_.cljs$core$IFn$_invoke$arity$variadic = swap_global_hierarchy_BANG___delegate;
  return swap_global_hierarchy_BANG_
}();
cljs.core.isa_QMARK_ = function() {
  var isa_QMARK_ = null;
  var isa_QMARK___2 = function(child, parent) {
    return isa_QMARK_.call(null, cljs.core.deref.call(null, cljs.core.get_global_hierarchy.call(null)), child, parent)
  };
  var isa_QMARK___3 = function(h, child, parent) {
    var or__3285__auto__ = cljs.core._EQ_.call(null, child, parent);
    if(or__3285__auto__) {
      return or__3285__auto__
    }else {
      var or__3285__auto____$1 = cljs.core.contains_QMARK_.call(null, (new cljs.core.Keyword(null, "ancestors", "ancestors", 889955442)).cljs$core$IFn$_invoke$arity$1(h).call(null, child), parent);
      if(or__3285__auto____$1) {
        return or__3285__auto____$1
      }else {
        var and__3273__auto__ = cljs.core.vector_QMARK_.call(null, parent);
        if(and__3273__auto__) {
          var and__3273__auto____$1 = cljs.core.vector_QMARK_.call(null, child);
          if(and__3273__auto____$1) {
            var and__3273__auto____$2 = cljs.core.count.call(null, parent) === cljs.core.count.call(null, child);
            if(and__3273__auto____$2) {
              var ret = true;
              var i = 0;
              while(true) {
                if(!ret || i === cljs.core.count.call(null, parent)) {
                  return ret
                }else {
                  var G__426010 = isa_QMARK_.call(null, h, child.call(null, i), parent.call(null, i));
                  var G__426011 = i + 1;
                  ret = G__426010;
                  i = G__426011;
                  continue
                }
                break
              }
            }else {
              return and__3273__auto____$2
            }
          }else {
            return and__3273__auto____$1
          }
        }else {
          return and__3273__auto__
        }
      }
    }
  };
  isa_QMARK_ = function(h, child, parent) {
    switch(arguments.length) {
      case 2:
        return isa_QMARK___2.call(this, h, child);
      case 3:
        return isa_QMARK___3.call(this, h, child, parent)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  isa_QMARK_.cljs$core$IFn$_invoke$arity$2 = isa_QMARK___2;
  isa_QMARK_.cljs$core$IFn$_invoke$arity$3 = isa_QMARK___3;
  return isa_QMARK_
}();
cljs.core.parents = function() {
  var parents = null;
  var parents__1 = function(tag) {
    return parents.call(null, cljs.core.deref.call(null, cljs.core.get_global_hierarchy.call(null)), tag)
  };
  var parents__2 = function(h, tag) {
    return cljs.core.not_empty.call(null, cljs.core.get.call(null, (new cljs.core.Keyword(null, "parents", "parents", 4515496059)).cljs$core$IFn$_invoke$arity$1(h), tag))
  };
  parents = function(h, tag) {
    switch(arguments.length) {
      case 1:
        return parents__1.call(this, h);
      case 2:
        return parents__2.call(this, h, tag)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  parents.cljs$core$IFn$_invoke$arity$1 = parents__1;
  parents.cljs$core$IFn$_invoke$arity$2 = parents__2;
  return parents
}();
cljs.core.ancestors = function() {
  var ancestors = null;
  var ancestors__1 = function(tag) {
    return ancestors.call(null, cljs.core.deref.call(null, cljs.core.get_global_hierarchy.call(null)), tag)
  };
  var ancestors__2 = function(h, tag) {
    return cljs.core.not_empty.call(null, cljs.core.get.call(null, (new cljs.core.Keyword(null, "ancestors", "ancestors", 889955442)).cljs$core$IFn$_invoke$arity$1(h), tag))
  };
  ancestors = function(h, tag) {
    switch(arguments.length) {
      case 1:
        return ancestors__1.call(this, h);
      case 2:
        return ancestors__2.call(this, h, tag)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  ancestors.cljs$core$IFn$_invoke$arity$1 = ancestors__1;
  ancestors.cljs$core$IFn$_invoke$arity$2 = ancestors__2;
  return ancestors
}();
cljs.core.descendants = function() {
  var descendants = null;
  var descendants__1 = function(tag) {
    return descendants.call(null, cljs.core.deref.call(null, cljs.core.get_global_hierarchy.call(null)), tag)
  };
  var descendants__2 = function(h, tag) {
    return cljs.core.not_empty.call(null, cljs.core.get.call(null, (new cljs.core.Keyword(null, "descendants", "descendants", 768214664)).cljs$core$IFn$_invoke$arity$1(h), tag))
  };
  descendants = function(h, tag) {
    switch(arguments.length) {
      case 1:
        return descendants__1.call(this, h);
      case 2:
        return descendants__2.call(this, h, tag)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  descendants.cljs$core$IFn$_invoke$arity$1 = descendants__1;
  descendants.cljs$core$IFn$_invoke$arity$2 = descendants__2;
  return descendants
}();
cljs.core.derive = function() {
  var derive = null;
  var derive__2 = function(tag, parent) {
    if(cljs.core.truth_(cljs.core.namespace.call(null, parent))) {
    }else {
      throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "namespace", "namespace", -388313324, null), new cljs.core.Symbol(null, "parent", "parent", 1659011683, null))))].join(""));
    }
    cljs.core.swap_global_hierarchy_BANG_.call(null, derive, tag, parent);
    return null
  };
  var derive__3 = function(h, tag, parent) {
    if(cljs.core.not_EQ_.call(null, tag, parent)) {
    }else {
      throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "not=", "not=", -1637144189, null), new cljs.core.Symbol(null, "tag", "tag", -1640416941, null), new cljs.core.Symbol(null, "parent", "parent", 1659011683, null))))].join(""));
    }
    var tp = (new cljs.core.Keyword(null, "parents", "parents", 4515496059)).cljs$core$IFn$_invoke$arity$1(h);
    var td = (new cljs.core.Keyword(null, "descendants", "descendants", 768214664)).cljs$core$IFn$_invoke$arity$1(h);
    var ta = (new cljs.core.Keyword(null, "ancestors", "ancestors", 889955442)).cljs$core$IFn$_invoke$arity$1(h);
    var tf = function(tp, td, ta) {
      return function(m, source, sources, target, targets) {
        return cljs.core.reduce.call(null, function(tp, td, ta) {
          return function(ret, k) {
            return cljs.core.assoc.call(null, ret, k, cljs.core.reduce.call(null, cljs.core.conj, cljs.core.get.call(null, targets, k, cljs.core.PersistentHashSet.EMPTY), cljs.core.cons.call(null, target, targets.call(null, target))))
          }
        }(tp, td, ta), m, cljs.core.cons.call(null, source, sources.call(null, source)))
      }
    }(tp, td, ta);
    var or__3285__auto__ = cljs.core.contains_QMARK_.call(null, tp.call(null, tag), parent) ? null : function() {
      if(cljs.core.contains_QMARK_.call(null, ta.call(null, tag), parent)) {
        throw new Error([cljs.core.str(tag), cljs.core.str("already has"), cljs.core.str(parent), cljs.core.str("as ancestor")].join(""));
      }else {
      }
      if(cljs.core.contains_QMARK_.call(null, ta.call(null, parent), tag)) {
        throw new Error([cljs.core.str("Cyclic derivation:"), cljs.core.str(parent), cljs.core.str("has"), cljs.core.str(tag), cljs.core.str("as ancestor")].join(""));
      }else {
      }
      return new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "parents", "parents", 4515496059), cljs.core.assoc.call(null, (new cljs.core.Keyword(null, "parents", "parents", 4515496059)).cljs$core$IFn$_invoke$arity$1(h), tag, cljs.core.conj.call(null, cljs.core.get.call(null, tp, tag, cljs.core.PersistentHashSet.EMPTY), parent)), new cljs.core.Keyword(null, "ancestors", "ancestors", 889955442), tf.call(null, (new cljs.core.Keyword(null, "ancestors", "ancestors", 889955442)).cljs$core$IFn$_invoke$arity$1(h), 
      tag, td, parent, ta), new cljs.core.Keyword(null, "descendants", "descendants", 768214664), tf.call(null, (new cljs.core.Keyword(null, "descendants", "descendants", 768214664)).cljs$core$IFn$_invoke$arity$1(h), parent, ta, tag, td)], null)
    }();
    if(cljs.core.truth_(or__3285__auto__)) {
      return or__3285__auto__
    }else {
      return h
    }
  };
  derive = function(h, tag, parent) {
    switch(arguments.length) {
      case 2:
        return derive__2.call(this, h, tag);
      case 3:
        return derive__3.call(this, h, tag, parent)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  derive.cljs$core$IFn$_invoke$arity$2 = derive__2;
  derive.cljs$core$IFn$_invoke$arity$3 = derive__3;
  return derive
}();
cljs.core.underive = function() {
  var underive = null;
  var underive__2 = function(tag, parent) {
    cljs.core.swap_global_hierarchy_BANG_.call(null, underive, tag, parent);
    return null
  };
  var underive__3 = function(h, tag, parent) {
    var parentMap = (new cljs.core.Keyword(null, "parents", "parents", 4515496059)).cljs$core$IFn$_invoke$arity$1(h);
    var childsParents = cljs.core.truth_(parentMap.call(null, tag)) ? cljs.core.disj.call(null, parentMap.call(null, tag), parent) : cljs.core.PersistentHashSet.EMPTY;
    var newParents = cljs.core.truth_(cljs.core.not_empty.call(null, childsParents)) ? cljs.core.assoc.call(null, parentMap, tag, childsParents) : cljs.core.dissoc.call(null, parentMap, tag);
    var deriv_seq = cljs.core.flatten.call(null, cljs.core.map.call(null, function(parentMap, childsParents, newParents) {
      return function(p1__426012_SHARP_) {
        return cljs.core.cons.call(null, cljs.core.first.call(null, p1__426012_SHARP_), cljs.core.interpose.call(null, cljs.core.first.call(null, p1__426012_SHARP_), cljs.core.second.call(null, p1__426012_SHARP_)))
      }
    }(parentMap, childsParents, newParents), cljs.core.seq.call(null, newParents)));
    if(cljs.core.contains_QMARK_.call(null, parentMap.call(null, tag), parent)) {
      return cljs.core.reduce.call(null, function(p1__426013_SHARP_, p2__426014_SHARP_) {
        return cljs.core.apply.call(null, cljs.core.derive, p1__426013_SHARP_, p2__426014_SHARP_)
      }, cljs.core.make_hierarchy.call(null), cljs.core.partition.call(null, 2, deriv_seq))
    }else {
      return h
    }
  };
  underive = function(h, tag, parent) {
    switch(arguments.length) {
      case 2:
        return underive__2.call(this, h, tag);
      case 3:
        return underive__3.call(this, h, tag, parent)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  underive.cljs$core$IFn$_invoke$arity$2 = underive__2;
  underive.cljs$core$IFn$_invoke$arity$3 = underive__3;
  return underive
}();
cljs.core.reset_cache = function reset_cache(method_cache, method_table, cached_hierarchy, hierarchy) {
  cljs.core.swap_BANG_.call(null, method_cache, function(_) {
    return cljs.core.deref.call(null, method_table)
  });
  return cljs.core.swap_BANG_.call(null, cached_hierarchy, function(_) {
    return cljs.core.deref.call(null, hierarchy)
  })
};
cljs.core.prefers_STAR_ = function prefers_STAR_(x, y, prefer_table) {
  var xprefs = cljs.core.deref.call(null, prefer_table).call(null, x);
  var or__3285__auto__ = cljs.core.truth_(function() {
    var and__3273__auto__ = xprefs;
    if(cljs.core.truth_(and__3273__auto__)) {
      return xprefs.call(null, y)
    }else {
      return and__3273__auto__
    }
  }()) ? true : null;
  if(cljs.core.truth_(or__3285__auto__)) {
    return or__3285__auto__
  }else {
    var or__3285__auto____$1 = function() {
      var ps = cljs.core.parents.call(null, y);
      while(true) {
        if(cljs.core.count.call(null, ps) > 0) {
          if(cljs.core.truth_(prefers_STAR_.call(null, x, cljs.core.first.call(null, ps), prefer_table))) {
          }else {
          }
          var G__426015 = cljs.core.rest.call(null, ps);
          ps = G__426015;
          continue
        }else {
          return null
        }
        break
      }
    }();
    if(cljs.core.truth_(or__3285__auto____$1)) {
      return or__3285__auto____$1
    }else {
      var or__3285__auto____$2 = function() {
        var ps = cljs.core.parents.call(null, x);
        while(true) {
          if(cljs.core.count.call(null, ps) > 0) {
            if(cljs.core.truth_(prefers_STAR_.call(null, cljs.core.first.call(null, ps), y, prefer_table))) {
            }else {
            }
            var G__426016 = cljs.core.rest.call(null, ps);
            ps = G__426016;
            continue
          }else {
            return null
          }
          break
        }
      }();
      if(cljs.core.truth_(or__3285__auto____$2)) {
        return or__3285__auto____$2
      }else {
        return false
      }
    }
  }
};
cljs.core.dominates = function dominates(x, y, prefer_table) {
  var or__3285__auto__ = cljs.core.prefers_STAR_.call(null, x, y, prefer_table);
  if(cljs.core.truth_(or__3285__auto__)) {
    return or__3285__auto__
  }else {
    return cljs.core.isa_QMARK_.call(null, x, y)
  }
};
cljs.core.find_and_cache_best_method = function find_and_cache_best_method(name, dispatch_val, hierarchy, method_table, prefer_table, method_cache, cached_hierarchy) {
  var best_entry = cljs.core.reduce.call(null, function(be, p__426019) {
    var vec__426020 = p__426019;
    var k = cljs.core.nth.call(null, vec__426020, 0, null);
    var _ = cljs.core.nth.call(null, vec__426020, 1, null);
    var e = vec__426020;
    if(cljs.core.isa_QMARK_.call(null, cljs.core.deref.call(null, hierarchy), dispatch_val, k)) {
      var be2 = cljs.core.truth_(function() {
        var or__3285__auto__ = be == null;
        if(or__3285__auto__) {
          return or__3285__auto__
        }else {
          return cljs.core.dominates.call(null, k, cljs.core.first.call(null, be), prefer_table)
        }
      }()) ? e : be;
      if(cljs.core.truth_(cljs.core.dominates.call(null, cljs.core.first.call(null, be2), k, prefer_table))) {
      }else {
        throw new Error([cljs.core.str("Multiple methods in multimethod '"), cljs.core.str(name), cljs.core.str("' match dispatch value: "), cljs.core.str(dispatch_val), cljs.core.str(" -> "), cljs.core.str(k), cljs.core.str(" and "), cljs.core.str(cljs.core.first.call(null, be2)), cljs.core.str(", and neither is preferred")].join(""));
      }
      return be2
    }else {
      return be
    }
  }, null, cljs.core.deref.call(null, method_table));
  if(cljs.core.truth_(best_entry)) {
    if(cljs.core._EQ_.call(null, cljs.core.deref.call(null, cached_hierarchy), cljs.core.deref.call(null, hierarchy))) {
      cljs.core.swap_BANG_.call(null, method_cache, cljs.core.assoc, dispatch_val, cljs.core.second.call(null, best_entry));
      return cljs.core.second.call(null, best_entry)
    }else {
      cljs.core.reset_cache.call(null, method_cache, method_table, cached_hierarchy, hierarchy);
      return find_and_cache_best_method.call(null, name, dispatch_val, hierarchy, method_table, prefer_table, method_cache, cached_hierarchy)
    }
  }else {
    return null
  }
};
cljs.core.IMultiFn = function() {
  var obj426022 = {};
  return obj426022
}();
cljs.core._reset = function _reset(mf) {
  if(function() {
    var and__3273__auto__ = mf;
    if(and__3273__auto__) {
      return mf.cljs$core$IMultiFn$_reset$arity$1
    }else {
      return and__3273__auto__
    }
  }()) {
    return mf.cljs$core$IMultiFn$_reset$arity$1(mf)
  }else {
    var x__3888__auto__ = mf == null ? null : mf;
    return function() {
      var or__3285__auto__ = cljs.core._reset[goog.typeOf(x__3888__auto__)];
      if(or__3285__auto__) {
        return or__3285__auto__
      }else {
        var or__3285__auto____$1 = cljs.core._reset["_"];
        if(or__3285__auto____$1) {
          return or__3285__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "IMultiFn.-reset", mf);
        }
      }
    }().call(null, mf)
  }
};
cljs.core._add_method = function _add_method(mf, dispatch_val, method) {
  if(function() {
    var and__3273__auto__ = mf;
    if(and__3273__auto__) {
      return mf.cljs$core$IMultiFn$_add_method$arity$3
    }else {
      return and__3273__auto__
    }
  }()) {
    return mf.cljs$core$IMultiFn$_add_method$arity$3(mf, dispatch_val, method)
  }else {
    var x__3888__auto__ = mf == null ? null : mf;
    return function() {
      var or__3285__auto__ = cljs.core._add_method[goog.typeOf(x__3888__auto__)];
      if(or__3285__auto__) {
        return or__3285__auto__
      }else {
        var or__3285__auto____$1 = cljs.core._add_method["_"];
        if(or__3285__auto____$1) {
          return or__3285__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "IMultiFn.-add-method", mf);
        }
      }
    }().call(null, mf, dispatch_val, method)
  }
};
cljs.core._remove_method = function _remove_method(mf, dispatch_val) {
  if(function() {
    var and__3273__auto__ = mf;
    if(and__3273__auto__) {
      return mf.cljs$core$IMultiFn$_remove_method$arity$2
    }else {
      return and__3273__auto__
    }
  }()) {
    return mf.cljs$core$IMultiFn$_remove_method$arity$2(mf, dispatch_val)
  }else {
    var x__3888__auto__ = mf == null ? null : mf;
    return function() {
      var or__3285__auto__ = cljs.core._remove_method[goog.typeOf(x__3888__auto__)];
      if(or__3285__auto__) {
        return or__3285__auto__
      }else {
        var or__3285__auto____$1 = cljs.core._remove_method["_"];
        if(or__3285__auto____$1) {
          return or__3285__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "IMultiFn.-remove-method", mf);
        }
      }
    }().call(null, mf, dispatch_val)
  }
};
cljs.core._prefer_method = function _prefer_method(mf, dispatch_val, dispatch_val_y) {
  if(function() {
    var and__3273__auto__ = mf;
    if(and__3273__auto__) {
      return mf.cljs$core$IMultiFn$_prefer_method$arity$3
    }else {
      return and__3273__auto__
    }
  }()) {
    return mf.cljs$core$IMultiFn$_prefer_method$arity$3(mf, dispatch_val, dispatch_val_y)
  }else {
    var x__3888__auto__ = mf == null ? null : mf;
    return function() {
      var or__3285__auto__ = cljs.core._prefer_method[goog.typeOf(x__3888__auto__)];
      if(or__3285__auto__) {
        return or__3285__auto__
      }else {
        var or__3285__auto____$1 = cljs.core._prefer_method["_"];
        if(or__3285__auto____$1) {
          return or__3285__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "IMultiFn.-prefer-method", mf);
        }
      }
    }().call(null, mf, dispatch_val, dispatch_val_y)
  }
};
cljs.core._get_method = function _get_method(mf, dispatch_val) {
  if(function() {
    var and__3273__auto__ = mf;
    if(and__3273__auto__) {
      return mf.cljs$core$IMultiFn$_get_method$arity$2
    }else {
      return and__3273__auto__
    }
  }()) {
    return mf.cljs$core$IMultiFn$_get_method$arity$2(mf, dispatch_val)
  }else {
    var x__3888__auto__ = mf == null ? null : mf;
    return function() {
      var or__3285__auto__ = cljs.core._get_method[goog.typeOf(x__3888__auto__)];
      if(or__3285__auto__) {
        return or__3285__auto__
      }else {
        var or__3285__auto____$1 = cljs.core._get_method["_"];
        if(or__3285__auto____$1) {
          return or__3285__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "IMultiFn.-get-method", mf);
        }
      }
    }().call(null, mf, dispatch_val)
  }
};
cljs.core._methods = function _methods(mf) {
  if(function() {
    var and__3273__auto__ = mf;
    if(and__3273__auto__) {
      return mf.cljs$core$IMultiFn$_methods$arity$1
    }else {
      return and__3273__auto__
    }
  }()) {
    return mf.cljs$core$IMultiFn$_methods$arity$1(mf)
  }else {
    var x__3888__auto__ = mf == null ? null : mf;
    return function() {
      var or__3285__auto__ = cljs.core._methods[goog.typeOf(x__3888__auto__)];
      if(or__3285__auto__) {
        return or__3285__auto__
      }else {
        var or__3285__auto____$1 = cljs.core._methods["_"];
        if(or__3285__auto____$1) {
          return or__3285__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "IMultiFn.-methods", mf);
        }
      }
    }().call(null, mf)
  }
};
cljs.core._prefers = function _prefers(mf) {
  if(function() {
    var and__3273__auto__ = mf;
    if(and__3273__auto__) {
      return mf.cljs$core$IMultiFn$_prefers$arity$1
    }else {
      return and__3273__auto__
    }
  }()) {
    return mf.cljs$core$IMultiFn$_prefers$arity$1(mf)
  }else {
    var x__3888__auto__ = mf == null ? null : mf;
    return function() {
      var or__3285__auto__ = cljs.core._prefers[goog.typeOf(x__3888__auto__)];
      if(or__3285__auto__) {
        return or__3285__auto__
      }else {
        var or__3285__auto____$1 = cljs.core._prefers["_"];
        if(or__3285__auto____$1) {
          return or__3285__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "IMultiFn.-prefers", mf);
        }
      }
    }().call(null, mf)
  }
};
cljs.core._dispatch = function _dispatch(mf, args) {
  if(function() {
    var and__3273__auto__ = mf;
    if(and__3273__auto__) {
      return mf.cljs$core$IMultiFn$_dispatch$arity$2
    }else {
      return and__3273__auto__
    }
  }()) {
    return mf.cljs$core$IMultiFn$_dispatch$arity$2(mf, args)
  }else {
    var x__3888__auto__ = mf == null ? null : mf;
    return function() {
      var or__3285__auto__ = cljs.core._dispatch[goog.typeOf(x__3888__auto__)];
      if(or__3285__auto__) {
        return or__3285__auto__
      }else {
        var or__3285__auto____$1 = cljs.core._dispatch["_"];
        if(or__3285__auto____$1) {
          return or__3285__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "IMultiFn.-dispatch", mf);
        }
      }
    }().call(null, mf, args)
  }
};
cljs.core.do_dispatch = function do_dispatch(mf, name, dispatch_fn, args) {
  var dispatch_val = cljs.core.apply.call(null, dispatch_fn, args);
  var target_fn = cljs.core._get_method.call(null, mf, dispatch_val);
  if(cljs.core.truth_(target_fn)) {
  }else {
    throw new Error([cljs.core.str("No method in multimethod '"), cljs.core.str(name), cljs.core.str("' for dispatch value: "), cljs.core.str(dispatch_val)].join(""));
  }
  return cljs.core.apply.call(null, target_fn, args)
};
cljs.core.MultiFn = function(name, dispatch_fn, default_dispatch_val, hierarchy, method_table, prefer_table, method_cache, cached_hierarchy) {
  this.name = name;
  this.dispatch_fn = dispatch_fn;
  this.default_dispatch_val = default_dispatch_val;
  this.hierarchy = hierarchy;
  this.method_table = method_table;
  this.prefer_table = prefer_table;
  this.method_cache = method_cache;
  this.cached_hierarchy = cached_hierarchy;
  this.cljs$lang$protocol_mask$partition0$ = 4194304;
  this.cljs$lang$protocol_mask$partition1$ = 256
};
cljs.core.MultiFn.cljs$lang$type = true;
cljs.core.MultiFn.cljs$lang$ctorStr = "cljs.core/MultiFn";
cljs.core.MultiFn.cljs$lang$ctorPrWriter = function(this__3829__auto__, writer__3830__auto__, opt__3831__auto__) {
  return cljs.core._write.call(null, writer__3830__auto__, "cljs.core/MultiFn")
};
cljs.core.MultiFn.prototype.cljs$core$IHash$_hash$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return goog.getUid(this$__$1)
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_reset$arity$1 = function(mf) {
  var self__ = this;
  var mf__$1 = this;
  cljs.core.swap_BANG_.call(null, self__.method_table, function(mf__$2) {
    return cljs.core.PersistentArrayMap.EMPTY
  });
  cljs.core.swap_BANG_.call(null, self__.method_cache, function(mf__$2) {
    return cljs.core.PersistentArrayMap.EMPTY
  });
  cljs.core.swap_BANG_.call(null, self__.prefer_table, function(mf__$2) {
    return cljs.core.PersistentArrayMap.EMPTY
  });
  cljs.core.swap_BANG_.call(null, self__.cached_hierarchy, function(mf__$2) {
    return null
  });
  return mf__$1
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_add_method$arity$3 = function(mf, dispatch_val, method) {
  var self__ = this;
  var mf__$1 = this;
  cljs.core.swap_BANG_.call(null, self__.method_table, cljs.core.assoc, dispatch_val, method);
  cljs.core.reset_cache.call(null, self__.method_cache, self__.method_table, self__.cached_hierarchy, self__.hierarchy);
  return mf__$1
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_remove_method$arity$2 = function(mf, dispatch_val) {
  var self__ = this;
  var mf__$1 = this;
  cljs.core.swap_BANG_.call(null, self__.method_table, cljs.core.dissoc, dispatch_val);
  cljs.core.reset_cache.call(null, self__.method_cache, self__.method_table, self__.cached_hierarchy, self__.hierarchy);
  return mf__$1
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_get_method$arity$2 = function(mf, dispatch_val) {
  var self__ = this;
  var mf__$1 = this;
  if(cljs.core._EQ_.call(null, cljs.core.deref.call(null, self__.cached_hierarchy), cljs.core.deref.call(null, self__.hierarchy))) {
  }else {
    cljs.core.reset_cache.call(null, self__.method_cache, self__.method_table, self__.cached_hierarchy, self__.hierarchy)
  }
  var temp__4090__auto__ = cljs.core.deref.call(null, self__.method_cache).call(null, dispatch_val);
  if(cljs.core.truth_(temp__4090__auto__)) {
    var target_fn = temp__4090__auto__;
    return target_fn
  }else {
    var temp__4090__auto____$1 = cljs.core.find_and_cache_best_method.call(null, self__.name, dispatch_val, self__.hierarchy, self__.method_table, self__.prefer_table, self__.method_cache, self__.cached_hierarchy);
    if(cljs.core.truth_(temp__4090__auto____$1)) {
      var target_fn = temp__4090__auto____$1;
      return target_fn
    }else {
      return cljs.core.deref.call(null, self__.method_table).call(null, self__.default_dispatch_val)
    }
  }
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_prefer_method$arity$3 = function(mf, dispatch_val_x, dispatch_val_y) {
  var self__ = this;
  var mf__$1 = this;
  if(cljs.core.truth_(cljs.core.prefers_STAR_.call(null, dispatch_val_x, dispatch_val_y, self__.prefer_table))) {
    throw new Error([cljs.core.str("Preference conflict in multimethod '"), cljs.core.str(self__.name), cljs.core.str("': "), cljs.core.str(dispatch_val_y), cljs.core.str(" is already preferred to "), cljs.core.str(dispatch_val_x)].join(""));
  }else {
  }
  cljs.core.swap_BANG_.call(null, self__.prefer_table, function(old) {
    return cljs.core.assoc.call(null, old, dispatch_val_x, cljs.core.conj.call(null, cljs.core.get.call(null, old, dispatch_val_x, cljs.core.PersistentHashSet.EMPTY), dispatch_val_y))
  });
  return cljs.core.reset_cache.call(null, self__.method_cache, self__.method_table, self__.cached_hierarchy, self__.hierarchy)
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_methods$arity$1 = function(mf) {
  var self__ = this;
  var mf__$1 = this;
  return cljs.core.deref.call(null, self__.method_table)
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_prefers$arity$1 = function(mf) {
  var self__ = this;
  var mf__$1 = this;
  return cljs.core.deref.call(null, self__.prefer_table)
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_dispatch$arity$2 = function(mf, args) {
  var self__ = this;
  var mf__$1 = this;
  return cljs.core.do_dispatch.call(null, mf__$1, self__.name, self__.dispatch_fn, args)
};
cljs.core.__GT_MultiFn = function __GT_MultiFn(name, dispatch_fn, default_dispatch_val, hierarchy, method_table, prefer_table, method_cache, cached_hierarchy) {
  return new cljs.core.MultiFn(name, dispatch_fn, default_dispatch_val, hierarchy, method_table, prefer_table, method_cache, cached_hierarchy)
};
cljs.core.MultiFn.prototype.call = function() {
  var G__426023__delegate = function(_, args) {
    var self = this;
    return cljs.core._dispatch.call(null, self, args)
  };
  var G__426023 = function(_, var_args) {
    var args = null;
    if(arguments.length > 1) {
      args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
    }
    return G__426023__delegate.call(this, _, args)
  };
  G__426023.cljs$lang$maxFixedArity = 1;
  G__426023.cljs$lang$applyTo = function(arglist__426024) {
    var _ = cljs.core.first(arglist__426024);
    var args = cljs.core.rest(arglist__426024);
    return G__426023__delegate(_, args)
  };
  G__426023.cljs$core$IFn$_invoke$arity$variadic = G__426023__delegate;
  return G__426023
}();
cljs.core.MultiFn.prototype.apply = function(_, args) {
  var self = this;
  return cljs.core._dispatch.call(null, self, args)
};
cljs.core.remove_all_methods = function remove_all_methods(multifn) {
  return cljs.core._reset.call(null, multifn)
};
cljs.core.remove_method = function remove_method(multifn, dispatch_val) {
  return cljs.core._remove_method.call(null, multifn, dispatch_val)
};
cljs.core.prefer_method = function prefer_method(multifn, dispatch_val_x, dispatch_val_y) {
  return cljs.core._prefer_method.call(null, multifn, dispatch_val_x, dispatch_val_y)
};
cljs.core.methods$ = function methods$(multifn) {
  return cljs.core._methods.call(null, multifn)
};
cljs.core.get_method = function get_method(multifn, dispatch_val) {
  return cljs.core._get_method.call(null, multifn, dispatch_val)
};
cljs.core.prefers = function prefers(multifn) {
  return cljs.core._prefers.call(null, multifn)
};
cljs.core.UUID = function(uuid) {
  this.uuid = uuid;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 2153775104
};
cljs.core.UUID.cljs$lang$type = true;
cljs.core.UUID.cljs$lang$ctorStr = "cljs.core/UUID";
cljs.core.UUID.cljs$lang$ctorPrWriter = function(this__3829__auto__, writer__3830__auto__, opt__3831__auto__) {
  return cljs.core._write.call(null, writer__3830__auto__, "cljs.core/UUID")
};
cljs.core.UUID.prototype.cljs$core$IHash$_hash$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return goog.string.hashCode(cljs.core.pr_str.call(null, this$__$1))
};
cljs.core.UUID.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(_, writer, ___$1) {
  var self__ = this;
  var ___$2 = this;
  return cljs.core._write.call(null, writer, [cljs.core.str('#uuid "'), cljs.core.str(self__.uuid), cljs.core.str('"')].join(""))
};
cljs.core.UUID.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(_, other) {
  var self__ = this;
  var ___$1 = this;
  return other instanceof cljs.core.UUID && self__.uuid === other.uuid
};
cljs.core.__GT_UUID = function __GT_UUID(uuid) {
  return new cljs.core.UUID(uuid)
};
cljs.core.ExceptionInfo = function(message, data, cause) {
  this.message = message;
  this.data = data;
  this.cause = cause
};
cljs.core.ExceptionInfo.cljs$lang$type = true;
cljs.core.ExceptionInfo.cljs$lang$ctorStr = "cljs.core/ExceptionInfo";
cljs.core.ExceptionInfo.cljs$lang$ctorPrWriter = function(this__3832__auto__, writer__3833__auto__, opts__3834__auto__) {
  return cljs.core._write.call(null, writer__3833__auto__, "cljs.core/ExceptionInfo")
};
cljs.core.__GT_ExceptionInfo = function __GT_ExceptionInfo(message, data, cause) {
  return new cljs.core.ExceptionInfo(message, data, cause)
};
cljs.core.ExceptionInfo.prototype = new Error;
cljs.core.ExceptionInfo.prototype.constructor = cljs.core.ExceptionInfo;
cljs.core.ex_info = function() {
  var ex_info = null;
  var ex_info__2 = function(msg, map) {
    return new cljs.core.ExceptionInfo(msg, map, null)
  };
  var ex_info__3 = function(msg, map, cause) {
    return new cljs.core.ExceptionInfo(msg, map, cause)
  };
  ex_info = function(msg, map, cause) {
    switch(arguments.length) {
      case 2:
        return ex_info__2.call(this, msg, map);
      case 3:
        return ex_info__3.call(this, msg, map, cause)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  ex_info.cljs$core$IFn$_invoke$arity$2 = ex_info__2;
  ex_info.cljs$core$IFn$_invoke$arity$3 = ex_info__3;
  return ex_info
}();
cljs.core.ex_data = function ex_data(ex) {
  if(ex instanceof cljs.core.ExceptionInfo) {
    return ex.data
  }else {
    return null
  }
};
cljs.core.ex_message = function ex_message(ex) {
  if(ex instanceof Error) {
    return ex.message
  }else {
    return null
  }
};
cljs.core.ex_cause = function ex_cause(ex) {
  if(ex instanceof cljs.core.ExceptionInfo) {
    return ex.cause
  }else {
    return null
  }
};
cljs.core.comparator = function comparator(pred) {
  return function(x, y) {
    if(cljs.core.truth_(pred.call(null, x, y))) {
      return-1
    }else {
      if(cljs.core.truth_(pred.call(null, y, x))) {
        return 1
      }else {
        if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          return 0
        }else {
          return null
        }
      }
    }
  }
};
cljs.core.special_symbol_QMARK_ = function special_symbol_QMARK_(x) {
  return cljs.core.contains_QMARK_.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 19, [new cljs.core.Symbol(null, "deftype*", "deftype*", -978581244, null), null, new cljs.core.Symbol(null, "new", "new", -1640422567, null), null, new cljs.core.Symbol(null, "quote", "quote", -1532577739, null), null, new cljs.core.Symbol(null, "&", "&", -1640531489, null), null, new cljs.core.Symbol(null, "set!", "set!", -1637004872, null), null, new cljs.core.Symbol(null, 
  "recur", "recur", -1532142362, null), null, new cljs.core.Symbol(null, ".", ".", -1640531481, null), null, new cljs.core.Symbol(null, "ns", "ns", -1640528002, null), null, new cljs.core.Symbol(null, "do", "do", -1640528316, null), null, new cljs.core.Symbol(null, "fn*", "fn*", -1640430053, null), null, new cljs.core.Symbol(null, "throw", "throw", -1530191713, null), null, new cljs.core.Symbol(null, "letfn*", "letfn*", 1548249632, null), null, new cljs.core.Symbol(null, "js*", "js*", -1640426054, 
  null), null, new cljs.core.Symbol(null, "defrecord*", "defrecord*", 774272013, null), null, new cljs.core.Symbol(null, "let*", "let*", -1637213400, null), null, new cljs.core.Symbol(null, "loop*", "loop*", -1537374273, null), null, new cljs.core.Symbol(null, "try", "try", -1640416396, null), null, new cljs.core.Symbol(null, "if", "if", -1640528170, null), null, new cljs.core.Symbol(null, "def", "def", -1640432194, null), null], null), null), x)
};
goog.provide("cljs_uuid.core");
goog.require("cljs.core");
goog.require("goog.string.StringBuffer");
cljs_uuid.core.make_random = function make_random() {
  var f = function f() {
    return cljs.core.rand_int.call(null, 16).toString(16)
  };
  var g = function g() {
    return(8 | 3 & cljs.core.rand_int.call(null, 15)).toString(16)
  };
  return new cljs.core.UUID((new goog.string.StringBuffer(f.call(null), f.call(null), f.call(null), f.call(null), f.call(null), f.call(null), f.call(null), f.call(null), "-", f.call(null), f.call(null), f.call(null), f.call(null), "-4", f.call(null), f.call(null), f.call(null), "-", g.call(null), f.call(null), f.call(null), f.call(null), "-", f.call(null), f.call(null), f.call(null), f.call(null), f.call(null), f.call(null), f.call(null), f.call(null), f.call(null), f.call(null), f.call(null), f.call(null))).toString())
};
cljs_uuid.core.make_v4 = cljs_uuid.core.make_random;
cljs_uuid.core.make_random_string = function make_random_string() {
  return cljs_uuid.core.make_random.call(null).uuid
};
goog.provide("chaperone.crossover.user");
goog.require("cljs.core");
goog.require("cljs_uuid.core");
goog.require("cljs_uuid.core");
chaperone.crossover.user.User = function(id, firstname, lastname, password, email, photo, last_logged_in, __meta, __extmap) {
  this.id = id;
  this.firstname = firstname;
  this.lastname = lastname;
  this.password = password;
  this.email = email;
  this.photo = photo;
  this.last_logged_in = last_logged_in;
  this.__meta = __meta;
  this.__extmap = __extmap;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 2229667594;
  if(arguments.length > 7) {
    this.__meta = __meta;
    this.__extmap = __extmap
  }else {
    this.__meta = null;
    this.__extmap = null
  }
};
chaperone.crossover.user.User.prototype.cljs$core$IHash$_hash$arity$1 = function(this__3842__auto__) {
  var self__ = this;
  var this__3842__auto____$1 = this;
  var h__3696__auto__ = self__.__hash;
  if(!(h__3696__auto__ == null)) {
    return h__3696__auto__
  }else {
    var h__3696__auto____$1 = cljs.core.hash_imap.call(null, this__3842__auto____$1);
    self__.__hash = h__3696__auto____$1;
    return h__3696__auto____$1
  }
};
chaperone.crossover.user.User.prototype.cljs$core$ILookup$_lookup$arity$2 = function(this__3847__auto__, k__3848__auto__) {
  var self__ = this;
  var this__3847__auto____$1 = this;
  return cljs.core._lookup.call(null, this__3847__auto____$1, k__3848__auto__, null)
};
chaperone.crossover.user.User.prototype.cljs$core$ILookup$_lookup$arity$3 = function(this__3849__auto__, k428402, else__3850__auto__) {
  var self__ = this;
  var this__3849__auto____$1 = this;
  if(cljs.core.keyword_identical_QMARK_.call(null, k428402, new cljs.core.Keyword(null, "id", "id", 1013907597))) {
    return self__.id
  }else {
    if(cljs.core.keyword_identical_QMARK_.call(null, k428402, new cljs.core.Keyword(null, "firstname", "firstname", 1147693229))) {
      return self__.firstname
    }else {
      if(cljs.core.keyword_identical_QMARK_.call(null, k428402, new cljs.core.Keyword(null, "lastname", "lastname", 3850225043))) {
        return self__.lastname
      }else {
        if(cljs.core.keyword_identical_QMARK_.call(null, k428402, new cljs.core.Keyword(null, "password", "password", 2230889997))) {
          return self__.password
        }else {
          if(cljs.core.keyword_identical_QMARK_.call(null, k428402, new cljs.core.Keyword(null, "email", "email", 1110523662))) {
            return self__.email
          }else {
            if(cljs.core.keyword_identical_QMARK_.call(null, k428402, new cljs.core.Keyword(null, "photo", "photo", 1120547236))) {
              return self__.photo
            }else {
              if(cljs.core.keyword_identical_QMARK_.call(null, k428402, new cljs.core.Keyword(null, "last-logged-in", "last-logged-in", 1486904907))) {
                return self__.last_logged_in
              }else {
                if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                  return cljs.core.get.call(null, self__.__extmap, k428402, else__3850__auto__)
                }else {
                  return null
                }
              }
            }
          }
        }
      }
    }
  }
};
chaperone.crossover.user.User.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(this__3854__auto__, k__3855__auto__, G__428401) {
  var self__ = this;
  var this__3854__auto____$1 = this;
  var pred__428404 = cljs.core.keyword_identical_QMARK_;
  var expr__428405 = k__3855__auto__;
  if(cljs.core.truth_(pred__428404.call(null, new cljs.core.Keyword(null, "id", "id", 1013907597), expr__428405))) {
    return new chaperone.crossover.user.User(G__428401, self__.firstname, self__.lastname, self__.password, self__.email, self__.photo, self__.last_logged_in, self__.__meta, self__.__extmap, null)
  }else {
    if(cljs.core.truth_(pred__428404.call(null, new cljs.core.Keyword(null, "firstname", "firstname", 1147693229), expr__428405))) {
      return new chaperone.crossover.user.User(self__.id, G__428401, self__.lastname, self__.password, self__.email, self__.photo, self__.last_logged_in, self__.__meta, self__.__extmap, null)
    }else {
      if(cljs.core.truth_(pred__428404.call(null, new cljs.core.Keyword(null, "lastname", "lastname", 3850225043), expr__428405))) {
        return new chaperone.crossover.user.User(self__.id, self__.firstname, G__428401, self__.password, self__.email, self__.photo, self__.last_logged_in, self__.__meta, self__.__extmap, null)
      }else {
        if(cljs.core.truth_(pred__428404.call(null, new cljs.core.Keyword(null, "password", "password", 2230889997), expr__428405))) {
          return new chaperone.crossover.user.User(self__.id, self__.firstname, self__.lastname, G__428401, self__.email, self__.photo, self__.last_logged_in, self__.__meta, self__.__extmap, null)
        }else {
          if(cljs.core.truth_(pred__428404.call(null, new cljs.core.Keyword(null, "email", "email", 1110523662), expr__428405))) {
            return new chaperone.crossover.user.User(self__.id, self__.firstname, self__.lastname, self__.password, G__428401, self__.photo, self__.last_logged_in, self__.__meta, self__.__extmap, null)
          }else {
            if(cljs.core.truth_(pred__428404.call(null, new cljs.core.Keyword(null, "photo", "photo", 1120547236), expr__428405))) {
              return new chaperone.crossover.user.User(self__.id, self__.firstname, self__.lastname, self__.password, self__.email, G__428401, self__.last_logged_in, self__.__meta, self__.__extmap, null)
            }else {
              if(cljs.core.truth_(pred__428404.call(null, new cljs.core.Keyword(null, "last-logged-in", "last-logged-in", 1486904907), expr__428405))) {
                return new chaperone.crossover.user.User(self__.id, self__.firstname, self__.lastname, self__.password, self__.email, self__.photo, G__428401, self__.__meta, self__.__extmap, null)
              }else {
                return new chaperone.crossover.user.User(self__.id, self__.firstname, self__.lastname, self__.password, self__.email, self__.photo, self__.last_logged_in, self__.__meta, cljs.core.assoc.call(null, self__.__extmap, k__3855__auto__, G__428401), null)
              }
            }
          }
        }
      }
    }
  }
};
chaperone.crossover.user.User.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(this__3861__auto__, writer__3862__auto__, opts__3863__auto__) {
  var self__ = this;
  var this__3861__auto____$1 = this;
  var pr_pair__3864__auto__ = function(keyval__3865__auto__) {
    return cljs.core.pr_sequential_writer.call(null, writer__3862__auto__, cljs.core.pr_writer, "", " ", "", opts__3863__auto__, keyval__3865__auto__)
  };
  return cljs.core.pr_sequential_writer.call(null, writer__3862__auto__, pr_pair__3864__auto__, "#chaperone.crossover.user.User{", ", ", "}", opts__3863__auto__, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 7, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "id", "id", 1013907597), self__.id], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
  [new cljs.core.Keyword(null, "firstname", "firstname", 1147693229), self__.firstname], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "lastname", "lastname", 3850225043), self__.lastname], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "password", "password", 2230889997), self__.password], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
  [new cljs.core.Keyword(null, "email", "email", 1110523662), self__.email], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "photo", "photo", 1120547236), self__.photo], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "last-logged-in", "last-logged-in", 1486904907), self__.last_logged_in], null)], null), self__.__extmap))
};
chaperone.crossover.user.User.prototype.cljs$core$ICollection$_conj$arity$2 = function(this__3852__auto__, entry__3853__auto__) {
  var self__ = this;
  var this__3852__auto____$1 = this;
  if(cljs.core.vector_QMARK_.call(null, entry__3853__auto__)) {
    return cljs.core._assoc.call(null, this__3852__auto____$1, cljs.core._nth.call(null, entry__3853__auto__, 0), cljs.core._nth.call(null, entry__3853__auto__, 1))
  }else {
    return cljs.core.reduce.call(null, cljs.core._conj, this__3852__auto____$1, entry__3853__auto__)
  }
};
chaperone.crossover.user.User.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this__3859__auto__) {
  var self__ = this;
  var this__3859__auto____$1 = this;
  return cljs.core.seq.call(null, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 7, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "id", "id", 1013907597), self__.id], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "firstname", "firstname", 1147693229), self__.firstname], null), new cljs.core.PersistentVector(null, 
  2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "lastname", "lastname", 3850225043), self__.lastname], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "password", "password", 2230889997), self__.password], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "email", "email", 1110523662), self__.email], null), new cljs.core.PersistentVector(null, 
  2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "photo", "photo", 1120547236), self__.photo], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "last-logged-in", "last-logged-in", 1486904907), self__.last_logged_in], null)], null), self__.__extmap))
};
chaperone.crossover.user.User.prototype.cljs$core$ICounted$_count$arity$1 = function(this__3851__auto__) {
  var self__ = this;
  var this__3851__auto____$1 = this;
  return 7 + cljs.core.count.call(null, self__.__extmap)
};
chaperone.crossover.user.User.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(this__3843__auto__, other__3844__auto__) {
  var self__ = this;
  var this__3843__auto____$1 = this;
  if(cljs.core.truth_(function() {
    var and__3273__auto__ = other__3844__auto__;
    if(cljs.core.truth_(and__3273__auto__)) {
      return this__3843__auto____$1.constructor === other__3844__auto__.constructor && cljs.core.equiv_map.call(null, this__3843__auto____$1, other__3844__auto__)
    }else {
      return and__3273__auto__
    }
  }())) {
    return true
  }else {
    return false
  }
};
chaperone.crossover.user.User.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(this__3846__auto__, G__428401) {
  var self__ = this;
  var this__3846__auto____$1 = this;
  return new chaperone.crossover.user.User(self__.id, self__.firstname, self__.lastname, self__.password, self__.email, self__.photo, self__.last_logged_in, G__428401, self__.__extmap, self__.__hash)
};
chaperone.crossover.user.User.prototype.cljs$core$IMeta$_meta$arity$1 = function(this__3845__auto__) {
  var self__ = this;
  var this__3845__auto____$1 = this;
  return self__.__meta
};
chaperone.crossover.user.User.prototype.cljs$core$IMap$_dissoc$arity$2 = function(this__3856__auto__, k__3857__auto__) {
  var self__ = this;
  var this__3856__auto____$1 = this;
  if(cljs.core.contains_QMARK_.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 7, [new cljs.core.Keyword(null, "last-logged-in", "last-logged-in", 1486904907), null, new cljs.core.Keyword(null, "photo", "photo", 1120547236), null, new cljs.core.Keyword(null, "email", "email", 1110523662), null, new cljs.core.Keyword(null, "firstname", "firstname", 1147693229), null, new cljs.core.Keyword(null, "lastname", "lastname", 3850225043), null, new cljs.core.Keyword(null, 
  "id", "id", 1013907597), null, new cljs.core.Keyword(null, "password", "password", 2230889997), null], null), null), k__3857__auto__)) {
    return cljs.core.dissoc.call(null, cljs.core.with_meta.call(null, cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, this__3856__auto____$1), self__.__meta), k__3857__auto__)
  }else {
    return new chaperone.crossover.user.User(self__.id, self__.firstname, self__.lastname, self__.password, self__.email, self__.photo, self__.last_logged_in, self__.__meta, cljs.core.not_empty.call(null, cljs.core.dissoc.call(null, self__.__extmap, k__3857__auto__)), null)
  }
};
chaperone.crossover.user.User.cljs$lang$type = true;
chaperone.crossover.user.User.cljs$lang$ctorPrSeq = function(this__3881__auto__) {
  return cljs.core._conj.call(null, cljs.core.List.EMPTY, "chaperone.crossover.user/User")
};
chaperone.crossover.user.User.cljs$lang$ctorPrWriter = function(this__3881__auto__, writer__3882__auto__) {
  return cljs.core._write.call(null, writer__3882__auto__, "chaperone.crossover.user/User")
};
chaperone.crossover.user.__GT_User = function __GT_User(id, firstname, lastname, password, email, photo, last_logged_in) {
  return new chaperone.crossover.user.User(id, firstname, lastname, password, email, photo, last_logged_in)
};
chaperone.crossover.user.map__GT_User = function map__GT_User(G__428403) {
  return new chaperone.crossover.user.User((new cljs.core.Keyword(null, "id", "id", 1013907597)).cljs$core$IFn$_invoke$arity$1(G__428403), (new cljs.core.Keyword(null, "firstname", "firstname", 1147693229)).cljs$core$IFn$_invoke$arity$1(G__428403), (new cljs.core.Keyword(null, "lastname", "lastname", 3850225043)).cljs$core$IFn$_invoke$arity$1(G__428403), (new cljs.core.Keyword(null, "password", "password", 2230889997)).cljs$core$IFn$_invoke$arity$1(G__428403), (new cljs.core.Keyword(null, "email", 
  "email", 1110523662)).cljs$core$IFn$_invoke$arity$1(G__428403), (new cljs.core.Keyword(null, "photo", "photo", 1120547236)).cljs$core$IFn$_invoke$arity$1(G__428403), (new cljs.core.Keyword(null, "last-logged-in", "last-logged-in", 1486904907)).cljs$core$IFn$_invoke$arity$1(G__428403), null, cljs.core.dissoc.call(null, G__428403, new cljs.core.Keyword(null, "id", "id", 1013907597), new cljs.core.Keyword(null, "firstname", "firstname", 1147693229), new cljs.core.Keyword(null, "lastname", "lastname", 
  3850225043), new cljs.core.Keyword(null, "password", "password", 2230889997), new cljs.core.Keyword(null, "email", "email", 1110523662), new cljs.core.Keyword(null, "photo", "photo", 1120547236), new cljs.core.Keyword(null, "last-logged-in", "last-logged-in", 1486904907)))
};
chaperone.crossover.user.new_user = function() {
  var new_user__delegate = function(firstname, lastname, email, password, p__428407) {
    var map__428409 = p__428407;
    var map__428409__$1 = cljs.core.seq_QMARK_.call(null, map__428409) ? cljs.core.apply.call(null, cljs.core.hash_map, map__428409) : map__428409;
    var last_logged_in = cljs.core.get.call(null, map__428409__$1, new cljs.core.Keyword(null, "last-logged-in", "last-logged-in", 1486904907));
    var photo = cljs.core.get.call(null, map__428409__$1, new cljs.core.Keyword(null, "photo", "photo", 1120547236));
    return chaperone.crossover.user.__GT_User.call(null, cljs_uuid.core.make_random_string.call(null), firstname, lastname, password, email, photo, last_logged_in)
  };
  var new_user = function(firstname, lastname, email, password, var_args) {
    var p__428407 = null;
    if(arguments.length > 4) {
      p__428407 = cljs.core.array_seq(Array.prototype.slice.call(arguments, 4), 0)
    }
    return new_user__delegate.call(this, firstname, lastname, email, password, p__428407)
  };
  new_user.cljs$lang$maxFixedArity = 4;
  new_user.cljs$lang$applyTo = function(arglist__428410) {
    var firstname = cljs.core.first(arglist__428410);
    arglist__428410 = cljs.core.next(arglist__428410);
    var lastname = cljs.core.first(arglist__428410);
    arglist__428410 = cljs.core.next(arglist__428410);
    var email = cljs.core.first(arglist__428410);
    arglist__428410 = cljs.core.next(arglist__428410);
    var password = cljs.core.first(arglist__428410);
    var p__428407 = cljs.core.rest(arglist__428410);
    return new_user__delegate(firstname, lastname, email, password, p__428407)
  };
  new_user.cljs$core$IFn$_invoke$arity$variadic = new_user__delegate;
  return new_user
}();
goog.provide("chaperone.crossover.rpc");
goog.require("cljs.core");
goog.require("cljs_uuid.core");
goog.require("cljs_uuid.core");
chaperone.crossover.rpc.Request = function(id, category, action, data, __meta, __extmap) {
  this.id = id;
  this.category = category;
  this.action = action;
  this.data = data;
  this.__meta = __meta;
  this.__extmap = __extmap;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 2229667594;
  if(arguments.length > 4) {
    this.__meta = __meta;
    this.__extmap = __extmap
  }else {
    this.__meta = null;
    this.__extmap = null
  }
};
chaperone.crossover.rpc.Request.prototype.cljs$core$IHash$_hash$arity$1 = function(this__3842__auto__) {
  var self__ = this;
  var this__3842__auto____$1 = this;
  var h__3696__auto__ = self__.__hash;
  if(!(h__3696__auto__ == null)) {
    return h__3696__auto__
  }else {
    var h__3696__auto____$1 = cljs.core.hash_imap.call(null, this__3842__auto____$1);
    self__.__hash = h__3696__auto____$1;
    return h__3696__auto____$1
  }
};
chaperone.crossover.rpc.Request.prototype.cljs$core$ILookup$_lookup$arity$2 = function(this__3847__auto__, k__3848__auto__) {
  var self__ = this;
  var this__3847__auto____$1 = this;
  return cljs.core._lookup.call(null, this__3847__auto____$1, k__3848__auto__, null)
};
chaperone.crossover.rpc.Request.prototype.cljs$core$ILookup$_lookup$arity$3 = function(this__3849__auto__, k428020, else__3850__auto__) {
  var self__ = this;
  var this__3849__auto____$1 = this;
  if(cljs.core.keyword_identical_QMARK_.call(null, k428020, new cljs.core.Keyword(null, "id", "id", 1013907597))) {
    return self__.id
  }else {
    if(cljs.core.keyword_identical_QMARK_.call(null, k428020, new cljs.core.Keyword(null, "category", "category", 1064415344))) {
      return self__.category
    }else {
      if(cljs.core.keyword_identical_QMARK_.call(null, k428020, new cljs.core.Keyword(null, "action", "action", 3885920680))) {
        return self__.action
      }else {
        if(cljs.core.keyword_identical_QMARK_.call(null, k428020, new cljs.core.Keyword(null, "data", "data", 1016980252))) {
          return self__.data
        }else {
          if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
            return cljs.core.get.call(null, self__.__extmap, k428020, else__3850__auto__)
          }else {
            return null
          }
        }
      }
    }
  }
};
chaperone.crossover.rpc.Request.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(this__3854__auto__, k__3855__auto__, G__428019) {
  var self__ = this;
  var this__3854__auto____$1 = this;
  var pred__428022 = cljs.core.keyword_identical_QMARK_;
  var expr__428023 = k__3855__auto__;
  if(cljs.core.truth_(pred__428022.call(null, new cljs.core.Keyword(null, "id", "id", 1013907597), expr__428023))) {
    return new chaperone.crossover.rpc.Request(G__428019, self__.category, self__.action, self__.data, self__.__meta, self__.__extmap, null)
  }else {
    if(cljs.core.truth_(pred__428022.call(null, new cljs.core.Keyword(null, "category", "category", 1064415344), expr__428023))) {
      return new chaperone.crossover.rpc.Request(self__.id, G__428019, self__.action, self__.data, self__.__meta, self__.__extmap, null)
    }else {
      if(cljs.core.truth_(pred__428022.call(null, new cljs.core.Keyword(null, "action", "action", 3885920680), expr__428023))) {
        return new chaperone.crossover.rpc.Request(self__.id, self__.category, G__428019, self__.data, self__.__meta, self__.__extmap, null)
      }else {
        if(cljs.core.truth_(pred__428022.call(null, new cljs.core.Keyword(null, "data", "data", 1016980252), expr__428023))) {
          return new chaperone.crossover.rpc.Request(self__.id, self__.category, self__.action, G__428019, self__.__meta, self__.__extmap, null)
        }else {
          return new chaperone.crossover.rpc.Request(self__.id, self__.category, self__.action, self__.data, self__.__meta, cljs.core.assoc.call(null, self__.__extmap, k__3855__auto__, G__428019), null)
        }
      }
    }
  }
};
chaperone.crossover.rpc.Request.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(this__3861__auto__, writer__3862__auto__, opts__3863__auto__) {
  var self__ = this;
  var this__3861__auto____$1 = this;
  var pr_pair__3864__auto__ = function(keyval__3865__auto__) {
    return cljs.core.pr_sequential_writer.call(null, writer__3862__auto__, cljs.core.pr_writer, "", " ", "", opts__3863__auto__, keyval__3865__auto__)
  };
  return cljs.core.pr_sequential_writer.call(null, writer__3862__auto__, pr_pair__3864__auto__, "#chaperone.crossover.rpc.Request{", ", ", "}", opts__3863__auto__, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "id", "id", 1013907597), self__.id], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
  [new cljs.core.Keyword(null, "category", "category", 1064415344), self__.category], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "action", "action", 3885920680), self__.action], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "data", "data", 1016980252), self__.data], null)], null), self__.__extmap))
};
chaperone.crossover.rpc.Request.prototype.cljs$core$ICollection$_conj$arity$2 = function(this__3852__auto__, entry__3853__auto__) {
  var self__ = this;
  var this__3852__auto____$1 = this;
  if(cljs.core.vector_QMARK_.call(null, entry__3853__auto__)) {
    return cljs.core._assoc.call(null, this__3852__auto____$1, cljs.core._nth.call(null, entry__3853__auto__, 0), cljs.core._nth.call(null, entry__3853__auto__, 1))
  }else {
    return cljs.core.reduce.call(null, cljs.core._conj, this__3852__auto____$1, entry__3853__auto__)
  }
};
chaperone.crossover.rpc.Request.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this__3859__auto__) {
  var self__ = this;
  var this__3859__auto____$1 = this;
  return cljs.core.seq.call(null, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "id", "id", 1013907597), self__.id], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "category", "category", 1064415344), self__.category], null), new cljs.core.PersistentVector(null, 
  2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "action", "action", 3885920680), self__.action], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "data", "data", 1016980252), self__.data], null)], null), self__.__extmap))
};
chaperone.crossover.rpc.Request.prototype.cljs$core$ICounted$_count$arity$1 = function(this__3851__auto__) {
  var self__ = this;
  var this__3851__auto____$1 = this;
  return 4 + cljs.core.count.call(null, self__.__extmap)
};
chaperone.crossover.rpc.Request.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(this__3843__auto__, other__3844__auto__) {
  var self__ = this;
  var this__3843__auto____$1 = this;
  if(cljs.core.truth_(function() {
    var and__3273__auto__ = other__3844__auto__;
    if(cljs.core.truth_(and__3273__auto__)) {
      return this__3843__auto____$1.constructor === other__3844__auto__.constructor && cljs.core.equiv_map.call(null, this__3843__auto____$1, other__3844__auto__)
    }else {
      return and__3273__auto__
    }
  }())) {
    return true
  }else {
    return false
  }
};
chaperone.crossover.rpc.Request.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(this__3846__auto__, G__428019) {
  var self__ = this;
  var this__3846__auto____$1 = this;
  return new chaperone.crossover.rpc.Request(self__.id, self__.category, self__.action, self__.data, G__428019, self__.__extmap, self__.__hash)
};
chaperone.crossover.rpc.Request.prototype.cljs$core$IMeta$_meta$arity$1 = function(this__3845__auto__) {
  var self__ = this;
  var this__3845__auto____$1 = this;
  return self__.__meta
};
chaperone.crossover.rpc.Request.prototype.cljs$core$IMap$_dissoc$arity$2 = function(this__3856__auto__, k__3857__auto__) {
  var self__ = this;
  var this__3856__auto____$1 = this;
  if(cljs.core.contains_QMARK_.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "data", "data", 1016980252), null, new cljs.core.Keyword(null, "action", "action", 3885920680), null, new cljs.core.Keyword(null, "id", "id", 1013907597), null, new cljs.core.Keyword(null, "category", "category", 1064415344), null], null), null), k__3857__auto__)) {
    return cljs.core.dissoc.call(null, cljs.core.with_meta.call(null, cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, this__3856__auto____$1), self__.__meta), k__3857__auto__)
  }else {
    return new chaperone.crossover.rpc.Request(self__.id, self__.category, self__.action, self__.data, self__.__meta, cljs.core.not_empty.call(null, cljs.core.dissoc.call(null, self__.__extmap, k__3857__auto__)), null)
  }
};
chaperone.crossover.rpc.Request.cljs$lang$type = true;
chaperone.crossover.rpc.Request.cljs$lang$ctorPrSeq = function(this__3881__auto__) {
  return cljs.core._conj.call(null, cljs.core.List.EMPTY, "chaperone.crossover.rpc/Request")
};
chaperone.crossover.rpc.Request.cljs$lang$ctorPrWriter = function(this__3881__auto__, writer__3882__auto__) {
  return cljs.core._write.call(null, writer__3882__auto__, "chaperone.crossover.rpc/Request")
};
chaperone.crossover.rpc.__GT_Request = function __GT_Request(id, category, action, data) {
  return new chaperone.crossover.rpc.Request(id, category, action, data)
};
chaperone.crossover.rpc.map__GT_Request = function map__GT_Request(G__428021) {
  return new chaperone.crossover.rpc.Request((new cljs.core.Keyword(null, "id", "id", 1013907597)).cljs$core$IFn$_invoke$arity$1(G__428021), (new cljs.core.Keyword(null, "category", "category", 1064415344)).cljs$core$IFn$_invoke$arity$1(G__428021), (new cljs.core.Keyword(null, "action", "action", 3885920680)).cljs$core$IFn$_invoke$arity$1(G__428021), (new cljs.core.Keyword(null, "data", "data", 1016980252)).cljs$core$IFn$_invoke$arity$1(G__428021), null, cljs.core.dissoc.call(null, G__428021, new cljs.core.Keyword(null, 
  "id", "id", 1013907597), new cljs.core.Keyword(null, "category", "category", 1064415344), new cljs.core.Keyword(null, "action", "action", 3885920680), new cljs.core.Keyword(null, "data", "data", 1016980252)))
};
chaperone.crossover.rpc.Response = function(request, data, __meta, __extmap) {
  this.request = request;
  this.data = data;
  this.__meta = __meta;
  this.__extmap = __extmap;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 2229667594;
  if(arguments.length > 2) {
    this.__meta = __meta;
    this.__extmap = __extmap
  }else {
    this.__meta = null;
    this.__extmap = null
  }
};
chaperone.crossover.rpc.Response.prototype.cljs$core$IHash$_hash$arity$1 = function(this__3842__auto__) {
  var self__ = this;
  var this__3842__auto____$1 = this;
  var h__3696__auto__ = self__.__hash;
  if(!(h__3696__auto__ == null)) {
    return h__3696__auto__
  }else {
    var h__3696__auto____$1 = cljs.core.hash_imap.call(null, this__3842__auto____$1);
    self__.__hash = h__3696__auto____$1;
    return h__3696__auto____$1
  }
};
chaperone.crossover.rpc.Response.prototype.cljs$core$ILookup$_lookup$arity$2 = function(this__3847__auto__, k__3848__auto__) {
  var self__ = this;
  var this__3847__auto____$1 = this;
  return cljs.core._lookup.call(null, this__3847__auto____$1, k__3848__auto__, null)
};
chaperone.crossover.rpc.Response.prototype.cljs$core$ILookup$_lookup$arity$3 = function(this__3849__auto__, k428026, else__3850__auto__) {
  var self__ = this;
  var this__3849__auto____$1 = this;
  if(cljs.core.keyword_identical_QMARK_.call(null, k428026, new cljs.core.Keyword(null, "request", "request", 2109597185))) {
    return self__.request
  }else {
    if(cljs.core.keyword_identical_QMARK_.call(null, k428026, new cljs.core.Keyword(null, "data", "data", 1016980252))) {
      return self__.data
    }else {
      if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        return cljs.core.get.call(null, self__.__extmap, k428026, else__3850__auto__)
      }else {
        return null
      }
    }
  }
};
chaperone.crossover.rpc.Response.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(this__3854__auto__, k__3855__auto__, G__428025) {
  var self__ = this;
  var this__3854__auto____$1 = this;
  var pred__428028 = cljs.core.keyword_identical_QMARK_;
  var expr__428029 = k__3855__auto__;
  if(cljs.core.truth_(pred__428028.call(null, new cljs.core.Keyword(null, "request", "request", 2109597185), expr__428029))) {
    return new chaperone.crossover.rpc.Response(G__428025, self__.data, self__.__meta, self__.__extmap, null)
  }else {
    if(cljs.core.truth_(pred__428028.call(null, new cljs.core.Keyword(null, "data", "data", 1016980252), expr__428029))) {
      return new chaperone.crossover.rpc.Response(self__.request, G__428025, self__.__meta, self__.__extmap, null)
    }else {
      return new chaperone.crossover.rpc.Response(self__.request, self__.data, self__.__meta, cljs.core.assoc.call(null, self__.__extmap, k__3855__auto__, G__428025), null)
    }
  }
};
chaperone.crossover.rpc.Response.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(this__3861__auto__, writer__3862__auto__, opts__3863__auto__) {
  var self__ = this;
  var this__3861__auto____$1 = this;
  var pr_pair__3864__auto__ = function(keyval__3865__auto__) {
    return cljs.core.pr_sequential_writer.call(null, writer__3862__auto__, cljs.core.pr_writer, "", " ", "", opts__3863__auto__, keyval__3865__auto__)
  };
  return cljs.core.pr_sequential_writer.call(null, writer__3862__auto__, pr_pair__3864__auto__, "#chaperone.crossover.rpc.Response{", ", ", "}", opts__3863__auto__, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "request", "request", 2109597185), self__.request], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
  [new cljs.core.Keyword(null, "data", "data", 1016980252), self__.data], null)], null), self__.__extmap))
};
chaperone.crossover.rpc.Response.prototype.cljs$core$ICollection$_conj$arity$2 = function(this__3852__auto__, entry__3853__auto__) {
  var self__ = this;
  var this__3852__auto____$1 = this;
  if(cljs.core.vector_QMARK_.call(null, entry__3853__auto__)) {
    return cljs.core._assoc.call(null, this__3852__auto____$1, cljs.core._nth.call(null, entry__3853__auto__, 0), cljs.core._nth.call(null, entry__3853__auto__, 1))
  }else {
    return cljs.core.reduce.call(null, cljs.core._conj, this__3852__auto____$1, entry__3853__auto__)
  }
};
chaperone.crossover.rpc.Response.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this__3859__auto__) {
  var self__ = this;
  var this__3859__auto____$1 = this;
  return cljs.core.seq.call(null, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "request", "request", 2109597185), self__.request], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "data", "data", 1016980252), self__.data], null)], null), self__.__extmap))
};
chaperone.crossover.rpc.Response.prototype.cljs$core$ICounted$_count$arity$1 = function(this__3851__auto__) {
  var self__ = this;
  var this__3851__auto____$1 = this;
  return 2 + cljs.core.count.call(null, self__.__extmap)
};
chaperone.crossover.rpc.Response.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(this__3843__auto__, other__3844__auto__) {
  var self__ = this;
  var this__3843__auto____$1 = this;
  if(cljs.core.truth_(function() {
    var and__3273__auto__ = other__3844__auto__;
    if(cljs.core.truth_(and__3273__auto__)) {
      return this__3843__auto____$1.constructor === other__3844__auto__.constructor && cljs.core.equiv_map.call(null, this__3843__auto____$1, other__3844__auto__)
    }else {
      return and__3273__auto__
    }
  }())) {
    return true
  }else {
    return false
  }
};
chaperone.crossover.rpc.Response.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(this__3846__auto__, G__428025) {
  var self__ = this;
  var this__3846__auto____$1 = this;
  return new chaperone.crossover.rpc.Response(self__.request, self__.data, G__428025, self__.__extmap, self__.__hash)
};
chaperone.crossover.rpc.Response.prototype.cljs$core$IMeta$_meta$arity$1 = function(this__3845__auto__) {
  var self__ = this;
  var this__3845__auto____$1 = this;
  return self__.__meta
};
chaperone.crossover.rpc.Response.prototype.cljs$core$IMap$_dissoc$arity$2 = function(this__3856__auto__, k__3857__auto__) {
  var self__ = this;
  var this__3856__auto____$1 = this;
  if(cljs.core.contains_QMARK_.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "data", "data", 1016980252), null, new cljs.core.Keyword(null, "request", "request", 2109597185), null], null), null), k__3857__auto__)) {
    return cljs.core.dissoc.call(null, cljs.core.with_meta.call(null, cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, this__3856__auto____$1), self__.__meta), k__3857__auto__)
  }else {
    return new chaperone.crossover.rpc.Response(self__.request, self__.data, self__.__meta, cljs.core.not_empty.call(null, cljs.core.dissoc.call(null, self__.__extmap, k__3857__auto__)), null)
  }
};
chaperone.crossover.rpc.Response.cljs$lang$type = true;
chaperone.crossover.rpc.Response.cljs$lang$ctorPrSeq = function(this__3881__auto__) {
  return cljs.core._conj.call(null, cljs.core.List.EMPTY, "chaperone.crossover.rpc/Response")
};
chaperone.crossover.rpc.Response.cljs$lang$ctorPrWriter = function(this__3881__auto__, writer__3882__auto__) {
  return cljs.core._write.call(null, writer__3882__auto__, "chaperone.crossover.rpc/Response")
};
chaperone.crossover.rpc.__GT_Response = function __GT_Response(request, data) {
  return new chaperone.crossover.rpc.Response(request, data)
};
chaperone.crossover.rpc.map__GT_Response = function map__GT_Response(G__428027) {
  return new chaperone.crossover.rpc.Response((new cljs.core.Keyword(null, "request", "request", 2109597185)).cljs$core$IFn$_invoke$arity$1(G__428027), (new cljs.core.Keyword(null, "data", "data", 1016980252)).cljs$core$IFn$_invoke$arity$1(G__428027), null, cljs.core.dissoc.call(null, G__428027, new cljs.core.Keyword(null, "request", "request", 2109597185), new cljs.core.Keyword(null, "data", "data", 1016980252)))
};
chaperone.crossover.rpc.new_request = function new_request(category, action, data) {
  return chaperone.crossover.rpc.__GT_Request.call(null, cljs_uuid.core.make_random.call(null), category, action, data)
};
chaperone.crossover.rpc.new_response = function new_response(request, data) {
  return chaperone.crossover.rpc.__GT_Response.call(null, request, data)
};
chaperone.crossover.rpc.edn_readers = function edn_readers() {
  return new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Symbol(null, "chaperone.crossover.rpc.Request", "chaperone.crossover.rpc.Request", -174529060, null), chaperone.crossover.rpc.map__GT_Request, new cljs.core.Symbol(null, "chaperone.crossover.rpc.Response", "chaperone.crossover.rpc.Response", 908805862, null), chaperone.crossover.rpc.map__GT_Response], null)
};
goog.provide("cljs.reader");
goog.require("cljs.core");
goog.require("goog.string");
goog.require("goog.string");
cljs.reader.PushbackReader = function() {
  var obj428032 = {};
  return obj428032
}();
cljs.reader.read_char = function read_char(reader) {
  if(function() {
    var and__3273__auto__ = reader;
    if(and__3273__auto__) {
      return reader.cljs$reader$PushbackReader$read_char$arity$1
    }else {
      return and__3273__auto__
    }
  }()) {
    return reader.cljs$reader$PushbackReader$read_char$arity$1(reader)
  }else {
    var x__3888__auto__ = reader == null ? null : reader;
    return function() {
      var or__3285__auto__ = cljs.reader.read_char[goog.typeOf(x__3888__auto__)];
      if(or__3285__auto__) {
        return or__3285__auto__
      }else {
        var or__3285__auto____$1 = cljs.reader.read_char["_"];
        if(or__3285__auto____$1) {
          return or__3285__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "PushbackReader.read-char", reader);
        }
      }
    }().call(null, reader)
  }
};
cljs.reader.unread = function unread(reader, ch) {
  if(function() {
    var and__3273__auto__ = reader;
    if(and__3273__auto__) {
      return reader.cljs$reader$PushbackReader$unread$arity$2
    }else {
      return and__3273__auto__
    }
  }()) {
    return reader.cljs$reader$PushbackReader$unread$arity$2(reader, ch)
  }else {
    var x__3888__auto__ = reader == null ? null : reader;
    return function() {
      var or__3285__auto__ = cljs.reader.unread[goog.typeOf(x__3888__auto__)];
      if(or__3285__auto__) {
        return or__3285__auto__
      }else {
        var or__3285__auto____$1 = cljs.reader.unread["_"];
        if(or__3285__auto____$1) {
          return or__3285__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "PushbackReader.unread", reader);
        }
      }
    }().call(null, reader, ch)
  }
};
cljs.reader.StringPushbackReader = function(s, buffer, idx) {
  this.s = s;
  this.buffer = buffer;
  this.idx = idx
};
cljs.reader.StringPushbackReader.cljs$lang$type = true;
cljs.reader.StringPushbackReader.cljs$lang$ctorStr = "cljs.reader/StringPushbackReader";
cljs.reader.StringPushbackReader.cljs$lang$ctorPrWriter = function(this__3829__auto__, writer__3830__auto__, opt__3831__auto__) {
  return cljs.core._write.call(null, writer__3830__auto__, "cljs.reader/StringPushbackReader")
};
cljs.reader.StringPushbackReader.prototype.cljs$reader$PushbackReader$ = true;
cljs.reader.StringPushbackReader.prototype.cljs$reader$PushbackReader$read_char$arity$1 = function(reader) {
  var self__ = this;
  var reader__$1 = this;
  if(self__.buffer.length === 0) {
    self__.idx = self__.idx + 1;
    return self__.s[self__.idx]
  }else {
    return self__.buffer.pop()
  }
};
cljs.reader.StringPushbackReader.prototype.cljs$reader$PushbackReader$unread$arity$2 = function(reader, ch) {
  var self__ = this;
  var reader__$1 = this;
  return self__.buffer.push(ch)
};
cljs.reader.__GT_StringPushbackReader = function __GT_StringPushbackReader(s, buffer, idx) {
  return new cljs.reader.StringPushbackReader(s, buffer, idx)
};
cljs.reader.push_back_reader = function push_back_reader(s) {
  return new cljs.reader.StringPushbackReader(s, [], -1)
};
cljs.reader.whitespace_QMARK_ = function whitespace_QMARK_(ch) {
  var or__3285__auto__ = goog.string.isBreakingWhitespace(ch);
  if(cljs.core.truth_(or__3285__auto__)) {
    return or__3285__auto__
  }else {
    return"," === ch
  }
};
cljs.reader.numeric_QMARK_ = function numeric_QMARK_(ch) {
  return goog.string.isNumeric(ch)
};
cljs.reader.comment_prefix_QMARK_ = function comment_prefix_QMARK_(ch) {
  return";" === ch
};
cljs.reader.number_literal_QMARK_ = function number_literal_QMARK_(reader, initch) {
  return cljs.reader.numeric_QMARK_.call(null, initch) || ("+" === initch || "-" === initch) && cljs.reader.numeric_QMARK_.call(null, function() {
    var next_ch = cljs.reader.read_char.call(null, reader);
    cljs.reader.unread.call(null, reader, next_ch);
    return next_ch
  }())
};
cljs.reader.reader_error = function() {
  var reader_error__delegate = function(rdr, msg) {
    throw new Error(cljs.core.apply.call(null, cljs.core.str, msg));
  };
  var reader_error = function(rdr, var_args) {
    var msg = null;
    if(arguments.length > 1) {
      msg = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
    }
    return reader_error__delegate.call(this, rdr, msg)
  };
  reader_error.cljs$lang$maxFixedArity = 1;
  reader_error.cljs$lang$applyTo = function(arglist__428033) {
    var rdr = cljs.core.first(arglist__428033);
    var msg = cljs.core.rest(arglist__428033);
    return reader_error__delegate(rdr, msg)
  };
  reader_error.cljs$core$IFn$_invoke$arity$variadic = reader_error__delegate;
  return reader_error
}();
cljs.reader.macro_terminating_QMARK_ = function macro_terminating_QMARK_(ch) {
  var and__3273__auto__ = !(ch === "#");
  if(and__3273__auto__) {
    var and__3273__auto____$1 = !(ch === "'");
    if(and__3273__auto____$1) {
      var and__3273__auto____$2 = !(ch === ":");
      if(and__3273__auto____$2) {
        return cljs.reader.macros.call(null, ch)
      }else {
        return and__3273__auto____$2
      }
    }else {
      return and__3273__auto____$1
    }
  }else {
    return and__3273__auto__
  }
};
cljs.reader.read_token = function read_token(rdr, initch) {
  var sb = new goog.string.StringBuffer(initch);
  var ch = cljs.reader.read_char.call(null, rdr);
  while(true) {
    if(ch == null || cljs.reader.whitespace_QMARK_.call(null, ch) || cljs.reader.macro_terminating_QMARK_.call(null, ch)) {
      cljs.reader.unread.call(null, rdr, ch);
      return sb.toString()
    }else {
      var G__428034 = function() {
        sb.append(ch);
        return sb
      }();
      var G__428035 = cljs.reader.read_char.call(null, rdr);
      sb = G__428034;
      ch = G__428035;
      continue
    }
    break
  }
};
cljs.reader.skip_line = function skip_line(reader, _) {
  while(true) {
    var ch = cljs.reader.read_char.call(null, reader);
    if(ch === "\n" || ch === "\r" || ch == null) {
      return reader
    }else {
      continue
    }
    break
  }
};
cljs.reader.int_pattern = cljs.core.re_pattern.call(null, "([-+]?)(?:(0)|([1-9][0-9]*)|0[xX]([0-9A-Fa-f]+)|0([0-7]+)|([1-9][0-9]?)[rR]([0-9A-Za-z]+)|0[0-9]+)(N)?");
cljs.reader.ratio_pattern = cljs.core.re_pattern.call(null, "([-+]?[0-9]+)/([0-9]+)");
cljs.reader.float_pattern = cljs.core.re_pattern.call(null, "([-+]?[0-9]+(\\.[0-9]*)?([eE][-+]?[0-9]+)?)(M)?");
cljs.reader.symbol_pattern = cljs.core.re_pattern.call(null, "[:]?([^0-9/].*/)?([^0-9/][^/]*)");
cljs.reader.re_find_STAR_ = function re_find_STAR_(re, s) {
  var matches = re.exec(s);
  if(matches == null) {
    return null
  }else {
    if(matches.length === 1) {
      return matches[0]
    }else {
      return matches
    }
  }
};
cljs.reader.match_int = function match_int(s) {
  var groups = cljs.reader.re_find_STAR_.call(null, cljs.reader.int_pattern, s);
  var group3 = groups[2];
  if(!(group3 == null || group3.length < 1)) {
    return 0
  }else {
    var negate = "-" === groups[1] ? -1 : 1;
    var a = cljs.core.truth_(groups[3]) ? [groups[3], 10] : cljs.core.truth_(groups[4]) ? [groups[4], 16] : cljs.core.truth_(groups[5]) ? [groups[5], 8] : cljs.core.truth_(groups[7]) ? [groups[7], parseInt(groups[7])] : new cljs.core.Keyword(null, "default", "default", 2558708147) ? [null, null] : null;
    var n = a[0];
    var radix = a[1];
    if(n == null) {
      return null
    }else {
      return negate * parseInt(n, radix)
    }
  }
};
cljs.reader.match_ratio = function match_ratio(s) {
  var groups = cljs.reader.re_find_STAR_.call(null, cljs.reader.ratio_pattern, s);
  var numinator = groups[1];
  var denominator = groups[2];
  return parseInt(numinator) / parseInt(denominator)
};
cljs.reader.match_float = function match_float(s) {
  return parseFloat(s)
};
cljs.reader.re_matches_STAR_ = function re_matches_STAR_(re, s) {
  var matches = re.exec(s);
  if(!(matches == null) && matches[0] === s) {
    if(matches.length === 1) {
      return matches[0]
    }else {
      return matches
    }
  }else {
    return null
  }
};
cljs.reader.match_number = function match_number(s) {
  if(cljs.core.truth_(cljs.reader.re_matches_STAR_.call(null, cljs.reader.int_pattern, s))) {
    return cljs.reader.match_int.call(null, s)
  }else {
    if(cljs.core.truth_(cljs.reader.re_matches_STAR_.call(null, cljs.reader.ratio_pattern, s))) {
      return cljs.reader.match_ratio.call(null, s)
    }else {
      if(cljs.core.truth_(cljs.reader.re_matches_STAR_.call(null, cljs.reader.float_pattern, s))) {
        return cljs.reader.match_float.call(null, s)
      }else {
        return null
      }
    }
  }
};
cljs.reader.escape_char_map = function escape_char_map(c) {
  if(c === "t") {
    return"\t"
  }else {
    if(c === "r") {
      return"\r"
    }else {
      if(c === "n") {
        return"\n"
      }else {
        if(c === "\\") {
          return"\\"
        }else {
          if(c === '"') {
            return'"'
          }else {
            if(c === "b") {
              return"\u0008"
            }else {
              if(c === "f") {
                return"\u000c"
              }else {
                if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                  return null
                }else {
                  return null
                }
              }
            }
          }
        }
      }
    }
  }
};
cljs.reader.read_2_chars = function read_2_chars(reader) {
  return(new goog.string.StringBuffer(cljs.reader.read_char.call(null, reader), cljs.reader.read_char.call(null, reader))).toString()
};
cljs.reader.read_4_chars = function read_4_chars(reader) {
  return(new goog.string.StringBuffer(cljs.reader.read_char.call(null, reader), cljs.reader.read_char.call(null, reader), cljs.reader.read_char.call(null, reader), cljs.reader.read_char.call(null, reader))).toString()
};
cljs.reader.unicode_2_pattern = cljs.core.re_pattern.call(null, "[0-9A-Fa-f]{2}");
cljs.reader.unicode_4_pattern = cljs.core.re_pattern.call(null, "[0-9A-Fa-f]{4}");
cljs.reader.validate_unicode_escape = function validate_unicode_escape(unicode_pattern, reader, escape_char, unicode_str) {
  if(cljs.core.truth_(cljs.core.re_matches.call(null, unicode_pattern, unicode_str))) {
    return unicode_str
  }else {
    return cljs.reader.reader_error.call(null, reader, "Unexpected unicode escape \\", escape_char, unicode_str)
  }
};
cljs.reader.make_unicode_char = function make_unicode_char(code_str) {
  var code = parseInt(code_str, 16);
  return String.fromCharCode(code)
};
cljs.reader.escape_char = function escape_char(buffer, reader) {
  var ch = cljs.reader.read_char.call(null, reader);
  var mapresult = cljs.reader.escape_char_map.call(null, ch);
  if(cljs.core.truth_(mapresult)) {
    return mapresult
  }else {
    if(ch === "x") {
      return cljs.reader.make_unicode_char.call(null, cljs.reader.validate_unicode_escape.call(null, cljs.reader.unicode_2_pattern, reader, ch, cljs.reader.read_2_chars.call(null, reader)))
    }else {
      if(ch === "u") {
        return cljs.reader.make_unicode_char.call(null, cljs.reader.validate_unicode_escape.call(null, cljs.reader.unicode_4_pattern, reader, ch, cljs.reader.read_4_chars.call(null, reader)))
      }else {
        if(cljs.reader.numeric_QMARK_.call(null, ch)) {
          return String.fromCharCode(ch)
        }else {
          if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
            return cljs.reader.reader_error.call(null, reader, "Unexpected unicode escape \\", ch)
          }else {
            return null
          }
        }
      }
    }
  }
};
cljs.reader.read_past = function read_past(pred, rdr) {
  var ch = cljs.reader.read_char.call(null, rdr);
  while(true) {
    if(cljs.core.truth_(pred.call(null, ch))) {
      var G__428036 = cljs.reader.read_char.call(null, rdr);
      ch = G__428036;
      continue
    }else {
      return ch
    }
    break
  }
};
cljs.reader.read_delimited_list = function read_delimited_list(delim, rdr, recursive_QMARK_) {
  var a = cljs.core.transient$.call(null, cljs.core.PersistentVector.EMPTY);
  while(true) {
    var ch = cljs.reader.read_past.call(null, cljs.reader.whitespace_QMARK_, rdr);
    if(cljs.core.truth_(ch)) {
    }else {
      cljs.reader.reader_error.call(null, rdr, "EOF while reading")
    }
    if(delim === ch) {
      return cljs.core.persistent_BANG_.call(null, a)
    }else {
      var temp__4090__auto__ = cljs.reader.macros.call(null, ch);
      if(cljs.core.truth_(temp__4090__auto__)) {
        var macrofn = temp__4090__auto__;
        var mret = macrofn.call(null, rdr, ch);
        var G__428037 = mret === rdr ? a : cljs.core.conj_BANG_.call(null, a, mret);
        a = G__428037;
        continue
      }else {
        cljs.reader.unread.call(null, rdr, ch);
        var o = cljs.reader.read.call(null, rdr, true, null, recursive_QMARK_);
        var G__428038 = o === rdr ? a : cljs.core.conj_BANG_.call(null, a, o);
        a = G__428038;
        continue
      }
    }
    break
  }
};
cljs.reader.not_implemented = function not_implemented(rdr, ch) {
  return cljs.reader.reader_error.call(null, rdr, "Reader for ", ch, " not implemented yet")
};
cljs.reader.read_dispatch = function read_dispatch(rdr, _) {
  var ch = cljs.reader.read_char.call(null, rdr);
  var dm = cljs.reader.dispatch_macros.call(null, ch);
  if(cljs.core.truth_(dm)) {
    return dm.call(null, rdr, _)
  }else {
    var temp__4090__auto__ = cljs.reader.maybe_read_tagged_type.call(null, rdr, ch);
    if(cljs.core.truth_(temp__4090__auto__)) {
      var obj = temp__4090__auto__;
      return obj
    }else {
      return cljs.reader.reader_error.call(null, rdr, "No dispatch macro for ", ch)
    }
  }
};
cljs.reader.read_unmatched_delimiter = function read_unmatched_delimiter(rdr, ch) {
  return cljs.reader.reader_error.call(null, rdr, "Unmached delimiter ", ch)
};
cljs.reader.read_list = function read_list(rdr, _) {
  return cljs.core.apply.call(null, cljs.core.list, cljs.reader.read_delimited_list.call(null, ")", rdr, true))
};
cljs.reader.read_comment = cljs.reader.skip_line;
cljs.reader.read_vector = function read_vector(rdr, _) {
  return cljs.reader.read_delimited_list.call(null, "]", rdr, true)
};
cljs.reader.read_map = function read_map(rdr, _) {
  var l = cljs.reader.read_delimited_list.call(null, "}", rdr, true);
  if(cljs.core.odd_QMARK_.call(null, cljs.core.count.call(null, l))) {
    cljs.reader.reader_error.call(null, rdr, "Map literal must contain an even number of forms")
  }else {
  }
  return cljs.core.apply.call(null, cljs.core.hash_map, l)
};
cljs.reader.read_number = function read_number(reader, initch) {
  var buffer = new goog.string.StringBuffer(initch);
  var ch = cljs.reader.read_char.call(null, reader);
  while(true) {
    if(cljs.core.truth_(function() {
      var or__3285__auto__ = ch == null;
      if(or__3285__auto__) {
        return or__3285__auto__
      }else {
        var or__3285__auto____$1 = cljs.reader.whitespace_QMARK_.call(null, ch);
        if(or__3285__auto____$1) {
          return or__3285__auto____$1
        }else {
          return cljs.reader.macros.call(null, ch)
        }
      }
    }())) {
      cljs.reader.unread.call(null, reader, ch);
      var s = buffer.toString();
      var or__3285__auto__ = cljs.reader.match_number.call(null, s);
      if(cljs.core.truth_(or__3285__auto__)) {
        return or__3285__auto__
      }else {
        return cljs.reader.reader_error.call(null, reader, "Invalid number format [", s, "]")
      }
    }else {
      var G__428039 = function() {
        buffer.append(ch);
        return buffer
      }();
      var G__428040 = cljs.reader.read_char.call(null, reader);
      buffer = G__428039;
      ch = G__428040;
      continue
    }
    break
  }
};
cljs.reader.read_string_STAR_ = function read_string_STAR_(reader, _) {
  var buffer = new goog.string.StringBuffer;
  var ch = cljs.reader.read_char.call(null, reader);
  while(true) {
    if(ch == null) {
      return cljs.reader.reader_error.call(null, reader, "EOF while reading")
    }else {
      if("\\" === ch) {
        var G__428041 = function() {
          buffer.append(cljs.reader.escape_char.call(null, buffer, reader));
          return buffer
        }();
        var G__428042 = cljs.reader.read_char.call(null, reader);
        buffer = G__428041;
        ch = G__428042;
        continue
      }else {
        if('"' === ch) {
          return buffer.toString()
        }else {
          if(new cljs.core.Keyword(null, "default", "default", 2558708147)) {
            var G__428043 = function() {
              buffer.append(ch);
              return buffer
            }();
            var G__428044 = cljs.reader.read_char.call(null, reader);
            buffer = G__428043;
            ch = G__428044;
            continue
          }else {
            return null
          }
        }
      }
    }
    break
  }
};
cljs.reader.special_symbols = function special_symbols(t, not_found) {
  if(t === "nil") {
    return null
  }else {
    if(t === "true") {
      return true
    }else {
      if(t === "false") {
        return false
      }else {
        if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          return not_found
        }else {
          return null
        }
      }
    }
  }
};
cljs.reader.read_symbol = function read_symbol(reader, initch) {
  var token = cljs.reader.read_token.call(null, reader, initch);
  if(cljs.core.truth_(goog.string.contains(token, "/"))) {
    return cljs.core.symbol.call(null, cljs.core.subs.call(null, token, 0, token.indexOf("/")), cljs.core.subs.call(null, token, token.indexOf("/") + 1, token.length))
  }else {
    return cljs.reader.special_symbols.call(null, token, cljs.core.symbol.call(null, token))
  }
};
cljs.reader.read_keyword = function read_keyword(reader, initch) {
  var token = cljs.reader.read_token.call(null, reader, cljs.reader.read_char.call(null, reader));
  var a = cljs.reader.re_matches_STAR_.call(null, cljs.reader.symbol_pattern, token);
  var token__$1 = a[0];
  var ns = a[1];
  var name = a[2];
  if(!(void 0 === ns) && ns.substring(ns.length - 2, ns.length) === ":/" || name[name.length - 1] === ":" || !(token__$1.indexOf("::", 1) === -1)) {
    return cljs.reader.reader_error.call(null, reader, "Invalid token: ", token__$1)
  }else {
    if(!(ns == null) && ns.length > 0) {
      return cljs.core.keyword.call(null, ns.substring(0, ns.indexOf("/")), name)
    }else {
      return cljs.core.keyword.call(null, token__$1)
    }
  }
};
cljs.reader.desugar_meta = function desugar_meta(f) {
  if(f instanceof cljs.core.Symbol) {
    return new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "tag", "tag", 1014018828), f], null)
  }else {
    if(typeof f === "string") {
      return new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "tag", "tag", 1014018828), f], null)
    }else {
      if(f instanceof cljs.core.Keyword) {
        return new cljs.core.PersistentArrayMap.fromArray([f, true], true, false)
      }else {
        if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          return f
        }else {
          return null
        }
      }
    }
  }
};
cljs.reader.wrapping_reader = function wrapping_reader(sym) {
  return function(rdr, _) {
    return cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.reader.read.call(null, rdr, true, null, true)), sym)
  }
};
cljs.reader.throwing_reader = function throwing_reader(msg) {
  return function(rdr, _) {
    return cljs.reader.reader_error.call(null, rdr, msg)
  }
};
cljs.reader.read_meta = function read_meta(rdr, _) {
  var m = cljs.reader.desugar_meta.call(null, cljs.reader.read.call(null, rdr, true, null, true));
  if(cljs.core.map_QMARK_.call(null, m)) {
  }else {
    cljs.reader.reader_error.call(null, rdr, "Metadata must be Symbol,Keyword,String or Map")
  }
  var o = cljs.reader.read.call(null, rdr, true, null, true);
  if(function() {
    var G__428046 = o;
    if(G__428046) {
      var bit__3911__auto__ = G__428046.cljs$lang$protocol_mask$partition0$ & 262144;
      if(bit__3911__auto__ || G__428046.cljs$core$IWithMeta$) {
        return true
      }else {
        if(!G__428046.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IWithMeta, G__428046)
        }else {
          return false
        }
      }
    }else {
      return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IWithMeta, G__428046)
    }
  }()) {
    return cljs.core.with_meta.call(null, o, cljs.core.merge.call(null, cljs.core.meta.call(null, o), m))
  }else {
    return cljs.reader.reader_error.call(null, rdr, "Metadata can only be applied to IWithMetas")
  }
};
cljs.reader.read_set = function read_set(rdr, _) {
  return cljs.core.set.call(null, cljs.reader.read_delimited_list.call(null, "}", rdr, true))
};
cljs.reader.read_regex = function read_regex(rdr, ch) {
  return cljs.core.re_pattern.call(null, cljs.reader.read_string_STAR_.call(null, rdr, ch))
};
cljs.reader.read_discard = function read_discard(rdr, _) {
  cljs.reader.read.call(null, rdr, true, null, true);
  return rdr
};
cljs.reader.macros = function macros(c) {
  if(c === '"') {
    return cljs.reader.read_string_STAR_
  }else {
    if(c === ":") {
      return cljs.reader.read_keyword
    }else {
      if(c === ";") {
        return cljs.reader.not_implemented
      }else {
        if(c === "'") {
          return cljs.reader.wrapping_reader.call(null, new cljs.core.Symbol(null, "quote", "quote", -1532577739, null))
        }else {
          if(c === "@") {
            return cljs.reader.wrapping_reader.call(null, new cljs.core.Symbol(null, "deref", "deref", -1545057749, null))
          }else {
            if(c === "^") {
              return cljs.reader.read_meta
            }else {
              if(c === "`") {
                return cljs.reader.not_implemented
              }else {
                if(c === "~") {
                  return cljs.reader.not_implemented
                }else {
                  if(c === "(") {
                    return cljs.reader.read_list
                  }else {
                    if(c === ")") {
                      return cljs.reader.read_unmatched_delimiter
                    }else {
                      if(c === "[") {
                        return cljs.reader.read_vector
                      }else {
                        if(c === "]") {
                          return cljs.reader.read_unmatched_delimiter
                        }else {
                          if(c === "{") {
                            return cljs.reader.read_map
                          }else {
                            if(c === "}") {
                              return cljs.reader.read_unmatched_delimiter
                            }else {
                              if(c === "\\") {
                                return cljs.reader.read_char
                              }else {
                                if(c === "#") {
                                  return cljs.reader.read_dispatch
                                }else {
                                  if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                                    return null
                                  }else {
                                    return null
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
};
cljs.reader.dispatch_macros = function dispatch_macros(s) {
  if(s === "{") {
    return cljs.reader.read_set
  }else {
    if(s === "<") {
      return cljs.reader.throwing_reader.call(null, "Unreadable form")
    }else {
      if(s === '"') {
        return cljs.reader.read_regex
      }else {
        if(s === "!") {
          return cljs.reader.read_comment
        }else {
          if(s === "_") {
            return cljs.reader.read_discard
          }else {
            if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
              return null
            }else {
              return null
            }
          }
        }
      }
    }
  }
};
cljs.reader.read = function read(reader, eof_is_error, sentinel, is_recursive) {
  while(true) {
    var ch = cljs.reader.read_char.call(null, reader);
    if(ch == null) {
      if(cljs.core.truth_(eof_is_error)) {
        return cljs.reader.reader_error.call(null, reader, "EOF while reading")
      }else {
        return sentinel
      }
    }else {
      if(cljs.reader.whitespace_QMARK_.call(null, ch)) {
        var G__428047 = reader;
        var G__428048 = eof_is_error;
        var G__428049 = sentinel;
        var G__428050 = is_recursive;
        reader = G__428047;
        eof_is_error = G__428048;
        sentinel = G__428049;
        is_recursive = G__428050;
        continue
      }else {
        if(cljs.reader.comment_prefix_QMARK_.call(null, ch)) {
          var G__428051 = cljs.reader.read_comment.call(null, reader, ch);
          var G__428052 = eof_is_error;
          var G__428053 = sentinel;
          var G__428054 = is_recursive;
          reader = G__428051;
          eof_is_error = G__428052;
          sentinel = G__428053;
          is_recursive = G__428054;
          continue
        }else {
          if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
            var f = cljs.reader.macros.call(null, ch);
            var res = cljs.core.truth_(f) ? f.call(null, reader, ch) : cljs.reader.number_literal_QMARK_.call(null, reader, ch) ? cljs.reader.read_number.call(null, reader, ch) : new cljs.core.Keyword(null, "else", "else", 1017020587) ? cljs.reader.read_symbol.call(null, reader, ch) : null;
            if(res === reader) {
              var G__428055 = reader;
              var G__428056 = eof_is_error;
              var G__428057 = sentinel;
              var G__428058 = is_recursive;
              reader = G__428055;
              eof_is_error = G__428056;
              sentinel = G__428057;
              is_recursive = G__428058;
              continue
            }else {
              return res
            }
          }else {
            return null
          }
        }
      }
    }
    break
  }
};
cljs.reader.read_string = function read_string(s) {
  var r = cljs.reader.push_back_reader.call(null, s);
  return cljs.reader.read.call(null, r, true, null, false)
};
cljs.reader.zero_fill_right_and_truncate = function zero_fill_right_and_truncate(s, width) {
  if(cljs.core._EQ_.call(null, width, cljs.core.count.call(null, s))) {
    return s
  }else {
    if(width < cljs.core.count.call(null, s)) {
      return cljs.core.subs.call(null, s, 0, width)
    }else {
      if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        var b = new goog.string.StringBuffer(s);
        while(true) {
          if(b.getLength() < width) {
            var G__428059 = b.append("0");
            b = G__428059;
            continue
          }else {
            return b.toString()
          }
          break
        }
      }else {
        return null
      }
    }
  }
};
cljs.reader.divisible_QMARK_ = function divisible_QMARK_(num, div) {
  return cljs.core.mod.call(null, num, div) === 0
};
cljs.reader.indivisible_QMARK_ = function indivisible_QMARK_(num, div) {
  return!cljs.reader.divisible_QMARK_.call(null, num, div)
};
cljs.reader.leap_year_QMARK_ = function leap_year_QMARK_(year) {
  return cljs.reader.divisible_QMARK_.call(null, year, 4) && (cljs.reader.indivisible_QMARK_.call(null, year, 100) || cljs.reader.divisible_QMARK_.call(null, year, 400))
};
cljs.reader.days_in_month = function() {
  var dim_norm = new cljs.core.PersistentVector(null, 13, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, 31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31], null);
  var dim_leap = new cljs.core.PersistentVector(null, 13, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, 31, 29, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31], null);
  return function(month, leap_year_QMARK_) {
    return cljs.core.get.call(null, cljs.core.truth_(leap_year_QMARK_) ? dim_leap : dim_norm, month)
  }
}();
cljs.reader.timestamp_regex = /(\d\d\d\d)(?:-(\d\d)(?:-(\d\d)(?:[T](\d\d)(?::(\d\d)(?::(\d\d)(?:[.](\d+))?)?)?)?)?)?(?:[Z]|([-+])(\d\d):(\d\d))?/;
cljs.reader.parse_int = function parse_int(s) {
  var n = parseInt(s);
  if(cljs.core.not.call(null, isNaN(n))) {
    return n
  }else {
    return null
  }
};
cljs.reader.check = function check(low, n, high, msg) {
  if(low <= n && n <= high) {
  }else {
    cljs.reader.reader_error.call(null, null, [cljs.core.str(msg), cljs.core.str(" Failed:  "), cljs.core.str(low), cljs.core.str("<="), cljs.core.str(n), cljs.core.str("<="), cljs.core.str(high)].join(""))
  }
  return n
};
cljs.reader.parse_and_validate_timestamp = function parse_and_validate_timestamp(s) {
  var vec__428061 = cljs.core.re_matches.call(null, cljs.reader.timestamp_regex, s);
  var _ = cljs.core.nth.call(null, vec__428061, 0, null);
  var years = cljs.core.nth.call(null, vec__428061, 1, null);
  var months = cljs.core.nth.call(null, vec__428061, 2, null);
  var days = cljs.core.nth.call(null, vec__428061, 3, null);
  var hours = cljs.core.nth.call(null, vec__428061, 4, null);
  var minutes = cljs.core.nth.call(null, vec__428061, 5, null);
  var seconds = cljs.core.nth.call(null, vec__428061, 6, null);
  var fraction = cljs.core.nth.call(null, vec__428061, 7, null);
  var offset_sign = cljs.core.nth.call(null, vec__428061, 8, null);
  var offset_hours = cljs.core.nth.call(null, vec__428061, 9, null);
  var offset_minutes = cljs.core.nth.call(null, vec__428061, 10, null);
  var v = vec__428061;
  if(cljs.core.not.call(null, v)) {
    return cljs.reader.reader_error.call(null, null, [cljs.core.str("Unrecognized date/time syntax: "), cljs.core.str(s)].join(""))
  }else {
    var years__$1 = cljs.reader.parse_int.call(null, years);
    var months__$1 = function() {
      var or__3285__auto__ = cljs.reader.parse_int.call(null, months);
      if(cljs.core.truth_(or__3285__auto__)) {
        return or__3285__auto__
      }else {
        return 1
      }
    }();
    var days__$1 = function() {
      var or__3285__auto__ = cljs.reader.parse_int.call(null, days);
      if(cljs.core.truth_(or__3285__auto__)) {
        return or__3285__auto__
      }else {
        return 1
      }
    }();
    var hours__$1 = function() {
      var or__3285__auto__ = cljs.reader.parse_int.call(null, hours);
      if(cljs.core.truth_(or__3285__auto__)) {
        return or__3285__auto__
      }else {
        return 0
      }
    }();
    var minutes__$1 = function() {
      var or__3285__auto__ = cljs.reader.parse_int.call(null, minutes);
      if(cljs.core.truth_(or__3285__auto__)) {
        return or__3285__auto__
      }else {
        return 0
      }
    }();
    var seconds__$1 = function() {
      var or__3285__auto__ = cljs.reader.parse_int.call(null, seconds);
      if(cljs.core.truth_(or__3285__auto__)) {
        return or__3285__auto__
      }else {
        return 0
      }
    }();
    var fraction__$1 = function() {
      var or__3285__auto__ = cljs.reader.parse_int.call(null, cljs.reader.zero_fill_right_and_truncate.call(null, fraction, 3));
      if(cljs.core.truth_(or__3285__auto__)) {
        return or__3285__auto__
      }else {
        return 0
      }
    }();
    var offset_sign__$1 = cljs.core._EQ_.call(null, offset_sign, "-") ? -1 : 1;
    var offset_hours__$1 = function() {
      var or__3285__auto__ = cljs.reader.parse_int.call(null, offset_hours);
      if(cljs.core.truth_(or__3285__auto__)) {
        return or__3285__auto__
      }else {
        return 0
      }
    }();
    var offset_minutes__$1 = function() {
      var or__3285__auto__ = cljs.reader.parse_int.call(null, offset_minutes);
      if(cljs.core.truth_(or__3285__auto__)) {
        return or__3285__auto__
      }else {
        return 0
      }
    }();
    var offset = offset_sign__$1 * (offset_hours__$1 * 60 + offset_minutes__$1);
    return new cljs.core.PersistentVector(null, 8, 5, cljs.core.PersistentVector.EMPTY_NODE, [years__$1, cljs.reader.check.call(null, 1, months__$1, 12, "timestamp month field must be in range 1..12"), cljs.reader.check.call(null, 1, days__$1, cljs.reader.days_in_month.call(null, months__$1, cljs.reader.leap_year_QMARK_.call(null, years__$1)), "timestamp day field must be in range 1..last day in month"), cljs.reader.check.call(null, 0, hours__$1, 23, "timestamp hour field must be in range 0..23"), 
    cljs.reader.check.call(null, 0, minutes__$1, 59, "timestamp minute field must be in range 0..59"), cljs.reader.check.call(null, 0, seconds__$1, cljs.core._EQ_.call(null, minutes__$1, 59) ? 60 : 59, "timestamp second field must be in range 0..60"), cljs.reader.check.call(null, 0, fraction__$1, 999, "timestamp millisecond field must be in range 0..999"), offset], null)
  }
};
cljs.reader.parse_timestamp = function parse_timestamp(ts) {
  var temp__4090__auto__ = cljs.reader.parse_and_validate_timestamp.call(null, ts);
  if(cljs.core.truth_(temp__4090__auto__)) {
    var vec__428063 = temp__4090__auto__;
    var years = cljs.core.nth.call(null, vec__428063, 0, null);
    var months = cljs.core.nth.call(null, vec__428063, 1, null);
    var days = cljs.core.nth.call(null, vec__428063, 2, null);
    var hours = cljs.core.nth.call(null, vec__428063, 3, null);
    var minutes = cljs.core.nth.call(null, vec__428063, 4, null);
    var seconds = cljs.core.nth.call(null, vec__428063, 5, null);
    var ms = cljs.core.nth.call(null, vec__428063, 6, null);
    var offset = cljs.core.nth.call(null, vec__428063, 7, null);
    return new Date(Date.UTC(years, months - 1, days, hours, minutes, seconds, ms) - offset * 60 * 1E3)
  }else {
    return cljs.reader.reader_error.call(null, null, [cljs.core.str("Unrecognized date/time syntax: "), cljs.core.str(ts)].join(""))
  }
};
cljs.reader.read_date = function read_date(s) {
  if(typeof s === "string") {
    return cljs.reader.parse_timestamp.call(null, s)
  }else {
    return cljs.reader.reader_error.call(null, null, "Instance literal expects a string for its timestamp.")
  }
};
cljs.reader.read_queue = function read_queue(elems) {
  if(cljs.core.vector_QMARK_.call(null, elems)) {
    return cljs.core.into.call(null, cljs.core.PersistentQueue.EMPTY, elems)
  }else {
    return cljs.reader.reader_error.call(null, null, "Queue literal expects a vector for its elements.")
  }
};
cljs.reader.read_uuid = function read_uuid(uuid) {
  if(typeof uuid === "string") {
    return new cljs.core.UUID(uuid)
  }else {
    return cljs.reader.reader_error.call(null, null, "UUID literal expects a string as its representation.")
  }
};
cljs.reader._STAR_tag_table_STAR_ = cljs.core.atom.call(null, new cljs.core.PersistentArrayMap(null, 3, ["inst", cljs.reader.read_date, "uuid", cljs.reader.read_uuid, "queue", cljs.reader.read_queue], null));
cljs.reader._STAR_default_data_reader_fn_STAR_ = cljs.core.atom.call(null, null);
cljs.reader.maybe_read_tagged_type = function maybe_read_tagged_type(rdr, initch) {
  var tag = cljs.reader.read_symbol.call(null, rdr, initch);
  var pfn = cljs.core.get.call(null, cljs.core.deref.call(null, cljs.reader._STAR_tag_table_STAR_), [cljs.core.str(tag)].join(""));
  var dfn = cljs.core.deref.call(null, cljs.reader._STAR_default_data_reader_fn_STAR_);
  if(cljs.core.truth_(pfn)) {
    return pfn.call(null, cljs.reader.read.call(null, rdr, true, null, false))
  }else {
    if(cljs.core.truth_(dfn)) {
      return dfn.call(null, tag, cljs.reader.read.call(null, rdr, true, null, false))
    }else {
      if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        return cljs.reader.reader_error.call(null, rdr, "Could not find tag parser for ", [cljs.core.str(tag)].join(""), " in ", cljs.core.pr_str.call(null, cljs.core.keys.call(null, cljs.core.deref.call(null, cljs.reader._STAR_tag_table_STAR_))))
      }else {
        return null
      }
    }
  }
};
cljs.reader.register_tag_parser_BANG_ = function register_tag_parser_BANG_(tag, f) {
  var tag__$1 = [cljs.core.str(tag)].join("");
  var old_parser = cljs.core.get.call(null, cljs.core.deref.call(null, cljs.reader._STAR_tag_table_STAR_), tag__$1);
  cljs.core.swap_BANG_.call(null, cljs.reader._STAR_tag_table_STAR_, cljs.core.assoc, tag__$1, f);
  return old_parser
};
cljs.reader.deregister_tag_parser_BANG_ = function deregister_tag_parser_BANG_(tag) {
  var tag__$1 = [cljs.core.str(tag)].join("");
  var old_parser = cljs.core.get.call(null, cljs.core.deref.call(null, cljs.reader._STAR_tag_table_STAR_), tag__$1);
  cljs.core.swap_BANG_.call(null, cljs.reader._STAR_tag_table_STAR_, cljs.core.dissoc, tag__$1);
  return old_parser
};
cljs.reader.register_default_tag_parser_BANG_ = function register_default_tag_parser_BANG_(f) {
  var old_parser = cljs.core.deref.call(null, cljs.reader._STAR_default_data_reader_fn_STAR_);
  cljs.core.swap_BANG_.call(null, cljs.reader._STAR_default_data_reader_fn_STAR_, function(_) {
    return f
  });
  return old_parser
};
cljs.reader.deregister_default_tag_parser_BANG_ = function deregister_default_tag_parser_BANG_() {
  var old_parser = cljs.core.deref.call(null, cljs.reader._STAR_default_data_reader_fn_STAR_);
  cljs.core.swap_BANG_.call(null, cljs.reader._STAR_default_data_reader_fn_STAR_, function(_) {
    return null
  });
  return old_parser
};
goog.provide("cljs.core.async.impl.protocols");
goog.require("cljs.core");
cljs.core.async.impl.protocols.MAX_QUEUE_SIZE = 1024;
cljs.core.async.impl.protocols.ReadPort = function() {
  var obj427963 = {};
  return obj427963
}();
cljs.core.async.impl.protocols.take_BANG_ = function take_BANG_(port, fn1_handler) {
  if(function() {
    var and__3273__auto__ = port;
    if(and__3273__auto__) {
      return port.cljs$core$async$impl$protocols$ReadPort$take_BANG_$arity$2
    }else {
      return and__3273__auto__
    }
  }()) {
    return port.cljs$core$async$impl$protocols$ReadPort$take_BANG_$arity$2(port, fn1_handler)
  }else {
    var x__3888__auto__ = port == null ? null : port;
    return function() {
      var or__3285__auto__ = cljs.core.async.impl.protocols.take_BANG_[goog.typeOf(x__3888__auto__)];
      if(or__3285__auto__) {
        return or__3285__auto__
      }else {
        var or__3285__auto____$1 = cljs.core.async.impl.protocols.take_BANG_["_"];
        if(or__3285__auto____$1) {
          return or__3285__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "ReadPort.take!", port);
        }
      }
    }().call(null, port, fn1_handler)
  }
};
cljs.core.async.impl.protocols.WritePort = function() {
  var obj427965 = {};
  return obj427965
}();
cljs.core.async.impl.protocols.put_BANG_ = function put_BANG_(port, val, fn0_handler) {
  if(function() {
    var and__3273__auto__ = port;
    if(and__3273__auto__) {
      return port.cljs$core$async$impl$protocols$WritePort$put_BANG_$arity$3
    }else {
      return and__3273__auto__
    }
  }()) {
    return port.cljs$core$async$impl$protocols$WritePort$put_BANG_$arity$3(port, val, fn0_handler)
  }else {
    var x__3888__auto__ = port == null ? null : port;
    return function() {
      var or__3285__auto__ = cljs.core.async.impl.protocols.put_BANG_[goog.typeOf(x__3888__auto__)];
      if(or__3285__auto__) {
        return or__3285__auto__
      }else {
        var or__3285__auto____$1 = cljs.core.async.impl.protocols.put_BANG_["_"];
        if(or__3285__auto____$1) {
          return or__3285__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "WritePort.put!", port);
        }
      }
    }().call(null, port, val, fn0_handler)
  }
};
cljs.core.async.impl.protocols.Channel = function() {
  var obj427967 = {};
  return obj427967
}();
cljs.core.async.impl.protocols.close_BANG_ = function close_BANG_(chan) {
  if(function() {
    var and__3273__auto__ = chan;
    if(and__3273__auto__) {
      return chan.cljs$core$async$impl$protocols$Channel$close_BANG_$arity$1
    }else {
      return and__3273__auto__
    }
  }()) {
    return chan.cljs$core$async$impl$protocols$Channel$close_BANG_$arity$1(chan)
  }else {
    var x__3888__auto__ = chan == null ? null : chan;
    return function() {
      var or__3285__auto__ = cljs.core.async.impl.protocols.close_BANG_[goog.typeOf(x__3888__auto__)];
      if(or__3285__auto__) {
        return or__3285__auto__
      }else {
        var or__3285__auto____$1 = cljs.core.async.impl.protocols.close_BANG_["_"];
        if(or__3285__auto____$1) {
          return or__3285__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "Channel.close!", chan);
        }
      }
    }().call(null, chan)
  }
};
cljs.core.async.impl.protocols.Handler = function() {
  var obj427969 = {};
  return obj427969
}();
cljs.core.async.impl.protocols.active_QMARK_ = function active_QMARK_(h) {
  if(function() {
    var and__3273__auto__ = h;
    if(and__3273__auto__) {
      return h.cljs$core$async$impl$protocols$Handler$active_QMARK_$arity$1
    }else {
      return and__3273__auto__
    }
  }()) {
    return h.cljs$core$async$impl$protocols$Handler$active_QMARK_$arity$1(h)
  }else {
    var x__3888__auto__ = h == null ? null : h;
    return function() {
      var or__3285__auto__ = cljs.core.async.impl.protocols.active_QMARK_[goog.typeOf(x__3888__auto__)];
      if(or__3285__auto__) {
        return or__3285__auto__
      }else {
        var or__3285__auto____$1 = cljs.core.async.impl.protocols.active_QMARK_["_"];
        if(or__3285__auto____$1) {
          return or__3285__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "Handler.active?", h);
        }
      }
    }().call(null, h)
  }
};
cljs.core.async.impl.protocols.commit = function commit(h) {
  if(function() {
    var and__3273__auto__ = h;
    if(and__3273__auto__) {
      return h.cljs$core$async$impl$protocols$Handler$commit$arity$1
    }else {
      return and__3273__auto__
    }
  }()) {
    return h.cljs$core$async$impl$protocols$Handler$commit$arity$1(h)
  }else {
    var x__3888__auto__ = h == null ? null : h;
    return function() {
      var or__3285__auto__ = cljs.core.async.impl.protocols.commit[goog.typeOf(x__3888__auto__)];
      if(or__3285__auto__) {
        return or__3285__auto__
      }else {
        var or__3285__auto____$1 = cljs.core.async.impl.protocols.commit["_"];
        if(or__3285__auto____$1) {
          return or__3285__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "Handler.commit", h);
        }
      }
    }().call(null, h)
  }
};
cljs.core.async.impl.protocols.Buffer = function() {
  var obj427971 = {};
  return obj427971
}();
cljs.core.async.impl.protocols.full_QMARK_ = function full_QMARK_(b) {
  if(function() {
    var and__3273__auto__ = b;
    if(and__3273__auto__) {
      return b.cljs$core$async$impl$protocols$Buffer$full_QMARK_$arity$1
    }else {
      return and__3273__auto__
    }
  }()) {
    return b.cljs$core$async$impl$protocols$Buffer$full_QMARK_$arity$1(b)
  }else {
    var x__3888__auto__ = b == null ? null : b;
    return function() {
      var or__3285__auto__ = cljs.core.async.impl.protocols.full_QMARK_[goog.typeOf(x__3888__auto__)];
      if(or__3285__auto__) {
        return or__3285__auto__
      }else {
        var or__3285__auto____$1 = cljs.core.async.impl.protocols.full_QMARK_["_"];
        if(or__3285__auto____$1) {
          return or__3285__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "Buffer.full?", b);
        }
      }
    }().call(null, b)
  }
};
cljs.core.async.impl.protocols.remove_BANG_ = function remove_BANG_(b) {
  if(function() {
    var and__3273__auto__ = b;
    if(and__3273__auto__) {
      return b.cljs$core$async$impl$protocols$Buffer$remove_BANG_$arity$1
    }else {
      return and__3273__auto__
    }
  }()) {
    return b.cljs$core$async$impl$protocols$Buffer$remove_BANG_$arity$1(b)
  }else {
    var x__3888__auto__ = b == null ? null : b;
    return function() {
      var or__3285__auto__ = cljs.core.async.impl.protocols.remove_BANG_[goog.typeOf(x__3888__auto__)];
      if(or__3285__auto__) {
        return or__3285__auto__
      }else {
        var or__3285__auto____$1 = cljs.core.async.impl.protocols.remove_BANG_["_"];
        if(or__3285__auto____$1) {
          return or__3285__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "Buffer.remove!", b);
        }
      }
    }().call(null, b)
  }
};
cljs.core.async.impl.protocols.add_BANG_ = function add_BANG_(b, itm) {
  if(function() {
    var and__3273__auto__ = b;
    if(and__3273__auto__) {
      return b.cljs$core$async$impl$protocols$Buffer$add_BANG_$arity$2
    }else {
      return and__3273__auto__
    }
  }()) {
    return b.cljs$core$async$impl$protocols$Buffer$add_BANG_$arity$2(b, itm)
  }else {
    var x__3888__auto__ = b == null ? null : b;
    return function() {
      var or__3285__auto__ = cljs.core.async.impl.protocols.add_BANG_[goog.typeOf(x__3888__auto__)];
      if(or__3285__auto__) {
        return or__3285__auto__
      }else {
        var or__3285__auto____$1 = cljs.core.async.impl.protocols.add_BANG_["_"];
        if(or__3285__auto____$1) {
          return or__3285__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "Buffer.add!", b);
        }
      }
    }().call(null, b, itm)
  }
};
goog.provide("cljs.core.async.impl.ioc_helpers");
goog.require("cljs.core");
goog.require("cljs.core.async.impl.protocols");
goog.require("cljs.core.async.impl.protocols");
cljs.core.async.impl.ioc_helpers.FN_IDX = 0;
cljs.core.async.impl.ioc_helpers.STATE_IDX = 1;
cljs.core.async.impl.ioc_helpers.VALUE_IDX = 2;
cljs.core.async.impl.ioc_helpers.BINDINGS_IDX = 3;
cljs.core.async.impl.ioc_helpers.USER_START_IDX = 4;
cljs.core.async.impl.ioc_helpers.aset_object = function aset_object(arr, idx, o) {
  return arr[idx][o]
};
cljs.core.async.impl.ioc_helpers.aget_object = function aget_object(arr, idx) {
  return arr[idx]
};
cljs.core.async.impl.ioc_helpers.finished_QMARK_ = function finished_QMARK_(state_array) {
  return cljs.core.keyword_identical_QMARK_.call(null, state_array[cljs.core.async.impl.ioc_helpers.STATE_IDX], new cljs.core.Keyword(null, "finished", "finished", 4635210724))
};
cljs.core.async.impl.ioc_helpers.fn_handler = function fn_handler(f) {
  if(typeof cljs.core.async.impl.ioc_helpers.t427989 !== "undefined") {
  }else {
    cljs.core.async.impl.ioc_helpers.t427989 = function(f, fn_handler, meta427990) {
      this.f = f;
      this.fn_handler = fn_handler;
      this.meta427990 = meta427990;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216
    };
    cljs.core.async.impl.ioc_helpers.t427989.cljs$lang$type = true;
    cljs.core.async.impl.ioc_helpers.t427989.cljs$lang$ctorStr = "cljs.core.async.impl.ioc-helpers/t427989";
    cljs.core.async.impl.ioc_helpers.t427989.cljs$lang$ctorPrWriter = function(this__3829__auto__, writer__3830__auto__, opt__3831__auto__) {
      return cljs.core._write.call(null, writer__3830__auto__, "cljs.core.async.impl.ioc-helpers/t427989")
    };
    cljs.core.async.impl.ioc_helpers.t427989.prototype.cljs$core$async$impl$protocols$Handler$ = true;
    cljs.core.async.impl.ioc_helpers.t427989.prototype.cljs$core$async$impl$protocols$Handler$active_QMARK_$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return true
    };
    cljs.core.async.impl.ioc_helpers.t427989.prototype.cljs$core$async$impl$protocols$Handler$commit$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return self__.f
    };
    cljs.core.async.impl.ioc_helpers.t427989.prototype.cljs$core$IMeta$_meta$arity$1 = function(_427991) {
      var self__ = this;
      var _427991__$1 = this;
      return self__.meta427990
    };
    cljs.core.async.impl.ioc_helpers.t427989.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_427991, meta427990__$1) {
      var self__ = this;
      var _427991__$1 = this;
      return new cljs.core.async.impl.ioc_helpers.t427989(self__.f, self__.fn_handler, meta427990__$1)
    };
    cljs.core.async.impl.ioc_helpers.__GT_t427989 = function __GT_t427989(f__$1, fn_handler__$1, meta427990) {
      return new cljs.core.async.impl.ioc_helpers.t427989(f__$1, fn_handler__$1, meta427990)
    }
  }
  return new cljs.core.async.impl.ioc_helpers.t427989(f, fn_handler, null)
};
cljs.core.async.impl.ioc_helpers.run_state_machine = function run_state_machine(state) {
  return cljs.core.async.impl.ioc_helpers.aget_object.call(null, state, cljs.core.async.impl.ioc_helpers.FN_IDX).call(null, state)
};
cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped = function run_state_machine_wrapped(state) {
  try {
    return cljs.core.async.impl.ioc_helpers.run_state_machine.call(null, state)
  }catch(e427993) {
    if(e427993 instanceof Object) {
      var ex = e427993;
      cljs.core.async.impl.protocols.close_BANG_.call(null, cljs.core.async.impl.ioc_helpers.aget_object.call(null, state, cljs.core.async.impl.ioc_helpers.USER_START_IDX));
      throw ex;
    }else {
      if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        throw e427993;
      }else {
        return null
      }
    }
  }
};
cljs.core.async.impl.ioc_helpers.take_BANG_ = function take_BANG_(state, blk, c) {
  var temp__4090__auto__ = cljs.core.async.impl.protocols.take_BANG_.call(null, c, cljs.core.async.impl.ioc_helpers.fn_handler.call(null, function(x) {
    var statearr_427996_427998 = state;
    statearr_427996_427998[cljs.core.async.impl.ioc_helpers.VALUE_IDX] = x;
    statearr_427996_427998[cljs.core.async.impl.ioc_helpers.STATE_IDX] = blk;
    return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state)
  }));
  if(cljs.core.truth_(temp__4090__auto__)) {
    var cb = temp__4090__auto__;
    var statearr_427997_427999 = state;
    statearr_427997_427999[cljs.core.async.impl.ioc_helpers.VALUE_IDX] = cljs.core.deref.call(null, cb);
    statearr_427997_427999[cljs.core.async.impl.ioc_helpers.STATE_IDX] = blk;
    return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
  }else {
    return null
  }
};
cljs.core.async.impl.ioc_helpers.put_BANG_ = function put_BANG_(state, blk, c, val) {
  var temp__4090__auto__ = cljs.core.async.impl.protocols.put_BANG_.call(null, c, val, cljs.core.async.impl.ioc_helpers.fn_handler.call(null, function() {
    var statearr_428002_428004 = state;
    statearr_428002_428004[cljs.core.async.impl.ioc_helpers.VALUE_IDX] = null;
    statearr_428002_428004[cljs.core.async.impl.ioc_helpers.STATE_IDX] = blk;
    return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state)
  }));
  if(cljs.core.truth_(temp__4090__auto__)) {
    var cb = temp__4090__auto__;
    var statearr_428003_428005 = state;
    statearr_428003_428005[cljs.core.async.impl.ioc_helpers.VALUE_IDX] = cljs.core.deref.call(null, cb);
    statearr_428003_428005[cljs.core.async.impl.ioc_helpers.STATE_IDX] = blk;
    return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
  }else {
    return null
  }
};
cljs.core.async.impl.ioc_helpers.ioc_alts_BANG_ = function() {
  var ioc_alts_BANG___delegate = function(state, cont_block, ports, p__428006) {
    var map__428011 = p__428006;
    var map__428011__$1 = cljs.core.seq_QMARK_.call(null, map__428011) ? cljs.core.apply.call(null, cljs.core.hash_map, map__428011) : map__428011;
    var opts = map__428011__$1;
    var statearr_428012_428015 = state;
    statearr_428012_428015[cljs.core.async.impl.ioc_helpers.STATE_IDX] = cont_block;
    var temp__4092__auto__ = cljs.core.async.do_alts.call(null, function(val) {
      var statearr_428013_428016 = state;
      statearr_428013_428016[cljs.core.async.impl.ioc_helpers.VALUE_IDX] = val;
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state)
    }, ports, opts);
    if(cljs.core.truth_(temp__4092__auto__)) {
      var cb = temp__4092__auto__;
      var statearr_428014_428017 = state;
      statearr_428014_428017[cljs.core.async.impl.ioc_helpers.VALUE_IDX] = cljs.core.deref.call(null, cb);
      return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
    }else {
      return null
    }
  };
  var ioc_alts_BANG_ = function(state, cont_block, ports, var_args) {
    var p__428006 = null;
    if(arguments.length > 3) {
      p__428006 = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
    }
    return ioc_alts_BANG___delegate.call(this, state, cont_block, ports, p__428006)
  };
  ioc_alts_BANG_.cljs$lang$maxFixedArity = 3;
  ioc_alts_BANG_.cljs$lang$applyTo = function(arglist__428018) {
    var state = cljs.core.first(arglist__428018);
    arglist__428018 = cljs.core.next(arglist__428018);
    var cont_block = cljs.core.first(arglist__428018);
    arglist__428018 = cljs.core.next(arglist__428018);
    var ports = cljs.core.first(arglist__428018);
    var p__428006 = cljs.core.rest(arglist__428018);
    return ioc_alts_BANG___delegate(state, cont_block, ports, p__428006)
  };
  ioc_alts_BANG_.cljs$core$IFn$_invoke$arity$variadic = ioc_alts_BANG___delegate;
  return ioc_alts_BANG_
}();
cljs.core.async.impl.ioc_helpers.return_chan = function return_chan(state, value) {
  var c = state[cljs.core.async.impl.ioc_helpers.USER_START_IDX];
  if(value == null) {
  }else {
    cljs.core.async.impl.protocols.put_BANG_.call(null, c, value, cljs.core.async.impl.ioc_helpers.fn_handler.call(null, function() {
      return null
    }))
  }
  cljs.core.async.impl.protocols.close_BANG_.call(null, c);
  return c
};
goog.provide("cljs.core.async.impl.buffers");
goog.require("cljs.core");
goog.require("cljs.core.async.impl.protocols");
goog.require("cljs.core.async.impl.protocols");
cljs.core.async.impl.buffers.acopy = function acopy(src, src_start, dest, dest_start, len) {
  var cnt = 0;
  while(true) {
    if(cnt < len) {
      dest[dest_start + cnt] = src[src_start + cnt];
      var G__427983 = cnt + 1;
      cnt = G__427983;
      continue
    }else {
      return null
    }
    break
  }
};
cljs.core.async.impl.buffers.RingBuffer = function(head, tail, length, arr) {
  this.head = head;
  this.tail = tail;
  this.length = length;
  this.arr = arr
};
cljs.core.async.impl.buffers.RingBuffer.cljs$lang$type = true;
cljs.core.async.impl.buffers.RingBuffer.cljs$lang$ctorStr = "cljs.core.async.impl.buffers/RingBuffer";
cljs.core.async.impl.buffers.RingBuffer.cljs$lang$ctorPrWriter = function(this__3829__auto__, writer__3830__auto__, opt__3831__auto__) {
  return cljs.core._write.call(null, writer__3830__auto__, "cljs.core.async.impl.buffers/RingBuffer")
};
cljs.core.async.impl.buffers.RingBuffer.prototype.pop = function() {
  var self__ = this;
  var _ = this;
  if(self__.length === 0) {
    return null
  }else {
    var x = self__.arr[self__.tail];
    self__.arr[self__.tail] = null;
    self__.tail = (self__.tail + 1) % self__.arr.length;
    self__.length = self__.length - 1;
    return x
  }
};
cljs.core.async.impl.buffers.RingBuffer.prototype.unshift = function(x) {
  var self__ = this;
  var _ = this;
  self__.arr[self__.head] = x;
  self__.head = (self__.head + 1) % self__.arr.length;
  self__.length = self__.length + 1;
  return null
};
cljs.core.async.impl.buffers.RingBuffer.prototype.unbounded_unshift = function(x) {
  var self__ = this;
  var this$ = this;
  if(self__.length + 1 === self__.arr.length) {
    this$.resize()
  }else {
  }
  return this$.unshift(x)
};
cljs.core.async.impl.buffers.RingBuffer.prototype.resize = function() {
  var self__ = this;
  var _ = this;
  var new_arr_size = self__.arr.length * 2;
  var new_arr = new Array(new_arr_size);
  if(self__.tail < self__.head) {
    cljs.core.async.impl.buffers.acopy.call(null, self__.arr, self__.tail, new_arr, 0, self__.length);
    self__.tail = 0;
    self__.head = self__.length;
    return self__.arr = new_arr
  }else {
    if(self__.tail > self__.head) {
      cljs.core.async.impl.buffers.acopy.call(null, self__.arr, self__.tail, new_arr, 0, self__.arr.length - self__.tail);
      cljs.core.async.impl.buffers.acopy.call(null, self__.arr, 0, new_arr, self__.arr.length - self__.tail, self__.head);
      self__.tail = 0;
      self__.head = self__.length;
      return self__.arr = new_arr
    }else {
      if(self__.tail === self__.head) {
        self__.tail = 0;
        self__.head = 0;
        return self__.arr = new_arr
      }else {
        return null
      }
    }
  }
};
cljs.core.async.impl.buffers.RingBuffer.prototype.cleanup = function(keep_QMARK_) {
  var self__ = this;
  var this$ = this;
  var n__4108__auto__ = self__.length;
  var x = 0;
  while(true) {
    if(x < n__4108__auto__) {
      var v_427984 = this$.pop();
      if(keep_QMARK_.call(null, v_427984)) {
        this$.unshift(v_427984)
      }else {
      }
      var G__427985 = x + 1;
      x = G__427985;
      continue
    }else {
      return null
    }
    break
  }
};
cljs.core.async.impl.buffers.__GT_RingBuffer = function __GT_RingBuffer(head, tail, length, arr) {
  return new cljs.core.async.impl.buffers.RingBuffer(head, tail, length, arr)
};
cljs.core.async.impl.buffers.ring_buffer = function ring_buffer(n) {
  if(n > 0) {
  }else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str("Can't create a ring buffer of size 0"), cljs.core.str("\n"), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, ">", ">", -1640531465, null), new cljs.core.Symbol(null, "n", "n", -1640531417, null), 0)))].join(""));
  }
  return new cljs.core.async.impl.buffers.RingBuffer(0, 0, 0, new Array(n))
};
cljs.core.async.impl.buffers.FixedBuffer = function(buf, n) {
  this.buf = buf;
  this.n = n;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 2
};
cljs.core.async.impl.buffers.FixedBuffer.cljs$lang$type = true;
cljs.core.async.impl.buffers.FixedBuffer.cljs$lang$ctorStr = "cljs.core.async.impl.buffers/FixedBuffer";
cljs.core.async.impl.buffers.FixedBuffer.cljs$lang$ctorPrWriter = function(this__3829__auto__, writer__3830__auto__, opt__3831__auto__) {
  return cljs.core._write.call(null, writer__3830__auto__, "cljs.core.async.impl.buffers/FixedBuffer")
};
cljs.core.async.impl.buffers.FixedBuffer.prototype.cljs$core$ICounted$_count$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return self__.buf.length
};
cljs.core.async.impl.buffers.FixedBuffer.prototype.cljs$core$async$impl$protocols$Buffer$ = true;
cljs.core.async.impl.buffers.FixedBuffer.prototype.cljs$core$async$impl$protocols$Buffer$full_QMARK_$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return self__.buf.length === self__.n
};
cljs.core.async.impl.buffers.FixedBuffer.prototype.cljs$core$async$impl$protocols$Buffer$remove_BANG_$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return self__.buf.pop()
};
cljs.core.async.impl.buffers.FixedBuffer.prototype.cljs$core$async$impl$protocols$Buffer$add_BANG_$arity$2 = function(this$, itm) {
  var self__ = this;
  var this$__$1 = this;
  if(cljs.core.not.call(null, cljs.core.async.impl.protocols.full_QMARK_.call(null, this$__$1))) {
  }else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str("Can't add to a full buffer"), cljs.core.str("\n"), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "not", "not", -1640422260, null), cljs.core.list(new cljs.core.Symbol("impl", "full?", "impl/full?", -1337857039, null), new cljs.core.Symbol(null, "this", "this", -1636972457, null)))))].join(""));
  }
  return self__.buf.unshift(itm)
};
cljs.core.async.impl.buffers.__GT_FixedBuffer = function __GT_FixedBuffer(buf, n) {
  return new cljs.core.async.impl.buffers.FixedBuffer(buf, n)
};
cljs.core.async.impl.buffers.fixed_buffer = function fixed_buffer(n) {
  return new cljs.core.async.impl.buffers.FixedBuffer(cljs.core.async.impl.buffers.ring_buffer.call(null, n), n)
};
cljs.core.async.impl.buffers.DroppingBuffer = function(buf, n) {
  this.buf = buf;
  this.n = n;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 2
};
cljs.core.async.impl.buffers.DroppingBuffer.cljs$lang$type = true;
cljs.core.async.impl.buffers.DroppingBuffer.cljs$lang$ctorStr = "cljs.core.async.impl.buffers/DroppingBuffer";
cljs.core.async.impl.buffers.DroppingBuffer.cljs$lang$ctorPrWriter = function(this__3829__auto__, writer__3830__auto__, opt__3831__auto__) {
  return cljs.core._write.call(null, writer__3830__auto__, "cljs.core.async.impl.buffers/DroppingBuffer")
};
cljs.core.async.impl.buffers.DroppingBuffer.prototype.cljs$core$ICounted$_count$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return self__.buf.length
};
cljs.core.async.impl.buffers.DroppingBuffer.prototype.cljs$core$async$impl$protocols$Buffer$ = true;
cljs.core.async.impl.buffers.DroppingBuffer.prototype.cljs$core$async$impl$protocols$Buffer$full_QMARK_$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return false
};
cljs.core.async.impl.buffers.DroppingBuffer.prototype.cljs$core$async$impl$protocols$Buffer$remove_BANG_$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return self__.buf.pop()
};
cljs.core.async.impl.buffers.DroppingBuffer.prototype.cljs$core$async$impl$protocols$Buffer$add_BANG_$arity$2 = function(this$, itm) {
  var self__ = this;
  var this$__$1 = this;
  if(self__.buf.length === self__.n) {
    return null
  }else {
    return self__.buf.unshift(itm)
  }
};
cljs.core.async.impl.buffers.__GT_DroppingBuffer = function __GT_DroppingBuffer(buf, n) {
  return new cljs.core.async.impl.buffers.DroppingBuffer(buf, n)
};
cljs.core.async.impl.buffers.dropping_buffer = function dropping_buffer(n) {
  return new cljs.core.async.impl.buffers.DroppingBuffer(cljs.core.async.impl.buffers.ring_buffer.call(null, n), n)
};
cljs.core.async.impl.buffers.SlidingBuffer = function(buf, n) {
  this.buf = buf;
  this.n = n;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 2
};
cljs.core.async.impl.buffers.SlidingBuffer.cljs$lang$type = true;
cljs.core.async.impl.buffers.SlidingBuffer.cljs$lang$ctorStr = "cljs.core.async.impl.buffers/SlidingBuffer";
cljs.core.async.impl.buffers.SlidingBuffer.cljs$lang$ctorPrWriter = function(this__3829__auto__, writer__3830__auto__, opt__3831__auto__) {
  return cljs.core._write.call(null, writer__3830__auto__, "cljs.core.async.impl.buffers/SlidingBuffer")
};
cljs.core.async.impl.buffers.SlidingBuffer.prototype.cljs$core$ICounted$_count$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return self__.buf.length
};
cljs.core.async.impl.buffers.SlidingBuffer.prototype.cljs$core$async$impl$protocols$Buffer$ = true;
cljs.core.async.impl.buffers.SlidingBuffer.prototype.cljs$core$async$impl$protocols$Buffer$full_QMARK_$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return false
};
cljs.core.async.impl.buffers.SlidingBuffer.prototype.cljs$core$async$impl$protocols$Buffer$remove_BANG_$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return self__.buf.pop()
};
cljs.core.async.impl.buffers.SlidingBuffer.prototype.cljs$core$async$impl$protocols$Buffer$add_BANG_$arity$2 = function(this$, itm) {
  var self__ = this;
  var this$__$1 = this;
  if(self__.buf.length === self__.n) {
    cljs.core.async.impl.protocols.remove_BANG_.call(null, this$__$1)
  }else {
  }
  return self__.buf.unshift(itm)
};
cljs.core.async.impl.buffers.__GT_SlidingBuffer = function __GT_SlidingBuffer(buf, n) {
  return new cljs.core.async.impl.buffers.SlidingBuffer(buf, n)
};
cljs.core.async.impl.buffers.sliding_buffer = function sliding_buffer(n) {
  return new cljs.core.async.impl.buffers.SlidingBuffer(cljs.core.async.impl.buffers.ring_buffer.call(null, n), n)
};
goog.provide("cljs.core.async.impl.dispatch");
goog.require("cljs.core");
goog.require("cljs.core.async.impl.buffers");
goog.require("cljs.core.async.impl.buffers");
cljs.core.async.impl.dispatch.message_channel = null;
cljs.core.async.impl.dispatch.tasks = cljs.core.async.impl.buffers.ring_buffer.call(null, 32);
cljs.core.async.impl.dispatch.running_QMARK_ = false;
cljs.core.async.impl.dispatch.queued_QMARK_ = false;
cljs.core.async.impl.dispatch.TASK_BATCH_SIZE = 1024;
cljs.core.async.impl.dispatch.process_messages = function process_messages() {
  cljs.core.async.impl.dispatch.running_QMARK_ = true;
  cljs.core.async.impl.dispatch.queued_QMARK_ = false;
  var count_427972 = 0;
  while(true) {
    var m_427973 = cljs.core.async.impl.dispatch.tasks.pop();
    if(m_427973 == null) {
    }else {
      m_427973.call(null);
      if(count_427972 < cljs.core.async.impl.dispatch.TASK_BATCH_SIZE) {
        var G__427974 = count_427972 + 1;
        count_427972 = G__427974;
        continue
      }else {
      }
    }
    break
  }
  cljs.core.async.impl.dispatch.running_QMARK_ = false;
  if(cljs.core.async.impl.dispatch.tasks.length > 0) {
    return cljs.core.async.impl.dispatch.queue_dispatcher.call(null)
  }else {
    return null
  }
};
if(typeof MessageChannel !== "undefined") {
  cljs.core.async.impl.dispatch.message_channel = new MessageChannel;
  cljs.core.async.impl.dispatch.message_channel.port1.onmessage = function(msg) {
    return cljs.core.async.impl.dispatch.process_messages.call(null)
  }
}else {
}
cljs.core.async.impl.dispatch.queue_dispatcher = function queue_dispatcher() {
  if(cljs.core.truth_(function() {
    var and__3273__auto__ = cljs.core.async.impl.dispatch.queued_QMARK_;
    if(and__3273__auto__) {
      return cljs.core.async.impl.dispatch.running_QMARK_
    }else {
      return and__3273__auto__
    }
  }())) {
    return null
  }else {
    cljs.core.async.impl.dispatch.queued_QMARK_ = true;
    if(typeof MessageChannel !== "undefined") {
      return cljs.core.async.impl.dispatch.message_channel.port2.postMessage(0)
    }else {
      if(typeof setImmediate !== "undefined") {
        return setImmediate(cljs.core.async.impl.dispatch.process_messages)
      }else {
        if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          return setTimeout(cljs.core.async.impl.dispatch.process_messages, 0)
        }else {
          return null
        }
      }
    }
  }
};
cljs.core.async.impl.dispatch.run = function run(f) {
  cljs.core.async.impl.dispatch.tasks.unbounded_unshift(f);
  return cljs.core.async.impl.dispatch.queue_dispatcher.call(null)
};
cljs.core.async.impl.dispatch.queue_delay = function queue_delay(f, delay) {
  return setTimeout(f, delay)
};
goog.provide("cljs.core.async.impl.channels");
goog.require("cljs.core");
goog.require("cljs.core.async.impl.buffers");
goog.require("cljs.core.async.impl.buffers");
goog.require("cljs.core.async.impl.dispatch");
goog.require("cljs.core.async.impl.dispatch");
goog.require("cljs.core.async.impl.protocols");
goog.require("cljs.core.async.impl.protocols");
cljs.core.async.impl.channels.box = function box(val) {
  if(typeof cljs.core.async.impl.channels.t427978 !== "undefined") {
  }else {
    cljs.core.async.impl.channels.t427978 = function(val, box, meta427979) {
      this.val = val;
      this.box = box;
      this.meta427979 = meta427979;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 425984
    };
    cljs.core.async.impl.channels.t427978.cljs$lang$type = true;
    cljs.core.async.impl.channels.t427978.cljs$lang$ctorStr = "cljs.core.async.impl.channels/t427978";
    cljs.core.async.impl.channels.t427978.cljs$lang$ctorPrWriter = function(this__3829__auto__, writer__3830__auto__, opt__3831__auto__) {
      return cljs.core._write.call(null, writer__3830__auto__, "cljs.core.async.impl.channels/t427978")
    };
    cljs.core.async.impl.channels.t427978.prototype.cljs$core$IDeref$_deref$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return self__.val
    };
    cljs.core.async.impl.channels.t427978.prototype.cljs$core$IMeta$_meta$arity$1 = function(_427980) {
      var self__ = this;
      var _427980__$1 = this;
      return self__.meta427979
    };
    cljs.core.async.impl.channels.t427978.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_427980, meta427979__$1) {
      var self__ = this;
      var _427980__$1 = this;
      return new cljs.core.async.impl.channels.t427978(self__.val, self__.box, meta427979__$1)
    };
    cljs.core.async.impl.channels.__GT_t427978 = function __GT_t427978(val__$1, box__$1, meta427979) {
      return new cljs.core.async.impl.channels.t427978(val__$1, box__$1, meta427979)
    }
  }
  return new cljs.core.async.impl.channels.t427978(val, box, null)
};
cljs.core.async.impl.channels.PutBox = function(handler, val) {
  this.handler = handler;
  this.val = val
};
cljs.core.async.impl.channels.PutBox.cljs$lang$type = true;
cljs.core.async.impl.channels.PutBox.cljs$lang$ctorStr = "cljs.core.async.impl.channels/PutBox";
cljs.core.async.impl.channels.PutBox.cljs$lang$ctorPrWriter = function(this__3832__auto__, writer__3833__auto__, opts__3834__auto__) {
  return cljs.core._write.call(null, writer__3833__auto__, "cljs.core.async.impl.channels/PutBox")
};
cljs.core.async.impl.channels.__GT_PutBox = function __GT_PutBox(handler, val) {
  return new cljs.core.async.impl.channels.PutBox(handler, val)
};
cljs.core.async.impl.channels.put_active_QMARK_ = function put_active_QMARK_(box) {
  return cljs.core.async.impl.protocols.active_QMARK_.call(null, box.handler)
};
cljs.core.async.impl.channels.MAX_DIRTY = 64;
cljs.core.async.impl.channels.ManyToManyChannel = function(takes, dirty_takes, puts, dirty_puts, buf, closed) {
  this.takes = takes;
  this.dirty_takes = dirty_takes;
  this.puts = puts;
  this.dirty_puts = dirty_puts;
  this.buf = buf;
  this.closed = closed
};
cljs.core.async.impl.channels.ManyToManyChannel.cljs$lang$type = true;
cljs.core.async.impl.channels.ManyToManyChannel.cljs$lang$ctorStr = "cljs.core.async.impl.channels/ManyToManyChannel";
cljs.core.async.impl.channels.ManyToManyChannel.cljs$lang$ctorPrWriter = function(this__3829__auto__, writer__3830__auto__, opt__3831__auto__) {
  return cljs.core._write.call(null, writer__3830__auto__, "cljs.core.async.impl.channels/ManyToManyChannel")
};
cljs.core.async.impl.channels.ManyToManyChannel.prototype.cljs$core$async$impl$protocols$Channel$ = true;
cljs.core.async.impl.channels.ManyToManyChannel.prototype.cljs$core$async$impl$protocols$Channel$close_BANG_$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  if(self__.closed) {
    return null
  }else {
    self__.closed = true;
    while(true) {
      var taker_427981 = self__.takes.pop();
      if(taker_427981 == null) {
      }else {
        if(cljs.core.async.impl.protocols.active_QMARK_.call(null, taker_427981)) {
          var take_cb_427982 = cljs.core.async.impl.protocols.commit.call(null, taker_427981);
          cljs.core.async.impl.dispatch.run.call(null, function(take_cb_427982, taker_427981) {
            return function() {
              return take_cb_427982.call(null, null)
            }
          }(take_cb_427982, taker_427981))
        }else {
        }
        continue
      }
      break
    }
    return null
  }
};
cljs.core.async.impl.channels.ManyToManyChannel.prototype.cljs$core$async$impl$protocols$ReadPort$ = true;
cljs.core.async.impl.channels.ManyToManyChannel.prototype.cljs$core$async$impl$protocols$ReadPort$take_BANG_$arity$2 = function(this$, handler) {
  var self__ = this;
  var this$__$1 = this;
  if(!cljs.core.async.impl.protocols.active_QMARK_.call(null, handler)) {
    return null
  }else {
    if(!(self__.buf == null) && cljs.core.count.call(null, self__.buf) > 0) {
      var _ = cljs.core.async.impl.protocols.commit.call(null, handler);
      return cljs.core.async.impl.channels.box.call(null, cljs.core.async.impl.protocols.remove_BANG_.call(null, self__.buf))
    }else {
      while(true) {
        var putter = self__.puts.pop();
        if(!(putter == null)) {
          var put_handler = putter.handler;
          var val = putter.val;
          if(cljs.core.async.impl.protocols.active_QMARK_.call(null, put_handler)) {
            var put_cb = cljs.core.async.impl.protocols.commit.call(null, put_handler);
            var _ = cljs.core.async.impl.protocols.commit.call(null, handler);
            cljs.core.async.impl.dispatch.run.call(null, put_cb);
            return cljs.core.async.impl.channels.box.call(null, val)
          }else {
            continue
          }
        }else {
          if(self__.closed) {
            var _ = cljs.core.async.impl.protocols.commit.call(null, handler);
            return cljs.core.async.impl.channels.box.call(null, null)
          }else {
            if(self__.dirty_takes > cljs.core.async.impl.channels.MAX_DIRTY) {
              self__.dirty_takes = 0;
              self__.takes.cleanup(cljs.core.async.impl.protocols.active_QMARK_)
            }else {
              self__.dirty_takes = self__.dirty_takes + 1
            }
            if(self__.takes.length < cljs.core.async.impl.protocols.MAX_QUEUE_SIZE) {
            }else {
              throw new Error([cljs.core.str("Assert failed: "), cljs.core.str([cljs.core.str("No more than "), cljs.core.str(cljs.core.async.impl.protocols.MAX_QUEUE_SIZE), cljs.core.str(" pending takes are allowed on a single channel.")].join("")), cljs.core.str("\n"), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "<", "<", -1640531467, null), cljs.core.list(new cljs.core.Symbol(null, ".-length", ".-length", 1395928862, null), new cljs.core.Symbol(null, "takes", 
              "takes", -1530407291, null)), new cljs.core.Symbol("impl", "MAX-QUEUE-SIZE", "impl/MAX-QUEUE-SIZE", -1989946393, null))))].join(""));
            }
            self__.takes.unbounded_unshift(handler);
            return null
          }
        }
        break
      }
    }
  }
};
cljs.core.async.impl.channels.ManyToManyChannel.prototype.cljs$core$async$impl$protocols$WritePort$ = true;
cljs.core.async.impl.channels.ManyToManyChannel.prototype.cljs$core$async$impl$protocols$WritePort$put_BANG_$arity$3 = function(this$, val, handler) {
  var self__ = this;
  var this$__$1 = this;
  if(!(val == null)) {
  }else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str("Can't put nil in on a channel"), cljs.core.str("\n"), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "not", "not", -1640422260, null), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", -1637150201, null), new cljs.core.Symbol(null, "val", "val", -1640415014, null)))))].join(""));
  }
  var closed__$1 = self__.closed;
  if(closed__$1 || !cljs.core.async.impl.protocols.active_QMARK_.call(null, handler)) {
    return cljs.core.async.impl.channels.box.call(null, null)
  }else {
    while(true) {
      var taker = self__.takes.pop();
      if(!(taker == null)) {
        if(cljs.core.async.impl.protocols.active_QMARK_.call(null, taker)) {
          var take_cb = cljs.core.async.impl.protocols.commit.call(null, taker);
          var _ = cljs.core.async.impl.protocols.commit.call(null, handler);
          cljs.core.async.impl.dispatch.run.call(null, function(take_cb, _, taker) {
            return function() {
              return take_cb.call(null, val)
            }
          }(take_cb, _, taker));
          return cljs.core.async.impl.channels.box.call(null, null)
        }else {
          continue
        }
      }else {
        if(!(self__.buf == null || cljs.core.async.impl.protocols.full_QMARK_.call(null, self__.buf))) {
          var _ = cljs.core.async.impl.protocols.commit.call(null, handler);
          cljs.core.async.impl.protocols.add_BANG_.call(null, self__.buf, val);
          return cljs.core.async.impl.channels.box.call(null, null)
        }else {
          if(self__.dirty_puts > cljs.core.async.impl.channels.MAX_DIRTY) {
            self__.dirty_puts = 0;
            self__.puts.cleanup(cljs.core.async.impl.channels.put_active_QMARK_)
          }else {
            self__.dirty_puts = self__.dirty_puts + 1
          }
          if(self__.puts.length < cljs.core.async.impl.protocols.MAX_QUEUE_SIZE) {
          }else {
            throw new Error([cljs.core.str("Assert failed: "), cljs.core.str([cljs.core.str("No more than "), cljs.core.str(cljs.core.async.impl.protocols.MAX_QUEUE_SIZE), cljs.core.str(" pending puts are allowed on a single channel."), cljs.core.str(" Consider using a windowed buffer.")].join("")), cljs.core.str("\n"), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "<", "<", -1640531467, null), cljs.core.list(new cljs.core.Symbol(null, ".-length", ".-length", 
            1395928862, null), new cljs.core.Symbol(null, "puts", "puts", -1637078787, null)), new cljs.core.Symbol("impl", "MAX-QUEUE-SIZE", "impl/MAX-QUEUE-SIZE", -1989946393, null))))].join(""));
          }
          self__.puts.unbounded_unshift(new cljs.core.async.impl.channels.PutBox(handler, val));
          return null
        }
      }
      break
    }
  }
};
cljs.core.async.impl.channels.__GT_ManyToManyChannel = function __GT_ManyToManyChannel(takes, dirty_takes, puts, dirty_puts, buf, closed) {
  return new cljs.core.async.impl.channels.ManyToManyChannel(takes, dirty_takes, puts, dirty_puts, buf, closed)
};
cljs.core.async.impl.channels.chan = function chan(buf) {
  return new cljs.core.async.impl.channels.ManyToManyChannel(cljs.core.async.impl.buffers.ring_buffer.call(null, 32), 0, cljs.core.async.impl.buffers.ring_buffer.call(null, 32), 0, buf, null)
};
goog.provide("cljs.core.async.impl.timers");
goog.require("cljs.core");
goog.require("cljs.core.async.impl.dispatch");
goog.require("cljs.core.async.impl.dispatch");
goog.require("cljs.core.async.impl.channels");
goog.require("cljs.core.async.impl.channels");
goog.require("cljs.core.async.impl.protocols");
goog.require("cljs.core.async.impl.protocols");
cljs.core.async.impl.timers.MAX_LEVEL = 15;
cljs.core.async.impl.timers.P = 1 / 2;
cljs.core.async.impl.timers.random_level = function() {
  var random_level = null;
  var random_level__0 = function() {
    return random_level.call(null, 0)
  };
  var random_level__1 = function(level) {
    while(true) {
      if(Math.random() < cljs.core.async.impl.timers.P && level < cljs.core.async.impl.timers.MAX_LEVEL) {
        var G__427938 = level + 1;
        level = G__427938;
        continue
      }else {
        return level
      }
      break
    }
  };
  random_level = function(level) {
    switch(arguments.length) {
      case 0:
        return random_level__0.call(this);
      case 1:
        return random_level__1.call(this, level)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  random_level.cljs$core$IFn$_invoke$arity$0 = random_level__0;
  random_level.cljs$core$IFn$_invoke$arity$1 = random_level__1;
  return random_level
}();
cljs.core.async.impl.timers.SkipListNode = function(key, val, forward) {
  this.key = key;
  this.val = val;
  this.forward = forward;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 2155872256
};
cljs.core.async.impl.timers.SkipListNode.cljs$lang$type = true;
cljs.core.async.impl.timers.SkipListNode.cljs$lang$ctorStr = "cljs.core.async.impl.timers/SkipListNode";
cljs.core.async.impl.timers.SkipListNode.cljs$lang$ctorPrWriter = function(this__3829__auto__, writer__3830__auto__, opt__3831__auto__) {
  return cljs.core._write.call(null, writer__3830__auto__, "cljs.core.async.impl.timers/SkipListNode")
};
cljs.core.async.impl.timers.SkipListNode.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "[", " ", "]", opts, coll__$1)
};
cljs.core.async.impl.timers.SkipListNode.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, self__.val), self__.key)
};
cljs.core.async.impl.timers.__GT_SkipListNode = function __GT_SkipListNode(key, val, forward) {
  return new cljs.core.async.impl.timers.SkipListNode(key, val, forward)
};
cljs.core.async.impl.timers.skip_list_node = function() {
  var skip_list_node = null;
  var skip_list_node__1 = function(level) {
    return skip_list_node.call(null, null, null, level)
  };
  var skip_list_node__3 = function(k, v, level) {
    var arr = new Array(level + 1);
    var i_427939 = 0;
    while(true) {
      if(i_427939 < arr.length) {
        arr[i_427939] = null;
        var G__427940 = i_427939 + 1;
        i_427939 = G__427940;
        continue
      }else {
      }
      break
    }
    return new cljs.core.async.impl.timers.SkipListNode(k, v, arr)
  };
  skip_list_node = function(k, v, level) {
    switch(arguments.length) {
      case 1:
        return skip_list_node__1.call(this, k);
      case 3:
        return skip_list_node__3.call(this, k, v, level)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  skip_list_node.cljs$core$IFn$_invoke$arity$1 = skip_list_node__1;
  skip_list_node.cljs$core$IFn$_invoke$arity$3 = skip_list_node__3;
  return skip_list_node
}();
cljs.core.async.impl.timers.least_greater_node = function() {
  var least_greater_node = null;
  var least_greater_node__3 = function(x, k, level) {
    return least_greater_node.call(null, x, k, level, null)
  };
  var least_greater_node__4 = function(x, k, level, update) {
    while(true) {
      if(!(level < 0)) {
        var x__$1 = function() {
          var x__$1 = x;
          while(true) {
            var temp__4090__auto__ = x__$1.forward[level];
            if(cljs.core.truth_(temp__4090__auto__)) {
              var x_SINGLEQUOTE_ = temp__4090__auto__;
              if(x_SINGLEQUOTE_.key < k) {
                var G__427941 = x_SINGLEQUOTE_;
                x__$1 = G__427941;
                continue
              }else {
                return x__$1
              }
            }else {
              return x__$1
            }
            break
          }
        }();
        if(update == null) {
        }else {
          update[level] = x__$1
        }
        var G__427942 = x__$1;
        var G__427943 = k;
        var G__427944 = level - 1;
        var G__427945 = update;
        x = G__427942;
        k = G__427943;
        level = G__427944;
        update = G__427945;
        continue
      }else {
        return x
      }
      break
    }
  };
  least_greater_node = function(x, k, level, update) {
    switch(arguments.length) {
      case 3:
        return least_greater_node__3.call(this, x, k, level);
      case 4:
        return least_greater_node__4.call(this, x, k, level, update)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  least_greater_node.cljs$core$IFn$_invoke$arity$3 = least_greater_node__3;
  least_greater_node.cljs$core$IFn$_invoke$arity$4 = least_greater_node__4;
  return least_greater_node
}();
cljs.core.async.impl.timers.SkipList = function(header, level) {
  this.header = header;
  this.level = level;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 2155872256
};
cljs.core.async.impl.timers.SkipList.cljs$lang$type = true;
cljs.core.async.impl.timers.SkipList.cljs$lang$ctorStr = "cljs.core.async.impl.timers/SkipList";
cljs.core.async.impl.timers.SkipList.cljs$lang$ctorPrWriter = function(this__3829__auto__, writer__3830__auto__, opt__3831__auto__) {
  return cljs.core._write.call(null, writer__3830__auto__, "cljs.core.async.impl.timers/SkipList")
};
cljs.core.async.impl.timers.SkipList.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var self__ = this;
  var coll__$1 = this;
  var pr_pair = function(keyval) {
    return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "", " ", "", opts, keyval)
  };
  return cljs.core.pr_sequential_writer.call(null, writer, pr_pair, "{", ", ", "}", opts, coll__$1)
};
cljs.core.async.impl.timers.SkipList.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var iter = function iter(node) {
    return new cljs.core.LazySeq(null, function() {
      if(node == null) {
        return null
      }else {
        return cljs.core.cons.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [node.key, node.val], null), iter.call(null, node.forward[0]))
      }
    }, null, null)
  };
  return iter.call(null, self__.header.forward[0])
};
cljs.core.async.impl.timers.SkipList.prototype.put = function(k, v) {
  var self__ = this;
  var coll = this;
  var update = new Array(cljs.core.async.impl.timers.MAX_LEVEL);
  var x = cljs.core.async.impl.timers.least_greater_node.call(null, self__.header, k, self__.level, update);
  var x__$1 = x.forward[0];
  if(!(x__$1 == null) && x__$1.key === k) {
    return x__$1.val = v
  }else {
    var new_level = cljs.core.async.impl.timers.random_level.call(null);
    if(new_level > self__.level) {
      var i_427946 = self__.level + 1;
      while(true) {
        if(i_427946 <= new_level + 1) {
          update[i_427946] = self__.header;
          var G__427947 = i_427946 + 1;
          i_427946 = G__427947;
          continue
        }else {
        }
        break
      }
      self__.level = new_level
    }else {
    }
    var x__$2 = cljs.core.async.impl.timers.skip_list_node.call(null, k, v, new Array(new_level));
    var i = 0;
    while(true) {
      if(i <= self__.level) {
        var links = update[i].forward;
        x__$2.forward[i] = links[i];
        return links[i] = x__$2
      }else {
        return null
      }
      break
    }
  }
};
cljs.core.async.impl.timers.SkipList.prototype.remove = function(k) {
  var self__ = this;
  var coll = this;
  var update = new Array(cljs.core.async.impl.timers.MAX_LEVEL);
  var x = cljs.core.async.impl.timers.least_greater_node.call(null, self__.header, k, self__.level, update);
  var x__$1 = x.forward[0];
  if(!(x__$1 == null) && x__$1.key === k) {
    var i_427948 = 0;
    while(true) {
      if(i_427948 <= self__.level) {
        var links_427949 = update[i_427948].forward;
        if(links_427949[i_427948] === x__$1) {
          links_427949[i_427948] = x__$1.forward[i_427948];
          var G__427950 = i_427948 + 1;
          i_427948 = G__427950;
          continue
        }else {
          var G__427951 = i_427948 + 1;
          i_427948 = G__427951;
          continue
        }
      }else {
      }
      break
    }
    while(true) {
      if(self__.level > 0 && self__.header.forward[self__.level] == null) {
        self__.level = self__.level - 1;
        continue
      }else {
        return null
      }
      break
    }
  }else {
    return null
  }
};
cljs.core.async.impl.timers.SkipList.prototype.ceilingEntry = function(k) {
  var self__ = this;
  var coll = this;
  var x = self__.header;
  var level__$1 = self__.level;
  while(true) {
    if(!(level__$1 < 0)) {
      var nx = function() {
        var x__$1 = x;
        while(true) {
          var x_SINGLEQUOTE_ = x__$1.forward[level__$1];
          if(x_SINGLEQUOTE_ == null) {
            return null
          }else {
            if(x_SINGLEQUOTE_.key >= k) {
              return x_SINGLEQUOTE_
            }else {
              var G__427952 = x_SINGLEQUOTE_;
              x__$1 = G__427952;
              continue
            }
          }
          break
        }
      }();
      if(!(nx == null)) {
        var G__427953 = nx;
        var G__427954 = level__$1 - 1;
        x = G__427953;
        level__$1 = G__427954;
        continue
      }else {
        var G__427955 = x;
        var G__427956 = level__$1 - 1;
        x = G__427955;
        level__$1 = G__427956;
        continue
      }
    }else {
      if(x === self__.header) {
        return null
      }else {
        return x
      }
    }
    break
  }
};
cljs.core.async.impl.timers.SkipList.prototype.floorEntry = function(k) {
  var self__ = this;
  var coll = this;
  var x = self__.header;
  var level__$1 = self__.level;
  while(true) {
    if(!(level__$1 < 0)) {
      var nx = function() {
        var x__$1 = x;
        while(true) {
          var x_SINGLEQUOTE_ = x__$1.forward[level__$1];
          if(!(x_SINGLEQUOTE_ == null)) {
            if(x_SINGLEQUOTE_.key > k) {
              return x__$1
            }else {
              var G__427957 = x_SINGLEQUOTE_;
              x__$1 = G__427957;
              continue
            }
          }else {
            if(level__$1 === 0) {
              return x__$1
            }else {
              return null
            }
          }
          break
        }
      }();
      if(cljs.core.truth_(nx)) {
        var G__427958 = nx;
        var G__427959 = level__$1 - 1;
        x = G__427958;
        level__$1 = G__427959;
        continue
      }else {
        var G__427960 = x;
        var G__427961 = level__$1 - 1;
        x = G__427960;
        level__$1 = G__427961;
        continue
      }
    }else {
      if(x === self__.header) {
        return null
      }else {
        return x
      }
    }
    break
  }
};
cljs.core.async.impl.timers.__GT_SkipList = function __GT_SkipList(header, level) {
  return new cljs.core.async.impl.timers.SkipList(header, level)
};
cljs.core.async.impl.timers.skip_list = function skip_list() {
  return new cljs.core.async.impl.timers.SkipList(cljs.core.async.impl.timers.skip_list_node.call(null, 0), 0)
};
cljs.core.async.impl.timers.timeouts_map = cljs.core.async.impl.timers.skip_list.call(null);
cljs.core.async.impl.timers.TIMEOUT_RESOLUTION_MS = 10;
cljs.core.async.impl.timers.timeout = function timeout(msecs) {
  var timeout__$1 = (new Date).valueOf() + msecs;
  var me = cljs.core.async.impl.timers.timeouts_map.ceilingEntry(timeout__$1);
  var or__3285__auto__ = cljs.core.truth_(function() {
    var and__3273__auto__ = me;
    if(cljs.core.truth_(and__3273__auto__)) {
      return me.key < timeout__$1 + cljs.core.async.impl.timers.TIMEOUT_RESOLUTION_MS
    }else {
      return and__3273__auto__
    }
  }()) ? me.val : null;
  if(cljs.core.truth_(or__3285__auto__)) {
    return or__3285__auto__
  }else {
    var timeout_channel = cljs.core.async.impl.channels.chan.call(null, null);
    cljs.core.async.impl.timers.timeouts_map.put(timeout__$1, timeout_channel);
    cljs.core.async.impl.dispatch.queue_delay.call(null, function() {
      cljs.core.async.impl.timers.timeouts_map.remove(timeout__$1);
      return cljs.core.async.impl.protocols.close_BANG_.call(null, timeout_channel)
    }, msecs);
    return timeout_channel
  }
};
goog.provide("cljs.core.async");
goog.require("cljs.core");
goog.require("cljs.core.async.impl.ioc_helpers");
goog.require("cljs.core.async.impl.protocols");
goog.require("cljs.core.async.impl.buffers");
goog.require("cljs.core.async.impl.timers");
goog.require("cljs.core.async.impl.channels");
goog.require("cljs.core.async.impl.dispatch");
goog.require("cljs.core.async.impl.dispatch");
goog.require("cljs.core.async.impl.buffers");
goog.require("cljs.core.async.impl.protocols");
goog.require("cljs.core.async.impl.timers");
goog.require("cljs.core.async.impl.channels");
goog.require("cljs.core.async.impl.ioc_helpers");
cljs.core.async.fn_handler = function fn_handler(f) {
  if(typeof cljs.core.async.t426028 !== "undefined") {
  }else {
    cljs.core.async.t426028 = function(f, fn_handler, meta426029) {
      this.f = f;
      this.fn_handler = fn_handler;
      this.meta426029 = meta426029;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216
    };
    cljs.core.async.t426028.cljs$lang$type = true;
    cljs.core.async.t426028.cljs$lang$ctorStr = "cljs.core.async/t426028";
    cljs.core.async.t426028.cljs$lang$ctorPrWriter = function(this__3829__auto__, writer__3830__auto__, opt__3831__auto__) {
      return cljs.core._write.call(null, writer__3830__auto__, "cljs.core.async/t426028")
    };
    cljs.core.async.t426028.prototype.cljs$core$async$impl$protocols$Handler$ = true;
    cljs.core.async.t426028.prototype.cljs$core$async$impl$protocols$Handler$active_QMARK_$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return true
    };
    cljs.core.async.t426028.prototype.cljs$core$async$impl$protocols$Handler$commit$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return self__.f
    };
    cljs.core.async.t426028.prototype.cljs$core$IMeta$_meta$arity$1 = function(_426030) {
      var self__ = this;
      var _426030__$1 = this;
      return self__.meta426029
    };
    cljs.core.async.t426028.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_426030, meta426029__$1) {
      var self__ = this;
      var _426030__$1 = this;
      return new cljs.core.async.t426028(self__.f, self__.fn_handler, meta426029__$1)
    };
    cljs.core.async.__GT_t426028 = function __GT_t426028(f__$1, fn_handler__$1, meta426029) {
      return new cljs.core.async.t426028(f__$1, fn_handler__$1, meta426029)
    }
  }
  return new cljs.core.async.t426028(f, fn_handler, null)
};
cljs.core.async.buffer = function buffer(n) {
  return cljs.core.async.impl.buffers.fixed_buffer.call(null, n)
};
cljs.core.async.dropping_buffer = function dropping_buffer(n) {
  return cljs.core.async.impl.buffers.dropping_buffer.call(null, n)
};
cljs.core.async.sliding_buffer = function sliding_buffer(n) {
  return cljs.core.async.impl.buffers.sliding_buffer.call(null, n)
};
cljs.core.async.chan = function() {
  var chan = null;
  var chan__0 = function() {
    return chan.call(null, null)
  };
  var chan__1 = function(buf_or_n) {
    var buf_or_n__$1 = cljs.core._EQ_.call(null, buf_or_n, 0) ? null : buf_or_n;
    return cljs.core.async.impl.channels.chan.call(null, typeof buf_or_n__$1 === "number" ? cljs.core.async.buffer.call(null, buf_or_n__$1) : buf_or_n__$1)
  };
  chan = function(buf_or_n) {
    switch(arguments.length) {
      case 0:
        return chan__0.call(this);
      case 1:
        return chan__1.call(this, buf_or_n)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  chan.cljs$core$IFn$_invoke$arity$0 = chan__0;
  chan.cljs$core$IFn$_invoke$arity$1 = chan__1;
  return chan
}();
cljs.core.async.timeout = function timeout(msecs) {
  return cljs.core.async.impl.timers.timeout.call(null, msecs)
};
cljs.core.async._LT__BANG_ = function _LT__BANG_(port) {
  if(null) {
    return null
  }else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str("<! used not in (go ...) block"), cljs.core.str("\n"), cljs.core.str(cljs.core.pr_str.call(null, null))].join(""));
  }
};
cljs.core.async.take_BANG_ = function() {
  var take_BANG_ = null;
  var take_BANG___2 = function(port, fn1) {
    return take_BANG_.call(null, port, fn1, true)
  };
  var take_BANG___3 = function(port, fn1, on_caller_QMARK_) {
    var ret = cljs.core.async.impl.protocols.take_BANG_.call(null, port, cljs.core.async.fn_handler.call(null, fn1));
    if(cljs.core.truth_(ret)) {
      var val_426031 = cljs.core.deref.call(null, ret);
      if(cljs.core.truth_(on_caller_QMARK_)) {
        fn1.call(null, val_426031)
      }else {
        cljs.core.async.impl.dispatch.run.call(null, function() {
          return fn1.call(null, val_426031)
        })
      }
    }else {
    }
    return null
  };
  take_BANG_ = function(port, fn1, on_caller_QMARK_) {
    switch(arguments.length) {
      case 2:
        return take_BANG___2.call(this, port, fn1);
      case 3:
        return take_BANG___3.call(this, port, fn1, on_caller_QMARK_)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  take_BANG_.cljs$core$IFn$_invoke$arity$2 = take_BANG___2;
  take_BANG_.cljs$core$IFn$_invoke$arity$3 = take_BANG___3;
  return take_BANG_
}();
cljs.core.async.nop = function nop() {
  return null
};
cljs.core.async._GT__BANG_ = function _GT__BANG_(port, val) {
  if(null) {
    return null
  }else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(">! used not in (go ...) block"), cljs.core.str("\n"), cljs.core.str(cljs.core.pr_str.call(null, null))].join(""));
  }
};
cljs.core.async.put_BANG_ = function() {
  var put_BANG_ = null;
  var put_BANG___2 = function(port, val) {
    return put_BANG_.call(null, port, val, cljs.core.async.nop)
  };
  var put_BANG___3 = function(port, val, fn0) {
    return put_BANG_.call(null, port, val, fn0, true)
  };
  var put_BANG___4 = function(port, val, fn0, on_caller_QMARK_) {
    var ret = cljs.core.async.impl.protocols.put_BANG_.call(null, port, val, cljs.core.async.fn_handler.call(null, fn0));
    if(cljs.core.truth_(function() {
      var and__3273__auto__ = ret;
      if(cljs.core.truth_(and__3273__auto__)) {
        return cljs.core.not_EQ_.call(null, fn0, cljs.core.async.nop)
      }else {
        return and__3273__auto__
      }
    }())) {
      if(cljs.core.truth_(on_caller_QMARK_)) {
        fn0.call(null)
      }else {
        cljs.core.async.impl.dispatch.run.call(null, fn0)
      }
    }else {
    }
    return null
  };
  put_BANG_ = function(port, val, fn0, on_caller_QMARK_) {
    switch(arguments.length) {
      case 2:
        return put_BANG___2.call(this, port, val);
      case 3:
        return put_BANG___3.call(this, port, val, fn0);
      case 4:
        return put_BANG___4.call(this, port, val, fn0, on_caller_QMARK_)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  put_BANG_.cljs$core$IFn$_invoke$arity$2 = put_BANG___2;
  put_BANG_.cljs$core$IFn$_invoke$arity$3 = put_BANG___3;
  put_BANG_.cljs$core$IFn$_invoke$arity$4 = put_BANG___4;
  return put_BANG_
}();
cljs.core.async.close_BANG_ = function close_BANG_(port) {
  return cljs.core.async.impl.protocols.close_BANG_.call(null, port)
};
cljs.core.async.random_array = function random_array(n) {
  var a = new Array(n);
  var n__4108__auto___426032 = n;
  var x_426033 = 0;
  while(true) {
    if(x_426033 < n__4108__auto___426032) {
      a[x_426033] = 0;
      var G__426034 = x_426033 + 1;
      x_426033 = G__426034;
      continue
    }else {
    }
    break
  }
  var i = 1;
  while(true) {
    if(cljs.core._EQ_.call(null, i, n)) {
      return a
    }else {
      var j = cljs.core.rand_int.call(null, i);
      a[i] = a[j];
      a[j] = i;
      var G__426035 = i + 1;
      i = G__426035;
      continue
    }
    break
  }
};
cljs.core.async.alt_flag = function alt_flag() {
  var flag = cljs.core.atom.call(null, true);
  if(typeof cljs.core.async.t426039 !== "undefined") {
  }else {
    cljs.core.async.t426039 = function(flag, alt_flag, meta426040) {
      this.flag = flag;
      this.alt_flag = alt_flag;
      this.meta426040 = meta426040;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216
    };
    cljs.core.async.t426039.cljs$lang$type = true;
    cljs.core.async.t426039.cljs$lang$ctorStr = "cljs.core.async/t426039";
    cljs.core.async.t426039.cljs$lang$ctorPrWriter = function(this__3829__auto__, writer__3830__auto__, opt__3831__auto__) {
      return cljs.core._write.call(null, writer__3830__auto__, "cljs.core.async/t426039")
    };
    cljs.core.async.t426039.prototype.cljs$core$async$impl$protocols$Handler$ = true;
    cljs.core.async.t426039.prototype.cljs$core$async$impl$protocols$Handler$active_QMARK_$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return cljs.core.deref.call(null, self__.flag)
    };
    cljs.core.async.t426039.prototype.cljs$core$async$impl$protocols$Handler$commit$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      cljs.core.reset_BANG_.call(null, self__.flag, null);
      return true
    };
    cljs.core.async.t426039.prototype.cljs$core$IMeta$_meta$arity$1 = function(_426041) {
      var self__ = this;
      var _426041__$1 = this;
      return self__.meta426040
    };
    cljs.core.async.t426039.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_426041, meta426040__$1) {
      var self__ = this;
      var _426041__$1 = this;
      return new cljs.core.async.t426039(self__.flag, self__.alt_flag, meta426040__$1)
    };
    cljs.core.async.__GT_t426039 = function __GT_t426039(flag__$1, alt_flag__$1, meta426040) {
      return new cljs.core.async.t426039(flag__$1, alt_flag__$1, meta426040)
    }
  }
  return new cljs.core.async.t426039(flag, alt_flag, null)
};
cljs.core.async.alt_handler = function alt_handler(flag, cb) {
  if(typeof cljs.core.async.t426045 !== "undefined") {
  }else {
    cljs.core.async.t426045 = function(cb, flag, alt_handler, meta426046) {
      this.cb = cb;
      this.flag = flag;
      this.alt_handler = alt_handler;
      this.meta426046 = meta426046;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216
    };
    cljs.core.async.t426045.cljs$lang$type = true;
    cljs.core.async.t426045.cljs$lang$ctorStr = "cljs.core.async/t426045";
    cljs.core.async.t426045.cljs$lang$ctorPrWriter = function(this__3829__auto__, writer__3830__auto__, opt__3831__auto__) {
      return cljs.core._write.call(null, writer__3830__auto__, "cljs.core.async/t426045")
    };
    cljs.core.async.t426045.prototype.cljs$core$async$impl$protocols$Handler$ = true;
    cljs.core.async.t426045.prototype.cljs$core$async$impl$protocols$Handler$active_QMARK_$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return cljs.core.async.impl.protocols.active_QMARK_.call(null, self__.flag)
    };
    cljs.core.async.t426045.prototype.cljs$core$async$impl$protocols$Handler$commit$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      cljs.core.async.impl.protocols.commit.call(null, self__.flag);
      return self__.cb
    };
    cljs.core.async.t426045.prototype.cljs$core$IMeta$_meta$arity$1 = function(_426047) {
      var self__ = this;
      var _426047__$1 = this;
      return self__.meta426046
    };
    cljs.core.async.t426045.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_426047, meta426046__$1) {
      var self__ = this;
      var _426047__$1 = this;
      return new cljs.core.async.t426045(self__.cb, self__.flag, self__.alt_handler, meta426046__$1)
    };
    cljs.core.async.__GT_t426045 = function __GT_t426045(cb__$1, flag__$1, alt_handler__$1, meta426046) {
      return new cljs.core.async.t426045(cb__$1, flag__$1, alt_handler__$1, meta426046)
    }
  }
  return new cljs.core.async.t426045(cb, flag, alt_handler, null)
};
cljs.core.async.do_alts = function do_alts(fret, ports, opts) {
  var flag = cljs.core.async.alt_flag.call(null);
  var n = cljs.core.count.call(null, ports);
  var idxs = cljs.core.async.random_array.call(null, n);
  var priority = (new cljs.core.Keyword(null, "priority", "priority", 4143410454)).cljs$core$IFn$_invoke$arity$1(opts);
  var ret = function() {
    var i = 0;
    while(true) {
      if(i < n) {
        var idx = cljs.core.truth_(priority) ? i : idxs[i];
        var port = cljs.core.nth.call(null, ports, idx);
        var wport = cljs.core.vector_QMARK_.call(null, port) ? port.call(null, 0) : null;
        var vbox = cljs.core.truth_(wport) ? function() {
          var val = port.call(null, 1);
          return cljs.core.async.impl.protocols.put_BANG_.call(null, wport, val, cljs.core.async.alt_handler.call(null, flag, function(i, val, idx, port, wport, flag, n, idxs, priority) {
            return function() {
              return fret.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, wport], null))
            }
          }(i, val, idx, port, wport, flag, n, idxs, priority)))
        }() : cljs.core.async.impl.protocols.take_BANG_.call(null, port, cljs.core.async.alt_handler.call(null, flag, function(i, idx, port, wport, flag, n, idxs, priority) {
          return function(p1__426048_SHARP_) {
            return fret.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [p1__426048_SHARP_, port], null))
          }
        }(i, idx, port, wport, flag, n, idxs, priority)));
        if(cljs.core.truth_(vbox)) {
          return cljs.core.async.impl.channels.box.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.deref.call(null, vbox), function() {
            var or__3285__auto__ = wport;
            if(cljs.core.truth_(or__3285__auto__)) {
              return or__3285__auto__
            }else {
              return port
            }
          }()], null))
        }else {
          var G__426049 = i + 1;
          i = G__426049;
          continue
        }
      }else {
        return null
      }
      break
    }
  }();
  var or__3285__auto__ = ret;
  if(cljs.core.truth_(or__3285__auto__)) {
    return or__3285__auto__
  }else {
    if(cljs.core.contains_QMARK_.call(null, opts, new cljs.core.Keyword(null, "default", "default", 2558708147))) {
      var temp__4092__auto__ = function() {
        var and__3273__auto__ = cljs.core.async.impl.protocols.active_QMARK_.call(null, flag);
        if(cljs.core.truth_(and__3273__auto__)) {
          return cljs.core.async.impl.protocols.commit.call(null, flag)
        }else {
          return and__3273__auto__
        }
      }();
      if(cljs.core.truth_(temp__4092__auto__)) {
        var got = temp__4092__auto__;
        return cljs.core.async.impl.channels.box.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(new cljs.core.Keyword(null, "default", "default", 2558708147)).cljs$core$IFn$_invoke$arity$1(opts), new cljs.core.Keyword(null, "default", "default", 2558708147)], null))
      }else {
        return null
      }
    }else {
      return null
    }
  }
};
cljs.core.async.alts_BANG_ = function() {
  var alts_BANG___delegate = function(ports, p__426050) {
    var map__426052 = p__426050;
    var map__426052__$1 = cljs.core.seq_QMARK_.call(null, map__426052) ? cljs.core.apply.call(null, cljs.core.hash_map, map__426052) : map__426052;
    var opts = map__426052__$1;
    if(null) {
      return null
    }else {
      throw new Error([cljs.core.str("Assert failed: "), cljs.core.str("alts! used not in (go ...) block"), cljs.core.str("\n"), cljs.core.str(cljs.core.pr_str.call(null, null))].join(""));
    }
  };
  var alts_BANG_ = function(ports, var_args) {
    var p__426050 = null;
    if(arguments.length > 1) {
      p__426050 = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
    }
    return alts_BANG___delegate.call(this, ports, p__426050)
  };
  alts_BANG_.cljs$lang$maxFixedArity = 1;
  alts_BANG_.cljs$lang$applyTo = function(arglist__426053) {
    var ports = cljs.core.first(arglist__426053);
    var p__426050 = cljs.core.rest(arglist__426053);
    return alts_BANG___delegate(ports, p__426050)
  };
  alts_BANG_.cljs$core$IFn$_invoke$arity$variadic = alts_BANG___delegate;
  return alts_BANG_
}();
cljs.core.async.map_LT_ = function map_LT_(f, ch) {
  if(typeof cljs.core.async.t426061 !== "undefined") {
  }else {
    cljs.core.async.t426061 = function(ch, f, map_LT_, meta426062) {
      this.ch = ch;
      this.f = f;
      this.map_LT_ = map_LT_;
      this.meta426062 = meta426062;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216
    };
    cljs.core.async.t426061.cljs$lang$type = true;
    cljs.core.async.t426061.cljs$lang$ctorStr = "cljs.core.async/t426061";
    cljs.core.async.t426061.cljs$lang$ctorPrWriter = function(this__3829__auto__, writer__3830__auto__, opt__3831__auto__) {
      return cljs.core._write.call(null, writer__3830__auto__, "cljs.core.async/t426061")
    };
    cljs.core.async.t426061.prototype.cljs$core$async$impl$protocols$WritePort$ = true;
    cljs.core.async.t426061.prototype.cljs$core$async$impl$protocols$WritePort$put_BANG_$arity$3 = function(_, val, fn0) {
      var self__ = this;
      var ___$1 = this;
      return cljs.core.async.impl.protocols.put_BANG_.call(null, self__.ch, val, fn0)
    };
    cljs.core.async.t426061.prototype.cljs$core$async$impl$protocols$ReadPort$ = true;
    cljs.core.async.t426061.prototype.cljs$core$async$impl$protocols$ReadPort$take_BANG_$arity$2 = function(_, fn1) {
      var self__ = this;
      var ___$1 = this;
      var ret = cljs.core.async.impl.protocols.take_BANG_.call(null, self__.ch, function() {
        if(typeof cljs.core.async.t426064 !== "undefined") {
        }else {
          cljs.core.async.t426064 = function(fn1, _, meta426062, ch, f, map_LT_, meta426065) {
            this.fn1 = fn1;
            this._ = _;
            this.meta426062 = meta426062;
            this.ch = ch;
            this.f = f;
            this.map_LT_ = map_LT_;
            this.meta426065 = meta426065;
            this.cljs$lang$protocol_mask$partition1$ = 0;
            this.cljs$lang$protocol_mask$partition0$ = 393216
          };
          cljs.core.async.t426064.cljs$lang$type = true;
          cljs.core.async.t426064.cljs$lang$ctorStr = "cljs.core.async/t426064";
          cljs.core.async.t426064.cljs$lang$ctorPrWriter = function(this__3829__auto__, writer__3830__auto__, opt__3831__auto__) {
            return cljs.core._write.call(null, writer__3830__auto__, "cljs.core.async/t426064")
          };
          cljs.core.async.t426064.prototype.cljs$core$async$impl$protocols$Handler$ = true;
          cljs.core.async.t426064.prototype.cljs$core$async$impl$protocols$Handler$active_QMARK_$arity$1 = function(___$3) {
            var self__ = this;
            var ___$4 = this;
            return cljs.core.async.impl.protocols.active_QMARK_.call(null, self__.fn1)
          };
          cljs.core.async.t426064.prototype.cljs$core$async$impl$protocols$Handler$lock_id$arity$1 = function(___$3) {
            var self__ = this;
            var ___$4 = this;
            return cljs.core.async.impl.protocols.lock_id.call(null, self__.fn1)
          };
          cljs.core.async.t426064.prototype.cljs$core$async$impl$protocols$Handler$commit$arity$1 = function(___$3) {
            var self__ = this;
            var ___$4 = this;
            var f1 = cljs.core.async.impl.protocols.commit.call(null, self__.fn1);
            return function(f1, ___$4) {
              return function(p1__426054_SHARP_) {
                return f1.call(null, p1__426054_SHARP_ == null ? null : self__.f.call(null, p1__426054_SHARP_))
              }
            }(f1, ___$4)
          };
          cljs.core.async.t426064.prototype.cljs$core$IMeta$_meta$arity$1 = function(_426066) {
            var self__ = this;
            var _426066__$1 = this;
            return self__.meta426065
          };
          cljs.core.async.t426064.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_426066, meta426065__$1) {
            var self__ = this;
            var _426066__$1 = this;
            return new cljs.core.async.t426064(self__.fn1, self__._, self__.meta426062, self__.ch, self__.f, self__.map_LT_, meta426065__$1)
          };
          cljs.core.async.__GT_t426064 = function __GT_t426064(fn1__$1, ___$2, meta426062__$1, ch__$2, f__$2, map_LT___$2, meta426065) {
            return new cljs.core.async.t426064(fn1__$1, ___$2, meta426062__$1, ch__$2, f__$2, map_LT___$2, meta426065)
          }
        }
        return new cljs.core.async.t426064(fn1, ___$1, self__.meta426062, self__.ch, self__.f, self__.map_LT_, null)
      }());
      if(cljs.core.truth_(function() {
        var and__3273__auto__ = ret;
        if(cljs.core.truth_(and__3273__auto__)) {
          return!(cljs.core.deref.call(null, ret) == null)
        }else {
          return and__3273__auto__
        }
      }())) {
        return cljs.core.async.impl.channels.box.call(null, self__.f.call(null, cljs.core.deref.call(null, ret)))
      }else {
        return ret
      }
    };
    cljs.core.async.t426061.prototype.cljs$core$async$impl$protocols$Channel$ = true;
    cljs.core.async.t426061.prototype.cljs$core$async$impl$protocols$Channel$close_BANG_$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return cljs.core.async.impl.protocols.close_BANG_.call(null, self__.ch)
    };
    cljs.core.async.t426061.prototype.cljs$core$IMeta$_meta$arity$1 = function(_426063) {
      var self__ = this;
      var _426063__$1 = this;
      return self__.meta426062
    };
    cljs.core.async.t426061.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_426063, meta426062__$1) {
      var self__ = this;
      var _426063__$1 = this;
      return new cljs.core.async.t426061(self__.ch, self__.f, self__.map_LT_, meta426062__$1)
    };
    cljs.core.async.__GT_t426061 = function __GT_t426061(ch__$1, f__$1, map_LT___$1, meta426062) {
      return new cljs.core.async.t426061(ch__$1, f__$1, map_LT___$1, meta426062)
    }
  }
  return new cljs.core.async.t426061(ch, f, map_LT_, null)
};
cljs.core.async.map_GT_ = function map_GT_(f, ch) {
  if(typeof cljs.core.async.t426070 !== "undefined") {
  }else {
    cljs.core.async.t426070 = function(ch, f, map_GT_, meta426071) {
      this.ch = ch;
      this.f = f;
      this.map_GT_ = map_GT_;
      this.meta426071 = meta426071;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216
    };
    cljs.core.async.t426070.cljs$lang$type = true;
    cljs.core.async.t426070.cljs$lang$ctorStr = "cljs.core.async/t426070";
    cljs.core.async.t426070.cljs$lang$ctorPrWriter = function(this__3829__auto__, writer__3830__auto__, opt__3831__auto__) {
      return cljs.core._write.call(null, writer__3830__auto__, "cljs.core.async/t426070")
    };
    cljs.core.async.t426070.prototype.cljs$core$async$impl$protocols$WritePort$ = true;
    cljs.core.async.t426070.prototype.cljs$core$async$impl$protocols$WritePort$put_BANG_$arity$3 = function(_, val, fn0) {
      var self__ = this;
      var ___$1 = this;
      return cljs.core.async.impl.protocols.put_BANG_.call(null, self__.ch, self__.f.call(null, val), fn0)
    };
    cljs.core.async.t426070.prototype.cljs$core$async$impl$protocols$ReadPort$ = true;
    cljs.core.async.t426070.prototype.cljs$core$async$impl$protocols$ReadPort$take_BANG_$arity$2 = function(_, fn1) {
      var self__ = this;
      var ___$1 = this;
      return cljs.core.async.impl.protocols.take_BANG_.call(null, self__.ch, fn1)
    };
    cljs.core.async.t426070.prototype.cljs$core$async$impl$protocols$Channel$ = true;
    cljs.core.async.t426070.prototype.cljs$core$async$impl$protocols$Channel$close_BANG_$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return cljs.core.async.impl.protocols.close_BANG_.call(null, self__.ch)
    };
    cljs.core.async.t426070.prototype.cljs$core$IMeta$_meta$arity$1 = function(_426072) {
      var self__ = this;
      var _426072__$1 = this;
      return self__.meta426071
    };
    cljs.core.async.t426070.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_426072, meta426071__$1) {
      var self__ = this;
      var _426072__$1 = this;
      return new cljs.core.async.t426070(self__.ch, self__.f, self__.map_GT_, meta426071__$1)
    };
    cljs.core.async.__GT_t426070 = function __GT_t426070(ch__$1, f__$1, map_GT___$1, meta426071) {
      return new cljs.core.async.t426070(ch__$1, f__$1, map_GT___$1, meta426071)
    }
  }
  return new cljs.core.async.t426070(ch, f, map_GT_, null)
};
cljs.core.async.filter_GT_ = function filter_GT_(p, ch) {
  if(typeof cljs.core.async.t426076 !== "undefined") {
  }else {
    cljs.core.async.t426076 = function(ch, p, filter_GT_, meta426077) {
      this.ch = ch;
      this.p = p;
      this.filter_GT_ = filter_GT_;
      this.meta426077 = meta426077;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216
    };
    cljs.core.async.t426076.cljs$lang$type = true;
    cljs.core.async.t426076.cljs$lang$ctorStr = "cljs.core.async/t426076";
    cljs.core.async.t426076.cljs$lang$ctorPrWriter = function(this__3829__auto__, writer__3830__auto__, opt__3831__auto__) {
      return cljs.core._write.call(null, writer__3830__auto__, "cljs.core.async/t426076")
    };
    cljs.core.async.t426076.prototype.cljs$core$async$impl$protocols$WritePort$ = true;
    cljs.core.async.t426076.prototype.cljs$core$async$impl$protocols$WritePort$put_BANG_$arity$3 = function(_, val, fn0) {
      var self__ = this;
      var ___$1 = this;
      if(cljs.core.truth_(self__.p.call(null, val))) {
        return cljs.core.async.impl.protocols.put_BANG_.call(null, self__.ch, val, fn0)
      }else {
        return cljs.core.async.impl.channels.box.call(null, null)
      }
    };
    cljs.core.async.t426076.prototype.cljs$core$async$impl$protocols$ReadPort$ = true;
    cljs.core.async.t426076.prototype.cljs$core$async$impl$protocols$ReadPort$take_BANG_$arity$2 = function(_, fn1) {
      var self__ = this;
      var ___$1 = this;
      return cljs.core.async.impl.protocols.take_BANG_.call(null, self__.ch, fn1)
    };
    cljs.core.async.t426076.prototype.cljs$core$async$impl$protocols$Channel$ = true;
    cljs.core.async.t426076.prototype.cljs$core$async$impl$protocols$Channel$close_BANG_$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return cljs.core.async.impl.protocols.close_BANG_.call(null, self__.ch)
    };
    cljs.core.async.t426076.prototype.cljs$core$IMeta$_meta$arity$1 = function(_426078) {
      var self__ = this;
      var _426078__$1 = this;
      return self__.meta426077
    };
    cljs.core.async.t426076.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_426078, meta426077__$1) {
      var self__ = this;
      var _426078__$1 = this;
      return new cljs.core.async.t426076(self__.ch, self__.p, self__.filter_GT_, meta426077__$1)
    };
    cljs.core.async.__GT_t426076 = function __GT_t426076(ch__$1, p__$1, filter_GT___$1, meta426077) {
      return new cljs.core.async.t426076(ch__$1, p__$1, filter_GT___$1, meta426077)
    }
  }
  return new cljs.core.async.t426076(ch, p, filter_GT_, null)
};
cljs.core.async.remove_GT_ = function remove_GT_(p, ch) {
  return cljs.core.async.filter_GT_.call(null, cljs.core.complement.call(null, p), ch)
};
cljs.core.async.filter_LT_ = function() {
  var filter_LT_ = null;
  var filter_LT___2 = function(p, ch) {
    return filter_LT_.call(null, p, ch, null)
  };
  var filter_LT___3 = function(p, ch, buf_or_n) {
    var out = cljs.core.async.chan.call(null, buf_or_n);
    var c__5728__auto___426153 = cljs.core.async.chan.call(null, 1);
    cljs.core.async.impl.dispatch.run.call(null, function() {
      var f__5729__auto__ = function() {
        var switch__5678__auto__ = function(state_426136) {
          var state_val_426137 = state_426136[1];
          if(state_val_426137 === 1) {
            var state_426136__$1 = state_426136;
            var statearr_426138_426154 = state_426136__$1;
            statearr_426138_426154[2] = null;
            statearr_426138_426154[1] = 2;
            return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
          }else {
            if(state_val_426137 === 2) {
              var state_426136__$1 = state_426136;
              return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_426136__$1, 4, ch)
            }else {
              if(state_val_426137 === 3) {
                var inst_426134 = state_426136[2];
                var state_426136__$1 = state_426136;
                return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_426136__$1, inst_426134)
              }else {
                if(state_val_426137 === 4) {
                  var inst_426118 = state_426136[5];
                  var inst_426118__$1 = state_426136[2];
                  var inst_426119 = inst_426118__$1 == null;
                  var state_426136__$1 = function() {
                    var statearr_426139 = state_426136;
                    statearr_426139[5] = inst_426118__$1;
                    return statearr_426139
                  }();
                  if(cljs.core.truth_(inst_426119)) {
                    var statearr_426140_426155 = state_426136__$1;
                    statearr_426140_426155[1] = 5
                  }else {
                    var statearr_426141_426156 = state_426136__$1;
                    statearr_426141_426156[1] = 6
                  }
                  return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                }else {
                  if(state_val_426137 === 5) {
                    var inst_426121 = cljs.core.async.close_BANG_.call(null, out);
                    var state_426136__$1 = state_426136;
                    var statearr_426142_426157 = state_426136__$1;
                    statearr_426142_426157[2] = inst_426121;
                    statearr_426142_426157[1] = 7;
                    return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                  }else {
                    if(state_val_426137 === 6) {
                      var inst_426118 = state_426136[5];
                      var inst_426123 = p.call(null, inst_426118);
                      var state_426136__$1 = state_426136;
                      if(cljs.core.truth_(inst_426123)) {
                        var statearr_426143_426158 = state_426136__$1;
                        statearr_426143_426158[1] = 8
                      }else {
                        var statearr_426144_426159 = state_426136__$1;
                        statearr_426144_426159[1] = 9
                      }
                      return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                    }else {
                      if(state_val_426137 === 7) {
                        var inst_426132 = state_426136[2];
                        var state_426136__$1 = state_426136;
                        var statearr_426145_426160 = state_426136__$1;
                        statearr_426145_426160[2] = inst_426132;
                        statearr_426145_426160[1] = 3;
                        return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                      }else {
                        if(state_val_426137 === 8) {
                          var inst_426118 = state_426136[5];
                          var state_426136__$1 = state_426136;
                          return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_426136__$1, 11, out, inst_426118)
                        }else {
                          if(state_val_426137 === 9) {
                            var state_426136__$1 = state_426136;
                            var statearr_426146_426161 = state_426136__$1;
                            statearr_426146_426161[2] = null;
                            statearr_426146_426161[1] = 10;
                            return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                          }else {
                            if(state_val_426137 === 10) {
                              var inst_426129 = state_426136[2];
                              var state_426136__$1 = function() {
                                var statearr_426147 = state_426136;
                                statearr_426147[6] = inst_426129;
                                return statearr_426147
                              }();
                              var statearr_426148_426162 = state_426136__$1;
                              statearr_426148_426162[2] = null;
                              statearr_426148_426162[1] = 2;
                              return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                            }else {
                              if(state_val_426137 === 11) {
                                var inst_426126 = state_426136[2];
                                var state_426136__$1 = state_426136;
                                var statearr_426149_426163 = state_426136__$1;
                                statearr_426149_426163[2] = inst_426126;
                                statearr_426149_426163[1] = 10;
                                return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                              }else {
                                return null
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        };
        return function(switch__5678__auto__) {
          return function() {
            var state_machine__5679__auto__ = null;
            var state_machine__5679__auto____0 = function() {
              var statearr_426151 = new Array(7);
              statearr_426151[0] = state_machine__5679__auto__;
              statearr_426151[1] = 1;
              return statearr_426151
            };
            var state_machine__5679__auto____1 = function(state_426136) {
              while(true) {
                var result__5680__auto__ = switch__5678__auto__.call(null, state_426136);
                if(cljs.core.keyword_identical_QMARK_.call(null, result__5680__auto__, new cljs.core.Keyword(null, "recur", "recur", 1122293407))) {
                  continue
                }else {
                  return result__5680__auto__
                }
                break
              }
            };
            state_machine__5679__auto__ = function(state_426136) {
              switch(arguments.length) {
                case 0:
                  return state_machine__5679__auto____0.call(this);
                case 1:
                  return state_machine__5679__auto____1.call(this, state_426136)
              }
              throw new Error("Invalid arity: " + arguments.length);
            };
            state_machine__5679__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__5679__auto____0;
            state_machine__5679__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__5679__auto____1;
            return state_machine__5679__auto__
          }()
        }(switch__5678__auto__)
      }();
      var state__5730__auto__ = function() {
        var statearr_426152 = f__5729__auto__.call(null);
        statearr_426152[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__5728__auto___426153;
        return statearr_426152
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__5730__auto__)
    });
    return out
  };
  filter_LT_ = function(p, ch, buf_or_n) {
    switch(arguments.length) {
      case 2:
        return filter_LT___2.call(this, p, ch);
      case 3:
        return filter_LT___3.call(this, p, ch, buf_or_n)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  filter_LT_.cljs$core$IFn$_invoke$arity$2 = filter_LT___2;
  filter_LT_.cljs$core$IFn$_invoke$arity$3 = filter_LT___3;
  return filter_LT_
}();
cljs.core.async.remove_LT_ = function() {
  var remove_LT_ = null;
  var remove_LT___2 = function(p, ch) {
    return remove_LT_.call(null, p, ch, null)
  };
  var remove_LT___3 = function(p, ch, buf_or_n) {
    return cljs.core.async.filter_LT_.call(null, cljs.core.complement.call(null, p), ch, buf_or_n)
  };
  remove_LT_ = function(p, ch, buf_or_n) {
    switch(arguments.length) {
      case 2:
        return remove_LT___2.call(this, p, ch);
      case 3:
        return remove_LT___3.call(this, p, ch, buf_or_n)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  remove_LT_.cljs$core$IFn$_invoke$arity$2 = remove_LT___2;
  remove_LT_.cljs$core$IFn$_invoke$arity$3 = remove_LT___3;
  return remove_LT_
}();
cljs.core.async.mapcat_STAR_ = function mapcat_STAR_(f, in$, out) {
  var c__5728__auto__ = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function() {
    var f__5729__auto__ = function() {
      var switch__5678__auto__ = function(state_426311) {
        var state_val_426312 = state_426311[1];
        if(state_val_426312 === 1) {
          var state_426311__$1 = state_426311;
          var statearr_426313_426346 = state_426311__$1;
          statearr_426313_426346[2] = null;
          statearr_426313_426346[1] = 2;
          return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
        }else {
          if(state_val_426312 === 2) {
            var state_426311__$1 = state_426311;
            return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_426311__$1, 4, in$)
          }else {
            if(state_val_426312 === 3) {
              var inst_426309 = state_426311[2];
              var state_426311__$1 = state_426311;
              return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_426311__$1, inst_426309)
            }else {
              if(state_val_426312 === 4) {
                var inst_426257 = state_426311[5];
                var inst_426257__$1 = state_426311[2];
                var inst_426258 = inst_426257__$1 == null;
                var state_426311__$1 = function() {
                  var statearr_426314 = state_426311;
                  statearr_426314[5] = inst_426257__$1;
                  return statearr_426314
                }();
                if(cljs.core.truth_(inst_426258)) {
                  var statearr_426315_426347 = state_426311__$1;
                  statearr_426315_426347[1] = 5
                }else {
                  var statearr_426316_426348 = state_426311__$1;
                  statearr_426316_426348[1] = 6
                }
                return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
              }else {
                if(state_val_426312 === 5) {
                  var inst_426260 = cljs.core.async.close_BANG_.call(null, out);
                  var state_426311__$1 = state_426311;
                  var statearr_426317_426349 = state_426311__$1;
                  statearr_426317_426349[2] = inst_426260;
                  statearr_426317_426349[1] = 7;
                  return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                }else {
                  if(state_val_426312 === 6) {
                    var inst_426257 = state_426311[5];
                    var inst_426262 = f.call(null, inst_426257);
                    var inst_426267 = cljs.core.seq.call(null, inst_426262);
                    var inst_426268 = inst_426267;
                    var inst_426269 = null;
                    var inst_426270 = 0;
                    var inst_426271 = 0;
                    var state_426311__$1 = function() {
                      var statearr_426318 = state_426311;
                      statearr_426318[6] = inst_426269;
                      statearr_426318[7] = inst_426270;
                      statearr_426318[8] = inst_426271;
                      statearr_426318[9] = inst_426268;
                      return statearr_426318
                    }();
                    var statearr_426319_426350 = state_426311__$1;
                    statearr_426319_426350[2] = null;
                    statearr_426319_426350[1] = 8;
                    return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                  }else {
                    if(state_val_426312 === 7) {
                      var inst_426307 = state_426311[2];
                      var state_426311__$1 = state_426311;
                      var statearr_426320_426351 = state_426311__$1;
                      statearr_426320_426351[2] = inst_426307;
                      statearr_426320_426351[1] = 3;
                      return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                    }else {
                      if(state_val_426312 === 8) {
                        var inst_426270 = state_426311[7];
                        var inst_426271 = state_426311[8];
                        var inst_426273 = inst_426271 < inst_426270;
                        var inst_426274 = inst_426273;
                        var state_426311__$1 = state_426311;
                        if(cljs.core.truth_(inst_426274)) {
                          var statearr_426321_426352 = state_426311__$1;
                          statearr_426321_426352[1] = 10
                        }else {
                          var statearr_426322_426353 = state_426311__$1;
                          statearr_426322_426353[1] = 11
                        }
                        return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                      }else {
                        if(state_val_426312 === 9) {
                          var inst_426304 = state_426311[2];
                          var state_426311__$1 = function() {
                            var statearr_426323 = state_426311;
                            statearr_426323[10] = inst_426304;
                            return statearr_426323
                          }();
                          var statearr_426324_426354 = state_426311__$1;
                          statearr_426324_426354[2] = null;
                          statearr_426324_426354[1] = 2;
                          return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                        }else {
                          if(state_val_426312 === 10) {
                            var inst_426269 = state_426311[6];
                            var inst_426271 = state_426311[8];
                            var inst_426276 = cljs.core._nth.call(null, inst_426269, inst_426271);
                            var state_426311__$1 = state_426311;
                            return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_426311__$1, 13, out, inst_426276)
                          }else {
                            if(state_val_426312 === 11) {
                              var inst_426282 = state_426311[11];
                              var inst_426268 = state_426311[9];
                              var inst_426282__$1 = cljs.core.seq.call(null, inst_426268);
                              var state_426311__$1 = function() {
                                var statearr_426328 = state_426311;
                                statearr_426328[11] = inst_426282__$1;
                                return statearr_426328
                              }();
                              if(inst_426282__$1) {
                                var statearr_426329_426355 = state_426311__$1;
                                statearr_426329_426355[1] = 14
                              }else {
                                var statearr_426330_426356 = state_426311__$1;
                                statearr_426330_426356[1] = 15
                              }
                              return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                            }else {
                              if(state_val_426312 === 12) {
                                var inst_426302 = state_426311[2];
                                var state_426311__$1 = state_426311;
                                var statearr_426331_426357 = state_426311__$1;
                                statearr_426331_426357[2] = inst_426302;
                                statearr_426331_426357[1] = 9;
                                return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                              }else {
                                if(state_val_426312 === 13) {
                                  var inst_426269 = state_426311[6];
                                  var inst_426270 = state_426311[7];
                                  var inst_426271 = state_426311[8];
                                  var inst_426268 = state_426311[9];
                                  var inst_426278 = state_426311[2];
                                  var inst_426279 = inst_426271 + 1;
                                  var tmp426325 = inst_426269;
                                  var tmp426326 = inst_426270;
                                  var tmp426327 = inst_426268;
                                  var inst_426268__$1 = tmp426327;
                                  var inst_426269__$1 = tmp426325;
                                  var inst_426270__$1 = tmp426326;
                                  var inst_426271__$1 = inst_426279;
                                  var state_426311__$1 = function() {
                                    var statearr_426332 = state_426311;
                                    statearr_426332[6] = inst_426269__$1;
                                    statearr_426332[7] = inst_426270__$1;
                                    statearr_426332[8] = inst_426271__$1;
                                    statearr_426332[9] = inst_426268__$1;
                                    statearr_426332[12] = inst_426278;
                                    return statearr_426332
                                  }();
                                  var statearr_426333_426358 = state_426311__$1;
                                  statearr_426333_426358[2] = null;
                                  statearr_426333_426358[1] = 8;
                                  return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                                }else {
                                  if(state_val_426312 === 14) {
                                    var inst_426282 = state_426311[11];
                                    var inst_426284 = cljs.core.chunked_seq_QMARK_.call(null, inst_426282);
                                    var state_426311__$1 = state_426311;
                                    if(inst_426284) {
                                      var statearr_426334_426359 = state_426311__$1;
                                      statearr_426334_426359[1] = 17
                                    }else {
                                      var statearr_426335_426360 = state_426311__$1;
                                      statearr_426335_426360[1] = 18
                                    }
                                    return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                                  }else {
                                    if(state_val_426312 === 15) {
                                      var state_426311__$1 = state_426311;
                                      var statearr_426336_426361 = state_426311__$1;
                                      statearr_426336_426361[2] = null;
                                      statearr_426336_426361[1] = 16;
                                      return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                                    }else {
                                      if(state_val_426312 === 16) {
                                        var inst_426300 = state_426311[2];
                                        var state_426311__$1 = state_426311;
                                        var statearr_426337_426362 = state_426311__$1;
                                        statearr_426337_426362[2] = inst_426300;
                                        statearr_426337_426362[1] = 12;
                                        return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                                      }else {
                                        if(state_val_426312 === 17) {
                                          var inst_426282 = state_426311[11];
                                          var inst_426286 = cljs.core.chunk_first.call(null, inst_426282);
                                          var inst_426287 = cljs.core.chunk_rest.call(null, inst_426282);
                                          var inst_426288 = cljs.core.count.call(null, inst_426286);
                                          var inst_426268 = inst_426287;
                                          var inst_426269 = inst_426286;
                                          var inst_426270 = inst_426288;
                                          var inst_426271 = 0;
                                          var state_426311__$1 = function() {
                                            var statearr_426338 = state_426311;
                                            statearr_426338[6] = inst_426269;
                                            statearr_426338[7] = inst_426270;
                                            statearr_426338[8] = inst_426271;
                                            statearr_426338[9] = inst_426268;
                                            return statearr_426338
                                          }();
                                          var statearr_426339_426363 = state_426311__$1;
                                          statearr_426339_426363[2] = null;
                                          statearr_426339_426363[1] = 8;
                                          return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                                        }else {
                                          if(state_val_426312 === 18) {
                                            var inst_426282 = state_426311[11];
                                            var inst_426291 = cljs.core.first.call(null, inst_426282);
                                            var state_426311__$1 = state_426311;
                                            return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_426311__$1, 20, out, inst_426291)
                                          }else {
                                            if(state_val_426312 === 19) {
                                              var inst_426297 = state_426311[2];
                                              var state_426311__$1 = state_426311;
                                              var statearr_426340_426364 = state_426311__$1;
                                              statearr_426340_426364[2] = inst_426297;
                                              statearr_426340_426364[1] = 16;
                                              return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                                            }else {
                                              if(state_val_426312 === 20) {
                                                var inst_426282 = state_426311[11];
                                                var inst_426293 = state_426311[2];
                                                var inst_426294 = cljs.core.next.call(null, inst_426282);
                                                var inst_426268 = inst_426294;
                                                var inst_426269 = null;
                                                var inst_426270 = 0;
                                                var inst_426271 = 0;
                                                var state_426311__$1 = function() {
                                                  var statearr_426341 = state_426311;
                                                  statearr_426341[6] = inst_426269;
                                                  statearr_426341[7] = inst_426270;
                                                  statearr_426341[8] = inst_426271;
                                                  statearr_426341[9] = inst_426268;
                                                  statearr_426341[13] = inst_426293;
                                                  return statearr_426341
                                                }();
                                                var statearr_426342_426365 = state_426311__$1;
                                                statearr_426342_426365[2] = null;
                                                statearr_426342_426365[1] = 8;
                                                return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                                              }else {
                                                return null
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      };
      return function(switch__5678__auto__) {
        return function() {
          var state_machine__5679__auto__ = null;
          var state_machine__5679__auto____0 = function() {
            var statearr_426344 = new Array(14);
            statearr_426344[0] = state_machine__5679__auto__;
            statearr_426344[1] = 1;
            return statearr_426344
          };
          var state_machine__5679__auto____1 = function(state_426311) {
            while(true) {
              var result__5680__auto__ = switch__5678__auto__.call(null, state_426311);
              if(cljs.core.keyword_identical_QMARK_.call(null, result__5680__auto__, new cljs.core.Keyword(null, "recur", "recur", 1122293407))) {
                continue
              }else {
                return result__5680__auto__
              }
              break
            }
          };
          state_machine__5679__auto__ = function(state_426311) {
            switch(arguments.length) {
              case 0:
                return state_machine__5679__auto____0.call(this);
              case 1:
                return state_machine__5679__auto____1.call(this, state_426311)
            }
            throw new Error("Invalid arity: " + arguments.length);
          };
          state_machine__5679__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__5679__auto____0;
          state_machine__5679__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__5679__auto____1;
          return state_machine__5679__auto__
        }()
      }(switch__5678__auto__)
    }();
    var state__5730__auto__ = function() {
      var statearr_426345 = f__5729__auto__.call(null);
      statearr_426345[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__5728__auto__;
      return statearr_426345
    }();
    return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__5730__auto__)
  });
  return c__5728__auto__
};
cljs.core.async.mapcat_LT_ = function() {
  var mapcat_LT_ = null;
  var mapcat_LT___2 = function(f, in$) {
    return mapcat_LT_.call(null, f, in$, null)
  };
  var mapcat_LT___3 = function(f, in$, buf_or_n) {
    var out = cljs.core.async.chan.call(null, buf_or_n);
    cljs.core.async.mapcat_STAR_.call(null, f, in$, out);
    return out
  };
  mapcat_LT_ = function(f, in$, buf_or_n) {
    switch(arguments.length) {
      case 2:
        return mapcat_LT___2.call(this, f, in$);
      case 3:
        return mapcat_LT___3.call(this, f, in$, buf_or_n)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  mapcat_LT_.cljs$core$IFn$_invoke$arity$2 = mapcat_LT___2;
  mapcat_LT_.cljs$core$IFn$_invoke$arity$3 = mapcat_LT___3;
  return mapcat_LT_
}();
cljs.core.async.mapcat_GT_ = function() {
  var mapcat_GT_ = null;
  var mapcat_GT___2 = function(f, out) {
    return mapcat_GT_.call(null, f, out, null)
  };
  var mapcat_GT___3 = function(f, out, buf_or_n) {
    var in$ = cljs.core.async.chan.call(null, buf_or_n);
    cljs.core.async.mapcat_STAR_.call(null, f, in$, out);
    return in$
  };
  mapcat_GT_ = function(f, out, buf_or_n) {
    switch(arguments.length) {
      case 2:
        return mapcat_GT___2.call(this, f, out);
      case 3:
        return mapcat_GT___3.call(this, f, out, buf_or_n)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  mapcat_GT_.cljs$core$IFn$_invoke$arity$2 = mapcat_GT___2;
  mapcat_GT_.cljs$core$IFn$_invoke$arity$3 = mapcat_GT___3;
  return mapcat_GT_
}();
cljs.core.async.pipe = function() {
  var pipe = null;
  var pipe__2 = function(from, to) {
    return pipe.call(null, from, to, true)
  };
  var pipe__3 = function(from, to, close_QMARK_) {
    var c__5728__auto___426438 = cljs.core.async.chan.call(null, 1);
    cljs.core.async.impl.dispatch.run.call(null, function() {
      var f__5729__auto__ = function() {
        var switch__5678__auto__ = function(state_426421) {
          var state_val_426422 = state_426421[1];
          if(state_val_426422 === 1) {
            var state_426421__$1 = state_426421;
            var statearr_426423_426439 = state_426421__$1;
            statearr_426423_426439[2] = null;
            statearr_426423_426439[1] = 2;
            return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
          }else {
            if(state_val_426422 === 2) {
              var state_426421__$1 = state_426421;
              return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_426421__$1, 4, from)
            }else {
              if(state_val_426422 === 3) {
                var inst_426419 = state_426421[2];
                var state_426421__$1 = state_426421;
                return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_426421__$1, inst_426419)
              }else {
                if(state_val_426422 === 4) {
                  var inst_426404 = state_426421[5];
                  var inst_426404__$1 = state_426421[2];
                  var inst_426405 = inst_426404__$1 == null;
                  var state_426421__$1 = function() {
                    var statearr_426424 = state_426421;
                    statearr_426424[5] = inst_426404__$1;
                    return statearr_426424
                  }();
                  if(cljs.core.truth_(inst_426405)) {
                    var statearr_426425_426440 = state_426421__$1;
                    statearr_426425_426440[1] = 5
                  }else {
                    var statearr_426426_426441 = state_426421__$1;
                    statearr_426426_426441[1] = 6
                  }
                  return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                }else {
                  if(state_val_426422 === 5) {
                    var state_426421__$1 = state_426421;
                    if(cljs.core.truth_(close_QMARK_)) {
                      var statearr_426427_426442 = state_426421__$1;
                      statearr_426427_426442[1] = 8
                    }else {
                      var statearr_426428_426443 = state_426421__$1;
                      statearr_426428_426443[1] = 9
                    }
                    return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                  }else {
                    if(state_val_426422 === 6) {
                      var inst_426404 = state_426421[5];
                      var state_426421__$1 = state_426421;
                      return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_426421__$1, 11, to, inst_426404)
                    }else {
                      if(state_val_426422 === 7) {
                        var inst_426417 = state_426421[2];
                        var state_426421__$1 = state_426421;
                        var statearr_426429_426444 = state_426421__$1;
                        statearr_426429_426444[2] = inst_426417;
                        statearr_426429_426444[1] = 3;
                        return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                      }else {
                        if(state_val_426422 === 8) {
                          var inst_426408 = cljs.core.async.close_BANG_.call(null, to);
                          var state_426421__$1 = state_426421;
                          var statearr_426430_426445 = state_426421__$1;
                          statearr_426430_426445[2] = inst_426408;
                          statearr_426430_426445[1] = 10;
                          return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                        }else {
                          if(state_val_426422 === 9) {
                            var state_426421__$1 = state_426421;
                            var statearr_426431_426446 = state_426421__$1;
                            statearr_426431_426446[2] = null;
                            statearr_426431_426446[1] = 10;
                            return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                          }else {
                            if(state_val_426422 === 10) {
                              var inst_426411 = state_426421[2];
                              var state_426421__$1 = state_426421;
                              var statearr_426432_426447 = state_426421__$1;
                              statearr_426432_426447[2] = inst_426411;
                              statearr_426432_426447[1] = 7;
                              return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                            }else {
                              if(state_val_426422 === 11) {
                                var inst_426414 = state_426421[2];
                                var state_426421__$1 = function() {
                                  var statearr_426433 = state_426421;
                                  statearr_426433[6] = inst_426414;
                                  return statearr_426433
                                }();
                                var statearr_426434_426448 = state_426421__$1;
                                statearr_426434_426448[2] = null;
                                statearr_426434_426448[1] = 2;
                                return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                              }else {
                                return null
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        };
        return function(switch__5678__auto__) {
          return function() {
            var state_machine__5679__auto__ = null;
            var state_machine__5679__auto____0 = function() {
              var statearr_426436 = new Array(7);
              statearr_426436[0] = state_machine__5679__auto__;
              statearr_426436[1] = 1;
              return statearr_426436
            };
            var state_machine__5679__auto____1 = function(state_426421) {
              while(true) {
                var result__5680__auto__ = switch__5678__auto__.call(null, state_426421);
                if(cljs.core.keyword_identical_QMARK_.call(null, result__5680__auto__, new cljs.core.Keyword(null, "recur", "recur", 1122293407))) {
                  continue
                }else {
                  return result__5680__auto__
                }
                break
              }
            };
            state_machine__5679__auto__ = function(state_426421) {
              switch(arguments.length) {
                case 0:
                  return state_machine__5679__auto____0.call(this);
                case 1:
                  return state_machine__5679__auto____1.call(this, state_426421)
              }
              throw new Error("Invalid arity: " + arguments.length);
            };
            state_machine__5679__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__5679__auto____0;
            state_machine__5679__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__5679__auto____1;
            return state_machine__5679__auto__
          }()
        }(switch__5678__auto__)
      }();
      var state__5730__auto__ = function() {
        var statearr_426437 = f__5729__auto__.call(null);
        statearr_426437[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__5728__auto___426438;
        return statearr_426437
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__5730__auto__)
    });
    return to
  };
  pipe = function(from, to, close_QMARK_) {
    switch(arguments.length) {
      case 2:
        return pipe__2.call(this, from, to);
      case 3:
        return pipe__3.call(this, from, to, close_QMARK_)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  pipe.cljs$core$IFn$_invoke$arity$2 = pipe__2;
  pipe.cljs$core$IFn$_invoke$arity$3 = pipe__3;
  return pipe
}();
cljs.core.async.split = function() {
  var split = null;
  var split__2 = function(p, ch) {
    return split.call(null, p, ch, null, null)
  };
  var split__4 = function(p, ch, t_buf_or_n, f_buf_or_n) {
    var tc = cljs.core.async.chan.call(null, t_buf_or_n);
    var fc = cljs.core.async.chan.call(null, f_buf_or_n);
    var c__5728__auto___426527 = cljs.core.async.chan.call(null, 1);
    cljs.core.async.impl.dispatch.run.call(null, function() {
      var f__5729__auto__ = function() {
        var switch__5678__auto__ = function(state_426509) {
          var state_val_426510 = state_426509[1];
          if(state_val_426510 === 1) {
            var state_426509__$1 = state_426509;
            var statearr_426511_426528 = state_426509__$1;
            statearr_426511_426528[2] = null;
            statearr_426511_426528[1] = 2;
            return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
          }else {
            if(state_val_426510 === 2) {
              var state_426509__$1 = state_426509;
              return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_426509__$1, 4, ch)
            }else {
              if(state_val_426510 === 3) {
                var inst_426507 = state_426509[2];
                var state_426509__$1 = state_426509;
                return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_426509__$1, inst_426507)
              }else {
                if(state_val_426510 === 4) {
                  var inst_426490 = state_426509[5];
                  var inst_426490__$1 = state_426509[2];
                  var inst_426491 = inst_426490__$1 == null;
                  var state_426509__$1 = function() {
                    var statearr_426512 = state_426509;
                    statearr_426512[5] = inst_426490__$1;
                    return statearr_426512
                  }();
                  if(cljs.core.truth_(inst_426491)) {
                    var statearr_426513_426529 = state_426509__$1;
                    statearr_426513_426529[1] = 5
                  }else {
                    var statearr_426514_426530 = state_426509__$1;
                    statearr_426514_426530[1] = 6
                  }
                  return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                }else {
                  if(state_val_426510 === 5) {
                    var inst_426493 = cljs.core.async.close_BANG_.call(null, tc);
                    var inst_426494 = cljs.core.async.close_BANG_.call(null, fc);
                    var state_426509__$1 = function() {
                      var statearr_426515 = state_426509;
                      statearr_426515[6] = inst_426493;
                      return statearr_426515
                    }();
                    var statearr_426516_426531 = state_426509__$1;
                    statearr_426516_426531[2] = inst_426494;
                    statearr_426516_426531[1] = 7;
                    return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                  }else {
                    if(state_val_426510 === 6) {
                      var inst_426490 = state_426509[5];
                      var inst_426496 = p.call(null, inst_426490);
                      var state_426509__$1 = state_426509;
                      if(cljs.core.truth_(inst_426496)) {
                        var statearr_426517_426532 = state_426509__$1;
                        statearr_426517_426532[1] = 9
                      }else {
                        var statearr_426518_426533 = state_426509__$1;
                        statearr_426518_426533[1] = 10
                      }
                      return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                    }else {
                      if(state_val_426510 === 7) {
                        var inst_426505 = state_426509[2];
                        var state_426509__$1 = state_426509;
                        var statearr_426519_426534 = state_426509__$1;
                        statearr_426519_426534[2] = inst_426505;
                        statearr_426519_426534[1] = 3;
                        return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                      }else {
                        if(state_val_426510 === 8) {
                          var inst_426502 = state_426509[2];
                          var state_426509__$1 = function() {
                            var statearr_426520 = state_426509;
                            statearr_426520[7] = inst_426502;
                            return statearr_426520
                          }();
                          var statearr_426521_426535 = state_426509__$1;
                          statearr_426521_426535[2] = null;
                          statearr_426521_426535[1] = 2;
                          return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                        }else {
                          if(state_val_426510 === 9) {
                            var state_426509__$1 = state_426509;
                            var statearr_426522_426536 = state_426509__$1;
                            statearr_426522_426536[2] = tc;
                            statearr_426522_426536[1] = 11;
                            return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                          }else {
                            if(state_val_426510 === 10) {
                              var state_426509__$1 = state_426509;
                              var statearr_426523_426537 = state_426509__$1;
                              statearr_426523_426537[2] = fc;
                              statearr_426523_426537[1] = 11;
                              return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                            }else {
                              if(state_val_426510 === 11) {
                                var inst_426490 = state_426509[5];
                                var inst_426500 = state_426509[2];
                                var state_426509__$1 = state_426509;
                                return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_426509__$1, 8, inst_426500, inst_426490)
                              }else {
                                return null
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        };
        return function(switch__5678__auto__) {
          return function() {
            var state_machine__5679__auto__ = null;
            var state_machine__5679__auto____0 = function() {
              var statearr_426525 = new Array(8);
              statearr_426525[0] = state_machine__5679__auto__;
              statearr_426525[1] = 1;
              return statearr_426525
            };
            var state_machine__5679__auto____1 = function(state_426509) {
              while(true) {
                var result__5680__auto__ = switch__5678__auto__.call(null, state_426509);
                if(cljs.core.keyword_identical_QMARK_.call(null, result__5680__auto__, new cljs.core.Keyword(null, "recur", "recur", 1122293407))) {
                  continue
                }else {
                  return result__5680__auto__
                }
                break
              }
            };
            state_machine__5679__auto__ = function(state_426509) {
              switch(arguments.length) {
                case 0:
                  return state_machine__5679__auto____0.call(this);
                case 1:
                  return state_machine__5679__auto____1.call(this, state_426509)
              }
              throw new Error("Invalid arity: " + arguments.length);
            };
            state_machine__5679__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__5679__auto____0;
            state_machine__5679__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__5679__auto____1;
            return state_machine__5679__auto__
          }()
        }(switch__5678__auto__)
      }();
      var state__5730__auto__ = function() {
        var statearr_426526 = f__5729__auto__.call(null);
        statearr_426526[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__5728__auto___426527;
        return statearr_426526
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__5730__auto__)
    });
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [tc, fc], null)
  };
  split = function(p, ch, t_buf_or_n, f_buf_or_n) {
    switch(arguments.length) {
      case 2:
        return split__2.call(this, p, ch);
      case 4:
        return split__4.call(this, p, ch, t_buf_or_n, f_buf_or_n)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  split.cljs$core$IFn$_invoke$arity$2 = split__2;
  split.cljs$core$IFn$_invoke$arity$4 = split__4;
  return split
}();
cljs.core.async.reduce = function reduce(f, init, ch) {
  var c__5728__auto__ = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function() {
    var f__5729__auto__ = function() {
      var switch__5678__auto__ = function(state_426580) {
        var state_val_426581 = state_426580[1];
        if(state_val_426581 === 7) {
          var inst_426576 = state_426580[2];
          var state_426580__$1 = state_426580;
          var statearr_426582_426594 = state_426580__$1;
          statearr_426582_426594[2] = inst_426576;
          statearr_426582_426594[1] = 3;
          return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
        }else {
          if(state_val_426581 === 6) {
            var inst_426569 = state_426580[5];
            var inst_426566 = state_426580[6];
            var inst_426573 = f.call(null, inst_426566, inst_426569);
            var inst_426566__$1 = inst_426573;
            var state_426580__$1 = function() {
              var statearr_426583 = state_426580;
              statearr_426583[6] = inst_426566__$1;
              return statearr_426583
            }();
            var statearr_426584_426595 = state_426580__$1;
            statearr_426584_426595[2] = null;
            statearr_426584_426595[1] = 2;
            return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
          }else {
            if(state_val_426581 === 5) {
              var inst_426566 = state_426580[6];
              var state_426580__$1 = state_426580;
              var statearr_426585_426596 = state_426580__$1;
              statearr_426585_426596[2] = inst_426566;
              statearr_426585_426596[1] = 7;
              return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
            }else {
              if(state_val_426581 === 4) {
                var inst_426569 = state_426580[5];
                var inst_426569__$1 = state_426580[2];
                var inst_426570 = inst_426569__$1 == null;
                var state_426580__$1 = function() {
                  var statearr_426586 = state_426580;
                  statearr_426586[5] = inst_426569__$1;
                  return statearr_426586
                }();
                if(cljs.core.truth_(inst_426570)) {
                  var statearr_426587_426597 = state_426580__$1;
                  statearr_426587_426597[1] = 5
                }else {
                  var statearr_426588_426598 = state_426580__$1;
                  statearr_426588_426598[1] = 6
                }
                return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
              }else {
                if(state_val_426581 === 3) {
                  var inst_426578 = state_426580[2];
                  var state_426580__$1 = state_426580;
                  return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_426580__$1, inst_426578)
                }else {
                  if(state_val_426581 === 2) {
                    var state_426580__$1 = state_426580;
                    return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_426580__$1, 4, ch)
                  }else {
                    if(state_val_426581 === 1) {
                      var inst_426566 = init;
                      var state_426580__$1 = function() {
                        var statearr_426589 = state_426580;
                        statearr_426589[6] = inst_426566;
                        return statearr_426589
                      }();
                      var statearr_426590_426599 = state_426580__$1;
                      statearr_426590_426599[2] = null;
                      statearr_426590_426599[1] = 2;
                      return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                    }else {
                      return null
                    }
                  }
                }
              }
            }
          }
        }
      };
      return function(switch__5678__auto__) {
        return function() {
          var state_machine__5679__auto__ = null;
          var state_machine__5679__auto____0 = function() {
            var statearr_426592 = new Array(7);
            statearr_426592[0] = state_machine__5679__auto__;
            statearr_426592[1] = 1;
            return statearr_426592
          };
          var state_machine__5679__auto____1 = function(state_426580) {
            while(true) {
              var result__5680__auto__ = switch__5678__auto__.call(null, state_426580);
              if(cljs.core.keyword_identical_QMARK_.call(null, result__5680__auto__, new cljs.core.Keyword(null, "recur", "recur", 1122293407))) {
                continue
              }else {
                return result__5680__auto__
              }
              break
            }
          };
          state_machine__5679__auto__ = function(state_426580) {
            switch(arguments.length) {
              case 0:
                return state_machine__5679__auto____0.call(this);
              case 1:
                return state_machine__5679__auto____1.call(this, state_426580)
            }
            throw new Error("Invalid arity: " + arguments.length);
          };
          state_machine__5679__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__5679__auto____0;
          state_machine__5679__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__5679__auto____1;
          return state_machine__5679__auto__
        }()
      }(switch__5678__auto__)
    }();
    var state__5730__auto__ = function() {
      var statearr_426593 = f__5729__auto__.call(null);
      statearr_426593[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__5728__auto__;
      return statearr_426593
    }();
    return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__5730__auto__)
  });
  return c__5728__auto__
};
cljs.core.async.onto_chan = function() {
  var onto_chan = null;
  var onto_chan__2 = function(ch, coll) {
    return onto_chan.call(null, ch, coll, true)
  };
  var onto_chan__3 = function(ch, coll, close_QMARK_) {
    var c__5728__auto__ = cljs.core.async.chan.call(null, 1);
    cljs.core.async.impl.dispatch.run.call(null, function() {
      var f__5729__auto__ = function() {
        var switch__5678__auto__ = function(state_426657) {
          var state_val_426658 = state_426657[1];
          if(state_val_426658 === 1) {
            var inst_426637 = cljs.core.seq.call(null, coll);
            var inst_426638 = inst_426637;
            var state_426657__$1 = function() {
              var statearr_426659 = state_426657;
              statearr_426659[5] = inst_426638;
              return statearr_426659
            }();
            var statearr_426660_426674 = state_426657__$1;
            statearr_426660_426674[2] = null;
            statearr_426660_426674[1] = 2;
            return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
          }else {
            if(state_val_426658 === 2) {
              var inst_426638 = state_426657[5];
              var state_426657__$1 = state_426657;
              if(cljs.core.truth_(inst_426638)) {
                var statearr_426661_426675 = state_426657__$1;
                statearr_426661_426675[1] = 4
              }else {
                var statearr_426662_426676 = state_426657__$1;
                statearr_426662_426676[1] = 5
              }
              return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
            }else {
              if(state_val_426658 === 3) {
                var inst_426655 = state_426657[2];
                var state_426657__$1 = state_426657;
                return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_426657__$1, inst_426655)
              }else {
                if(state_val_426658 === 4) {
                  var inst_426638 = state_426657[5];
                  var inst_426641 = cljs.core.first.call(null, inst_426638);
                  var state_426657__$1 = state_426657;
                  return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_426657__$1, 7, ch, inst_426641)
                }else {
                  if(state_val_426658 === 5) {
                    var state_426657__$1 = state_426657;
                    if(cljs.core.truth_(close_QMARK_)) {
                      var statearr_426663_426677 = state_426657__$1;
                      statearr_426663_426677[1] = 8
                    }else {
                      var statearr_426664_426678 = state_426657__$1;
                      statearr_426664_426678[1] = 9
                    }
                    return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                  }else {
                    if(state_val_426658 === 6) {
                      var inst_426653 = state_426657[2];
                      var state_426657__$1 = state_426657;
                      var statearr_426665_426679 = state_426657__$1;
                      statearr_426665_426679[2] = inst_426653;
                      statearr_426665_426679[1] = 3;
                      return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                    }else {
                      if(state_val_426658 === 7) {
                        var inst_426638 = state_426657[5];
                        var inst_426643 = state_426657[2];
                        var inst_426644 = cljs.core.next.call(null, inst_426638);
                        var inst_426638__$1 = inst_426644;
                        var state_426657__$1 = function() {
                          var statearr_426666 = state_426657;
                          statearr_426666[5] = inst_426638__$1;
                          statearr_426666[6] = inst_426643;
                          return statearr_426666
                        }();
                        var statearr_426667_426680 = state_426657__$1;
                        statearr_426667_426680[2] = null;
                        statearr_426667_426680[1] = 2;
                        return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                      }else {
                        if(state_val_426658 === 8) {
                          var inst_426648 = cljs.core.async.close_BANG_.call(null, ch);
                          var state_426657__$1 = state_426657;
                          var statearr_426668_426681 = state_426657__$1;
                          statearr_426668_426681[2] = inst_426648;
                          statearr_426668_426681[1] = 10;
                          return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                        }else {
                          if(state_val_426658 === 9) {
                            var state_426657__$1 = state_426657;
                            var statearr_426669_426682 = state_426657__$1;
                            statearr_426669_426682[2] = null;
                            statearr_426669_426682[1] = 10;
                            return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                          }else {
                            if(state_val_426658 === 10) {
                              var inst_426651 = state_426657[2];
                              var state_426657__$1 = state_426657;
                              var statearr_426670_426683 = state_426657__$1;
                              statearr_426670_426683[2] = inst_426651;
                              statearr_426670_426683[1] = 6;
                              return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                            }else {
                              return null
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        };
        return function(switch__5678__auto__) {
          return function() {
            var state_machine__5679__auto__ = null;
            var state_machine__5679__auto____0 = function() {
              var statearr_426672 = new Array(7);
              statearr_426672[0] = state_machine__5679__auto__;
              statearr_426672[1] = 1;
              return statearr_426672
            };
            var state_machine__5679__auto____1 = function(state_426657) {
              while(true) {
                var result__5680__auto__ = switch__5678__auto__.call(null, state_426657);
                if(cljs.core.keyword_identical_QMARK_.call(null, result__5680__auto__, new cljs.core.Keyword(null, "recur", "recur", 1122293407))) {
                  continue
                }else {
                  return result__5680__auto__
                }
                break
              }
            };
            state_machine__5679__auto__ = function(state_426657) {
              switch(arguments.length) {
                case 0:
                  return state_machine__5679__auto____0.call(this);
                case 1:
                  return state_machine__5679__auto____1.call(this, state_426657)
              }
              throw new Error("Invalid arity: " + arguments.length);
            };
            state_machine__5679__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__5679__auto____0;
            state_machine__5679__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__5679__auto____1;
            return state_machine__5679__auto__
          }()
        }(switch__5678__auto__)
      }();
      var state__5730__auto__ = function() {
        var statearr_426673 = f__5729__auto__.call(null);
        statearr_426673[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__5728__auto__;
        return statearr_426673
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__5730__auto__)
    });
    return c__5728__auto__
  };
  onto_chan = function(ch, coll, close_QMARK_) {
    switch(arguments.length) {
      case 2:
        return onto_chan__2.call(this, ch, coll);
      case 3:
        return onto_chan__3.call(this, ch, coll, close_QMARK_)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  onto_chan.cljs$core$IFn$_invoke$arity$2 = onto_chan__2;
  onto_chan.cljs$core$IFn$_invoke$arity$3 = onto_chan__3;
  return onto_chan
}();
cljs.core.async.to_chan = function to_chan(coll) {
  var ch = cljs.core.async.chan.call(null, cljs.core.bounded_count.call(null, 100, coll));
  cljs.core.async.onto_chan.call(null, ch, coll);
  return ch
};
cljs.core.async.Mux = function() {
  var obj426685 = {};
  return obj426685
}();
cljs.core.async.muxch_STAR_ = function muxch_STAR_(_) {
  if(function() {
    var and__3273__auto__ = _;
    if(and__3273__auto__) {
      return _.cljs$core$async$Mux$muxch_STAR_$arity$1
    }else {
      return and__3273__auto__
    }
  }()) {
    return _.cljs$core$async$Mux$muxch_STAR_$arity$1(_)
  }else {
    var x__3888__auto__ = _ == null ? null : _;
    return function() {
      var or__3285__auto__ = cljs.core.async.muxch_STAR_[goog.typeOf(x__3888__auto__)];
      if(or__3285__auto__) {
        return or__3285__auto__
      }else {
        var or__3285__auto____$1 = cljs.core.async.muxch_STAR_["_"];
        if(or__3285__auto____$1) {
          return or__3285__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "Mux.muxch*", _);
        }
      }
    }().call(null, _)
  }
};
cljs.core.async.Mult = function() {
  var obj426687 = {};
  return obj426687
}();
cljs.core.async.tap_STAR_ = function tap_STAR_(m, ch, close_QMARK_) {
  if(function() {
    var and__3273__auto__ = m;
    if(and__3273__auto__) {
      return m.cljs$core$async$Mult$tap_STAR_$arity$3
    }else {
      return and__3273__auto__
    }
  }()) {
    return m.cljs$core$async$Mult$tap_STAR_$arity$3(m, ch, close_QMARK_)
  }else {
    var x__3888__auto__ = m == null ? null : m;
    return function() {
      var or__3285__auto__ = cljs.core.async.tap_STAR_[goog.typeOf(x__3888__auto__)];
      if(or__3285__auto__) {
        return or__3285__auto__
      }else {
        var or__3285__auto____$1 = cljs.core.async.tap_STAR_["_"];
        if(or__3285__auto____$1) {
          return or__3285__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "Mult.tap*", m);
        }
      }
    }().call(null, m, ch, close_QMARK_)
  }
};
cljs.core.async.untap_STAR_ = function untap_STAR_(m, ch) {
  if(function() {
    var and__3273__auto__ = m;
    if(and__3273__auto__) {
      return m.cljs$core$async$Mult$untap_STAR_$arity$2
    }else {
      return and__3273__auto__
    }
  }()) {
    return m.cljs$core$async$Mult$untap_STAR_$arity$2(m, ch)
  }else {
    var x__3888__auto__ = m == null ? null : m;
    return function() {
      var or__3285__auto__ = cljs.core.async.untap_STAR_[goog.typeOf(x__3888__auto__)];
      if(or__3285__auto__) {
        return or__3285__auto__
      }else {
        var or__3285__auto____$1 = cljs.core.async.untap_STAR_["_"];
        if(or__3285__auto____$1) {
          return or__3285__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "Mult.untap*", m);
        }
      }
    }().call(null, m, ch)
  }
};
cljs.core.async.untap_all_STAR_ = function untap_all_STAR_(m) {
  if(function() {
    var and__3273__auto__ = m;
    if(and__3273__auto__) {
      return m.cljs$core$async$Mult$untap_all_STAR_$arity$1
    }else {
      return and__3273__auto__
    }
  }()) {
    return m.cljs$core$async$Mult$untap_all_STAR_$arity$1(m)
  }else {
    var x__3888__auto__ = m == null ? null : m;
    return function() {
      var or__3285__auto__ = cljs.core.async.untap_all_STAR_[goog.typeOf(x__3888__auto__)];
      if(or__3285__auto__) {
        return or__3285__auto__
      }else {
        var or__3285__auto____$1 = cljs.core.async.untap_all_STAR_["_"];
        if(or__3285__auto____$1) {
          return or__3285__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "Mult.untap-all*", m);
        }
      }
    }().call(null, m)
  }
};
cljs.core.async.mult = function mult(ch) {
  var cs = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
  var m = function() {
    if(typeof cljs.core.async.t426900 !== "undefined") {
    }else {
      cljs.core.async.t426900 = function(cs, ch, mult, meta426901) {
        this.cs = cs;
        this.ch = ch;
        this.mult = mult;
        this.meta426901 = meta426901;
        this.cljs$lang$protocol_mask$partition1$ = 0;
        this.cljs$lang$protocol_mask$partition0$ = 393216
      };
      cljs.core.async.t426900.cljs$lang$type = true;
      cljs.core.async.t426900.cljs$lang$ctorStr = "cljs.core.async/t426900";
      cljs.core.async.t426900.cljs$lang$ctorPrWriter = function(cs) {
        return function(this__3829__auto__, writer__3830__auto__, opt__3831__auto__) {
          return cljs.core._write.call(null, writer__3830__auto__, "cljs.core.async/t426900")
        }
      }(cs);
      cljs.core.async.t426900.prototype.cljs$core$async$Mult$ = true;
      cljs.core.async.t426900.prototype.cljs$core$async$Mult$tap_STAR_$arity$3 = function(cs) {
        return function(_, ch__$2, close_QMARK_) {
          var self__ = this;
          var ___$1 = this;
          cljs.core.swap_BANG_.call(null, self__.cs, cljs.core.assoc, ch__$2, close_QMARK_);
          return null
        }
      }(cs);
      cljs.core.async.t426900.prototype.cljs$core$async$Mult$untap_STAR_$arity$2 = function(cs) {
        return function(_, ch__$2) {
          var self__ = this;
          var ___$1 = this;
          cljs.core.swap_BANG_.call(null, self__.cs, cljs.core.dissoc, ch__$2);
          return null
        }
      }(cs);
      cljs.core.async.t426900.prototype.cljs$core$async$Mult$untap_all_STAR_$arity$1 = function(cs) {
        return function(_) {
          var self__ = this;
          var ___$1 = this;
          cljs.core.reset_BANG_.call(null, self__.cs, cljs.core.PersistentArrayMap.EMPTY);
          return null
        }
      }(cs);
      cljs.core.async.t426900.prototype.cljs$core$async$Mux$ = true;
      cljs.core.async.t426900.prototype.cljs$core$async$Mux$muxch_STAR_$arity$1 = function(cs) {
        return function(_) {
          var self__ = this;
          var ___$1 = this;
          return self__.ch
        }
      }(cs);
      cljs.core.async.t426900.prototype.cljs$core$IMeta$_meta$arity$1 = function(cs) {
        return function(_426902) {
          var self__ = this;
          var _426902__$1 = this;
          return self__.meta426901
        }
      }(cs);
      cljs.core.async.t426900.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(cs) {
        return function(_426902, meta426901__$1) {
          var self__ = this;
          var _426902__$1 = this;
          return new cljs.core.async.t426900(self__.cs, self__.ch, self__.mult, meta426901__$1)
        }
      }(cs);
      cljs.core.async.__GT_t426900 = function(cs) {
        return function __GT_t426900(cs__$1, ch__$1, mult__$1, meta426901) {
          return new cljs.core.async.t426900(cs__$1, ch__$1, mult__$1, meta426901)
        }
      }(cs)
    }
    return new cljs.core.async.t426900(cs, ch, mult, null)
  }();
  var dchan = cljs.core.async.chan.call(null, 1);
  var dctr = cljs.core.atom.call(null, null);
  var done = function(cs, m, dchan, dctr) {
    return function() {
      if(cljs.core.swap_BANG_.call(null, dctr, cljs.core.dec) === 0) {
        return cljs.core.async.put_BANG_.call(null, dchan, true)
      }else {
        return null
      }
    }
  }(cs, m, dchan, dctr);
  var c__5728__auto___427112 = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function() {
    var f__5729__auto__ = function() {
      var switch__5678__auto__ = function(state_427030) {
        var state_val_427031 = state_427030[1];
        if(state_val_427031 === 32) {
          try {
            var inst_426981 = state_427030[5];
            var inst_426905 = state_427030[6];
            var inst_426987 = cljs.core.async.put_BANG_.call(null, inst_426981, inst_426905, done);
            var state_427030__$1 = state_427030;
            var statearr_427034_427113 = state_427030__$1;
            statearr_427034_427113[2] = inst_426987;
            statearr_427034_427113[1] = 30;
            return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
          }catch(e427032) {
            if(e427032 instanceof Object) {
              var ex__5672__auto__ = e427032;
              var statearr_427033_427114 = state_427030;
              statearr_427033_427114[1] = 31;
              statearr_427033_427114[2] = ex__5672__auto__;
              return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
            }else {
              if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                throw e427032;
              }else {
                return null
              }
            }
          }
        }else {
          if(state_val_427031 === 1) {
            var state_427030__$1 = state_427030;
            var statearr_427035_427115 = state_427030__$1;
            statearr_427035_427115[2] = null;
            statearr_427035_427115[1] = 2;
            return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
          }else {
            if(state_val_427031 === 33) {
              var inst_426993 = state_427030[7];
              var inst_426995 = cljs.core.chunked_seq_QMARK_.call(null, inst_426993);
              var state_427030__$1 = state_427030;
              if(inst_426995) {
                var statearr_427036_427116 = state_427030__$1;
                statearr_427036_427116[1] = 36
              }else {
                var statearr_427037_427117 = state_427030__$1;
                statearr_427037_427117[1] = 37
              }
              return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
            }else {
              if(state_val_427031 === 2) {
                var state_427030__$1 = state_427030;
                return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_427030__$1, 4, ch)
              }else {
                if(state_val_427031 === 34) {
                  var state_427030__$1 = state_427030;
                  var statearr_427038_427118 = state_427030__$1;
                  statearr_427038_427118[2] = null;
                  statearr_427038_427118[1] = 35;
                  return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                }else {
                  if(state_val_427031 === 3) {
                    var inst_427028 = state_427030[2];
                    var state_427030__$1 = state_427030;
                    return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_427030__$1, inst_427028)
                  }else {
                    if(state_val_427031 === 35) {
                      var inst_427017 = state_427030[2];
                      var state_427030__$1 = state_427030;
                      var statearr_427039_427119 = state_427030__$1;
                      statearr_427039_427119[2] = inst_427017;
                      statearr_427039_427119[1] = 29;
                      return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                    }else {
                      if(state_val_427031 === 4) {
                        var inst_426905 = state_427030[6];
                        var inst_426905__$1 = state_427030[2];
                        var inst_426906 = inst_426905__$1 == null;
                        var state_427030__$1 = function() {
                          var statearr_427040 = state_427030;
                          statearr_427040[6] = inst_426905__$1;
                          return statearr_427040
                        }();
                        if(cljs.core.truth_(inst_426906)) {
                          var statearr_427041_427120 = state_427030__$1;
                          statearr_427041_427120[1] = 5
                        }else {
                          var statearr_427042_427121 = state_427030__$1;
                          statearr_427042_427121[1] = 6
                        }
                        return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                      }else {
                        if(state_val_427031 === 36) {
                          var inst_426993 = state_427030[7];
                          var inst_426997 = cljs.core.chunk_first.call(null, inst_426993);
                          var inst_426998 = cljs.core.chunk_rest.call(null, inst_426993);
                          var inst_426999 = cljs.core.count.call(null, inst_426997);
                          var inst_426973 = inst_426998;
                          var inst_426974 = inst_426997;
                          var inst_426975 = inst_426999;
                          var inst_426976 = 0;
                          var state_427030__$1 = function() {
                            var statearr_427043 = state_427030;
                            statearr_427043[8] = inst_426973;
                            statearr_427043[9] = inst_426974;
                            statearr_427043[10] = inst_426976;
                            statearr_427043[11] = inst_426975;
                            return statearr_427043
                          }();
                          var statearr_427044_427122 = state_427030__$1;
                          statearr_427044_427122[2] = null;
                          statearr_427044_427122[1] = 25;
                          return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                        }else {
                          if(state_val_427031 === 5) {
                            var inst_426912 = cljs.core.deref.call(null, cs);
                            var inst_426913 = cljs.core.seq.call(null, inst_426912);
                            var inst_426914 = inst_426913;
                            var inst_426915 = null;
                            var inst_426916 = 0;
                            var inst_426917 = 0;
                            var state_427030__$1 = function() {
                              var statearr_427045 = state_427030;
                              statearr_427045[12] = inst_426917;
                              statearr_427045[13] = inst_426914;
                              statearr_427045[14] = inst_426915;
                              statearr_427045[15] = inst_426916;
                              return statearr_427045
                            }();
                            var statearr_427046_427123 = state_427030__$1;
                            statearr_427046_427123[2] = null;
                            statearr_427046_427123[1] = 8;
                            return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                          }else {
                            if(state_val_427031 === 37) {
                              var inst_426993 = state_427030[7];
                              var inst_427002 = cljs.core.first.call(null, inst_426993);
                              var state_427030__$1 = function() {
                                var statearr_427047 = state_427030;
                                statearr_427047[16] = inst_427002;
                                return statearr_427047
                              }();
                              var statearr_427048_427124 = state_427030__$1;
                              statearr_427048_427124[2] = null;
                              statearr_427048_427124[1] = 41;
                              return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                            }else {
                              if(state_val_427031 === 6) {
                                var inst_426964 = cljs.core.deref.call(null, cs);
                                var inst_426965 = cljs.core.keys.call(null, inst_426964);
                                var inst_426966 = cljs.core.count.call(null, inst_426965);
                                var inst_426967 = cljs.core.reset_BANG_.call(null, dctr, inst_426966);
                                var inst_426972 = cljs.core.seq.call(null, inst_426965);
                                var inst_426973 = inst_426972;
                                var inst_426974 = null;
                                var inst_426975 = 0;
                                var inst_426976 = 0;
                                var state_427030__$1 = function() {
                                  var statearr_427049 = state_427030;
                                  statearr_427049[8] = inst_426973;
                                  statearr_427049[9] = inst_426974;
                                  statearr_427049[10] = inst_426976;
                                  statearr_427049[11] = inst_426975;
                                  statearr_427049[17] = inst_426967;
                                  return statearr_427049
                                }();
                                var statearr_427050_427125 = state_427030__$1;
                                statearr_427050_427125[2] = null;
                                statearr_427050_427125[1] = 25;
                                return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                              }else {
                                if(state_val_427031 === 38) {
                                  var inst_427014 = state_427030[2];
                                  var state_427030__$1 = state_427030;
                                  var statearr_427051_427126 = state_427030__$1;
                                  statearr_427051_427126[2] = inst_427014;
                                  statearr_427051_427126[1] = 35;
                                  return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                                }else {
                                  if(state_val_427031 === 7) {
                                    var inst_427026 = state_427030[2];
                                    var state_427030__$1 = state_427030;
                                    var statearr_427052_427127 = state_427030__$1;
                                    statearr_427052_427127[2] = inst_427026;
                                    statearr_427052_427127[1] = 3;
                                    return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                                  }else {
                                    if(state_val_427031 === 39) {
                                      var inst_426993 = state_427030[7];
                                      var inst_427010 = state_427030[2];
                                      var inst_427011 = cljs.core.next.call(null, inst_426993);
                                      var inst_426973 = inst_427011;
                                      var inst_426974 = null;
                                      var inst_426975 = 0;
                                      var inst_426976 = 0;
                                      var state_427030__$1 = function() {
                                        var statearr_427053 = state_427030;
                                        statearr_427053[8] = inst_426973;
                                        statearr_427053[9] = inst_426974;
                                        statearr_427053[18] = inst_427010;
                                        statearr_427053[10] = inst_426976;
                                        statearr_427053[11] = inst_426975;
                                        return statearr_427053
                                      }();
                                      var statearr_427054_427128 = state_427030__$1;
                                      statearr_427054_427128[2] = null;
                                      statearr_427054_427128[1] = 25;
                                      return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                                    }else {
                                      if(state_val_427031 === 8) {
                                        var inst_426917 = state_427030[12];
                                        var inst_426916 = state_427030[15];
                                        var inst_426919 = inst_426917 < inst_426916;
                                        var inst_426920 = inst_426919;
                                        var state_427030__$1 = state_427030;
                                        if(cljs.core.truth_(inst_426920)) {
                                          var statearr_427055_427129 = state_427030__$1;
                                          statearr_427055_427129[1] = 10
                                        }else {
                                          var statearr_427056_427130 = state_427030__$1;
                                          statearr_427056_427130[1] = 11
                                        }
                                        return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                                      }else {
                                        if(state_val_427031 === 40) {
                                          var inst_427002 = state_427030[16];
                                          var inst_427003 = state_427030[2];
                                          var inst_427004 = cljs.core.swap_BANG_.call(null, dctr, cljs.core.dec);
                                          var inst_427005 = cljs.core.async.untap_STAR_.call(null, m, inst_427002);
                                          var state_427030__$1 = function() {
                                            var statearr_427057 = state_427030;
                                            statearr_427057[19] = inst_427004;
                                            statearr_427057[20] = inst_427003;
                                            return statearr_427057
                                          }();
                                          var statearr_427058_427131 = state_427030__$1;
                                          statearr_427058_427131[2] = inst_427005;
                                          statearr_427058_427131[1] = 39;
                                          return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                                        }else {
                                          if(state_val_427031 === 9) {
                                            var inst_426962 = state_427030[2];
                                            var state_427030__$1 = state_427030;
                                            var statearr_427059_427132 = state_427030__$1;
                                            statearr_427059_427132[2] = inst_426962;
                                            statearr_427059_427132[1] = 7;
                                            return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                                          }else {
                                            if(state_val_427031 === 41) {
                                              try {
                                                var inst_427002 = state_427030[16];
                                                var inst_426905 = state_427030[6];
                                                var inst_427008 = cljs.core.async.put_BANG_.call(null, inst_427002, inst_426905, done);
                                                var state_427030__$1 = state_427030;
                                                var statearr_427062_427133 = state_427030__$1;
                                                statearr_427062_427133[2] = inst_427008;
                                                statearr_427062_427133[1] = 39;
                                                return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                                              }catch(e427060) {
                                                if(e427060 instanceof Object) {
                                                  var ex__5672__auto__ = e427060;
                                                  var statearr_427061_427134 = state_427030;
                                                  statearr_427061_427134[1] = 40;
                                                  statearr_427061_427134[2] = ex__5672__auto__;
                                                  return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                                                }else {
                                                  if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                                                    throw e427060;
                                                  }else {
                                                    return null
                                                  }
                                                }
                                              }
                                            }else {
                                              if(state_val_427031 === 10) {
                                                var inst_426917 = state_427030[12];
                                                var inst_426915 = state_427030[14];
                                                var inst_426923 = cljs.core._nth.call(null, inst_426915, inst_426917);
                                                var inst_426924 = cljs.core.nth.call(null, inst_426923, 0, null);
                                                var inst_426925 = cljs.core.nth.call(null, inst_426923, 1, null);
                                                var state_427030__$1 = function() {
                                                  var statearr_427063 = state_427030;
                                                  statearr_427063[21] = inst_426924;
                                                  return statearr_427063
                                                }();
                                                if(cljs.core.truth_(inst_426925)) {
                                                  var statearr_427064_427135 = state_427030__$1;
                                                  statearr_427064_427135[1] = 13
                                                }else {
                                                  var statearr_427065_427136 = state_427030__$1;
                                                  statearr_427065_427136[1] = 14
                                                }
                                                return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                                              }else {
                                                if(state_val_427031 === 42) {
                                                  var inst_427023 = state_427030[2];
                                                  var state_427030__$1 = function() {
                                                    var statearr_427066 = state_427030;
                                                    statearr_427066[22] = inst_427023;
                                                    return statearr_427066
                                                  }();
                                                  var statearr_427067_427137 = state_427030__$1;
                                                  statearr_427067_427137[2] = null;
                                                  statearr_427067_427137[1] = 2;
                                                  return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                                                }else {
                                                  if(state_val_427031 === 11) {
                                                    var inst_426934 = state_427030[23];
                                                    var inst_426914 = state_427030[13];
                                                    var inst_426934__$1 = cljs.core.seq.call(null, inst_426914);
                                                    var state_427030__$1 = function() {
                                                      var statearr_427068 = state_427030;
                                                      statearr_427068[23] = inst_426934__$1;
                                                      return statearr_427068
                                                    }();
                                                    if(inst_426934__$1) {
                                                      var statearr_427069_427138 = state_427030__$1;
                                                      statearr_427069_427138[1] = 16
                                                    }else {
                                                      var statearr_427070_427139 = state_427030__$1;
                                                      statearr_427070_427139[1] = 17
                                                    }
                                                    return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                                                  }else {
                                                    if(state_val_427031 === 12) {
                                                      var inst_426960 = state_427030[2];
                                                      var state_427030__$1 = state_427030;
                                                      var statearr_427071_427140 = state_427030__$1;
                                                      statearr_427071_427140[2] = inst_426960;
                                                      statearr_427071_427140[1] = 9;
                                                      return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                                                    }else {
                                                      if(state_val_427031 === 13) {
                                                        var inst_426924 = state_427030[21];
                                                        var inst_426927 = cljs.core.async.close_BANG_.call(null, inst_426924);
                                                        var state_427030__$1 = state_427030;
                                                        var statearr_427075_427141 = state_427030__$1;
                                                        statearr_427075_427141[2] = inst_426927;
                                                        statearr_427075_427141[1] = 15;
                                                        return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                                                      }else {
                                                        if(state_val_427031 === 14) {
                                                          var state_427030__$1 = state_427030;
                                                          var statearr_427076_427142 = state_427030__$1;
                                                          statearr_427076_427142[2] = null;
                                                          statearr_427076_427142[1] = 15;
                                                          return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                                                        }else {
                                                          if(state_val_427031 === 15) {
                                                            var inst_426917 = state_427030[12];
                                                            var inst_426914 = state_427030[13];
                                                            var inst_426915 = state_427030[14];
                                                            var inst_426916 = state_427030[15];
                                                            var inst_426930 = state_427030[2];
                                                            var inst_426931 = inst_426917 + 1;
                                                            var tmp427072 = inst_426914;
                                                            var tmp427073 = inst_426915;
                                                            var tmp427074 = inst_426916;
                                                            var inst_426914__$1 = tmp427072;
                                                            var inst_426915__$1 = tmp427073;
                                                            var inst_426916__$1 = tmp427074;
                                                            var inst_426917__$1 = inst_426931;
                                                            var state_427030__$1 = function() {
                                                              var statearr_427077 = state_427030;
                                                              statearr_427077[24] = inst_426930;
                                                              statearr_427077[12] = inst_426917__$1;
                                                              statearr_427077[13] = inst_426914__$1;
                                                              statearr_427077[14] = inst_426915__$1;
                                                              statearr_427077[15] = inst_426916__$1;
                                                              return statearr_427077
                                                            }();
                                                            var statearr_427078_427143 = state_427030__$1;
                                                            statearr_427078_427143[2] = null;
                                                            statearr_427078_427143[1] = 8;
                                                            return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                                                          }else {
                                                            if(state_val_427031 === 16) {
                                                              var inst_426934 = state_427030[23];
                                                              var inst_426936 = cljs.core.chunked_seq_QMARK_.call(null, inst_426934);
                                                              var state_427030__$1 = state_427030;
                                                              if(inst_426936) {
                                                                var statearr_427079_427144 = state_427030__$1;
                                                                statearr_427079_427144[1] = 19
                                                              }else {
                                                                var statearr_427080_427145 = state_427030__$1;
                                                                statearr_427080_427145[1] = 20
                                                              }
                                                              return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                                                            }else {
                                                              if(state_val_427031 === 17) {
                                                                var state_427030__$1 = state_427030;
                                                                var statearr_427081_427146 = state_427030__$1;
                                                                statearr_427081_427146[2] = null;
                                                                statearr_427081_427146[1] = 18;
                                                                return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                                                              }else {
                                                                if(state_val_427031 === 18) {
                                                                  var inst_426958 = state_427030[2];
                                                                  var state_427030__$1 = state_427030;
                                                                  var statearr_427082_427147 = state_427030__$1;
                                                                  statearr_427082_427147[2] = inst_426958;
                                                                  statearr_427082_427147[1] = 12;
                                                                  return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                                                                }else {
                                                                  if(state_val_427031 === 19) {
                                                                    var inst_426934 = state_427030[23];
                                                                    var inst_426938 = cljs.core.chunk_first.call(null, inst_426934);
                                                                    var inst_426939 = cljs.core.chunk_rest.call(null, inst_426934);
                                                                    var inst_426940 = cljs.core.count.call(null, inst_426938);
                                                                    var inst_426914 = inst_426939;
                                                                    var inst_426915 = inst_426938;
                                                                    var inst_426916 = inst_426940;
                                                                    var inst_426917 = 0;
                                                                    var state_427030__$1 = function() {
                                                                      var statearr_427083 = state_427030;
                                                                      statearr_427083[12] = inst_426917;
                                                                      statearr_427083[13] = inst_426914;
                                                                      statearr_427083[14] = inst_426915;
                                                                      statearr_427083[15] = inst_426916;
                                                                      return statearr_427083
                                                                    }();
                                                                    var statearr_427084_427148 = state_427030__$1;
                                                                    statearr_427084_427148[2] = null;
                                                                    statearr_427084_427148[1] = 8;
                                                                    return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                                                                  }else {
                                                                    if(state_val_427031 === 20) {
                                                                      var inst_426934 = state_427030[23];
                                                                      var inst_426944 = cljs.core.first.call(null, inst_426934);
                                                                      var inst_426945 = cljs.core.nth.call(null, inst_426944, 0, null);
                                                                      var inst_426946 = cljs.core.nth.call(null, inst_426944, 1, null);
                                                                      var state_427030__$1 = function() {
                                                                        var statearr_427085 = state_427030;
                                                                        statearr_427085[25] = inst_426945;
                                                                        return statearr_427085
                                                                      }();
                                                                      if(cljs.core.truth_(inst_426946)) {
                                                                        var statearr_427086_427149 = state_427030__$1;
                                                                        statearr_427086_427149[1] = 22
                                                                      }else {
                                                                        var statearr_427087_427150 = state_427030__$1;
                                                                        statearr_427087_427150[1] = 23
                                                                      }
                                                                      return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                                                                    }else {
                                                                      if(state_val_427031 === 21) {
                                                                        var inst_426955 = state_427030[2];
                                                                        var state_427030__$1 = state_427030;
                                                                        var statearr_427088_427151 = state_427030__$1;
                                                                        statearr_427088_427151[2] = inst_426955;
                                                                        statearr_427088_427151[1] = 18;
                                                                        return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                                                                      }else {
                                                                        if(state_val_427031 === 22) {
                                                                          var inst_426945 = state_427030[25];
                                                                          var inst_426948 = cljs.core.async.close_BANG_.call(null, inst_426945);
                                                                          var state_427030__$1 = state_427030;
                                                                          var statearr_427089_427152 = state_427030__$1;
                                                                          statearr_427089_427152[2] = inst_426948;
                                                                          statearr_427089_427152[1] = 24;
                                                                          return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                                                                        }else {
                                                                          if(state_val_427031 === 23) {
                                                                            var state_427030__$1 = state_427030;
                                                                            var statearr_427090_427153 = state_427030__$1;
                                                                            statearr_427090_427153[2] = null;
                                                                            statearr_427090_427153[1] = 24;
                                                                            return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                                                                          }else {
                                                                            if(state_val_427031 === 24) {
                                                                              var inst_426934 = state_427030[23];
                                                                              var inst_426951 = state_427030[2];
                                                                              var inst_426952 = cljs.core.next.call(null, inst_426934);
                                                                              var inst_426914 = inst_426952;
                                                                              var inst_426915 = null;
                                                                              var inst_426916 = 0;
                                                                              var inst_426917 = 0;
                                                                              var state_427030__$1 = function() {
                                                                                var statearr_427091 = state_427030;
                                                                                statearr_427091[12] = inst_426917;
                                                                                statearr_427091[26] = inst_426951;
                                                                                statearr_427091[13] = inst_426914;
                                                                                statearr_427091[14] = inst_426915;
                                                                                statearr_427091[15] = inst_426916;
                                                                                return statearr_427091
                                                                              }();
                                                                              var statearr_427092_427154 = state_427030__$1;
                                                                              statearr_427092_427154[2] = null;
                                                                              statearr_427092_427154[1] = 8;
                                                                              return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                                                                            }else {
                                                                              if(state_val_427031 === 25) {
                                                                                var inst_426976 = state_427030[10];
                                                                                var inst_426975 = state_427030[11];
                                                                                var inst_426978 = inst_426976 < inst_426975;
                                                                                var inst_426979 = inst_426978;
                                                                                var state_427030__$1 = state_427030;
                                                                                if(cljs.core.truth_(inst_426979)) {
                                                                                  var statearr_427093_427155 = state_427030__$1;
                                                                                  statearr_427093_427155[1] = 27
                                                                                }else {
                                                                                  var statearr_427094_427156 = state_427030__$1;
                                                                                  statearr_427094_427156[1] = 28
                                                                                }
                                                                                return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                                                                              }else {
                                                                                if(state_val_427031 === 26) {
                                                                                  var inst_427021 = state_427030[2];
                                                                                  var state_427030__$1 = function() {
                                                                                    var statearr_427095 = state_427030;
                                                                                    statearr_427095[27] = inst_427021;
                                                                                    return statearr_427095
                                                                                  }();
                                                                                  return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_427030__$1, 42, dchan)
                                                                                }else {
                                                                                  if(state_val_427031 === 27) {
                                                                                    var inst_426974 = state_427030[9];
                                                                                    var inst_426976 = state_427030[10];
                                                                                    var inst_426981 = cljs.core._nth.call(null, inst_426974, inst_426976);
                                                                                    var state_427030__$1 = function() {
                                                                                      var statearr_427096 = state_427030;
                                                                                      statearr_427096[5] = inst_426981;
                                                                                      return statearr_427096
                                                                                    }();
                                                                                    var statearr_427097_427157 = state_427030__$1;
                                                                                    statearr_427097_427157[2] = null;
                                                                                    statearr_427097_427157[1] = 32;
                                                                                    return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                                                                                  }else {
                                                                                    if(state_val_427031 === 28) {
                                                                                      var inst_426973 = state_427030[8];
                                                                                      var inst_426993 = state_427030[7];
                                                                                      var inst_426993__$1 = cljs.core.seq.call(null, inst_426973);
                                                                                      var state_427030__$1 = function() {
                                                                                        var statearr_427101 = state_427030;
                                                                                        statearr_427101[7] = inst_426993__$1;
                                                                                        return statearr_427101
                                                                                      }();
                                                                                      if(inst_426993__$1) {
                                                                                        var statearr_427102_427158 = state_427030__$1;
                                                                                        statearr_427102_427158[1] = 33
                                                                                      }else {
                                                                                        var statearr_427103_427159 = state_427030__$1;
                                                                                        statearr_427103_427159[1] = 34
                                                                                      }
                                                                                      return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                                                                                    }else {
                                                                                      if(state_val_427031 === 29) {
                                                                                        var inst_427019 = state_427030[2];
                                                                                        var state_427030__$1 = state_427030;
                                                                                        var statearr_427104_427160 = state_427030__$1;
                                                                                        statearr_427104_427160[2] = inst_427019;
                                                                                        statearr_427104_427160[1] = 26;
                                                                                        return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                                                                                      }else {
                                                                                        if(state_val_427031 === 30) {
                                                                                          var inst_426973 = state_427030[8];
                                                                                          var inst_426974 = state_427030[9];
                                                                                          var inst_426976 = state_427030[10];
                                                                                          var inst_426975 = state_427030[11];
                                                                                          var inst_426989 = state_427030[2];
                                                                                          var inst_426990 = inst_426976 + 1;
                                                                                          var tmp427098 = inst_426973;
                                                                                          var tmp427099 = inst_426974;
                                                                                          var tmp427100 = inst_426975;
                                                                                          var inst_426973__$1 = tmp427098;
                                                                                          var inst_426974__$1 = tmp427099;
                                                                                          var inst_426975__$1 = tmp427100;
                                                                                          var inst_426976__$1 = inst_426990;
                                                                                          var state_427030__$1 = function() {
                                                                                            var statearr_427105 = state_427030;
                                                                                            statearr_427105[8] = inst_426973__$1;
                                                                                            statearr_427105[9] = inst_426974__$1;
                                                                                            statearr_427105[28] = inst_426989;
                                                                                            statearr_427105[10] = inst_426976__$1;
                                                                                            statearr_427105[11] = inst_426975__$1;
                                                                                            return statearr_427105
                                                                                          }();
                                                                                          var statearr_427106_427161 = state_427030__$1;
                                                                                          statearr_427106_427161[2] = null;
                                                                                          statearr_427106_427161[1] = 25;
                                                                                          return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                                                                                        }else {
                                                                                          if(state_val_427031 === 31) {
                                                                                            var inst_426981 = state_427030[5];
                                                                                            var inst_426982 = state_427030[2];
                                                                                            var inst_426983 = cljs.core.swap_BANG_.call(null, dctr, cljs.core.dec);
                                                                                            var inst_426984 = cljs.core.async.untap_STAR_.call(null, m, inst_426981);
                                                                                            var state_427030__$1 = function() {
                                                                                              var statearr_427107 = state_427030;
                                                                                              statearr_427107[29] = inst_426982;
                                                                                              statearr_427107[30] = inst_426983;
                                                                                              return statearr_427107
                                                                                            }();
                                                                                            var statearr_427108_427162 = state_427030__$1;
                                                                                            statearr_427108_427162[2] = inst_426984;
                                                                                            statearr_427108_427162[1] = 30;
                                                                                            return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                                                                                          }else {
                                                                                            return null
                                                                                          }
                                                                                        }
                                                                                      }
                                                                                    }
                                                                                  }
                                                                                }
                                                                              }
                                                                            }
                                                                          }
                                                                        }
                                                                      }
                                                                    }
                                                                  }
                                                                }
                                                              }
                                                            }
                                                          }
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      };
      return function(switch__5678__auto__) {
        return function() {
          var state_machine__5679__auto__ = null;
          var state_machine__5679__auto____0 = function() {
            var statearr_427110 = new Array(31);
            statearr_427110[0] = state_machine__5679__auto__;
            statearr_427110[1] = 1;
            return statearr_427110
          };
          var state_machine__5679__auto____1 = function(state_427030) {
            while(true) {
              var result__5680__auto__ = switch__5678__auto__.call(null, state_427030);
              if(cljs.core.keyword_identical_QMARK_.call(null, result__5680__auto__, new cljs.core.Keyword(null, "recur", "recur", 1122293407))) {
                continue
              }else {
                return result__5680__auto__
              }
              break
            }
          };
          state_machine__5679__auto__ = function(state_427030) {
            switch(arguments.length) {
              case 0:
                return state_machine__5679__auto____0.call(this);
              case 1:
                return state_machine__5679__auto____1.call(this, state_427030)
            }
            throw new Error("Invalid arity: " + arguments.length);
          };
          state_machine__5679__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__5679__auto____0;
          state_machine__5679__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__5679__auto____1;
          return state_machine__5679__auto__
        }()
      }(switch__5678__auto__)
    }();
    var state__5730__auto__ = function() {
      var statearr_427111 = f__5729__auto__.call(null);
      statearr_427111[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__5728__auto___427112;
      return statearr_427111
    }();
    return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__5730__auto__)
  });
  return m
};
cljs.core.async.tap = function() {
  var tap = null;
  var tap__2 = function(mult, ch) {
    return tap.call(null, mult, ch, true)
  };
  var tap__3 = function(mult, ch, close_QMARK_) {
    cljs.core.async.tap_STAR_.call(null, mult, ch, close_QMARK_);
    return ch
  };
  tap = function(mult, ch, close_QMARK_) {
    switch(arguments.length) {
      case 2:
        return tap__2.call(this, mult, ch);
      case 3:
        return tap__3.call(this, mult, ch, close_QMARK_)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  tap.cljs$core$IFn$_invoke$arity$2 = tap__2;
  tap.cljs$core$IFn$_invoke$arity$3 = tap__3;
  return tap
}();
cljs.core.async.untap = function untap(mult, ch) {
  return cljs.core.async.untap_STAR_.call(null, mult, ch)
};
cljs.core.async.untap_all = function untap_all(mult) {
  return cljs.core.async.untap_all_STAR_.call(null, mult)
};
cljs.core.async.Mix = function() {
  var obj427164 = {};
  return obj427164
}();
cljs.core.async.admix_STAR_ = function admix_STAR_(m, ch) {
  if(function() {
    var and__3273__auto__ = m;
    if(and__3273__auto__) {
      return m.cljs$core$async$Mix$admix_STAR_$arity$2
    }else {
      return and__3273__auto__
    }
  }()) {
    return m.cljs$core$async$Mix$admix_STAR_$arity$2(m, ch)
  }else {
    var x__3888__auto__ = m == null ? null : m;
    return function() {
      var or__3285__auto__ = cljs.core.async.admix_STAR_[goog.typeOf(x__3888__auto__)];
      if(or__3285__auto__) {
        return or__3285__auto__
      }else {
        var or__3285__auto____$1 = cljs.core.async.admix_STAR_["_"];
        if(or__3285__auto____$1) {
          return or__3285__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "Mix.admix*", m);
        }
      }
    }().call(null, m, ch)
  }
};
cljs.core.async.unmix_STAR_ = function unmix_STAR_(m, ch) {
  if(function() {
    var and__3273__auto__ = m;
    if(and__3273__auto__) {
      return m.cljs$core$async$Mix$unmix_STAR_$arity$2
    }else {
      return and__3273__auto__
    }
  }()) {
    return m.cljs$core$async$Mix$unmix_STAR_$arity$2(m, ch)
  }else {
    var x__3888__auto__ = m == null ? null : m;
    return function() {
      var or__3285__auto__ = cljs.core.async.unmix_STAR_[goog.typeOf(x__3888__auto__)];
      if(or__3285__auto__) {
        return or__3285__auto__
      }else {
        var or__3285__auto____$1 = cljs.core.async.unmix_STAR_["_"];
        if(or__3285__auto____$1) {
          return or__3285__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "Mix.unmix*", m);
        }
      }
    }().call(null, m, ch)
  }
};
cljs.core.async.unmix_all_STAR_ = function unmix_all_STAR_(m) {
  if(function() {
    var and__3273__auto__ = m;
    if(and__3273__auto__) {
      return m.cljs$core$async$Mix$unmix_all_STAR_$arity$1
    }else {
      return and__3273__auto__
    }
  }()) {
    return m.cljs$core$async$Mix$unmix_all_STAR_$arity$1(m)
  }else {
    var x__3888__auto__ = m == null ? null : m;
    return function() {
      var or__3285__auto__ = cljs.core.async.unmix_all_STAR_[goog.typeOf(x__3888__auto__)];
      if(or__3285__auto__) {
        return or__3285__auto__
      }else {
        var or__3285__auto____$1 = cljs.core.async.unmix_all_STAR_["_"];
        if(or__3285__auto____$1) {
          return or__3285__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "Mix.unmix-all*", m);
        }
      }
    }().call(null, m)
  }
};
cljs.core.async.toggle_STAR_ = function toggle_STAR_(m, state_map) {
  if(function() {
    var and__3273__auto__ = m;
    if(and__3273__auto__) {
      return m.cljs$core$async$Mix$toggle_STAR_$arity$2
    }else {
      return and__3273__auto__
    }
  }()) {
    return m.cljs$core$async$Mix$toggle_STAR_$arity$2(m, state_map)
  }else {
    var x__3888__auto__ = m == null ? null : m;
    return function() {
      var or__3285__auto__ = cljs.core.async.toggle_STAR_[goog.typeOf(x__3888__auto__)];
      if(or__3285__auto__) {
        return or__3285__auto__
      }else {
        var or__3285__auto____$1 = cljs.core.async.toggle_STAR_["_"];
        if(or__3285__auto____$1) {
          return or__3285__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "Mix.toggle*", m);
        }
      }
    }().call(null, m, state_map)
  }
};
cljs.core.async.solo_mode_STAR_ = function solo_mode_STAR_(m, mode) {
  if(function() {
    var and__3273__auto__ = m;
    if(and__3273__auto__) {
      return m.cljs$core$async$Mix$solo_mode_STAR_$arity$2
    }else {
      return and__3273__auto__
    }
  }()) {
    return m.cljs$core$async$Mix$solo_mode_STAR_$arity$2(m, mode)
  }else {
    var x__3888__auto__ = m == null ? null : m;
    return function() {
      var or__3285__auto__ = cljs.core.async.solo_mode_STAR_[goog.typeOf(x__3888__auto__)];
      if(or__3285__auto__) {
        return or__3285__auto__
      }else {
        var or__3285__auto____$1 = cljs.core.async.solo_mode_STAR_["_"];
        if(or__3285__auto____$1) {
          return or__3285__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "Mix.solo-mode*", m);
        }
      }
    }().call(null, m, mode)
  }
};
cljs.core.async.mix = function mix(out) {
  var cs = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
  var solo_modes = new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "pause", "pause", 1120344424), null, new cljs.core.Keyword(null, "mute", "mute", 1017267595), null], null), null);
  var attrs = cljs.core.conj.call(null, solo_modes, new cljs.core.Keyword(null, "solo", "solo", 1017440337));
  var solo_mode = cljs.core.atom.call(null, new cljs.core.Keyword(null, "mute", "mute", 1017267595));
  var change = cljs.core.async.chan.call(null);
  var changed = function(cs, solo_modes, attrs, solo_mode, change) {
    return function() {
      return cljs.core.async.put_BANG_.call(null, change, true)
    }
  }(cs, solo_modes, attrs, solo_mode, change);
  var pick = function(cs, solo_modes, attrs, solo_mode, change, changed) {
    return function(attr, chs) {
      return cljs.core.reduce_kv.call(null, function(cs, solo_modes, attrs, solo_mode, change, changed) {
        return function(ret, c, v) {
          if(cljs.core.truth_(attr.call(null, v))) {
            return cljs.core.conj.call(null, ret, c)
          }else {
            return ret
          }
        }
      }(cs, solo_modes, attrs, solo_mode, change, changed), cljs.core.PersistentHashSet.EMPTY, chs)
    }
  }(cs, solo_modes, attrs, solo_mode, change, changed);
  var calc_state = function(cs, solo_modes, attrs, solo_mode, change, changed, pick) {
    return function() {
      var chs = cljs.core.deref.call(null, cs);
      var mode = cljs.core.deref.call(null, solo_mode);
      var solos = pick.call(null, new cljs.core.Keyword(null, "solo", "solo", 1017440337), chs);
      var pauses = pick.call(null, new cljs.core.Keyword(null, "pause", "pause", 1120344424), chs);
      return new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "solos", "solos", 1123523302), solos, new cljs.core.Keyword(null, "mutes", "mutes", 1118168300), pick.call(null, new cljs.core.Keyword(null, "mute", "mute", 1017267595), chs), new cljs.core.Keyword(null, "reads", "reads", 1122290959), cljs.core.conj.call(null, cljs.core._EQ_.call(null, mode, new cljs.core.Keyword(null, "pause", "pause", 1120344424)) && !cljs.core.empty_QMARK_.call(null, solos) ? cljs.core.vec.call(null, 
      solos) : cljs.core.vec.call(null, cljs.core.remove.call(null, pauses, cljs.core.keys.call(null, chs))), change)], null)
    }
  }(cs, solo_modes, attrs, solo_mode, change, changed, pick);
  var m = function() {
    if(typeof cljs.core.async.t427270 !== "undefined") {
    }else {
      cljs.core.async.t427270 = function(pick, out, attrs, cs, calc_state, solo_modes, mix, changed, change, solo_mode, meta427271) {
        this.pick = pick;
        this.out = out;
        this.attrs = attrs;
        this.cs = cs;
        this.calc_state = calc_state;
        this.solo_modes = solo_modes;
        this.mix = mix;
        this.changed = changed;
        this.change = change;
        this.solo_mode = solo_mode;
        this.meta427271 = meta427271;
        this.cljs$lang$protocol_mask$partition1$ = 0;
        this.cljs$lang$protocol_mask$partition0$ = 393216
      };
      cljs.core.async.t427270.cljs$lang$type = true;
      cljs.core.async.t427270.cljs$lang$ctorStr = "cljs.core.async/t427270";
      cljs.core.async.t427270.cljs$lang$ctorPrWriter = function(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state) {
        return function(this__3829__auto__, writer__3830__auto__, opt__3831__auto__) {
          return cljs.core._write.call(null, writer__3830__auto__, "cljs.core.async/t427270")
        }
      }(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state);
      cljs.core.async.t427270.prototype.cljs$core$async$Mix$ = true;
      cljs.core.async.t427270.prototype.cljs$core$async$Mix$admix_STAR_$arity$2 = function(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state) {
        return function(_, ch) {
          var self__ = this;
          var ___$1 = this;
          cljs.core.swap_BANG_.call(null, self__.cs, cljs.core.assoc, ch, cljs.core.PersistentArrayMap.EMPTY);
          return self__.changed.call(null)
        }
      }(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state);
      cljs.core.async.t427270.prototype.cljs$core$async$Mix$unmix_STAR_$arity$2 = function(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state) {
        return function(_, ch) {
          var self__ = this;
          var ___$1 = this;
          cljs.core.swap_BANG_.call(null, self__.cs, cljs.core.dissoc, ch);
          return self__.changed.call(null)
        }
      }(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state);
      cljs.core.async.t427270.prototype.cljs$core$async$Mix$unmix_all_STAR_$arity$1 = function(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state) {
        return function(_) {
          var self__ = this;
          var ___$1 = this;
          cljs.core.reset_BANG_.call(null, self__.cs, cljs.core.PersistentArrayMap.EMPTY);
          return self__.changed.call(null)
        }
      }(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state);
      cljs.core.async.t427270.prototype.cljs$core$async$Mix$toggle_STAR_$arity$2 = function(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state) {
        return function(_, state_map) {
          var self__ = this;
          var ___$1 = this;
          cljs.core.swap_BANG_.call(null, self__.cs, cljs.core.partial.call(null, cljs.core.merge_with, core.merge), state_map);
          return self__.changed.call(null)
        }
      }(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state);
      cljs.core.async.t427270.prototype.cljs$core$async$Mix$solo_mode_STAR_$arity$2 = function(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state) {
        return function(_, mode) {
          var self__ = this;
          var ___$1 = this;
          if(cljs.core.truth_(self__.solo_modes.call(null, mode))) {
          }else {
            throw new Error([cljs.core.str("Assert failed: "), cljs.core.str([cljs.core.str("mode must be one of: "), cljs.core.str(self__.solo_modes)].join("")), cljs.core.str("\n"), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "solo-modes", "solo-modes", -1162732933, null), new cljs.core.Symbol(null, "mode", "mode", -1637174436, null))))].join(""));
          }
          cljs.core.reset_BANG_.call(null, self__.solo_mode, mode);
          return self__.changed.call(null)
        }
      }(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state);
      cljs.core.async.t427270.prototype.cljs$core$async$Mux$ = true;
      cljs.core.async.t427270.prototype.cljs$core$async$Mux$muxch_STAR_$arity$1 = function(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state) {
        return function(_) {
          var self__ = this;
          var ___$1 = this;
          return self__.out
        }
      }(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state);
      cljs.core.async.t427270.prototype.cljs$core$IMeta$_meta$arity$1 = function(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state) {
        return function(_427272) {
          var self__ = this;
          var _427272__$1 = this;
          return self__.meta427271
        }
      }(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state);
      cljs.core.async.t427270.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state) {
        return function(_427272, meta427271__$1) {
          var self__ = this;
          var _427272__$1 = this;
          return new cljs.core.async.t427270(self__.pick, self__.out, self__.attrs, self__.cs, self__.calc_state, self__.solo_modes, self__.mix, self__.changed, self__.change, self__.solo_mode, meta427271__$1)
        }
      }(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state);
      cljs.core.async.__GT_t427270 = function(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state) {
        return function __GT_t427270(pick__$1, out__$1, attrs__$1, cs__$1, calc_state__$1, solo_modes__$1, mix__$1, changed__$1, change__$1, solo_mode__$1, meta427271) {
          return new cljs.core.async.t427270(pick__$1, out__$1, attrs__$1, cs__$1, calc_state__$1, solo_modes__$1, mix__$1, changed__$1, change__$1, solo_mode__$1, meta427271)
        }
      }(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state)
    }
    return new cljs.core.async.t427270(pick, out, attrs, cs, calc_state, solo_modes, mix, changed, change, solo_mode, null)
  }();
  var c__5728__auto___427375 = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function() {
    var f__5729__auto__ = function() {
      var switch__5678__auto__ = function(state_427337) {
        var state_val_427338 = state_427337[1];
        if(state_val_427338 === 1) {
          var inst_427276 = state_427337[5];
          var inst_427276__$1 = calc_state.call(null);
          var inst_427277 = cljs.core.seq_QMARK_.call(null, inst_427276__$1);
          var state_427337__$1 = function() {
            var statearr_427339 = state_427337;
            statearr_427339[5] = inst_427276__$1;
            return statearr_427339
          }();
          if(inst_427277) {
            var statearr_427340_427376 = state_427337__$1;
            statearr_427340_427376[1] = 2
          }else {
            var statearr_427341_427377 = state_427337__$1;
            statearr_427341_427377[1] = 3
          }
          return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
        }else {
          if(state_val_427338 === 2) {
            var inst_427276 = state_427337[5];
            var inst_427279 = cljs.core.apply.call(null, cljs.core.hash_map, inst_427276);
            var state_427337__$1 = state_427337;
            var statearr_427342_427378 = state_427337__$1;
            statearr_427342_427378[2] = inst_427279;
            statearr_427342_427378[1] = 4;
            return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
          }else {
            if(state_val_427338 === 3) {
              var inst_427276 = state_427337[5];
              var state_427337__$1 = state_427337;
              var statearr_427343_427379 = state_427337__$1;
              statearr_427343_427379[2] = inst_427276;
              statearr_427343_427379[1] = 4;
              return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
            }else {
              if(state_val_427338 === 4) {
                var inst_427276 = state_427337[5];
                var inst_427282 = state_427337[2];
                var inst_427283 = cljs.core.get.call(null, inst_427282, new cljs.core.Keyword(null, "reads", "reads", 1122290959));
                var inst_427284 = cljs.core.get.call(null, inst_427282, new cljs.core.Keyword(null, "mutes", "mutes", 1118168300));
                var inst_427285 = cljs.core.get.call(null, inst_427282, new cljs.core.Keyword(null, "solos", "solos", 1123523302));
                var inst_427286 = inst_427276;
                var state_427337__$1 = function() {
                  var statearr_427344 = state_427337;
                  statearr_427344[6] = inst_427283;
                  statearr_427344[7] = inst_427284;
                  statearr_427344[8] = inst_427285;
                  statearr_427344[9] = inst_427286;
                  return statearr_427344
                }();
                var statearr_427345_427380 = state_427337__$1;
                statearr_427345_427380[2] = null;
                statearr_427345_427380[1] = 5;
                return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
              }else {
                if(state_val_427338 === 5) {
                  var inst_427286 = state_427337[9];
                  var inst_427289 = cljs.core.seq_QMARK_.call(null, inst_427286);
                  var state_427337__$1 = state_427337;
                  if(inst_427289) {
                    var statearr_427346_427381 = state_427337__$1;
                    statearr_427346_427381[1] = 7
                  }else {
                    var statearr_427347_427382 = state_427337__$1;
                    statearr_427347_427382[1] = 8
                  }
                  return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                }else {
                  if(state_val_427338 === 6) {
                    var inst_427335 = state_427337[2];
                    var state_427337__$1 = state_427337;
                    return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_427337__$1, inst_427335)
                  }else {
                    if(state_val_427338 === 7) {
                      var inst_427286 = state_427337[9];
                      var inst_427291 = cljs.core.apply.call(null, cljs.core.hash_map, inst_427286);
                      var state_427337__$1 = state_427337;
                      var statearr_427348_427383 = state_427337__$1;
                      statearr_427348_427383[2] = inst_427291;
                      statearr_427348_427383[1] = 9;
                      return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                    }else {
                      if(state_val_427338 === 8) {
                        var inst_427286 = state_427337[9];
                        var state_427337__$1 = state_427337;
                        var statearr_427349_427384 = state_427337__$1;
                        statearr_427349_427384[2] = inst_427286;
                        statearr_427349_427384[1] = 9;
                        return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                      }else {
                        if(state_val_427338 === 9) {
                          var inst_427294 = state_427337[10];
                          var inst_427294__$1 = state_427337[2];
                          var inst_427295 = cljs.core.get.call(null, inst_427294__$1, new cljs.core.Keyword(null, "reads", "reads", 1122290959));
                          var inst_427296 = cljs.core.get.call(null, inst_427294__$1, new cljs.core.Keyword(null, "mutes", "mutes", 1118168300));
                          var inst_427297 = cljs.core.get.call(null, inst_427294__$1, new cljs.core.Keyword(null, "solos", "solos", 1123523302));
                          var state_427337__$1 = function() {
                            var statearr_427350 = state_427337;
                            statearr_427350[10] = inst_427294__$1;
                            statearr_427350[11] = inst_427296;
                            statearr_427350[12] = inst_427297;
                            return statearr_427350
                          }();
                          return cljs.core.async.impl.ioc_helpers.ioc_alts_BANG_.call(null, state_427337__$1, 10, inst_427295)
                        }else {
                          if(state_val_427338 === 10) {
                            var inst_427301 = state_427337[13];
                            var inst_427302 = state_427337[14];
                            var inst_427300 = state_427337[2];
                            var inst_427301__$1 = cljs.core.nth.call(null, inst_427300, 0, null);
                            var inst_427302__$1 = cljs.core.nth.call(null, inst_427300, 1, null);
                            var inst_427303 = inst_427301__$1 == null;
                            var inst_427304 = cljs.core._EQ_.call(null, inst_427302__$1, change);
                            var inst_427305 = inst_427303 || inst_427304;
                            var state_427337__$1 = function() {
                              var statearr_427351 = state_427337;
                              statearr_427351[13] = inst_427301__$1;
                              statearr_427351[14] = inst_427302__$1;
                              return statearr_427351
                            }();
                            if(cljs.core.truth_(inst_427305)) {
                              var statearr_427352_427385 = state_427337__$1;
                              statearr_427352_427385[1] = 11
                            }else {
                              var statearr_427353_427386 = state_427337__$1;
                              statearr_427353_427386[1] = 12
                            }
                            return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                          }else {
                            if(state_val_427338 === 11) {
                              var inst_427301 = state_427337[13];
                              var inst_427307 = inst_427301 == null;
                              var state_427337__$1 = state_427337;
                              if(cljs.core.truth_(inst_427307)) {
                                var statearr_427354_427387 = state_427337__$1;
                                statearr_427354_427387[1] = 14
                              }else {
                                var statearr_427355_427388 = state_427337__$1;
                                statearr_427355_427388[1] = 15
                              }
                              return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                            }else {
                              if(state_val_427338 === 12) {
                                var inst_427302 = state_427337[14];
                                var inst_427316 = state_427337[15];
                                var inst_427297 = state_427337[12];
                                var inst_427316__$1 = inst_427297.call(null, inst_427302);
                                var state_427337__$1 = function() {
                                  var statearr_427356 = state_427337;
                                  statearr_427356[15] = inst_427316__$1;
                                  return statearr_427356
                                }();
                                if(cljs.core.truth_(inst_427316__$1)) {
                                  var statearr_427357_427389 = state_427337__$1;
                                  statearr_427357_427389[1] = 17
                                }else {
                                  var statearr_427358_427390 = state_427337__$1;
                                  statearr_427358_427390[1] = 18
                                }
                                return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                              }else {
                                if(state_val_427338 === 13) {
                                  var inst_427333 = state_427337[2];
                                  var state_427337__$1 = state_427337;
                                  var statearr_427359_427391 = state_427337__$1;
                                  statearr_427359_427391[2] = inst_427333;
                                  statearr_427359_427391[1] = 6;
                                  return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                                }else {
                                  if(state_val_427338 === 14) {
                                    var inst_427302 = state_427337[14];
                                    var inst_427309 = cljs.core.swap_BANG_.call(null, cs, cljs.core.dissoc, inst_427302);
                                    var state_427337__$1 = state_427337;
                                    var statearr_427360_427392 = state_427337__$1;
                                    statearr_427360_427392[2] = inst_427309;
                                    statearr_427360_427392[1] = 16;
                                    return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                                  }else {
                                    if(state_val_427338 === 15) {
                                      var state_427337__$1 = state_427337;
                                      var statearr_427361_427393 = state_427337__$1;
                                      statearr_427361_427393[2] = null;
                                      statearr_427361_427393[1] = 16;
                                      return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                                    }else {
                                      if(state_val_427338 === 16) {
                                        var inst_427312 = state_427337[2];
                                        var inst_427313 = calc_state.call(null);
                                        var inst_427286 = inst_427313;
                                        var state_427337__$1 = function() {
                                          var statearr_427362 = state_427337;
                                          statearr_427362[16] = inst_427312;
                                          statearr_427362[9] = inst_427286;
                                          return statearr_427362
                                        }();
                                        var statearr_427363_427394 = state_427337__$1;
                                        statearr_427363_427394[2] = null;
                                        statearr_427363_427394[1] = 5;
                                        return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                                      }else {
                                        if(state_val_427338 === 17) {
                                          var inst_427316 = state_427337[15];
                                          var state_427337__$1 = state_427337;
                                          var statearr_427364_427395 = state_427337__$1;
                                          statearr_427364_427395[2] = inst_427316;
                                          statearr_427364_427395[1] = 19;
                                          return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                                        }else {
                                          if(state_val_427338 === 18) {
                                            var inst_427302 = state_427337[14];
                                            var inst_427296 = state_427337[11];
                                            var inst_427297 = state_427337[12];
                                            var inst_427319 = cljs.core.empty_QMARK_.call(null, inst_427297);
                                            var inst_427320 = inst_427296.call(null, inst_427302);
                                            var inst_427321 = cljs.core.not.call(null, inst_427320);
                                            var inst_427322 = inst_427319 && inst_427321;
                                            var state_427337__$1 = state_427337;
                                            var statearr_427365_427396 = state_427337__$1;
                                            statearr_427365_427396[2] = inst_427322;
                                            statearr_427365_427396[1] = 19;
                                            return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                                          }else {
                                            if(state_val_427338 === 19) {
                                              var inst_427324 = state_427337[2];
                                              var state_427337__$1 = state_427337;
                                              if(cljs.core.truth_(inst_427324)) {
                                                var statearr_427366_427397 = state_427337__$1;
                                                statearr_427366_427397[1] = 20
                                              }else {
                                                var statearr_427367_427398 = state_427337__$1;
                                                statearr_427367_427398[1] = 21
                                              }
                                              return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                                            }else {
                                              if(state_val_427338 === 20) {
                                                var inst_427301 = state_427337[13];
                                                var state_427337__$1 = state_427337;
                                                return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_427337__$1, 23, out, inst_427301)
                                              }else {
                                                if(state_val_427338 === 21) {
                                                  var state_427337__$1 = state_427337;
                                                  var statearr_427368_427399 = state_427337__$1;
                                                  statearr_427368_427399[2] = null;
                                                  statearr_427368_427399[1] = 22;
                                                  return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                                                }else {
                                                  if(state_val_427338 === 22) {
                                                    var inst_427294 = state_427337[10];
                                                    var inst_427330 = state_427337[2];
                                                    var inst_427286 = inst_427294;
                                                    var state_427337__$1 = function() {
                                                      var statearr_427369 = state_427337;
                                                      statearr_427369[9] = inst_427286;
                                                      statearr_427369[17] = inst_427330;
                                                      return statearr_427369
                                                    }();
                                                    var statearr_427370_427400 = state_427337__$1;
                                                    statearr_427370_427400[2] = null;
                                                    statearr_427370_427400[1] = 5;
                                                    return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                                                  }else {
                                                    if(state_val_427338 === 23) {
                                                      var inst_427327 = state_427337[2];
                                                      var state_427337__$1 = state_427337;
                                                      var statearr_427371_427401 = state_427337__$1;
                                                      statearr_427371_427401[2] = inst_427327;
                                                      statearr_427371_427401[1] = 22;
                                                      return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                                                    }else {
                                                      return null
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      };
      return function(switch__5678__auto__) {
        return function() {
          var state_machine__5679__auto__ = null;
          var state_machine__5679__auto____0 = function() {
            var statearr_427373 = new Array(18);
            statearr_427373[0] = state_machine__5679__auto__;
            statearr_427373[1] = 1;
            return statearr_427373
          };
          var state_machine__5679__auto____1 = function(state_427337) {
            while(true) {
              var result__5680__auto__ = switch__5678__auto__.call(null, state_427337);
              if(cljs.core.keyword_identical_QMARK_.call(null, result__5680__auto__, new cljs.core.Keyword(null, "recur", "recur", 1122293407))) {
                continue
              }else {
                return result__5680__auto__
              }
              break
            }
          };
          state_machine__5679__auto__ = function(state_427337) {
            switch(arguments.length) {
              case 0:
                return state_machine__5679__auto____0.call(this);
              case 1:
                return state_machine__5679__auto____1.call(this, state_427337)
            }
            throw new Error("Invalid arity: " + arguments.length);
          };
          state_machine__5679__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__5679__auto____0;
          state_machine__5679__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__5679__auto____1;
          return state_machine__5679__auto__
        }()
      }(switch__5678__auto__)
    }();
    var state__5730__auto__ = function() {
      var statearr_427374 = f__5729__auto__.call(null);
      statearr_427374[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__5728__auto___427375;
      return statearr_427374
    }();
    return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__5730__auto__)
  });
  return m
};
cljs.core.async.admix = function admix(mix, ch) {
  return cljs.core.async.admix_STAR_.call(null, mix, ch)
};
cljs.core.async.unmix = function unmix(mix, ch) {
  return cljs.core.async.unmix_STAR_.call(null, mix, ch)
};
cljs.core.async.unmix_all = function unmix_all(mix) {
  return cljs.core.async.unmix_all_STAR_.call(null, mix)
};
cljs.core.async.toggle = function toggle(mix, state_map) {
  return cljs.core.async.toggle_STAR_.call(null, mix, state_map)
};
cljs.core.async.solo_mode = function solo_mode(mix, mode) {
  return cljs.core.async.solo_mode_STAR_.call(null, mix, mode)
};
cljs.core.async.Pub = function() {
  var obj427403 = {};
  return obj427403
}();
cljs.core.async.sub_STAR_ = function sub_STAR_(p, v, ch, close_QMARK_) {
  if(function() {
    var and__3273__auto__ = p;
    if(and__3273__auto__) {
      return p.cljs$core$async$Pub$sub_STAR_$arity$4
    }else {
      return and__3273__auto__
    }
  }()) {
    return p.cljs$core$async$Pub$sub_STAR_$arity$4(p, v, ch, close_QMARK_)
  }else {
    var x__3888__auto__ = p == null ? null : p;
    return function() {
      var or__3285__auto__ = cljs.core.async.sub_STAR_[goog.typeOf(x__3888__auto__)];
      if(or__3285__auto__) {
        return or__3285__auto__
      }else {
        var or__3285__auto____$1 = cljs.core.async.sub_STAR_["_"];
        if(or__3285__auto____$1) {
          return or__3285__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "Pub.sub*", p);
        }
      }
    }().call(null, p, v, ch, close_QMARK_)
  }
};
cljs.core.async.unsub_STAR_ = function unsub_STAR_(p, v, ch) {
  if(function() {
    var and__3273__auto__ = p;
    if(and__3273__auto__) {
      return p.cljs$core$async$Pub$unsub_STAR_$arity$3
    }else {
      return and__3273__auto__
    }
  }()) {
    return p.cljs$core$async$Pub$unsub_STAR_$arity$3(p, v, ch)
  }else {
    var x__3888__auto__ = p == null ? null : p;
    return function() {
      var or__3285__auto__ = cljs.core.async.unsub_STAR_[goog.typeOf(x__3888__auto__)];
      if(or__3285__auto__) {
        return or__3285__auto__
      }else {
        var or__3285__auto____$1 = cljs.core.async.unsub_STAR_["_"];
        if(or__3285__auto____$1) {
          return or__3285__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "Pub.unsub*", p);
        }
      }
    }().call(null, p, v, ch)
  }
};
cljs.core.async.unsub_all_STAR_ = function() {
  var unsub_all_STAR_ = null;
  var unsub_all_STAR___1 = function(p) {
    if(function() {
      var and__3273__auto__ = p;
      if(and__3273__auto__) {
        return p.cljs$core$async$Pub$unsub_all_STAR_$arity$1
      }else {
        return and__3273__auto__
      }
    }()) {
      return p.cljs$core$async$Pub$unsub_all_STAR_$arity$1(p)
    }else {
      var x__3888__auto__ = p == null ? null : p;
      return function() {
        var or__3285__auto__ = cljs.core.async.unsub_all_STAR_[goog.typeOf(x__3888__auto__)];
        if(or__3285__auto__) {
          return or__3285__auto__
        }else {
          var or__3285__auto____$1 = cljs.core.async.unsub_all_STAR_["_"];
          if(or__3285__auto____$1) {
            return or__3285__auto____$1
          }else {
            throw cljs.core.missing_protocol.call(null, "Pub.unsub-all*", p);
          }
        }
      }().call(null, p)
    }
  };
  var unsub_all_STAR___2 = function(p, v) {
    if(function() {
      var and__3273__auto__ = p;
      if(and__3273__auto__) {
        return p.cljs$core$async$Pub$unsub_all_STAR_$arity$2
      }else {
        return and__3273__auto__
      }
    }()) {
      return p.cljs$core$async$Pub$unsub_all_STAR_$arity$2(p, v)
    }else {
      var x__3888__auto__ = p == null ? null : p;
      return function() {
        var or__3285__auto__ = cljs.core.async.unsub_all_STAR_[goog.typeOf(x__3888__auto__)];
        if(or__3285__auto__) {
          return or__3285__auto__
        }else {
          var or__3285__auto____$1 = cljs.core.async.unsub_all_STAR_["_"];
          if(or__3285__auto____$1) {
            return or__3285__auto____$1
          }else {
            throw cljs.core.missing_protocol.call(null, "Pub.unsub-all*", p);
          }
        }
      }().call(null, p, v)
    }
  };
  unsub_all_STAR_ = function(p, v) {
    switch(arguments.length) {
      case 1:
        return unsub_all_STAR___1.call(this, p);
      case 2:
        return unsub_all_STAR___2.call(this, p, v)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  unsub_all_STAR_.cljs$core$IFn$_invoke$arity$1 = unsub_all_STAR___1;
  unsub_all_STAR_.cljs$core$IFn$_invoke$arity$2 = unsub_all_STAR___2;
  return unsub_all_STAR_
}();
cljs.core.async.pub = function() {
  var pub = null;
  var pub__2 = function(ch, topic_fn) {
    return pub.call(null, ch, topic_fn, cljs.core.constantly.call(null, null))
  };
  var pub__3 = function(ch, topic_fn, buf_fn) {
    var mults = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
    var ensure_mult = function(mults) {
      return function(topic) {
        var or__3285__auto__ = cljs.core.get.call(null, cljs.core.deref.call(null, mults), topic);
        if(cljs.core.truth_(or__3285__auto__)) {
          return or__3285__auto__
        }else {
          return cljs.core.get.call(null, cljs.core.swap_BANG_.call(null, mults, function(or__3285__auto__, mults) {
            return function(p1__427404_SHARP_) {
              if(cljs.core.truth_(p1__427404_SHARP_.call(null, topic))) {
                return p1__427404_SHARP_
              }else {
                return cljs.core.assoc.call(null, p1__427404_SHARP_, topic, cljs.core.async.mult.call(null, cljs.core.async.chan.call(null, buf_fn.call(null, topic))))
              }
            }
          }(or__3285__auto__, mults)), topic)
        }
      }
    }(mults);
    var p = function() {
      if(typeof cljs.core.async.t427528 !== "undefined") {
      }else {
        cljs.core.async.t427528 = function(ensure_mult, mults, buf_fn, topic_fn, ch, pub, meta427529) {
          this.ensure_mult = ensure_mult;
          this.mults = mults;
          this.buf_fn = buf_fn;
          this.topic_fn = topic_fn;
          this.ch = ch;
          this.pub = pub;
          this.meta427529 = meta427529;
          this.cljs$lang$protocol_mask$partition1$ = 0;
          this.cljs$lang$protocol_mask$partition0$ = 393216
        };
        cljs.core.async.t427528.cljs$lang$type = true;
        cljs.core.async.t427528.cljs$lang$ctorStr = "cljs.core.async/t427528";
        cljs.core.async.t427528.cljs$lang$ctorPrWriter = function(mults, ensure_mult) {
          return function(this__3829__auto__, writer__3830__auto__, opt__3831__auto__) {
            return cljs.core._write.call(null, writer__3830__auto__, "cljs.core.async/t427528")
          }
        }(mults, ensure_mult);
        cljs.core.async.t427528.prototype.cljs$core$async$Pub$ = true;
        cljs.core.async.t427528.prototype.cljs$core$async$Pub$sub_STAR_$arity$4 = function(mults, ensure_mult) {
          return function(p, topic, ch__$2, close_QMARK_) {
            var self__ = this;
            var p__$1 = this;
            var m = self__.ensure_mult.call(null, topic);
            return cljs.core.async.tap.call(null, m, ch__$2, close_QMARK_)
          }
        }(mults, ensure_mult);
        cljs.core.async.t427528.prototype.cljs$core$async$Pub$unsub_STAR_$arity$3 = function(mults, ensure_mult) {
          return function(p, topic, ch__$2) {
            var self__ = this;
            var p__$1 = this;
            var temp__4092__auto__ = cljs.core.get.call(null, cljs.core.deref.call(null, self__.mults), topic);
            if(cljs.core.truth_(temp__4092__auto__)) {
              var m = temp__4092__auto__;
              return cljs.core.async.untap.call(null, m, ch__$2)
            }else {
              return null
            }
          }
        }(mults, ensure_mult);
        cljs.core.async.t427528.prototype.cljs$core$async$Pub$unsub_all_STAR_$arity$1 = function(mults, ensure_mult) {
          return function(_) {
            var self__ = this;
            var ___$1 = this;
            return cljs.core.reset_BANG_.call(null, self__.mults, cljs.core.PersistentArrayMap.EMPTY)
          }
        }(mults, ensure_mult);
        cljs.core.async.t427528.prototype.cljs$core$async$Pub$unsub_all_STAR_$arity$2 = function(mults, ensure_mult) {
          return function(_, topic) {
            var self__ = this;
            var ___$1 = this;
            return cljs.core.swap_BANG_.call(null, self__.mults, cljs.core.dissoc, topic)
          }
        }(mults, ensure_mult);
        cljs.core.async.t427528.prototype.cljs$core$async$Mux$ = true;
        cljs.core.async.t427528.prototype.cljs$core$async$Mux$muxch_STAR_$arity$1 = function(mults, ensure_mult) {
          return function(_) {
            var self__ = this;
            var ___$1 = this;
            return self__.ch
          }
        }(mults, ensure_mult);
        cljs.core.async.t427528.prototype.cljs$core$IMeta$_meta$arity$1 = function(mults, ensure_mult) {
          return function(_427530) {
            var self__ = this;
            var _427530__$1 = this;
            return self__.meta427529
          }
        }(mults, ensure_mult);
        cljs.core.async.t427528.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(mults, ensure_mult) {
          return function(_427530, meta427529__$1) {
            var self__ = this;
            var _427530__$1 = this;
            return new cljs.core.async.t427528(self__.ensure_mult, self__.mults, self__.buf_fn, self__.topic_fn, self__.ch, self__.pub, meta427529__$1)
          }
        }(mults, ensure_mult);
        cljs.core.async.__GT_t427528 = function(mults, ensure_mult) {
          return function __GT_t427528(ensure_mult__$1, mults__$1, buf_fn__$1, topic_fn__$1, ch__$1, pub__$1, meta427529) {
            return new cljs.core.async.t427528(ensure_mult__$1, mults__$1, buf_fn__$1, topic_fn__$1, ch__$1, pub__$1, meta427529)
          }
        }(mults, ensure_mult)
      }
      return new cljs.core.async.t427528(ensure_mult, mults, buf_fn, topic_fn, ch, pub, null)
    }();
    var c__5728__auto___427651 = cljs.core.async.chan.call(null, 1);
    cljs.core.async.impl.dispatch.run.call(null, function() {
      var f__5729__auto__ = function() {
        var switch__5678__auto__ = function(state_427603) {
          var state_val_427604 = state_427603[1];
          if(state_val_427604 === 1) {
            var state_427603__$1 = state_427603;
            var statearr_427605_427652 = state_427603__$1;
            statearr_427605_427652[2] = null;
            statearr_427605_427652[1] = 2;
            return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
          }else {
            if(state_val_427604 === 2) {
              var state_427603__$1 = state_427603;
              return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_427603__$1, 4, ch)
            }else {
              if(state_val_427604 === 3) {
                var inst_427601 = state_427603[2];
                var state_427603__$1 = state_427603;
                return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_427603__$1, inst_427601)
              }else {
                if(state_val_427604 === 4) {
                  var inst_427533 = state_427603[5];
                  var inst_427533__$1 = state_427603[2];
                  var inst_427534 = inst_427533__$1 == null;
                  var state_427603__$1 = function() {
                    var statearr_427606 = state_427603;
                    statearr_427606[5] = inst_427533__$1;
                    return statearr_427606
                  }();
                  if(cljs.core.truth_(inst_427534)) {
                    var statearr_427607_427653 = state_427603__$1;
                    statearr_427607_427653[1] = 5
                  }else {
                    var statearr_427608_427654 = state_427603__$1;
                    statearr_427608_427654[1] = 6
                  }
                  return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                }else {
                  if(state_val_427604 === 5) {
                    var inst_427540 = cljs.core.deref.call(null, mults);
                    var inst_427541 = cljs.core.vals.call(null, inst_427540);
                    var inst_427542 = cljs.core.seq.call(null, inst_427541);
                    var inst_427543 = inst_427542;
                    var inst_427544 = null;
                    var inst_427545 = 0;
                    var inst_427546 = 0;
                    var state_427603__$1 = function() {
                      var statearr_427609 = state_427603;
                      statearr_427609[6] = inst_427545;
                      statearr_427609[7] = inst_427546;
                      statearr_427609[8] = inst_427543;
                      statearr_427609[9] = inst_427544;
                      return statearr_427609
                    }();
                    var statearr_427610_427655 = state_427603__$1;
                    statearr_427610_427655[2] = null;
                    statearr_427610_427655[1] = 8;
                    return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                  }else {
                    if(state_val_427604 === 6) {
                      var inst_427583 = state_427603[10];
                      var inst_427581 = state_427603[11];
                      var inst_427533 = state_427603[5];
                      var inst_427581__$1 = topic_fn.call(null, inst_427533);
                      var inst_427582 = cljs.core.deref.call(null, mults);
                      var inst_427583__$1 = cljs.core.get.call(null, inst_427582, inst_427581__$1);
                      var state_427603__$1 = function() {
                        var statearr_427611 = state_427603;
                        statearr_427611[10] = inst_427583__$1;
                        statearr_427611[11] = inst_427581__$1;
                        return statearr_427611
                      }();
                      if(cljs.core.truth_(inst_427583__$1)) {
                        var statearr_427612_427656 = state_427603__$1;
                        statearr_427612_427656[1] = 19
                      }else {
                        var statearr_427613_427657 = state_427603__$1;
                        statearr_427613_427657[1] = 20
                      }
                      return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                    }else {
                      if(state_val_427604 === 7) {
                        var inst_427599 = state_427603[2];
                        var state_427603__$1 = state_427603;
                        var statearr_427614_427658 = state_427603__$1;
                        statearr_427614_427658[2] = inst_427599;
                        statearr_427614_427658[1] = 3;
                        return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                      }else {
                        if(state_val_427604 === 8) {
                          var inst_427545 = state_427603[6];
                          var inst_427546 = state_427603[7];
                          var inst_427548 = inst_427546 < inst_427545;
                          var inst_427549 = inst_427548;
                          var state_427603__$1 = state_427603;
                          if(cljs.core.truth_(inst_427549)) {
                            var statearr_427618_427659 = state_427603__$1;
                            statearr_427618_427659[1] = 10
                          }else {
                            var statearr_427619_427660 = state_427603__$1;
                            statearr_427619_427660[1] = 11
                          }
                          return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                        }else {
                          if(state_val_427604 === 9) {
                            var inst_427579 = state_427603[2];
                            var state_427603__$1 = state_427603;
                            var statearr_427620_427661 = state_427603__$1;
                            statearr_427620_427661[2] = inst_427579;
                            statearr_427620_427661[1] = 7;
                            return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                          }else {
                            if(state_val_427604 === 10) {
                              var inst_427545 = state_427603[6];
                              var inst_427546 = state_427603[7];
                              var inst_427543 = state_427603[8];
                              var inst_427544 = state_427603[9];
                              var inst_427551 = cljs.core._nth.call(null, inst_427544, inst_427546);
                              var inst_427552 = cljs.core.async.muxch_STAR_.call(null, inst_427551);
                              var inst_427553 = cljs.core.async.close_BANG_.call(null, inst_427552);
                              var inst_427554 = inst_427546 + 1;
                              var tmp427615 = inst_427545;
                              var tmp427616 = inst_427543;
                              var tmp427617 = inst_427544;
                              var inst_427543__$1 = tmp427616;
                              var inst_427544__$1 = tmp427617;
                              var inst_427545__$1 = tmp427615;
                              var inst_427546__$1 = inst_427554;
                              var state_427603__$1 = function() {
                                var statearr_427621 = state_427603;
                                statearr_427621[6] = inst_427545__$1;
                                statearr_427621[7] = inst_427546__$1;
                                statearr_427621[8] = inst_427543__$1;
                                statearr_427621[9] = inst_427544__$1;
                                statearr_427621[12] = inst_427553;
                                return statearr_427621
                              }();
                              var statearr_427622_427662 = state_427603__$1;
                              statearr_427622_427662[2] = null;
                              statearr_427622_427662[1] = 8;
                              return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                            }else {
                              if(state_val_427604 === 11) {
                                var inst_427543 = state_427603[8];
                                var inst_427557 = state_427603[13];
                                var inst_427557__$1 = cljs.core.seq.call(null, inst_427543);
                                var state_427603__$1 = function() {
                                  var statearr_427623 = state_427603;
                                  statearr_427623[13] = inst_427557__$1;
                                  return statearr_427623
                                }();
                                if(inst_427557__$1) {
                                  var statearr_427624_427663 = state_427603__$1;
                                  statearr_427624_427663[1] = 13
                                }else {
                                  var statearr_427625_427664 = state_427603__$1;
                                  statearr_427625_427664[1] = 14
                                }
                                return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                              }else {
                                if(state_val_427604 === 12) {
                                  var inst_427577 = state_427603[2];
                                  var state_427603__$1 = state_427603;
                                  var statearr_427626_427665 = state_427603__$1;
                                  statearr_427626_427665[2] = inst_427577;
                                  statearr_427626_427665[1] = 9;
                                  return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                                }else {
                                  if(state_val_427604 === 13) {
                                    var inst_427557 = state_427603[13];
                                    var inst_427559 = cljs.core.chunked_seq_QMARK_.call(null, inst_427557);
                                    var state_427603__$1 = state_427603;
                                    if(inst_427559) {
                                      var statearr_427627_427666 = state_427603__$1;
                                      statearr_427627_427666[1] = 16
                                    }else {
                                      var statearr_427628_427667 = state_427603__$1;
                                      statearr_427628_427667[1] = 17
                                    }
                                    return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                                  }else {
                                    if(state_val_427604 === 14) {
                                      var state_427603__$1 = state_427603;
                                      var statearr_427629_427668 = state_427603__$1;
                                      statearr_427629_427668[2] = null;
                                      statearr_427629_427668[1] = 15;
                                      return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                                    }else {
                                      if(state_val_427604 === 15) {
                                        var inst_427575 = state_427603[2];
                                        var state_427603__$1 = state_427603;
                                        var statearr_427630_427669 = state_427603__$1;
                                        statearr_427630_427669[2] = inst_427575;
                                        statearr_427630_427669[1] = 12;
                                        return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                                      }else {
                                        if(state_val_427604 === 16) {
                                          var inst_427557 = state_427603[13];
                                          var inst_427561 = cljs.core.chunk_first.call(null, inst_427557);
                                          var inst_427562 = cljs.core.chunk_rest.call(null, inst_427557);
                                          var inst_427563 = cljs.core.count.call(null, inst_427561);
                                          var inst_427543 = inst_427562;
                                          var inst_427544 = inst_427561;
                                          var inst_427545 = inst_427563;
                                          var inst_427546 = 0;
                                          var state_427603__$1 = function() {
                                            var statearr_427631 = state_427603;
                                            statearr_427631[6] = inst_427545;
                                            statearr_427631[7] = inst_427546;
                                            statearr_427631[8] = inst_427543;
                                            statearr_427631[9] = inst_427544;
                                            return statearr_427631
                                          }();
                                          var statearr_427632_427670 = state_427603__$1;
                                          statearr_427632_427670[2] = null;
                                          statearr_427632_427670[1] = 8;
                                          return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                                        }else {
                                          if(state_val_427604 === 17) {
                                            var inst_427557 = state_427603[13];
                                            var inst_427566 = cljs.core.first.call(null, inst_427557);
                                            var inst_427567 = cljs.core.async.muxch_STAR_.call(null, inst_427566);
                                            var inst_427568 = cljs.core.async.close_BANG_.call(null, inst_427567);
                                            var inst_427569 = cljs.core.next.call(null, inst_427557);
                                            var inst_427543 = inst_427569;
                                            var inst_427544 = null;
                                            var inst_427545 = 0;
                                            var inst_427546 = 0;
                                            var state_427603__$1 = function() {
                                              var statearr_427633 = state_427603;
                                              statearr_427633[6] = inst_427545;
                                              statearr_427633[7] = inst_427546;
                                              statearr_427633[8] = inst_427543;
                                              statearr_427633[9] = inst_427544;
                                              statearr_427633[14] = inst_427568;
                                              return statearr_427633
                                            }();
                                            var statearr_427634_427671 = state_427603__$1;
                                            statearr_427634_427671[2] = null;
                                            statearr_427634_427671[1] = 8;
                                            return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                                          }else {
                                            if(state_val_427604 === 18) {
                                              var inst_427572 = state_427603[2];
                                              var state_427603__$1 = state_427603;
                                              var statearr_427635_427672 = state_427603__$1;
                                              statearr_427635_427672[2] = inst_427572;
                                              statearr_427635_427672[1] = 15;
                                              return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                                            }else {
                                              if(state_val_427604 === 19) {
                                                var state_427603__$1 = state_427603;
                                                var statearr_427636_427673 = state_427603__$1;
                                                statearr_427636_427673[2] = null;
                                                statearr_427636_427673[1] = 24;
                                                return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                                              }else {
                                                if(state_val_427604 === 20) {
                                                  var state_427603__$1 = state_427603;
                                                  var statearr_427637_427674 = state_427603__$1;
                                                  statearr_427637_427674[2] = null;
                                                  statearr_427637_427674[1] = 21;
                                                  return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                                                }else {
                                                  if(state_val_427604 === 21) {
                                                    var inst_427596 = state_427603[2];
                                                    var state_427603__$1 = function() {
                                                      var statearr_427638 = state_427603;
                                                      statearr_427638[15] = inst_427596;
                                                      return statearr_427638
                                                    }();
                                                    var statearr_427639_427675 = state_427603__$1;
                                                    statearr_427639_427675[2] = null;
                                                    statearr_427639_427675[1] = 2;
                                                    return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                                                  }else {
                                                    if(state_val_427604 === 22) {
                                                      var inst_427593 = state_427603[2];
                                                      var state_427603__$1 = state_427603;
                                                      var statearr_427640_427676 = state_427603__$1;
                                                      statearr_427640_427676[2] = inst_427593;
                                                      statearr_427640_427676[1] = 21;
                                                      return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                                                    }else {
                                                      if(state_val_427604 === 23) {
                                                        var inst_427581 = state_427603[11];
                                                        var inst_427585 = state_427603[2];
                                                        var inst_427586 = cljs.core.swap_BANG_.call(null, mults, cljs.core.dissoc, inst_427581);
                                                        var state_427603__$1 = function() {
                                                          var statearr_427641 = state_427603;
                                                          statearr_427641[16] = inst_427585;
                                                          return statearr_427641
                                                        }();
                                                        var statearr_427642_427677 = state_427603__$1;
                                                        statearr_427642_427677[2] = inst_427586;
                                                        statearr_427642_427677[1] = 22;
                                                        return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                                                      }else {
                                                        if(state_val_427604 === 24) {
                                                          try {
                                                            var inst_427583 = state_427603[10];
                                                            var inst_427533 = state_427603[5];
                                                            var inst_427589 = cljs.core.async.muxch_STAR_.call(null, inst_427583);
                                                            var state_427603__$1 = state_427603;
                                                            return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_427603__$1, 25, inst_427589, inst_427533)
                                                          }catch(e427643) {
                                                            if(e427643 instanceof Object) {
                                                              var ex__5672__auto__ = e427643;
                                                              var statearr_427644_427678 = state_427603;
                                                              statearr_427644_427678[1] = 23;
                                                              statearr_427644_427678[2] = ex__5672__auto__;
                                                              return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                                                            }else {
                                                              if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                                                                throw e427643;
                                                              }else {
                                                                return null
                                                              }
                                                            }
                                                          }
                                                        }else {
                                                          if(state_val_427604 === 25) {
                                                            try {
                                                              var inst_427591 = state_427603[2];
                                                              var state_427603__$1 = state_427603;
                                                              var statearr_427647_427679 = state_427603__$1;
                                                              statearr_427647_427679[2] = inst_427591;
                                                              statearr_427647_427679[1] = 22;
                                                              return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                                                            }catch(e427645) {
                                                              if(e427645 instanceof Object) {
                                                                var ex__5672__auto__ = e427645;
                                                                var statearr_427646_427680 = state_427603;
                                                                statearr_427646_427680[1] = 23;
                                                                statearr_427646_427680[2] = ex__5672__auto__;
                                                                return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                                                              }else {
                                                                if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                                                                  throw e427645;
                                                                }else {
                                                                  return null
                                                                }
                                                              }
                                                            }
                                                          }else {
                                                            return null
                                                          }
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        };
        return function(switch__5678__auto__) {
          return function() {
            var state_machine__5679__auto__ = null;
            var state_machine__5679__auto____0 = function() {
              var statearr_427649 = new Array(17);
              statearr_427649[0] = state_machine__5679__auto__;
              statearr_427649[1] = 1;
              return statearr_427649
            };
            var state_machine__5679__auto____1 = function(state_427603) {
              while(true) {
                var result__5680__auto__ = switch__5678__auto__.call(null, state_427603);
                if(cljs.core.keyword_identical_QMARK_.call(null, result__5680__auto__, new cljs.core.Keyword(null, "recur", "recur", 1122293407))) {
                  continue
                }else {
                  return result__5680__auto__
                }
                break
              }
            };
            state_machine__5679__auto__ = function(state_427603) {
              switch(arguments.length) {
                case 0:
                  return state_machine__5679__auto____0.call(this);
                case 1:
                  return state_machine__5679__auto____1.call(this, state_427603)
              }
              throw new Error("Invalid arity: " + arguments.length);
            };
            state_machine__5679__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__5679__auto____0;
            state_machine__5679__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__5679__auto____1;
            return state_machine__5679__auto__
          }()
        }(switch__5678__auto__)
      }();
      var state__5730__auto__ = function() {
        var statearr_427650 = f__5729__auto__.call(null);
        statearr_427650[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__5728__auto___427651;
        return statearr_427650
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__5730__auto__)
    });
    return p
  };
  pub = function(ch, topic_fn, buf_fn) {
    switch(arguments.length) {
      case 2:
        return pub__2.call(this, ch, topic_fn);
      case 3:
        return pub__3.call(this, ch, topic_fn, buf_fn)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  pub.cljs$core$IFn$_invoke$arity$2 = pub__2;
  pub.cljs$core$IFn$_invoke$arity$3 = pub__3;
  return pub
}();
cljs.core.async.sub = function() {
  var sub = null;
  var sub__3 = function(p, topic, ch) {
    return sub.call(null, p, topic, ch, true)
  };
  var sub__4 = function(p, topic, ch, close_QMARK_) {
    return cljs.core.async.sub_STAR_.call(null, p, topic, ch, close_QMARK_)
  };
  sub = function(p, topic, ch, close_QMARK_) {
    switch(arguments.length) {
      case 3:
        return sub__3.call(this, p, topic, ch);
      case 4:
        return sub__4.call(this, p, topic, ch, close_QMARK_)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  sub.cljs$core$IFn$_invoke$arity$3 = sub__3;
  sub.cljs$core$IFn$_invoke$arity$4 = sub__4;
  return sub
}();
cljs.core.async.unsub = function unsub(p, topic, ch) {
  return cljs.core.async.unsub_STAR_.call(null, p, topic, ch)
};
cljs.core.async.unsub_all = function() {
  var unsub_all = null;
  var unsub_all__1 = function(p) {
    return cljs.core.async.unsub_all_STAR_.call(null, p)
  };
  var unsub_all__2 = function(p, topic) {
    return cljs.core.async.unsub_all_STAR_.call(null, p, topic)
  };
  unsub_all = function(p, topic) {
    switch(arguments.length) {
      case 1:
        return unsub_all__1.call(this, p);
      case 2:
        return unsub_all__2.call(this, p, topic)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  unsub_all.cljs$core$IFn$_invoke$arity$1 = unsub_all__1;
  unsub_all.cljs$core$IFn$_invoke$arity$2 = unsub_all__2;
  return unsub_all
}();
cljs.core.async.map = function() {
  var map = null;
  var map__2 = function(f, chs) {
    return map.call(null, f, chs, null)
  };
  var map__3 = function(f, chs, buf_or_n) {
    var chs__$1 = cljs.core.vec.call(null, chs);
    var out = cljs.core.async.chan.call(null, buf_or_n);
    var cnt = cljs.core.count.call(null, chs__$1);
    var rets = cljs.core.object_array.call(null, cnt);
    var dchan = cljs.core.async.chan.call(null, 1);
    var dctr = cljs.core.atom.call(null, null);
    var done = cljs.core.mapv.call(null, function(chs__$1, out, cnt, rets, dchan, dctr) {
      return function(i) {
        return function(chs__$1, out, cnt, rets, dchan, dctr) {
          return function(ret) {
            rets[i] = ret;
            if(cljs.core.swap_BANG_.call(null, dctr, cljs.core.dec) === 0) {
              return cljs.core.async.put_BANG_.call(null, dchan, java.util.Arrays.copyOf.call(null, rets, cnt))
            }else {
              return null
            }
          }
        }(chs__$1, out, cnt, rets, dchan, dctr)
      }
    }(chs__$1, out, cnt, rets, dchan, dctr), cljs.core.range.call(null, cnt));
    var c__5728__auto___427811 = cljs.core.async.chan.call(null, 1);
    cljs.core.async.impl.dispatch.run.call(null, function() {
      var f__5729__auto__ = function() {
        var switch__5678__auto__ = function(state_427783) {
          var state_val_427784 = state_427783[1];
          if(state_val_427784 === 1) {
            var state_427783__$1 = state_427783;
            var statearr_427785_427812 = state_427783__$1;
            statearr_427785_427812[2] = null;
            statearr_427785_427812[1] = 2;
            return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
          }else {
            if(state_val_427784 === 2) {
              var inst_427747 = cljs.core.reset_BANG_.call(null, dctr, cnt);
              var inst_427748 = 0;
              var state_427783__$1 = function() {
                var statearr_427786 = state_427783;
                statearr_427786[5] = inst_427748;
                statearr_427786[6] = inst_427747;
                return statearr_427786
              }();
              var statearr_427787_427813 = state_427783__$1;
              statearr_427787_427813[2] = null;
              statearr_427787_427813[1] = 4;
              return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
            }else {
              if(state_val_427784 === 3) {
                var inst_427781 = state_427783[2];
                var state_427783__$1 = state_427783;
                return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_427783__$1, inst_427781)
              }else {
                if(state_val_427784 === 4) {
                  var inst_427748 = state_427783[5];
                  var inst_427750 = inst_427748 < cnt;
                  var state_427783__$1 = state_427783;
                  if(cljs.core.truth_(inst_427750)) {
                    var statearr_427788_427814 = state_427783__$1;
                    statearr_427788_427814[1] = 6
                  }else {
                    var statearr_427789_427815 = state_427783__$1;
                    statearr_427789_427815[1] = 7
                  }
                  return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                }else {
                  if(state_val_427784 === 5) {
                    var inst_427767 = state_427783[2];
                    var state_427783__$1 = function() {
                      var statearr_427790 = state_427783;
                      statearr_427790[7] = inst_427767;
                      return statearr_427790
                    }();
                    return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_427783__$1, 12, dchan)
                  }else {
                    if(state_val_427784 === 6) {
                      var state_427783__$1 = state_427783;
                      var statearr_427791_427816 = state_427783__$1;
                      statearr_427791_427816[2] = null;
                      statearr_427791_427816[1] = 11;
                      return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                    }else {
                      if(state_val_427784 === 7) {
                        var state_427783__$1 = state_427783;
                        var statearr_427792_427817 = state_427783__$1;
                        statearr_427792_427817[2] = null;
                        statearr_427792_427817[1] = 8;
                        return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                      }else {
                        if(state_val_427784 === 8) {
                          var inst_427765 = state_427783[2];
                          var state_427783__$1 = state_427783;
                          var statearr_427793_427818 = state_427783__$1;
                          statearr_427793_427818[2] = inst_427765;
                          statearr_427793_427818[1] = 5;
                          return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                        }else {
                          if(state_val_427784 === 9) {
                            var inst_427748 = state_427783[5];
                            var inst_427760 = state_427783[2];
                            var inst_427761 = inst_427748 + 1;
                            var inst_427748__$1 = inst_427761;
                            var state_427783__$1 = function() {
                              var statearr_427794 = state_427783;
                              statearr_427794[5] = inst_427748__$1;
                              statearr_427794[8] = inst_427760;
                              return statearr_427794
                            }();
                            var statearr_427795_427819 = state_427783__$1;
                            statearr_427795_427819[2] = null;
                            statearr_427795_427819[1] = 4;
                            return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                          }else {
                            if(state_val_427784 === 10) {
                              var inst_427752 = state_427783[2];
                              var inst_427753 = cljs.core.swap_BANG_.call(null, dctr, cljs.core.dec);
                              var state_427783__$1 = function() {
                                var statearr_427796 = state_427783;
                                statearr_427796[9] = inst_427752;
                                return statearr_427796
                              }();
                              var statearr_427797_427820 = state_427783__$1;
                              statearr_427797_427820[2] = inst_427753;
                              statearr_427797_427820[1] = 9;
                              return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                            }else {
                              if(state_val_427784 === 11) {
                                try {
                                  var inst_427748 = state_427783[5];
                                  var inst_427756 = chs__$1.call(null, inst_427748);
                                  var inst_427757 = done.call(null, inst_427748);
                                  var inst_427758 = cljs.core.async.take_BANG_.call(null, inst_427756, inst_427757);
                                  var state_427783__$1 = state_427783;
                                  var statearr_427800_427821 = state_427783__$1;
                                  statearr_427800_427821[2] = inst_427758;
                                  statearr_427800_427821[1] = 9;
                                  return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                                }catch(e427798) {
                                  if(e427798 instanceof Object) {
                                    var ex__5672__auto__ = e427798;
                                    var statearr_427799_427822 = state_427783;
                                    statearr_427799_427822[1] = 10;
                                    statearr_427799_427822[2] = ex__5672__auto__;
                                    return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                                  }else {
                                    if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                                      throw e427798;
                                    }else {
                                      return null
                                    }
                                  }
                                }
                              }else {
                                if(state_val_427784 === 12) {
                                  var inst_427769 = state_427783[10];
                                  var inst_427769__$1 = state_427783[2];
                                  var inst_427770 = cljs.core.some.call(null, cljs.core.nil_QMARK_, inst_427769__$1);
                                  var state_427783__$1 = function() {
                                    var statearr_427801 = state_427783;
                                    statearr_427801[10] = inst_427769__$1;
                                    return statearr_427801
                                  }();
                                  if(cljs.core.truth_(inst_427770)) {
                                    var statearr_427802_427823 = state_427783__$1;
                                    statearr_427802_427823[1] = 13
                                  }else {
                                    var statearr_427803_427824 = state_427783__$1;
                                    statearr_427803_427824[1] = 14
                                  }
                                  return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                                }else {
                                  if(state_val_427784 === 13) {
                                    var inst_427772 = cljs.core.async.close_BANG_.call(null, out);
                                    var state_427783__$1 = state_427783;
                                    var statearr_427804_427825 = state_427783__$1;
                                    statearr_427804_427825[2] = inst_427772;
                                    statearr_427804_427825[1] = 15;
                                    return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                                  }else {
                                    if(state_val_427784 === 14) {
                                      var inst_427769 = state_427783[10];
                                      var inst_427774 = cljs.core.apply.call(null, f, inst_427769);
                                      var state_427783__$1 = state_427783;
                                      return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_427783__$1, 16, out, inst_427774)
                                    }else {
                                      if(state_val_427784 === 15) {
                                        var inst_427779 = state_427783[2];
                                        var state_427783__$1 = state_427783;
                                        var statearr_427805_427826 = state_427783__$1;
                                        statearr_427805_427826[2] = inst_427779;
                                        statearr_427805_427826[1] = 3;
                                        return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                                      }else {
                                        if(state_val_427784 === 16) {
                                          var inst_427776 = state_427783[2];
                                          var state_427783__$1 = function() {
                                            var statearr_427806 = state_427783;
                                            statearr_427806[11] = inst_427776;
                                            return statearr_427806
                                          }();
                                          var statearr_427807_427827 = state_427783__$1;
                                          statearr_427807_427827[2] = null;
                                          statearr_427807_427827[1] = 2;
                                          return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                                        }else {
                                          return null
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        };
        return function(switch__5678__auto__) {
          return function() {
            var state_machine__5679__auto__ = null;
            var state_machine__5679__auto____0 = function() {
              var statearr_427809 = new Array(12);
              statearr_427809[0] = state_machine__5679__auto__;
              statearr_427809[1] = 1;
              return statearr_427809
            };
            var state_machine__5679__auto____1 = function(state_427783) {
              while(true) {
                var result__5680__auto__ = switch__5678__auto__.call(null, state_427783);
                if(cljs.core.keyword_identical_QMARK_.call(null, result__5680__auto__, new cljs.core.Keyword(null, "recur", "recur", 1122293407))) {
                  continue
                }else {
                  return result__5680__auto__
                }
                break
              }
            };
            state_machine__5679__auto__ = function(state_427783) {
              switch(arguments.length) {
                case 0:
                  return state_machine__5679__auto____0.call(this);
                case 1:
                  return state_machine__5679__auto____1.call(this, state_427783)
              }
              throw new Error("Invalid arity: " + arguments.length);
            };
            state_machine__5679__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__5679__auto____0;
            state_machine__5679__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__5679__auto____1;
            return state_machine__5679__auto__
          }()
        }(switch__5678__auto__)
      }();
      var state__5730__auto__ = function() {
        var statearr_427810 = f__5729__auto__.call(null);
        statearr_427810[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__5728__auto___427811;
        return statearr_427810
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__5730__auto__)
    });
    return out
  };
  map = function(f, chs, buf_or_n) {
    switch(arguments.length) {
      case 2:
        return map__2.call(this, f, chs);
      case 3:
        return map__3.call(this, f, chs, buf_or_n)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  map.cljs$core$IFn$_invoke$arity$2 = map__2;
  map.cljs$core$IFn$_invoke$arity$3 = map__3;
  return map
}();
cljs.core.async.merge = function() {
  var merge = null;
  var merge__1 = function(chs) {
    return merge.call(null, chs, null)
  };
  var merge__2 = function(chs, buf_or_n) {
    var out = cljs.core.async.chan.call(null, buf_or_n);
    var c__5728__auto___427927 = cljs.core.async.chan.call(null, 1);
    cljs.core.async.impl.dispatch.run.call(null, function() {
      var f__5729__auto__ = function() {
        var switch__5678__auto__ = function(state_427907) {
          var state_val_427908 = state_427907[1];
          if(state_val_427908 === 1) {
            var inst_427878 = cljs.core.vec.call(null, chs);
            var inst_427879 = inst_427878;
            var state_427907__$1 = function() {
              var statearr_427909 = state_427907;
              statearr_427909[5] = inst_427879;
              return statearr_427909
            }();
            var statearr_427910_427928 = state_427907__$1;
            statearr_427910_427928[2] = null;
            statearr_427910_427928[1] = 2;
            return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
          }else {
            if(state_val_427908 === 2) {
              var inst_427879 = state_427907[5];
              var inst_427881 = cljs.core.count.call(null, inst_427879);
              var inst_427882 = inst_427881 > 0;
              var state_427907__$1 = state_427907;
              if(cljs.core.truth_(inst_427882)) {
                var statearr_427911_427929 = state_427907__$1;
                statearr_427911_427929[1] = 4
              }else {
                var statearr_427912_427930 = state_427907__$1;
                statearr_427912_427930[1] = 5
              }
              return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
            }else {
              if(state_val_427908 === 3) {
                var inst_427905 = state_427907[2];
                var state_427907__$1 = state_427907;
                return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_427907__$1, inst_427905)
              }else {
                if(state_val_427908 === 4) {
                  var inst_427879 = state_427907[5];
                  var state_427907__$1 = state_427907;
                  return cljs.core.async.impl.ioc_helpers.ioc_alts_BANG_.call(null, state_427907__$1, 7, inst_427879)
                }else {
                  if(state_val_427908 === 5) {
                    var inst_427901 = cljs.core.async.close_BANG_.call(null, out);
                    var state_427907__$1 = state_427907;
                    var statearr_427913_427931 = state_427907__$1;
                    statearr_427913_427931[2] = inst_427901;
                    statearr_427913_427931[1] = 6;
                    return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                  }else {
                    if(state_val_427908 === 6) {
                      var inst_427903 = state_427907[2];
                      var state_427907__$1 = state_427907;
                      var statearr_427914_427932 = state_427907__$1;
                      statearr_427914_427932[2] = inst_427903;
                      statearr_427914_427932[1] = 3;
                      return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                    }else {
                      if(state_val_427908 === 7) {
                        var inst_427886 = state_427907[6];
                        var inst_427887 = state_427907[7];
                        var inst_427886__$1 = state_427907[2];
                        var inst_427887__$1 = cljs.core.nth.call(null, inst_427886__$1, 0, null);
                        var inst_427888 = cljs.core.nth.call(null, inst_427886__$1, 1, null);
                        var inst_427889 = inst_427887__$1 == null;
                        var state_427907__$1 = function() {
                          var statearr_427915 = state_427907;
                          statearr_427915[6] = inst_427886__$1;
                          statearr_427915[7] = inst_427887__$1;
                          statearr_427915[8] = inst_427888;
                          return statearr_427915
                        }();
                        if(cljs.core.truth_(inst_427889)) {
                          var statearr_427916_427933 = state_427907__$1;
                          statearr_427916_427933[1] = 8
                        }else {
                          var statearr_427917_427934 = state_427907__$1;
                          statearr_427917_427934[1] = 9
                        }
                        return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                      }else {
                        if(state_val_427908 === 8) {
                          var inst_427879 = state_427907[5];
                          var inst_427886 = state_427907[6];
                          var inst_427887 = state_427907[7];
                          var inst_427888 = state_427907[8];
                          var inst_427891 = function() {
                            var c = inst_427888;
                            var v = inst_427887;
                            var vec__427884 = inst_427886;
                            var cs = inst_427879;
                            return function(c, v, vec__427884, cs, inst_427879, inst_427886, inst_427887, inst_427888, state_val_427908) {
                              return function(p1__427828_SHARP_) {
                                return cljs.core.not_EQ_.call(null, c, p1__427828_SHARP_)
                              }
                            }(c, v, vec__427884, cs, inst_427879, inst_427886, inst_427887, inst_427888, state_val_427908)
                          }();
                          var inst_427892 = cljs.core.filterv.call(null, inst_427891, inst_427879);
                          var inst_427879__$1 = inst_427892;
                          var state_427907__$1 = function() {
                            var statearr_427918 = state_427907;
                            statearr_427918[5] = inst_427879__$1;
                            return statearr_427918
                          }();
                          var statearr_427919_427935 = state_427907__$1;
                          statearr_427919_427935[2] = null;
                          statearr_427919_427935[1] = 2;
                          return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                        }else {
                          if(state_val_427908 === 9) {
                            var inst_427887 = state_427907[7];
                            var state_427907__$1 = state_427907;
                            return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_427907__$1, 11, out, inst_427887)
                          }else {
                            if(state_val_427908 === 10) {
                              var inst_427899 = state_427907[2];
                              var state_427907__$1 = state_427907;
                              var statearr_427921_427936 = state_427907__$1;
                              statearr_427921_427936[2] = inst_427899;
                              statearr_427921_427936[1] = 6;
                              return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                            }else {
                              if(state_val_427908 === 11) {
                                var inst_427879 = state_427907[5];
                                var inst_427896 = state_427907[2];
                                var tmp427920 = inst_427879;
                                var inst_427879__$1 = tmp427920;
                                var state_427907__$1 = function() {
                                  var statearr_427922 = state_427907;
                                  statearr_427922[5] = inst_427879__$1;
                                  statearr_427922[9] = inst_427896;
                                  return statearr_427922
                                }();
                                var statearr_427923_427937 = state_427907__$1;
                                statearr_427923_427937[2] = null;
                                statearr_427923_427937[1] = 2;
                                return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                              }else {
                                return null
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        };
        return function(switch__5678__auto__) {
          return function() {
            var state_machine__5679__auto__ = null;
            var state_machine__5679__auto____0 = function() {
              var statearr_427925 = new Array(10);
              statearr_427925[0] = state_machine__5679__auto__;
              statearr_427925[1] = 1;
              return statearr_427925
            };
            var state_machine__5679__auto____1 = function(state_427907) {
              while(true) {
                var result__5680__auto__ = switch__5678__auto__.call(null, state_427907);
                if(cljs.core.keyword_identical_QMARK_.call(null, result__5680__auto__, new cljs.core.Keyword(null, "recur", "recur", 1122293407))) {
                  continue
                }else {
                  return result__5680__auto__
                }
                break
              }
            };
            state_machine__5679__auto__ = function(state_427907) {
              switch(arguments.length) {
                case 0:
                  return state_machine__5679__auto____0.call(this);
                case 1:
                  return state_machine__5679__auto____1.call(this, state_427907)
              }
              throw new Error("Invalid arity: " + arguments.length);
            };
            state_machine__5679__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__5679__auto____0;
            state_machine__5679__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__5679__auto____1;
            return state_machine__5679__auto__
          }()
        }(switch__5678__auto__)
      }();
      var state__5730__auto__ = function() {
        var statearr_427926 = f__5729__auto__.call(null);
        statearr_427926[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__5728__auto___427927;
        return statearr_427926
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__5730__auto__)
    });
    return out
  };
  merge = function(chs, buf_or_n) {
    switch(arguments.length) {
      case 1:
        return merge__1.call(this, chs);
      case 2:
        return merge__2.call(this, chs, buf_or_n)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  merge.cljs$core$IFn$_invoke$arity$1 = merge__1;
  merge.cljs$core$IFn$_invoke$arity$2 = merge__2;
  return merge
}();
cljs.core.async.into = function into(coll, ch) {
  return cljs.core.async.reduce.call(null, cljs.core.conj, coll, ch)
};
goog.provide("chaperone.websocket");
goog.require("cljs.core");
goog.require("cljs.core.async");
goog.require("chaperone.crossover.rpc");
goog.require("chaperone.crossover.rpc.Response");
goog.require("chaperone.crossover.rpc.Request");
goog.require("chaperone.crossover.rpc");
goog.require("cljs.core.async");
goog.require("cljs.reader");
goog.require("cljs.reader");
chaperone.websocket.create_sub_system = function create_sub_system(system, host, port) {
  var sub_system = new cljs.core.PersistentArrayMap(null, 7, [new cljs.core.Keyword(null, "host", "host", 1017112858), host, new cljs.core.Keyword(null, "port", "port", 1017351155), port, new cljs.core.Keyword(null, "request-chan", "request-chan", 2270492482), cljs.core.async.chan.call(null), new cljs.core.Keyword(null, "response-chan", "response-chan", 2643989712), cljs.core.async.chan.call(null), new cljs.core.Keyword(null, "response-chan-listening", "response-chan-listening", 3449895550), cljs.core.atom.call(null, 
  false), new cljs.core.Keyword(null, "rpc-map", "rpc-map", 2409450726), cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY), new cljs.core.Keyword(null, "edn-readers", "edn-readers", 2679897956), chaperone.crossover.rpc.edn_readers.call(null)], null);
  return cljs.core.assoc.call(null, system, new cljs.core.Keyword(null, "websocket", "websocket", 784338745), sub_system)
};
chaperone.websocket.sub_system = function sub_system(system) {
  return(new cljs.core.Keyword(null, "websocket", "websocket", 784338745)).cljs$core$IFn$_invoke$arity$1(system)
};
chaperone.websocket.respond_BANG_ = function respond_BANG_(web_sockets, response) {
  var rpc_map = (new cljs.core.Keyword(null, "rpc-map", "rpc-map", 2409450726)).cljs$core$IFn$_invoke$arity$1(web_sockets);
  var rpc_id = (new cljs.core.Keyword(null, "id", "id", 1013907597)).cljs$core$IFn$_invoke$arity$1((new cljs.core.Keyword(null, "request", "request", 2109597185)).cljs$core$IFn$_invoke$arity$1(response));
  var rpc_chan = cljs.core.get.call(null, cljs.core.deref.call(null, rpc_map), rpc_id);
  cljs.core.async.put_BANG_.call(null, rpc_chan, response);
  return cljs.core.swap_BANG_.call(null, rpc_map, cljs.core.dissoc, rpc_id)
};
chaperone.websocket.start_response_chan_listen_BANG_ = function start_response_chan_listen_BANG_(web_socket) {
  cljs.core.reset_BANG_.call(null, (new cljs.core.Keyword(null, "response-chan-listening", "response-chan-listening", 3449895550)).cljs$core$IFn$_invoke$arity$1(web_socket), true);
  var c__5728__auto__ = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function() {
    var f__5729__auto__ = function() {
      var switch__5678__auto__ = function(state_424152) {
        var state_val_424153 = state_424152[1];
        if(state_val_424153 === 7) {
          var inst_424142 = state_424152[2];
          var inst_424143 = cljs.reader.read_string.call(null, inst_424142);
          var inst_424144 = chaperone.websocket.respond_BANG_.call(null, web_socket, inst_424143);
          var state_424152__$1 = function() {
            var statearr_424154 = state_424152;
            statearr_424154[5] = inst_424144;
            return statearr_424154
          }();
          var statearr_424155_424164 = state_424152__$1;
          statearr_424155_424164[2] = null;
          statearr_424155_424164[1] = 2;
          return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
        }else {
          if(state_val_424153 === 6) {
            var inst_424148 = state_424152[2];
            var state_424152__$1 = state_424152;
            var statearr_424156_424165 = state_424152__$1;
            statearr_424156_424165[2] = inst_424148;
            statearr_424156_424165[1] = 3;
            return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
          }else {
            if(state_val_424153 === 5) {
              var state_424152__$1 = state_424152;
              var statearr_424157_424166 = state_424152__$1;
              statearr_424157_424166[2] = null;
              statearr_424157_424166[1] = 6;
              return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
            }else {
              if(state_val_424153 === 4) {
                var inst_424140 = (new cljs.core.Keyword(null, "response-chan", "response-chan", 2643989712)).cljs$core$IFn$_invoke$arity$1(web_socket);
                var state_424152__$1 = state_424152;
                return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_424152__$1, 7, inst_424140)
              }else {
                if(state_val_424153 === 3) {
                  var inst_424150 = state_424152[2];
                  var state_424152__$1 = state_424152;
                  return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_424152__$1, inst_424150)
                }else {
                  if(state_val_424153 === 2) {
                    var inst_424137 = (new cljs.core.Keyword(null, "response-chan-listening", "response-chan-listening", 3449895550)).cljs$core$IFn$_invoke$arity$1(web_socket);
                    var inst_424138 = cljs.core.deref.call(null, inst_424137);
                    var state_424152__$1 = state_424152;
                    if(cljs.core.truth_(inst_424138)) {
                      var statearr_424158_424167 = state_424152__$1;
                      statearr_424158_424167[1] = 4
                    }else {
                      var statearr_424159_424168 = state_424152__$1;
                      statearr_424159_424168[1] = 5
                    }
                    return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                  }else {
                    if(state_val_424153 === 1) {
                      var state_424152__$1 = state_424152;
                      var statearr_424160_424169 = state_424152__$1;
                      statearr_424160_424169[2] = null;
                      statearr_424160_424169[1] = 2;
                      return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                    }else {
                      return null
                    }
                  }
                }
              }
            }
          }
        }
      };
      return function(switch__5678__auto__) {
        return function() {
          var state_machine__5679__auto__ = null;
          var state_machine__5679__auto____0 = function() {
            var statearr_424162 = new Array(6);
            statearr_424162[0] = state_machine__5679__auto__;
            statearr_424162[1] = 1;
            return statearr_424162
          };
          var state_machine__5679__auto____1 = function(state_424152) {
            while(true) {
              var result__5680__auto__ = switch__5678__auto__.call(null, state_424152);
              if(cljs.core.keyword_identical_QMARK_.call(null, result__5680__auto__, new cljs.core.Keyword(null, "recur", "recur", 1122293407))) {
                continue
              }else {
                return result__5680__auto__
              }
              break
            }
          };
          state_machine__5679__auto__ = function(state_424152) {
            switch(arguments.length) {
              case 0:
                return state_machine__5679__auto____0.call(this);
              case 1:
                return state_machine__5679__auto____1.call(this, state_424152)
            }
            throw new Error("Invalid arity: " + arguments.length);
          };
          state_machine__5679__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__5679__auto____0;
          state_machine__5679__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__5679__auto____1;
          return state_machine__5679__auto__
        }()
      }(switch__5678__auto__)
    }();
    var state__5730__auto__ = function() {
      var statearr_424163 = f__5729__auto__.call(null);
      statearr_424163[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__5728__auto__;
      return statearr_424163
    }();
    return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__5730__auto__)
  });
  return c__5728__auto__
};
chaperone.websocket.connect_websocket_BANG_ = function connect_websocket_BANG_(web_socket) {
  var ws_url = [cljs.core.str("ws://"), cljs.core.str((new cljs.core.Keyword(null, "host", "host", 1017112858)).cljs$core$IFn$_invoke$arity$1(web_socket)), cljs.core.str(":"), cljs.core.str((new cljs.core.Keyword(null, "port", "port", 1017351155)).cljs$core$IFn$_invoke$arity$1(web_socket)), cljs.core.str("/rpc")].join("");
  var socket = new WebSocket(ws_url);
  console.log("Connecting to WS: ", ws_url);
  purnam.native$.aset_in.call(null, socket, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["onopen"], null), function() {
    return console.log("Connected!")
  });
  purnam.native$.aset_in.call(null, socket, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["onerror"], null), function(e) {
    return console.log("An error happened: ", e)
  });
  return socket
};
chaperone.websocket.start_BANG_ = function start_BANG_(system) {
  var seq__424176_424182 = cljs.core.seq.call(null, chaperone.crossover.rpc.edn_readers.call(null));
  var chunk__424177_424183 = null;
  var count__424178_424184 = 0;
  var i__424179_424185 = 0;
  while(true) {
    if(i__424179_424185 < count__424178_424184) {
      var vec__424180_424186 = cljs.core._nth.call(null, chunk__424177_424183, i__424179_424185);
      var tag_424187 = cljs.core.nth.call(null, vec__424180_424186, 0, null);
      var f_424188 = cljs.core.nth.call(null, vec__424180_424186, 1, null);
      cljs.reader.register_tag_parser_BANG_.call(null, tag_424187, f_424188);
      var G__424189 = seq__424176_424182;
      var G__424190 = chunk__424177_424183;
      var G__424191 = count__424178_424184;
      var G__424192 = i__424179_424185 + 1;
      seq__424176_424182 = G__424189;
      chunk__424177_424183 = G__424190;
      count__424178_424184 = G__424191;
      i__424179_424185 = G__424192;
      continue
    }else {
      var temp__4092__auto___424193 = cljs.core.seq.call(null, seq__424176_424182);
      if(temp__4092__auto___424193) {
        var seq__424176_424194__$1 = temp__4092__auto___424193;
        if(cljs.core.chunked_seq_QMARK_.call(null, seq__424176_424194__$1)) {
          var c__4009__auto___424195 = cljs.core.chunk_first.call(null, seq__424176_424194__$1);
          var G__424196 = cljs.core.chunk_rest.call(null, seq__424176_424194__$1);
          var G__424197 = c__4009__auto___424195;
          var G__424198 = cljs.core.count.call(null, c__4009__auto___424195);
          var G__424199 = 0;
          seq__424176_424182 = G__424196;
          chunk__424177_424183 = G__424197;
          count__424178_424184 = G__424198;
          i__424179_424185 = G__424199;
          continue
        }else {
          var vec__424181_424200 = cljs.core.first.call(null, seq__424176_424194__$1);
          var tag_424201 = cljs.core.nth.call(null, vec__424181_424200, 0, null);
          var f_424202 = cljs.core.nth.call(null, vec__424181_424200, 1, null);
          cljs.reader.register_tag_parser_BANG_.call(null, tag_424201, f_424202);
          var G__424203 = cljs.core.next.call(null, seq__424176_424194__$1);
          var G__424204 = null;
          var G__424205 = 0;
          var G__424206 = 0;
          seq__424176_424182 = G__424203;
          chunk__424177_424183 = G__424204;
          count__424178_424184 = G__424205;
          i__424179_424185 = G__424206;
          continue
        }
      }else {
      }
    }
    break
  }
  var web_socket = chaperone.websocket.sub_system.call(null, system);
  chaperone.websocket.start_response_chan_listen_BANG_.call(null, web_socket);
  return cljs.core.assoc_in.call(null, system, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "websocket", "websocket", 784338745), new cljs.core.Keyword(null, "socket", "socket", 4411822821)], null), chaperone.websocket.connect_websocket_BANG_.call(null, web_socket))
};
chaperone.websocket.stop_BANG_ = function stop_BANG_(system) {
  var web_socket_424207 = chaperone.websocket.sub_system.call(null, system);
  cljs.core.async.close_BANG_.call(null, (new cljs.core.Keyword(null, "request-chan", "request-chan", 2270492482)).cljs$core$IFn$_invoke$arity$1(web_socket_424207));
  cljs.core.async.close_BANG_.call(null, (new cljs.core.Keyword(null, "response-chan", "response-chan", 2643989712)).cljs$core$IFn$_invoke$arity$1(web_socket_424207));
  cljs.core.reset_BANG_.call(null, (new cljs.core.Keyword(null, "response-chan-listening", "response-chan-listening", 3449895550)).cljs$core$IFn$_invoke$arity$1(web_socket_424207), false);
  return system
};
chaperone.websocket.send_BANG_ = function send_BANG_(web_socket, request) {
  var id = (new cljs.core.Keyword(null, "id", "id", 1013907597)).cljs$core$IFn$_invoke$arity$1(request);
  var ws_chan = (new cljs.core.Keyword(null, "request-chan", "request-chan", 2270492482)).cljs$core$IFn$_invoke$arity$1(web_socket);
  var response_chan = cljs.core.async.chan.call(null);
  var rpc_map = (new cljs.core.Keyword(null, "rpc-map", "rpc-map", 2409450726)).cljs$core$IFn$_invoke$arity$1(web_socket);
  cljs.core.swap_BANG_.call(null, rpc_map, cljs.core.assoc, id, response_chan);
  cljs.core.async.put_BANG_.call(null, ws_chan, request);
  cljs.core.async.close_BANG_.call(null, ws_chan);
  return response_chan
};
goog.provide("chaperone.core");
goog.require("cljs.core");
goog.require("chaperone.websocket");
goog.require("chaperone.websocket");
chaperone.core.create_system = function create_system(host, port) {
  var context = cljs.core.PersistentArrayMap.EMPTY;
  return chaperone.websocket.create_sub_system.call(null, context, host, port)
};
chaperone.core.start_BANG_ = function start_BANG_(system) {
  console.log("Starting the system");
  return chaperone.websocket.start_BANG_.call(null, system)
};
chaperone.core.stop_BANG_ = function stop_BANG_(system) {
  console.log("Stopping the system");
  return chaperone.websocket.stop_BANG_.call(null, system)
};
goog.provide("purnam.common");
goog.require("cljs.core");
purnam.common.flags = function() {
  var obj428400 = {};
  return obj428400
}();
goog.provide("clojure.string");
goog.require("cljs.core");
goog.require("goog.string.StringBuffer");
goog.require("goog.string.StringBuffer");
goog.require("goog.string");
goog.require("goog.string");
clojure.string.seq_reverse = function seq_reverse(coll) {
  return cljs.core.reduce.call(null, cljs.core.conj, cljs.core.List.EMPTY, coll)
};
clojure.string.reverse = function reverse(s) {
  return s.split("").reverse().join("")
};
clojure.string.replace = function replace(s, match, replacement) {
  if(typeof match === "string") {
    return s.replace(new RegExp(goog.string.regExpEscape(match), "g"), replacement)
  }else {
    if(cljs.core.truth_(match.hasOwnProperty("source"))) {
      return s.replace(new RegExp(match.source, "g"), replacement)
    }else {
      if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        throw[cljs.core.str("Invalid match arg: "), cljs.core.str(match)].join("");
      }else {
        return null
      }
    }
  }
};
clojure.string.replace_first = function replace_first(s, match, replacement) {
  return s.replace(match, replacement)
};
clojure.string.join = function() {
  var join = null;
  var join__1 = function(coll) {
    return cljs.core.apply.call(null, cljs.core.str, coll)
  };
  var join__2 = function(separator, coll) {
    return cljs.core.apply.call(null, cljs.core.str, cljs.core.interpose.call(null, separator, coll))
  };
  join = function(separator, coll) {
    switch(arguments.length) {
      case 1:
        return join__1.call(this, separator);
      case 2:
        return join__2.call(this, separator, coll)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  join.cljs$core$IFn$_invoke$arity$1 = join__1;
  join.cljs$core$IFn$_invoke$arity$2 = join__2;
  return join
}();
clojure.string.upper_case = function upper_case(s) {
  return s.toUpperCase()
};
clojure.string.lower_case = function lower_case(s) {
  return s.toLowerCase()
};
clojure.string.capitalize = function capitalize(s) {
  if(cljs.core.count.call(null, s) < 2) {
    return clojure.string.upper_case.call(null, s)
  }else {
    return[cljs.core.str(clojure.string.upper_case.call(null, cljs.core.subs.call(null, s, 0, 1))), cljs.core.str(clojure.string.lower_case.call(null, cljs.core.subs.call(null, s, 1)))].join("")
  }
};
clojure.string.pop_last_while_empty = function pop_last_while_empty(v) {
  var v__$1 = v;
  while(true) {
    if(cljs.core._EQ_.call(null, "", cljs.core.peek.call(null, v__$1))) {
      var G__428385 = cljs.core.pop.call(null, v__$1);
      v__$1 = G__428385;
      continue
    }else {
      return v__$1
    }
    break
  }
};
clojure.string.discard_trailing_if_needed = function discard_trailing_if_needed(limit, v) {
  if(cljs.core._EQ_.call(null, 0, limit)) {
    return clojure.string.pop_last_while_empty.call(null, v)
  }else {
    return v
  }
};
clojure.string.split_with_empty_regex = function split_with_empty_regex(s, limit) {
  if(limit <= 0 || limit >= 2 + cljs.core.count.call(null, s)) {
    return cljs.core.conj.call(null, cljs.core.vec.call(null, cljs.core.cons.call(null, "", cljs.core.map.call(null, cljs.core.str, cljs.core.seq.call(null, s)))), "")
  }else {
    var pred__428389 = cljs.core._EQ_;
    var expr__428390 = limit;
    if(cljs.core.truth_(pred__428389.call(null, 1, expr__428390))) {
      return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [s], null)
    }else {
      if(cljs.core.truth_(pred__428389.call(null, 2, expr__428390))) {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["", s], null)
      }else {
        var c = limit - 2;
        return cljs.core.conj.call(null, cljs.core.vec.call(null, cljs.core.cons.call(null, "", cljs.core.subvec.call(null, cljs.core.vec.call(null, cljs.core.map.call(null, cljs.core.str, cljs.core.seq.call(null, s))), 0, c))), cljs.core.subs.call(null, s, c))
      }
    }
  }
};
clojure.string.split = function() {
  var split = null;
  var split__2 = function(s, re) {
    return split.call(null, s, re, 0)
  };
  var split__3 = function(s, re, limit) {
    return clojure.string.discard_trailing_if_needed.call(null, limit, cljs.core._EQ_.call(null, [cljs.core.str(re)].join(""), "/(?:)/") ? clojure.string.split_with_empty_regex.call(null, s, limit) : limit < 1 ? cljs.core.vec.call(null, [cljs.core.str(s)].join("").split(re)) : function() {
      var s__$1 = s;
      var limit__$1 = limit;
      var parts = cljs.core.PersistentVector.EMPTY;
      while(true) {
        if(cljs.core._EQ_.call(null, limit__$1, 1)) {
          return cljs.core.conj.call(null, parts, s__$1)
        }else {
          var temp__4090__auto__ = cljs.core.re_find.call(null, re, s__$1);
          if(cljs.core.truth_(temp__4090__auto__)) {
            var m = temp__4090__auto__;
            var index = s__$1.indexOf(m);
            var G__428392 = s__$1.substring(index + cljs.core.count.call(null, m));
            var G__428393 = limit__$1 - 1;
            var G__428394 = cljs.core.conj.call(null, parts, s__$1.substring(0, index));
            s__$1 = G__428392;
            limit__$1 = G__428393;
            parts = G__428394;
            continue
          }else {
            return cljs.core.conj.call(null, parts, s__$1)
          }
        }
        break
      }
    }())
  };
  split = function(s, re, limit) {
    switch(arguments.length) {
      case 2:
        return split__2.call(this, s, re);
      case 3:
        return split__3.call(this, s, re, limit)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  split.cljs$core$IFn$_invoke$arity$2 = split__2;
  split.cljs$core$IFn$_invoke$arity$3 = split__3;
  return split
}();
clojure.string.split_lines = function split_lines(s) {
  return clojure.string.split.call(null, s, /\n|\r\n/)
};
clojure.string.trim = function trim(s) {
  return goog.string.trim(s)
};
clojure.string.triml = function triml(s) {
  return goog.string.trimLeft(s)
};
clojure.string.trimr = function trimr(s) {
  return goog.string.trimRight(s)
};
clojure.string.trim_newline = function trim_newline(s) {
  var index = s.length;
  while(true) {
    if(index === 0) {
      return""
    }else {
      var ch = cljs.core.get.call(null, s, index - 1);
      if(cljs.core._EQ_.call(null, ch, "\n") || cljs.core._EQ_.call(null, ch, "\r")) {
        var G__428395 = index - 1;
        index = G__428395;
        continue
      }else {
        return s.substring(0, index)
      }
    }
    break
  }
};
clojure.string.blank_QMARK_ = function blank_QMARK_(s) {
  return goog.string.isEmptySafe(s)
};
clojure.string.escape = function escape__$1(s, cmap) {
  var buffer = new goog.string.StringBuffer;
  var length = s.length;
  var index = 0;
  while(true) {
    if(cljs.core._EQ_.call(null, length, index)) {
      return buffer.toString()
    }else {
      var ch = s.charAt(index);
      var temp__4090__auto___428396 = cljs.core.get.call(null, cmap, ch);
      if(cljs.core.truth_(temp__4090__auto___428396)) {
        var replacement_428397 = temp__4090__auto___428396;
        buffer.append([cljs.core.str(replacement_428397)].join(""))
      }else {
        buffer.append(ch)
      }
      var G__428398 = index + 1;
      index = G__428398;
      continue
    }
    break
  }
};
goog.provide("purnam.native$");
goog.require("cljs.core");
goog.require("clojure.string");
goog.require("clojure.string");
goog.require("purnam.common");
goog.require("purnam.common");
goog.require("goog.array");
goog.require("goog.array");
goog.require("goog.object");
goog.require("goog.object");
purnam.native$.nested_val = function nested_val(p__428064, val) {
  var vec__428068 = p__428064;
  var k = cljs.core.nth.call(null, vec__428068, 0, null);
  var ks = cljs.core.nthnext.call(null, vec__428068, 1);
  if(k == null) {
    return val
  }else {
    var o = function() {
      var obj428070 = {};
      return obj428070
    }();
    o[k] = nested_val.call(null, ks, val);
    return o
  }
};
purnam.native$.nested_delete = function nested_delete(p__428071, val) {
  var vec__428073 = p__428071;
  var k = cljs.core.nth.call(null, vec__428073, 0, null);
  var ks = cljs.core.nthnext.call(null, vec__428073, 1);
  if(ks == null) {
    delete val[k]
  }else {
    nested_delete.call(null, ks, val)
  }
  return val
};
purnam.native$.aset_in = function() {
  var aset_in = null;
  var aset_in__2 = function(var$, arr) {
    return aset_in.call(null, var$, arr, null)
  };
  var aset_in__3 = function(var$, arr, val) {
    var vec__428075 = arr;
    var k = cljs.core.nth.call(null, vec__428075, 0, null);
    var ks = cljs.core.nthnext.call(null, vec__428075, 1);
    if(k == null) {
    }else {
      if(cljs.core.empty_QMARK_.call(null, ks)) {
        if(cljs.core.truth_(val)) {
          var$[k] = val
        }else {
          delete var$[k]
        }
      }else {
        if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          var temp__4090__auto___428076 = var$[k];
          if(cljs.core.truth_(temp__4090__auto___428076)) {
            var svar_428077 = temp__4090__auto___428076;
            aset_in.call(null, svar_428077, ks, val)
          }else {
            if(cljs.core.truth_(val)) {
              var$[k] = purnam.native$.nested_val.call(null, ks, val)
            }else {
            }
          }
        }else {
        }
      }
    }
    return var$
  };
  aset_in = function(var$, arr, val) {
    switch(arguments.length) {
      case 2:
        return aset_in__2.call(this, var$, arr);
      case 3:
        return aset_in__3.call(this, var$, arr, val)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  aset_in.cljs$core$IFn$_invoke$arity$2 = aset_in__2;
  aset_in.cljs$core$IFn$_invoke$arity$3 = aset_in__3;
  return aset_in
}();
purnam.native$.aget_in = function() {
  var aget_in = null;
  var aget_in__1 = function(var$) {
    return var$
  };
  var aget_in__2 = function(var$, arr) {
    if(var$ == null) {
      return null
    }else {
      if(cljs.core.empty_QMARK_.call(null, arr)) {
        return var$
      }else {
        if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          return aget_in.call(null, var$[cljs.core.first.call(null, arr)], cljs.core.next.call(null, arr))
        }else {
          return null
        }
      }
    }
  };
  aget_in = function(var$, arr) {
    switch(arguments.length) {
      case 1:
        return aget_in__1.call(this, var$);
      case 2:
        return aget_in__2.call(this, var$, arr)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  aget_in.cljs$core$IFn$_invoke$arity$1 = aget_in__1;
  aget_in.cljs$core$IFn$_invoke$arity$2 = aget_in__2;
  return aget_in
}();
purnam.native$.js_strkey = function js_strkey(x) {
  if(typeof x === "string") {
    return x
  }else {
    if(x instanceof cljs.core.Keyword) {
      return cljs.core.name.call(null, x)
    }else {
      if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        return[cljs.core.str(x)].join("")
      }else {
        return null
      }
    }
  }
};
purnam.native$.js_obj_name = function js_obj_name(this$) {
  var temp__4090__auto__ = cljs.core.re_find.call(null, /^function (\w+)/, [cljs.core.str(this$)].join(""));
  if(cljs.core.truth_(temp__4090__auto__)) {
    var vec__428079 = temp__4090__auto__;
    var _ = cljs.core.nth.call(null, vec__428079, 0, null);
    var n = cljs.core.nth.call(null, vec__428079, 1, null);
    return n
  }else {
    return"Object"
  }
};
purnam.native$.js_type = function js_type(o) {
  var ty = cljs.core.type.call(null, o);
  var ty__$1 = cljs.core.truth_(function() {
    var and__3273__auto__ = ty;
    if(cljs.core.truth_(and__3273__auto__)) {
      return ty.cljs$lang$type
    }else {
      return and__3273__auto__
    }
  }()) ? ty.cljs$lang$ctorStr : goog.typeOf(o);
  return ty__$1
};
purnam.native$.js_lookup = function() {
  var js_lookup = null;
  var js_lookup__2 = function(o, k) {
    return o[purnam.native$.js_strkey.call(null, k)]
  };
  var js_lookup__3 = function(o, k, not_found) {
    var s = purnam.native$.js_strkey.call(null, k);
    var temp__4090__auto__ = o[s];
    if(cljs.core.truth_(temp__4090__auto__)) {
      var res = temp__4090__auto__;
      return res
    }else {
      return not_found
    }
  };
  js_lookup = function(o, k, not_found) {
    switch(arguments.length) {
      case 2:
        return js_lookup__2.call(this, o, k);
      case 3:
        return js_lookup__3.call(this, o, k, not_found)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  js_lookup.cljs$core$IFn$_invoke$arity$2 = js_lookup__2;
  js_lookup.cljs$core$IFn$_invoke$arity$3 = js_lookup__3;
  return js_lookup
}();
purnam.native$.js_range = function js_range(n) {
  var res = new Array(n);
  var i = 0;
  while(true) {
    if(i < n) {
      res.push(i);
      var G__428080 = i + 1;
      i = G__428080;
      continue
    }else {
      return res
    }
    break
  }
};
purnam.native$.js_assoc = function() {
  var js_assoc = null;
  var js_assoc__3 = function(o, k, v) {
    o[purnam.native$.js_strkey.call(null, k)] = v;
    return o
  };
  var js_assoc__4 = function() {
    var G__428081__delegate = function(o, k, v, more) {
      while(true) {
        js_assoc.call(null, o, k, v);
        if(cljs.core.truth_(more)) {
          var G__428082 = o;
          var G__428083 = cljs.core.first.call(null, more);
          var G__428084 = cljs.core.second.call(null, more);
          var G__428085 = cljs.core.nnext.call(null, more);
          o = G__428082;
          k = G__428083;
          v = G__428084;
          more = G__428085;
          continue
        }else {
          return o
        }
        break
      }
    };
    var G__428081 = function(o, k, v, var_args) {
      var more = null;
      if(arguments.length > 3) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
      }
      return G__428081__delegate.call(this, o, k, v, more)
    };
    G__428081.cljs$lang$maxFixedArity = 3;
    G__428081.cljs$lang$applyTo = function(arglist__428086) {
      var o = cljs.core.first(arglist__428086);
      arglist__428086 = cljs.core.next(arglist__428086);
      var k = cljs.core.first(arglist__428086);
      arglist__428086 = cljs.core.next(arglist__428086);
      var v = cljs.core.first(arglist__428086);
      var more = cljs.core.rest(arglist__428086);
      return G__428081__delegate(o, k, v, more)
    };
    G__428081.cljs$core$IFn$_invoke$arity$variadic = G__428081__delegate;
    return G__428081
  }();
  js_assoc = function(o, k, v, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 3:
        return js_assoc__3.call(this, o, k, v);
      default:
        return js_assoc__4.cljs$core$IFn$_invoke$arity$variadic(o, k, v, cljs.core.array_seq(arguments, 3))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  js_assoc.cljs$lang$maxFixedArity = 3;
  js_assoc.cljs$lang$applyTo = js_assoc__4.cljs$lang$applyTo;
  js_assoc.cljs$core$IFn$_invoke$arity$3 = js_assoc__3;
  js_assoc.cljs$core$IFn$_invoke$arity$variadic = js_assoc__4.cljs$core$IFn$_invoke$arity$variadic;
  return js_assoc
}();
purnam.native$.js_dissoc = function() {
  var js_dissoc__delegate = function(o, k, more) {
    while(true) {
      delete o[purnam.native$.js_strkey.call(null, k)];
      if(cljs.core.truth_(more)) {
        var G__428087 = o;
        var G__428088 = cljs.core.first.call(null, more);
        var G__428089 = cljs.core.next.call(null, more);
        o = G__428087;
        k = G__428088;
        more = G__428089;
        continue
      }else {
        return o
      }
      break
    }
  };
  var js_dissoc = function(o, k, var_args) {
    var more = null;
    if(arguments.length > 2) {
      more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
    }
    return js_dissoc__delegate.call(this, o, k, more)
  };
  js_dissoc.cljs$lang$maxFixedArity = 2;
  js_dissoc.cljs$lang$applyTo = function(arglist__428090) {
    var o = cljs.core.first(arglist__428090);
    arglist__428090 = cljs.core.next(arglist__428090);
    var k = cljs.core.first(arglist__428090);
    var more = cljs.core.rest(arglist__428090);
    return js_dissoc__delegate(o, k, more)
  };
  js_dissoc.cljs$core$IFn$_invoke$arity$variadic = js_dissoc__delegate;
  return js_dissoc
}();
purnam.native$.js_empty = function js_empty(o) {
  var G__428096_428101 = goog.typeOf(o);
  if(cljs.core._EQ_.call(null, "array", G__428096_428101)) {
    o["length"] = 0
  }else {
    if(cljs.core._EQ_.call(null, "object", G__428096_428101)) {
      var seq__428097_428102 = cljs.core.seq.call(null, cljs.core.js_keys.call(null, o));
      var chunk__428098_428103 = null;
      var count__428099_428104 = 0;
      var i__428100_428105 = 0;
      while(true) {
        if(i__428100_428105 < count__428099_428104) {
          var k_428106 = cljs.core._nth.call(null, chunk__428098_428103, i__428100_428105);
          delete o[k_428106];
          var G__428107 = seq__428097_428102;
          var G__428108 = chunk__428098_428103;
          var G__428109 = count__428099_428104;
          var G__428110 = i__428100_428105 + 1;
          seq__428097_428102 = G__428107;
          chunk__428098_428103 = G__428108;
          count__428099_428104 = G__428109;
          i__428100_428105 = G__428110;
          continue
        }else {
          var temp__4092__auto___428111 = cljs.core.seq.call(null, seq__428097_428102);
          if(temp__4092__auto___428111) {
            var seq__428097_428112__$1 = temp__4092__auto___428111;
            if(cljs.core.chunked_seq_QMARK_.call(null, seq__428097_428112__$1)) {
              var c__4009__auto___428113 = cljs.core.chunk_first.call(null, seq__428097_428112__$1);
              var G__428114 = cljs.core.chunk_rest.call(null, seq__428097_428112__$1);
              var G__428115 = c__4009__auto___428113;
              var G__428116 = cljs.core.count.call(null, c__4009__auto___428113);
              var G__428117 = 0;
              seq__428097_428102 = G__428114;
              chunk__428098_428103 = G__428115;
              count__428099_428104 = G__428116;
              i__428100_428105 = G__428117;
              continue
            }else {
              var k_428118 = cljs.core.first.call(null, seq__428097_428112__$1);
              delete o[k_428118];
              var G__428119 = cljs.core.next.call(null, seq__428097_428112__$1);
              var G__428120 = null;
              var G__428121 = 0;
              var G__428122 = 0;
              seq__428097_428102 = G__428119;
              chunk__428098_428103 = G__428120;
              count__428099_428104 = G__428121;
              i__428100_428105 = G__428122;
              continue
            }
          }else {
          }
        }
        break
      }
    }else {
      if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        throw new Error([cljs.core.str("No matching clause: "), cljs.core.str(goog.typeOf(o))].join(""));
      }else {
      }
    }
  }
  return o
};
purnam.native$.js_merge = function() {
  var js_merge = null;
  var js_merge__2 = function(o1, o2) {
    var seq__428127_428131 = cljs.core.seq.call(null, cljs.core.js_keys.call(null, o2));
    var chunk__428128_428132 = null;
    var count__428129_428133 = 0;
    var i__428130_428134 = 0;
    while(true) {
      if(i__428130_428134 < count__428129_428133) {
        var k_428135 = cljs.core._nth.call(null, chunk__428128_428132, i__428130_428134);
        o1[k_428135] = o2[k_428135];
        var G__428136 = seq__428127_428131;
        var G__428137 = chunk__428128_428132;
        var G__428138 = count__428129_428133;
        var G__428139 = i__428130_428134 + 1;
        seq__428127_428131 = G__428136;
        chunk__428128_428132 = G__428137;
        count__428129_428133 = G__428138;
        i__428130_428134 = G__428139;
        continue
      }else {
        var temp__4092__auto___428140 = cljs.core.seq.call(null, seq__428127_428131);
        if(temp__4092__auto___428140) {
          var seq__428127_428141__$1 = temp__4092__auto___428140;
          if(cljs.core.chunked_seq_QMARK_.call(null, seq__428127_428141__$1)) {
            var c__4009__auto___428142 = cljs.core.chunk_first.call(null, seq__428127_428141__$1);
            var G__428143 = cljs.core.chunk_rest.call(null, seq__428127_428141__$1);
            var G__428144 = c__4009__auto___428142;
            var G__428145 = cljs.core.count.call(null, c__4009__auto___428142);
            var G__428146 = 0;
            seq__428127_428131 = G__428143;
            chunk__428128_428132 = G__428144;
            count__428129_428133 = G__428145;
            i__428130_428134 = G__428146;
            continue
          }else {
            var k_428147 = cljs.core.first.call(null, seq__428127_428141__$1);
            o1[k_428147] = o2[k_428147];
            var G__428148 = cljs.core.next.call(null, seq__428127_428141__$1);
            var G__428149 = null;
            var G__428150 = 0;
            var G__428151 = 0;
            seq__428127_428131 = G__428148;
            chunk__428128_428132 = G__428149;
            count__428129_428133 = G__428150;
            i__428130_428134 = G__428151;
            continue
          }
        }else {
        }
      }
      break
    }
    return o1
  };
  var js_merge__3 = function() {
    var G__428152__delegate = function(o1, o2, more) {
      return cljs.core.apply.call(null, js_merge, js_merge.call(null, o1, o2), more)
    };
    var G__428152 = function(o1, o2, var_args) {
      var more = null;
      if(arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__428152__delegate.call(this, o1, o2, more)
    };
    G__428152.cljs$lang$maxFixedArity = 2;
    G__428152.cljs$lang$applyTo = function(arglist__428153) {
      var o1 = cljs.core.first(arglist__428153);
      arglist__428153 = cljs.core.next(arglist__428153);
      var o2 = cljs.core.first(arglist__428153);
      var more = cljs.core.rest(arglist__428153);
      return G__428152__delegate(o1, o2, more)
    };
    G__428152.cljs$core$IFn$_invoke$arity$variadic = G__428152__delegate;
    return G__428152
  }();
  js_merge = function(o1, o2, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 2:
        return js_merge__2.call(this, o1, o2);
      default:
        return js_merge__3.cljs$core$IFn$_invoke$arity$variadic(o1, o2, cljs.core.array_seq(arguments, 2))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  js_merge.cljs$lang$maxFixedArity = 2;
  js_merge.cljs$lang$applyTo = js_merge__3.cljs$lang$applyTo;
  js_merge.cljs$core$IFn$_invoke$arity$2 = js_merge__2;
  js_merge.cljs$core$IFn$_invoke$arity$variadic = js_merge__3.cljs$core$IFn$_invoke$arity$variadic;
  return js_merge
}();
purnam.native$.js_merge_nil = function() {
  var js_merge_nil = null;
  var js_merge_nil__2 = function(o1, o2) {
    var seq__428158_428162 = cljs.core.seq.call(null, cljs.core.js_keys.call(null, o2));
    var chunk__428159_428163 = null;
    var count__428160_428164 = 0;
    var i__428161_428165 = 0;
    while(true) {
      if(i__428161_428165 < count__428160_428164) {
        var k_428166 = cljs.core._nth.call(null, chunk__428159_428163, i__428161_428165);
        if(cljs.core.not.call(null, o1[k_428166])) {
          o1[k_428166] = o2[k_428166]
        }else {
        }
        var G__428167 = seq__428158_428162;
        var G__428168 = chunk__428159_428163;
        var G__428169 = count__428160_428164;
        var G__428170 = i__428161_428165 + 1;
        seq__428158_428162 = G__428167;
        chunk__428159_428163 = G__428168;
        count__428160_428164 = G__428169;
        i__428161_428165 = G__428170;
        continue
      }else {
        var temp__4092__auto___428171 = cljs.core.seq.call(null, seq__428158_428162);
        if(temp__4092__auto___428171) {
          var seq__428158_428172__$1 = temp__4092__auto___428171;
          if(cljs.core.chunked_seq_QMARK_.call(null, seq__428158_428172__$1)) {
            var c__4009__auto___428173 = cljs.core.chunk_first.call(null, seq__428158_428172__$1);
            var G__428174 = cljs.core.chunk_rest.call(null, seq__428158_428172__$1);
            var G__428175 = c__4009__auto___428173;
            var G__428176 = cljs.core.count.call(null, c__4009__auto___428173);
            var G__428177 = 0;
            seq__428158_428162 = G__428174;
            chunk__428159_428163 = G__428175;
            count__428160_428164 = G__428176;
            i__428161_428165 = G__428177;
            continue
          }else {
            var k_428178 = cljs.core.first.call(null, seq__428158_428172__$1);
            if(cljs.core.not.call(null, o1[k_428178])) {
              o1[k_428178] = o2[k_428178]
            }else {
            }
            var G__428179 = cljs.core.next.call(null, seq__428158_428172__$1);
            var G__428180 = null;
            var G__428181 = 0;
            var G__428182 = 0;
            seq__428158_428162 = G__428179;
            chunk__428159_428163 = G__428180;
            count__428160_428164 = G__428181;
            i__428161_428165 = G__428182;
            continue
          }
        }else {
        }
      }
      break
    }
    return o1
  };
  var js_merge_nil__3 = function() {
    var G__428183__delegate = function(o1, o2, more) {
      while(true) {
        js_merge_nil.call(null, o1, o2);
        if(cljs.core.truth_(more)) {
          var G__428184 = js_merge_nil.call(null, o1, o2);
          var G__428185 = cljs.core.first.call(null, more);
          var G__428186 = cljs.core.next.call(null, more);
          o1 = G__428184;
          o2 = G__428185;
          more = G__428186;
          continue
        }else {
          return o1
        }
        break
      }
    };
    var G__428183 = function(o1, o2, var_args) {
      var more = null;
      if(arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__428183__delegate.call(this, o1, o2, more)
    };
    G__428183.cljs$lang$maxFixedArity = 2;
    G__428183.cljs$lang$applyTo = function(arglist__428187) {
      var o1 = cljs.core.first(arglist__428187);
      arglist__428187 = cljs.core.next(arglist__428187);
      var o2 = cljs.core.first(arglist__428187);
      var more = cljs.core.rest(arglist__428187);
      return G__428183__delegate(o1, o2, more)
    };
    G__428183.cljs$core$IFn$_invoke$arity$variadic = G__428183__delegate;
    return G__428183
  }();
  js_merge_nil = function(o1, o2, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 2:
        return js_merge_nil__2.call(this, o1, o2);
      default:
        return js_merge_nil__3.cljs$core$IFn$_invoke$arity$variadic(o1, o2, cljs.core.array_seq(arguments, 2))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  js_merge_nil.cljs$lang$maxFixedArity = 2;
  js_merge_nil.cljs$lang$applyTo = js_merge_nil__3.cljs$lang$applyTo;
  js_merge_nil.cljs$core$IFn$_invoke$arity$2 = js_merge_nil__2;
  js_merge_nil.cljs$core$IFn$_invoke$arity$variadic = js_merge_nil__3.cljs$core$IFn$_invoke$arity$variadic;
  return js_merge_nil
}();
purnam.native$.js_replace = function js_replace(o1, o2) {
  purnam.native$.js_empty.call(null, o1);
  return purnam.native$.js_merge.call(null, o1, o2)
};
purnam.native$.js_equals = function js_equals(v1, v2) {
  if(cljs.core._EQ_.call(null, v1, v2)) {
    return true
  }else {
    var t1 = goog.typeOf(v1);
    var t2 = goog.typeOf(v2);
    if(cljs.core._EQ_.call(null, "array", t1, t2)) {
      return goog.array.equals(v1, v2, js_equals)
    }else {
      if(cljs.core._EQ_.call(null, "object", t1, t2)) {
        var ks1 = cljs.core.js_keys.call(null, v1).sort();
        var ks2 = cljs.core.js_keys.call(null, v2).sort();
        if(cljs.core.truth_(goog.array.equals(ks1, ks2))) {
          return goog.array.every(ks1, function(k) {
            return js_equals.call(null, v1[k], v2[k])
          })
        }else {
          return false
        }
      }else {
        if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          return false
        }else {
          return null
        }
      }
    }
  }
};
purnam.native$.js_copy = function js_copy(o) {
  return goog.object.clone(o)
};
purnam.native$.js_initial_value = function js_initial_value(v) {
  var t = goog.typeOf(v);
  if(cljs.core._EQ_.call(null, t, "object")) {
    var obj428191 = {};
    return obj428191
  }else {
    if(cljs.core._EQ_.call(null, t, "array")) {
      return[]
    }else {
      if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        return v
      }else {
        return null
      }
    }
  }
};
purnam.native$.js_deep_extend = function() {
  var js_deep_extend = null;
  var js_deep_extend__2 = function(to, from) {
    var visited = [from];
    var visitedlu = [to];
    js_deep_extend.call(null, to, from, visited, visitedlu);
    return to
  };
  var js_deep_extend__4 = function(to, from, visited, visitedlu) {
    var seq__428196_428200 = cljs.core.seq.call(null, cljs.core.js_keys.call(null, from));
    var chunk__428197_428201 = null;
    var count__428198_428202 = 0;
    var i__428199_428203 = 0;
    while(true) {
      if(i__428199_428203 < count__428198_428202) {
        var k_428204 = cljs.core._nth.call(null, chunk__428197_428201, i__428199_428203);
        var v_428205 = from[k_428204];
        var vn_428206 = purnam.native$.js_initial_value.call(null, v_428205);
        if(cljs.core.not_EQ_.call(null, v_428205, vn_428206)) {
          var i_428207 = visited.indexOf(v_428205);
          if(cljs.core._EQ_.call(null, -1, i_428207)) {
            visited.push(v_428205);
            visitedlu.push(vn_428206);
            js_deep_extend.call(null, vn_428206, v_428205, visited, visitedlu);
            to[k_428204] = vn_428206
          }else {
            to[k_428204] = visitedlu[i_428207]
          }
        }else {
          if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
            to[k_428204] = v_428205
          }else {
          }
        }
        var G__428208 = seq__428196_428200;
        var G__428209 = chunk__428197_428201;
        var G__428210 = count__428198_428202;
        var G__428211 = i__428199_428203 + 1;
        seq__428196_428200 = G__428208;
        chunk__428197_428201 = G__428209;
        count__428198_428202 = G__428210;
        i__428199_428203 = G__428211;
        continue
      }else {
        var temp__4092__auto___428212 = cljs.core.seq.call(null, seq__428196_428200);
        if(temp__4092__auto___428212) {
          var seq__428196_428213__$1 = temp__4092__auto___428212;
          if(cljs.core.chunked_seq_QMARK_.call(null, seq__428196_428213__$1)) {
            var c__4009__auto___428214 = cljs.core.chunk_first.call(null, seq__428196_428213__$1);
            var G__428215 = cljs.core.chunk_rest.call(null, seq__428196_428213__$1);
            var G__428216 = c__4009__auto___428214;
            var G__428217 = cljs.core.count.call(null, c__4009__auto___428214);
            var G__428218 = 0;
            seq__428196_428200 = G__428215;
            chunk__428197_428201 = G__428216;
            count__428198_428202 = G__428217;
            i__428199_428203 = G__428218;
            continue
          }else {
            var k_428219 = cljs.core.first.call(null, seq__428196_428213__$1);
            var v_428220 = from[k_428219];
            var vn_428221 = purnam.native$.js_initial_value.call(null, v_428220);
            if(cljs.core.not_EQ_.call(null, v_428220, vn_428221)) {
              var i_428222 = visited.indexOf(v_428220);
              if(cljs.core._EQ_.call(null, -1, i_428222)) {
                visited.push(v_428220);
                visitedlu.push(vn_428221);
                js_deep_extend.call(null, vn_428221, v_428220, visited, visitedlu);
                to[k_428219] = vn_428221
              }else {
                to[k_428219] = visitedlu[i_428222]
              }
            }else {
              if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                to[k_428219] = v_428220
              }else {
              }
            }
            var G__428223 = cljs.core.next.call(null, seq__428196_428213__$1);
            var G__428224 = null;
            var G__428225 = 0;
            var G__428226 = 0;
            seq__428196_428200 = G__428223;
            chunk__428197_428201 = G__428224;
            count__428198_428202 = G__428225;
            i__428199_428203 = G__428226;
            continue
          }
        }else {
        }
      }
      break
    }
    return to
  };
  js_deep_extend = function(to, from, visited, visitedlu) {
    switch(arguments.length) {
      case 2:
        return js_deep_extend__2.call(this, to, from);
      case 4:
        return js_deep_extend__4.call(this, to, from, visited, visitedlu)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  js_deep_extend.cljs$core$IFn$_invoke$arity$2 = js_deep_extend__2;
  js_deep_extend.cljs$core$IFn$_invoke$arity$4 = js_deep_extend__4;
  return js_deep_extend
}();
purnam.native$.js_deep_copy = function js_deep_copy(value) {
  var vn = purnam.native$.js_initial_value.call(null, value);
  if(cljs.core.not_EQ_.call(null, value, vn)) {
    return purnam.native$.js_deep_extend.call(null, vn, value)
  }else {
    return value
  }
};
purnam.native$.js_deep_replace = function js_deep_replace(o1, o2) {
  purnam.native$.js_empty.call(null, o1);
  return purnam.native$.js_deep_extend.call(null, o1, o2)
};
purnam.native$.js_map_STAR_ = function() {
  var js_map_STAR___delegate = function(f, args) {
    var output = [];
    var len = cljs.core.apply.call(null, cljs.core.min, cljs.core.map.call(null, function(output) {
      return function(ar) {
        return ar.length
      }
    }(output), args));
    var seq__428232_428236 = cljs.core.seq.call(null, cljs.core.range.call(null, len));
    var chunk__428233_428237 = null;
    var count__428234_428238 = 0;
    var i__428235_428239 = 0;
    while(true) {
      if(i__428235_428239 < count__428234_428238) {
        var i_428240 = cljs.core._nth.call(null, chunk__428233_428237, i__428235_428239);
        output.push(cljs.core.apply.call(null, f, cljs.core.map.call(null, function(seq__428232_428236, chunk__428233_428237, count__428234_428238, i__428235_428239, i_428240) {
          return function(p1__428227_SHARP_) {
            return p1__428227_SHARP_[i_428240]
          }
        }(seq__428232_428236, chunk__428233_428237, count__428234_428238, i__428235_428239, i_428240), args)));
        var G__428241 = seq__428232_428236;
        var G__428242 = chunk__428233_428237;
        var G__428243 = count__428234_428238;
        var G__428244 = i__428235_428239 + 1;
        seq__428232_428236 = G__428241;
        chunk__428233_428237 = G__428242;
        count__428234_428238 = G__428243;
        i__428235_428239 = G__428244;
        continue
      }else {
        var temp__4092__auto___428245 = cljs.core.seq.call(null, seq__428232_428236);
        if(temp__4092__auto___428245) {
          var seq__428232_428246__$1 = temp__4092__auto___428245;
          if(cljs.core.chunked_seq_QMARK_.call(null, seq__428232_428246__$1)) {
            var c__4009__auto___428247 = cljs.core.chunk_first.call(null, seq__428232_428246__$1);
            var G__428248 = cljs.core.chunk_rest.call(null, seq__428232_428246__$1);
            var G__428249 = c__4009__auto___428247;
            var G__428250 = cljs.core.count.call(null, c__4009__auto___428247);
            var G__428251 = 0;
            seq__428232_428236 = G__428248;
            chunk__428233_428237 = G__428249;
            count__428234_428238 = G__428250;
            i__428235_428239 = G__428251;
            continue
          }else {
            var i_428252 = cljs.core.first.call(null, seq__428232_428246__$1);
            output.push(cljs.core.apply.call(null, f, cljs.core.map.call(null, function(seq__428232_428236, chunk__428233_428237, count__428234_428238, i__428235_428239, i_428252, seq__428232_428246__$1, temp__4092__auto___428245) {
              return function(p1__428227_SHARP_) {
                return p1__428227_SHARP_[i_428252]
              }
            }(seq__428232_428236, chunk__428233_428237, count__428234_428238, i__428235_428239, i_428252, seq__428232_428246__$1, temp__4092__auto___428245), args)));
            var G__428253 = cljs.core.next.call(null, seq__428232_428246__$1);
            var G__428254 = null;
            var G__428255 = 0;
            var G__428256 = 0;
            seq__428232_428236 = G__428253;
            chunk__428233_428237 = G__428254;
            count__428234_428238 = G__428255;
            i__428235_428239 = G__428256;
            continue
          }
        }else {
        }
      }
      break
    }
    return output
  };
  var js_map_STAR_ = function(f, var_args) {
    var args = null;
    if(arguments.length > 1) {
      args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
    }
    return js_map_STAR___delegate.call(this, f, args)
  };
  js_map_STAR_.cljs$lang$maxFixedArity = 1;
  js_map_STAR_.cljs$lang$applyTo = function(arglist__428257) {
    var f = cljs.core.first(arglist__428257);
    var args = cljs.core.rest(arglist__428257);
    return js_map_STAR___delegate(f, args)
  };
  js_map_STAR_.cljs$core$IFn$_invoke$arity$variadic = js_map_STAR___delegate;
  return js_map_STAR_
}();
purnam.native$.js_mapcat_STAR_ = function() {
  var js_mapcat_STAR___delegate = function(f, args) {
    var output = [];
    var len = cljs.core.apply.call(null, cljs.core.min, cljs.core.map.call(null, function(output) {
      return function(ar) {
        return ar.length
      }
    }(output), args));
    var i = 0;
    var output__$1 = output;
    while(true) {
      if(i < len) {
        var res = cljs.core.apply.call(null, f, cljs.core.map.call(null, function(i, output__$1) {
          return function(p1__428258_SHARP_) {
            return p1__428258_SHARP_[i]
          }
        }(i, output__$1), args));
        var G__428259 = i + 1;
        var G__428260 = output__$1.concat(res);
        i = G__428259;
        output__$1 = G__428260;
        continue
      }else {
        return output__$1
      }
      break
    }
  };
  var js_mapcat_STAR_ = function(f, var_args) {
    var args = null;
    if(arguments.length > 1) {
      args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
    }
    return js_mapcat_STAR___delegate.call(this, f, args)
  };
  js_mapcat_STAR_.cljs$lang$maxFixedArity = 1;
  js_mapcat_STAR_.cljs$lang$applyTo = function(arglist__428261) {
    var f = cljs.core.first(arglist__428261);
    var args = cljs.core.rest(arglist__428261);
    return js_mapcat_STAR___delegate(f, args)
  };
  js_mapcat_STAR_.cljs$core$IFn$_invoke$arity$variadic = js_mapcat_STAR___delegate;
  return js_mapcat_STAR_
}();
purnam.native$.js_map = function() {
  var js_map__delegate = function(f, args) {
    var output = [];
    var len = cljs.core.apply.call(null, cljs.core.min, cljs.core.map.call(null, function(output) {
      return function(ar) {
        return cljs.core.count.call(null, ar)
      }
    }(output), args));
    var seq__428267_428271 = cljs.core.seq.call(null, cljs.core.range.call(null, len));
    var chunk__428268_428272 = null;
    var count__428269_428273 = 0;
    var i__428270_428274 = 0;
    while(true) {
      if(i__428270_428274 < count__428269_428273) {
        var i_428275 = cljs.core._nth.call(null, chunk__428268_428272, i__428270_428274);
        output.push(cljs.core.apply.call(null, f, cljs.core.map.call(null, function(seq__428267_428271, chunk__428268_428272, count__428269_428273, i__428270_428274, i_428275) {
          return function(p1__428262_SHARP_) {
            return cljs.core.nth.call(null, p1__428262_SHARP_, i_428275)
          }
        }(seq__428267_428271, chunk__428268_428272, count__428269_428273, i__428270_428274, i_428275), args)));
        var G__428276 = seq__428267_428271;
        var G__428277 = chunk__428268_428272;
        var G__428278 = count__428269_428273;
        var G__428279 = i__428270_428274 + 1;
        seq__428267_428271 = G__428276;
        chunk__428268_428272 = G__428277;
        count__428269_428273 = G__428278;
        i__428270_428274 = G__428279;
        continue
      }else {
        var temp__4092__auto___428280 = cljs.core.seq.call(null, seq__428267_428271);
        if(temp__4092__auto___428280) {
          var seq__428267_428281__$1 = temp__4092__auto___428280;
          if(cljs.core.chunked_seq_QMARK_.call(null, seq__428267_428281__$1)) {
            var c__4009__auto___428282 = cljs.core.chunk_first.call(null, seq__428267_428281__$1);
            var G__428283 = cljs.core.chunk_rest.call(null, seq__428267_428281__$1);
            var G__428284 = c__4009__auto___428282;
            var G__428285 = cljs.core.count.call(null, c__4009__auto___428282);
            var G__428286 = 0;
            seq__428267_428271 = G__428283;
            chunk__428268_428272 = G__428284;
            count__428269_428273 = G__428285;
            i__428270_428274 = G__428286;
            continue
          }else {
            var i_428287 = cljs.core.first.call(null, seq__428267_428281__$1);
            output.push(cljs.core.apply.call(null, f, cljs.core.map.call(null, function(seq__428267_428271, chunk__428268_428272, count__428269_428273, i__428270_428274, i_428287, seq__428267_428281__$1, temp__4092__auto___428280) {
              return function(p1__428262_SHARP_) {
                return cljs.core.nth.call(null, p1__428262_SHARP_, i_428287)
              }
            }(seq__428267_428271, chunk__428268_428272, count__428269_428273, i__428270_428274, i_428287, seq__428267_428281__$1, temp__4092__auto___428280), args)));
            var G__428288 = cljs.core.next.call(null, seq__428267_428281__$1);
            var G__428289 = null;
            var G__428290 = 0;
            var G__428291 = 0;
            seq__428267_428271 = G__428288;
            chunk__428268_428272 = G__428289;
            count__428269_428273 = G__428290;
            i__428270_428274 = G__428291;
            continue
          }
        }else {
        }
      }
      break
    }
    return output
  };
  var js_map = function(f, var_args) {
    var args = null;
    if(arguments.length > 1) {
      args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
    }
    return js_map__delegate.call(this, f, args)
  };
  js_map.cljs$lang$maxFixedArity = 1;
  js_map.cljs$lang$applyTo = function(arglist__428292) {
    var f = cljs.core.first(arglist__428292);
    var args = cljs.core.rest(arglist__428292);
    return js_map__delegate(f, args)
  };
  js_map.cljs$core$IFn$_invoke$arity$variadic = js_map__delegate;
  return js_map
}();
purnam.native$.js_mapcat = function() {
  var js_mapcat__delegate = function(f, args) {
    var output = [];
    var len = cljs.core.apply.call(null, cljs.core.min, cljs.core.map.call(null, function(output) {
      return function(ar) {
        return cljs.core.count.call(null, ar)
      }
    }(output), args));
    var i = 0;
    var output__$1 = output;
    while(true) {
      if(i < len) {
        var res = cljs.core.apply.call(null, f, cljs.core.map.call(null, function(i, output__$1) {
          return function(p1__428293_SHARP_) {
            return cljs.core.nth.call(null, p1__428293_SHARP_, i)
          }
        }(i, output__$1), args));
        var G__428294 = i + 1;
        var G__428295 = output__$1.concat(res);
        i = G__428294;
        output__$1 = G__428295;
        continue
      }else {
        return output__$1
      }
      break
    }
  };
  var js_mapcat = function(f, var_args) {
    var args = null;
    if(arguments.length > 1) {
      args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
    }
    return js_mapcat__delegate.call(this, f, args)
  };
  js_mapcat.cljs$lang$maxFixedArity = 1;
  js_mapcat.cljs$lang$applyTo = function(arglist__428296) {
    var f = cljs.core.first(arglist__428296);
    var args = cljs.core.rest(arglist__428296);
    return js_mapcat__delegate(f, args)
  };
  js_mapcat.cljs$core$IFn$_invoke$arity$variadic = js_mapcat__delegate;
  return js_mapcat
}();
purnam.native$.js_concat = function() {
  var js_concat__delegate = function(args) {
    var output = [];
    var seq__428309_428321 = cljs.core.seq.call(null, args);
    var chunk__428314_428322 = null;
    var count__428315_428323 = 0;
    var i__428316_428324 = 0;
    while(true) {
      if(i__428316_428324 < count__428315_428323) {
        var ar_428325 = cljs.core._nth.call(null, chunk__428314_428322, i__428316_428324);
        var seq__428317_428326 = cljs.core.seq.call(null, ar_428325);
        var chunk__428318_428327 = null;
        var count__428319_428328 = 0;
        var i__428320_428329 = 0;
        while(true) {
          if(i__428320_428329 < count__428319_428328) {
            var v_428330 = cljs.core._nth.call(null, chunk__428318_428327, i__428320_428329);
            output.push(v_428330);
            var G__428331 = seq__428317_428326;
            var G__428332 = chunk__428318_428327;
            var G__428333 = count__428319_428328;
            var G__428334 = i__428320_428329 + 1;
            seq__428317_428326 = G__428331;
            chunk__428318_428327 = G__428332;
            count__428319_428328 = G__428333;
            i__428320_428329 = G__428334;
            continue
          }else {
            var temp__4092__auto___428335 = cljs.core.seq.call(null, seq__428317_428326);
            if(temp__4092__auto___428335) {
              var seq__428317_428336__$1 = temp__4092__auto___428335;
              if(cljs.core.chunked_seq_QMARK_.call(null, seq__428317_428336__$1)) {
                var c__4009__auto___428337 = cljs.core.chunk_first.call(null, seq__428317_428336__$1);
                var G__428338 = cljs.core.chunk_rest.call(null, seq__428317_428336__$1);
                var G__428339 = c__4009__auto___428337;
                var G__428340 = cljs.core.count.call(null, c__4009__auto___428337);
                var G__428341 = 0;
                seq__428317_428326 = G__428338;
                chunk__428318_428327 = G__428339;
                count__428319_428328 = G__428340;
                i__428320_428329 = G__428341;
                continue
              }else {
                var v_428342 = cljs.core.first.call(null, seq__428317_428336__$1);
                output.push(v_428342);
                var G__428343 = cljs.core.next.call(null, seq__428317_428336__$1);
                var G__428344 = null;
                var G__428345 = 0;
                var G__428346 = 0;
                seq__428317_428326 = G__428343;
                chunk__428318_428327 = G__428344;
                count__428319_428328 = G__428345;
                i__428320_428329 = G__428346;
                continue
              }
            }else {
            }
          }
          break
        }
        var G__428347 = seq__428309_428321;
        var G__428348 = chunk__428314_428322;
        var G__428349 = count__428315_428323;
        var G__428350 = i__428316_428324 + 1;
        seq__428309_428321 = G__428347;
        chunk__428314_428322 = G__428348;
        count__428315_428323 = G__428349;
        i__428316_428324 = G__428350;
        continue
      }else {
        var temp__4092__auto___428351 = cljs.core.seq.call(null, seq__428309_428321);
        if(temp__4092__auto___428351) {
          var seq__428309_428352__$1 = temp__4092__auto___428351;
          if(cljs.core.chunked_seq_QMARK_.call(null, seq__428309_428352__$1)) {
            var c__4009__auto___428353 = cljs.core.chunk_first.call(null, seq__428309_428352__$1);
            var G__428354 = cljs.core.chunk_rest.call(null, seq__428309_428352__$1);
            var G__428355 = c__4009__auto___428353;
            var G__428356 = cljs.core.count.call(null, c__4009__auto___428353);
            var G__428357 = 0;
            seq__428309_428321 = G__428354;
            chunk__428314_428322 = G__428355;
            count__428315_428323 = G__428356;
            i__428316_428324 = G__428357;
            continue
          }else {
            var ar_428358 = cljs.core.first.call(null, seq__428309_428352__$1);
            var seq__428310_428359 = cljs.core.seq.call(null, ar_428358);
            var chunk__428311_428360 = null;
            var count__428312_428361 = 0;
            var i__428313_428362 = 0;
            while(true) {
              if(i__428313_428362 < count__428312_428361) {
                var v_428363 = cljs.core._nth.call(null, chunk__428311_428360, i__428313_428362);
                output.push(v_428363);
                var G__428364 = seq__428310_428359;
                var G__428365 = chunk__428311_428360;
                var G__428366 = count__428312_428361;
                var G__428367 = i__428313_428362 + 1;
                seq__428310_428359 = G__428364;
                chunk__428311_428360 = G__428365;
                count__428312_428361 = G__428366;
                i__428313_428362 = G__428367;
                continue
              }else {
                var temp__4092__auto___428368__$1 = cljs.core.seq.call(null, seq__428310_428359);
                if(temp__4092__auto___428368__$1) {
                  var seq__428310_428369__$1 = temp__4092__auto___428368__$1;
                  if(cljs.core.chunked_seq_QMARK_.call(null, seq__428310_428369__$1)) {
                    var c__4009__auto___428370 = cljs.core.chunk_first.call(null, seq__428310_428369__$1);
                    var G__428371 = cljs.core.chunk_rest.call(null, seq__428310_428369__$1);
                    var G__428372 = c__4009__auto___428370;
                    var G__428373 = cljs.core.count.call(null, c__4009__auto___428370);
                    var G__428374 = 0;
                    seq__428310_428359 = G__428371;
                    chunk__428311_428360 = G__428372;
                    count__428312_428361 = G__428373;
                    i__428313_428362 = G__428374;
                    continue
                  }else {
                    var v_428375 = cljs.core.first.call(null, seq__428310_428369__$1);
                    output.push(v_428375);
                    var G__428376 = cljs.core.next.call(null, seq__428310_428369__$1);
                    var G__428377 = null;
                    var G__428378 = 0;
                    var G__428379 = 0;
                    seq__428310_428359 = G__428376;
                    chunk__428311_428360 = G__428377;
                    count__428312_428361 = G__428378;
                    i__428313_428362 = G__428379;
                    continue
                  }
                }else {
                }
              }
              break
            }
            var G__428380 = cljs.core.next.call(null, seq__428309_428352__$1);
            var G__428381 = null;
            var G__428382 = 0;
            var G__428383 = 0;
            seq__428309_428321 = G__428380;
            chunk__428314_428322 = G__428381;
            count__428315_428323 = G__428382;
            i__428316_428324 = G__428383;
            continue
          }
        }else {
        }
      }
      break
    }
    return output
  };
  var js_concat = function(var_args) {
    var args = null;
    if(arguments.length > 0) {
      args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return js_concat__delegate.call(this, args)
  };
  js_concat.cljs$lang$maxFixedArity = 0;
  js_concat.cljs$lang$applyTo = function(arglist__428384) {
    var args = cljs.core.seq(arglist__428384);
    return js_concat__delegate(args)
  };
  js_concat.cljs$core$IFn$_invoke$arity$variadic = js_concat__delegate;
  return js_concat
}();
purnam.native$.js_LT__ = function js_LT__(obj) {
  return cljs.core.clj__GT_js.call(null, obj)
};
purnam.native$.log = function() {
  var log = null;
  var log__1 = function(x) {
    if(cljs.core.coll_QMARK_.call(null, x)) {
      console.log([cljs.core.str(x)].join(""), x)
    }else {
      console.log([cljs.core.str(x)].join(""))
    }
    return x
  };
  var log__2 = function(x, y) {
    if(cljs.core.coll_QMARK_.call(null, x)) {
      console.log([cljs.core.str(x), cljs.core.str(":")].join(""), [cljs.core.str(y)].join(""), y)
    }else {
      console.log([cljs.core.str(x), cljs.core.str(":")].join(""), [cljs.core.str(y)].join(""))
    }
    return y
  };
  log = function(x, y) {
    switch(arguments.length) {
      case 1:
        return log__1.call(this, x);
      case 2:
        return log__2.call(this, x, y)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  log.cljs$core$IFn$_invoke$arity$1 = log__1;
  log.cljs$core$IFn$_invoke$arity$2 = log__2;
  return log
}();
purnam.native$.augment_fn_string = function augment_fn_string(func) {
  if(typeof func === "string") {
    return function(x) {
      return purnam.native$.aget_in.call(null, x, clojure.string.split.call(null, func, /\./))
    }
  }else {
    return func
  }
};
purnam.native$.check_fn = function() {
  var check_fn = null;
  var check_fn__1 = function(chk) {
    return function(x) {
      if(cljs.core.fn_QMARK_.call(null, chk)) {
        return chk.call(null, x)
      }else {
        return cljs.core._EQ_.call(null, x, chk)
      }
    }
  };
  var check_fn__2 = function(func, chk) {
    return function(x) {
      var res = func.call(null, x);
      if(cljs.core.fn_QMARK_.call(null, chk)) {
        return chk.call(null, res)
      }else {
        return cljs.core._EQ_.call(null, res, chk)
      }
    }
  };
  check_fn = function(func, chk) {
    switch(arguments.length) {
      case 1:
        return check_fn__1.call(this, func);
      case 2:
        return check_fn__2.call(this, func, chk)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  check_fn.cljs$core$IFn$_invoke$arity$1 = check_fn__1;
  check_fn.cljs$core$IFn$_invoke$arity$2 = check_fn__2;
  return check_fn
}();
goog.provide("chaperone.ng.core");
goog.require("cljs.core");
goog.require("purnam.native$");
goog.require("purnam.native$");
goog.require("chaperone.core");
goog.require("chaperone.core");
chaperone.ng.core.chaperone_app = angular.module("chaperone.app", ["ngRoute"]);
chaperone.ng.core.chaperone_app_System = ["$location", function($location) {
  return chaperone.core.start_BANG_.call(null, chaperone.core.create_system.call(null, function() {
    var obj_SHARP_ = purnam.native$.aget_in.call(null, $location, cljs.core.PersistentVector.EMPTY);
    var fn_SHARP_ = obj_SHARP_["host"];
    return fn_SHARP_.call(obj_SHARP_)
  }(), function() {
    var obj_SHARP_ = purnam.native$.aget_in.call(null, $location, cljs.core.PersistentVector.EMPTY);
    var fn_SHARP_ = obj_SHARP_["port"];
    return fn_SHARP_.call(obj_SHARP_)
  }()))
}];
angular.module("chaperone.app").factory("System", chaperone.ng.core.chaperone_app_System);
angular.module("chaperone.app").config(["$routeProvider", function($routeProvider) {
  var G__424520 = $routeProvider;
  G__424520.when("/admin/users/add", function() {
    var G__424521 = function() {
      var obj424524 = {};
      return obj424524
    }();
    G__424521["templateUrl"] = "/public/partials/admin/user/user-form.html";
    G__424521["controller"] = "AdminUserCtrl";
    return G__424521
  }());
  G__424520.when("/admin/users/list", function() {
    var G__424525 = function() {
      var obj424528 = {};
      return obj424528
    }();
    G__424525["templateUrl"] = "/public/partials/admin/user/list.html";
    G__424525["controller"] = "AdminUserCtrl";
    return G__424525
  }());
  G__424520.otherwise(function() {
    var G__424529 = function() {
      var obj424532 = {};
      return obj424532
    }();
    G__424529["templateUrl"] = "/public/partials/index.html";
    return G__424529
  }());
  return G__424520
}]);
goog.provide("chaperone.user");
goog.require("cljs.core");
goog.require("cljs.core.async");
goog.require("chaperone.crossover.user.User");
goog.require("cljs.core.async");
chaperone.user.save_user = function save_user(user) {
  throw Error("save-user Not implemented");
};
goog.provide("chaperone.ng.admin.user");
goog.require("cljs.core");
goog.require("purnam.native$");
goog.require("cljs.core.async");
goog.require("purnam.native$");
goog.require("cljs.core.async");
goog.require("chaperone.user");
goog.require("chaperone.user");
goog.require("chaperone.crossover.user");
goog.require("chaperone.crossover.user");
goog.require("chaperone.ng.core");
goog.require("chaperone.ng.core");
chaperone.ng.admin.user.chaperone_app_AdminUserCtrl = ["$scope", "$location", "System", function($scope, $location, System) {
  purnam.native$.aset_in.call(null, $scope, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["init"], null), function() {
    return purnam.native$.aset_in.call(null, $scope, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["title"], null), "Add")
  });
  purnam.native$.aset_in.call(null, $scope, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["load-user"], null), function() {
    var user = chaperone.crossover.user.new_user.call(null, "", "", "", "");
    return purnam.native$.aset_in.call(null, $scope, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["user"], null), cljs.core.clj__GT_js.call(null, user))
  });
  return purnam.native$.aset_in.call(null, $scope, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["save-user"], null), function() {
    var user = chaperone.crossover.user.map__GT_User.call(null, cljs.core.js__GT_clj.call(null, purnam.native$.aget_in.call(null, $scope, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["user"], null))));
    var chan = chaperone.user.save_user.call(null, user);
    var c__5728__auto__ = cljs.core.async.chan.call(null, 1);
    cljs.core.async.impl.dispatch.run.call(null, function() {
      var f__5729__auto__ = function() {
        var switch__5678__auto__ = function(state_424576) {
          var state_val_424577 = state_424576[1];
          if(state_val_424577 === 2) {
            var inst_424561 = state_424576[2];
            var inst_424562 = purnam.native$.aget_in.call(null, $location, cljs.core.PersistentVector.EMPTY);
            var inst_424563 = inst_424562["path"];
            var inst_424564 = inst_424563.call(inst_424562, "/admin/users/list");
            var inst_424565 = ["alert"];
            var inst_424566 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, inst_424565, null);
            var inst_424571 = {};
            var inst_424572 = inst_424571["message"] = "User has been saved successfully";
            var inst_424573 = inst_424571["category"] = "success";
            var inst_424574 = purnam.native$.aset_in.call(null, $scope, inst_424566, inst_424571);
            var state_424576__$1 = function() {
              var statearr_424578 = state_424576;
              statearr_424578[5] = inst_424564;
              statearr_424578[6] = inst_424561;
              statearr_424578[7] = inst_424573;
              statearr_424578[8] = inst_424572;
              return statearr_424578
            }();
            return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_424576__$1, inst_424574)
          }else {
            if(state_val_424577 === 1) {
              var state_424576__$1 = state_424576;
              return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_424576__$1, 2, chan)
            }else {
              return null
            }
          }
        };
        return function(switch__5678__auto__) {
          return function() {
            var state_machine__5679__auto__ = null;
            var state_machine__5679__auto____0 = function() {
              var statearr_424580 = new Array(9);
              statearr_424580[0] = state_machine__5679__auto__;
              statearr_424580[1] = 1;
              return statearr_424580
            };
            var state_machine__5679__auto____1 = function(state_424576) {
              while(true) {
                var result__5680__auto__ = switch__5678__auto__.call(null, state_424576);
                if(cljs.core.keyword_identical_QMARK_.call(null, result__5680__auto__, new cljs.core.Keyword(null, "recur", "recur", 1122293407))) {
                  continue
                }else {
                  return result__5680__auto__
                }
                break
              }
            };
            state_machine__5679__auto__ = function(state_424576) {
              switch(arguments.length) {
                case 0:
                  return state_machine__5679__auto____0.call(this);
                case 1:
                  return state_machine__5679__auto____1.call(this, state_424576)
              }
              throw new Error("Invalid arity: " + arguments.length);
            };
            state_machine__5679__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__5679__auto____0;
            state_machine__5679__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__5679__auto____1;
            return state_machine__5679__auto__
          }()
        }(switch__5678__auto__)
      }();
      var state__5730__auto__ = function() {
        var statearr_424581 = f__5729__auto__.call(null);
        statearr_424581[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__5728__auto__;
        return statearr_424581
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__5730__auto__)
    });
    return c__5728__auto__
  })
}];
angular.module("chaperone.app").controller("AdminUserCtrl", chaperone.ng.admin.user.chaperone_app_AdminUserCtrl);
goog.provide("chaperone.ng.admin.user_test");
goog.require("cljs.core");
goog.require("purnam.native$");
goog.require("cljs.core.async");
goog.require("cljs.core.async");
goog.require("purnam.native$");
goog.require("chaperone.user");
goog.require("chaperone.user");
goog.require("chaperone.ng.admin.user");
goog.require("chaperone.ng.admin.user");
beforeEach(function() {
  var obj_SHARP_ = purnam.native$.aget_in.call(null, this, cljs.core.PersistentVector.EMPTY);
  var fn_SHARP_ = obj_SHARP_["addMatchers"];
  return fn_SHARP_.call(obj_SHARP_, function() {
    var G__424611 = function() {
      var obj424614 = {};
      return obj424614
    }();
    G__424611["toSatisfy"] = function(expected, tactual, texpected) {
      var actual = purnam.native$.aget_in.call(null, this, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["actual"], null));
      var actualText = [cljs.core.str(actual)].join("");
      var actualText__$1 = cljs.core._EQ_.call(null, actualText, "[object Object]") ? function() {
        var ks = function() {
          var obj_SHARP___$1 = purnam.native$.aget_in.call(null, goog, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["object"], null));
          var fn_SHARP___$1 = obj_SHARP___$1["getKeys"];
          return fn_SHARP___$1.call(obj_SHARP___$1, actual)
        }();
        var vs = function() {
          var obj_SHARP___$1 = purnam.native$.aget_in.call(null, goog, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["object"], null));
          var fn_SHARP___$1 = obj_SHARP___$1["getValues"];
          return fn_SHARP___$1.call(obj_SHARP___$1, actual)
        }();
        return cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, cljs.core.map.call(null, function(ks, vs, actual, actualText) {
          return function(x, y) {
            return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [x, y], null)
          }
        }(ks, vs, actual, actualText), ks, vs))
      }() : actualText;
      var notText = cljs.core.truth_(purnam.native$.aget_in.call(null, this, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["isNot"], null))) ? "Not " : "";
      this["message"] = function() {
        return[cljs.core.str("Expression: "), cljs.core.str(tactual), cljs.core.str("\n  Expected: "), cljs.core.str(notText), cljs.core.str(texpected), cljs.core.str("\n  Actual: "), cljs.core.str(actualText__$1)].join("")
      };
      if(cljs.core._EQ_.call(null, function() {
        var obj_SHARP___$1 = purnam.native$.aget_in.call(null, goog, cljs.core.PersistentVector.EMPTY);
        var fn_SHARP___$1 = obj_SHARP___$1["typeOf"];
        return fn_SHARP___$1.call(obj_SHARP___$1, expected)
      }(), "array")) {
        return purnam.native$.js_equals.call(null, expected, actual)
      }else {
        if(cljs.core.fn_QMARK_.call(null, expected)) {
          return expected.call(null, actual)
        }else {
          if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
            var or__3285__auto__ = cljs.core._EQ_.call(null, expected, actual);
            if(or__3285__auto__) {
              return or__3285__auto__
            }else {
              return purnam.native$.js_equals.call(null, expected, actual)
            }
          }else {
            return null
          }
        }
      }
    };
    return G__424611
  }())
});
var spec_424622 = function() {
  var obj424616 = {};
  return obj424616
}();
describe("Testing AdminUserCtrl", function() {
  beforeEach(module("chaperone.app"));
  beforeEach(inject(["$controller", "$location", "$rootScope", function($controller, $location, $rootScope) {
    spec_424622["$scope"] = $controller.call(null, "AdminUserCtrl", function() {
      var G__424617 = function() {
        var obj424620 = {};
        return obj424620
      }();
      G__424617["$scope"] = function() {
        var obj_SHARP_ = purnam.native$.aget_in.call(null, $rootScope, cljs.core.PersistentVector.EMPTY);
        var fn_SHARP_ = obj_SHARP_["$new"];
        return fn_SHARP_.call(obj_SHARP_)
      }();
      G__424617["$location"] = $location;
      return G__424617
    }());
    return spec_424622["$location"] = $location
  }]));
  it("Should have a title in the scope", function() {
    var obj_SHARP__424623 = purnam.native$.aget_in.call(null, spec_424622, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["$scope"], null));
    var fn_SHARP__424624 = obj_SHARP__424623["init"];
    fn_SHARP__424624.call(obj_SHARP__424623);
    return expect(purnam.native$.aget_in.call(null, spec_424622, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["$scope", "title"], null))).toSatisfy("Add", '(purnam.native/aget-in spec ["$scope" "title"])', "Add")
  });
  it("Should create a new user into scope, when a non existent usersid is used", function() {
    var obj_SHARP__424625 = purnam.native$.aget_in.call(null, spec_424622, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["$scope"], null));
    var fn_SHARP__424626 = obj_SHARP__424625["load-user"];
    fn_SHARP__424626.call(obj_SHARP__424625);
    expect(purnam.native$.aget_in.call(null, spec_424622, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["$scope", "user", "firstname"], null))).toSatisfy("", '(purnam.native/aget-in spec ["$scope" "user" "firstname"])', "");
    expect(purnam.native$.aget_in.call(null, spec_424622, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["$scope", "user", "lastname"], null))).toSatisfy("", '(purnam.native/aget-in spec ["$scope" "user" "lastname"])', "");
    expect(purnam.native$.aget_in.call(null, spec_424622, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["$scope", "user", "email"], null))).toSatisfy("", '(purnam.native/aget-in spec ["$scope" "user" "email"])', "");
    return expect(purnam.native$.aget_in.call(null, spec_424622, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["$scope", "user", "password"], null))).toSatisfy("", '(purnam.native/aget-in spec ["$scope" "user" "password"])', "")
  });
  it("Should show a message and change the location when a user is saved", function() {
    var obj_SHARP__424627 = purnam.native$.aget_in.call(null, spec_424622, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["$scope"], null));
    var fn_SHARP__424628 = obj_SHARP__424627["load-user"];
    fn_SHARP__424628.call(obj_SHARP__424627);
    purnam.native$.aset_in.call(null, spec_424622, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["$scope", "user", "firstname"], null), "John");
    purnam.native$.aset_in.call(null, spec_424622, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["$scope", "user", "lastname"], null), "Doe");
    purnam.native$.aset_in.call(null, spec_424622, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["$scope", "user", "email"], null), "email@email.com");
    purnam.native$.aset_in.call(null, spec_424622, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["$scope", "user", "password"], null), "password");
    var ws_chan = cljs.core.async.chan.call(null);
    var save_user424621 = chaperone.user.save_user;
    try {
      chaperone.user.save_user = function(user) {
        return ws_chan
      };
      var obj_SHARP__424629 = purnam.native$.aget_in.call(null, spec_424622, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["$scope"], null));
      var fn_SHARP__424630 = obj_SHARP__424629["save-user"];
      fn_SHARP__424630.call(obj_SHARP__424629);
      runs(function() {
        return cljs.core.async.put_BANG_.call(null, ws_chan, cljs.core.PersistentArrayMap.EMPTY)
      });
      waitsFor(function() {
        return cljs.core._EQ_.call(null, function() {
          var obj_SHARP_ = purnam.native$.aget_in.call(null, spec_424622, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["$location"], null));
          var fn_SHARP_ = obj_SHARP_["path"];
          return fn_SHARP_.call(obj_SHARP_)
        }(), "/admin/users/list")
      }, "Location never gets set", 1E3);
      return runs(function() {
        return expect(purnam.native$.aget_in.call(null, spec_424622, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["$scope", "alert", "category"], null))).toSatisfy("success", '(purnam.native/aget-in spec ["$scope" "alert" "category"])', "success")
      })
    }finally {
      chaperone.user.save_user = save_user424621
    }
  });
  return null
});
goog.provide("chaperone.websocket_test");
goog.require("cljs.core");
goog.require("purnam.native$");
goog.require("cljs.core.async");
goog.require("chaperone.crossover.rpc");
goog.require("chaperone.websocket");
goog.require("cljs.core.async");
goog.require("chaperone.crossover.rpc");
goog.require("chaperone.websocket");
goog.require("purnam.native$");
goog.require("chaperone.core");
goog.require("chaperone.core");
var spec_424587 = function() {
  var obj424586 = {};
  return obj424586
}();
describe("Websocket subsystem", function() {
  it("should have the websocket subsystem", function() {
    var system = chaperone.core.create_system.call(null, "localhost", 8080);
    return expect(cljs.core.map_QMARK_.call(null, chaperone.websocket.sub_system.call(null, system))).toSatisfy(true, "(map? (sub-system system))", "true")
  });
  return null
});
var spec_424591 = function() {
  var obj424590 = {};
  return obj424590
}();
var system_424592 = chaperone.core.create_system.call(null, "localhost", 8080);
var ws_system_424593 = chaperone.websocket.sub_system.call(null, system_424592);
var ws_chan_424594 = (new cljs.core.Keyword(null, "request-chan", "request-chan", 2270492482)).cljs$core$IFn$_invoke$arity$1(ws_system_424593);
var rpc_map_424595 = (new cljs.core.Keyword(null, "rpc-map", "rpc-map", 2409450726)).cljs$core$IFn$_invoke$arity$1(ws_system_424593);
describe("Websocket RPC (Not started)", function() {
  it("Should take a RPC request, put it in the websocket channel, and setup the response channel handler", function() {
    var request = chaperone.crossover.rpc.new_request.call(null, new cljs.core.Keyword(null, "request-category", "request-category", 2279649774), new cljs.core.Keyword(null, "request-action", "request-action", 1648081574), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "key", "key", 1014010321), "value"], null));
    var result = cljs.core.atom.call(null, false);
    cljs.core.async.take_BANG_.call(null, ws_chan_424594, function(p1__424588_SHARP_) {
      return cljs.core.reset_BANG_.call(null, result, p1__424588_SHARP_)
    });
    runs(function() {
      return chaperone.websocket.send_BANG_.call(null, ws_system_424593, request)
    });
    waitsFor(function() {
      return cljs.core.deref.call(null, result)
    }, "No value placed in Websocket channel", 1E3);
    return runs(function() {
      return expect(cljs.core.contains_QMARK_.call(null, cljs.core.deref.call(null, rpc_map_424595), (new cljs.core.Keyword(null, "id", "id", 1013907597)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, result)))).toSatisfy(true, "(contains? (clojure.core/deref rpc-map) (:id (clojure.core/deref result)))", "true")
    })
  });
  return null
});
var spec_424598 = function() {
  var obj424597 = {};
  return obj424597
}();
var system_424599 = chaperone.core.create_system.call(null, "localhost", 8080);
var ws_system_424600 = chaperone.websocket.sub_system.call(null, system_424599);
var ws_chan_424601 = (new cljs.core.Keyword(null, "request-chan", "request-chan", 2270492482)).cljs$core$IFn$_invoke$arity$1(ws_system_424600);
var rpc_map_424602 = (new cljs.core.Keyword(null, "rpc-map", "rpc-map", 2409450726)).cljs$core$IFn$_invoke$arity$1(ws_system_424600);
var response_chan_424603 = (new cljs.core.Keyword(null, "response-chan", "response-chan", 2643989712)).cljs$core$IFn$_invoke$arity$1(ws_system_424600);
describe("Websocket RPC (Started)", function() {
  chaperone.websocket.start_BANG_.call(null, system_424599);
  it("Should send back a response on the returned request channel, when a response is sent back", function() {
    var request = chaperone.crossover.rpc.new_request.call(null, new cljs.core.Keyword(null, "thing", "thing", 1124235360), new cljs.core.Keyword(null, "do-thing", "do-thing", 4623549598), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "key", "key", 1014010321), "value"], null));
    var ws_complete = cljs.core.atom.call(null, false);
    var response = chaperone.crossover.rpc.new_response.call(null, request, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "data", "data", 1016980252), "oooer"], null));
    var response_result = cljs.core.atom.call(null, false);
    cljs.core.async.take_BANG_.call(null, ws_chan_424601, function(v) {
      return cljs.core.reset_BANG_.call(null, ws_complete, v)
    });
    runs(function() {
      return cljs.core.async.take_BANG_.call(null, chaperone.websocket.send_BANG_.call(null, ws_system_424600, request), function(v) {
        return cljs.core.reset_BANG_.call(null, response_result, v)
      })
    });
    waitsFor(function() {
      return cljs.core.deref.call(null, ws_complete)
    }, "No value placed in Websocket channel", 1E3);
    runs(function() {
      return cljs.core.async.put_BANG_.call(null, response_chan_424603, cljs.core.prn_str.call(null, response))
    });
    waitsFor(function() {
      return cljs.core.deref.call(null, response_result)
    }, "No value returned on RPC's channel", 1E3);
    return runs(function() {
      expect(cljs.core._EQ_.call(null, (new cljs.core.Keyword(null, "request", "request", 2109597185)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, response_result)), request)).toSatisfy(true, "(= (-> (clojure.core/deref response-result) :request) request)", "true");
      return expect(cljs.core._EQ_.call(null, (new cljs.core.Keyword(null, "data", "data", 1016980252)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, response_result)), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "data", "data", 1016980252), "oooer"], null))).toSatisfy(true, '(= (:data (clojure.core/deref response-result)) {:data "oooer"})', "true")
    })
  });
  return null
});
goog.provide("chaperone.ng.core_test");
goog.require("cljs.core");
goog.require("purnam.native$");
goog.require("purnam.native$");
goog.require("chaperone.ng.core");
goog.require("chaperone.ng.core");
beforeEach(function() {
  var obj_SHARP_ = purnam.native$.aget_in.call(null, this, cljs.core.PersistentVector.EMPTY);
  var fn_SHARP_ = obj_SHARP_["addMatchers"];
  return fn_SHARP_.call(obj_SHARP_, function() {
    var G__424604 = function() {
      var obj424607 = {};
      return obj424607
    }();
    G__424604["toSatisfy"] = function(expected, tactual, texpected) {
      var actual = purnam.native$.aget_in.call(null, this, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["actual"], null));
      var actualText = [cljs.core.str(actual)].join("");
      var actualText__$1 = cljs.core._EQ_.call(null, actualText, "[object Object]") ? function() {
        var ks = function() {
          var obj_SHARP___$1 = purnam.native$.aget_in.call(null, goog, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["object"], null));
          var fn_SHARP___$1 = obj_SHARP___$1["getKeys"];
          return fn_SHARP___$1.call(obj_SHARP___$1, actual)
        }();
        var vs = function() {
          var obj_SHARP___$1 = purnam.native$.aget_in.call(null, goog, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["object"], null));
          var fn_SHARP___$1 = obj_SHARP___$1["getValues"];
          return fn_SHARP___$1.call(obj_SHARP___$1, actual)
        }();
        return cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, cljs.core.map.call(null, function(ks, vs, actual, actualText) {
          return function(x, y) {
            return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [x, y], null)
          }
        }(ks, vs, actual, actualText), ks, vs))
      }() : actualText;
      var notText = cljs.core.truth_(purnam.native$.aget_in.call(null, this, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["isNot"], null))) ? "Not " : "";
      this["message"] = function() {
        return[cljs.core.str("Expression: "), cljs.core.str(tactual), cljs.core.str("\n  Expected: "), cljs.core.str(notText), cljs.core.str(texpected), cljs.core.str("\n  Actual: "), cljs.core.str(actualText__$1)].join("")
      };
      if(cljs.core._EQ_.call(null, function() {
        var obj_SHARP___$1 = purnam.native$.aget_in.call(null, goog, cljs.core.PersistentVector.EMPTY);
        var fn_SHARP___$1 = obj_SHARP___$1["typeOf"];
        return fn_SHARP___$1.call(obj_SHARP___$1, expected)
      }(), "array")) {
        return purnam.native$.js_equals.call(null, expected, actual)
      }else {
        if(cljs.core.fn_QMARK_.call(null, expected)) {
          return expected.call(null, actual)
        }else {
          if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
            var or__3285__auto__ = cljs.core._EQ_.call(null, expected, actual);
            if(or__3285__auto__) {
              return or__3285__auto__
            }else {
              return purnam.native$.js_equals.call(null, expected, actual)
            }
          }else {
            return null
          }
        }
      }
    };
    return G__424604
  }())
});
var spec_424610 = function() {
  var obj424609 = {};
  return obj424609
}();
describe("Test the System service factory", function() {
  beforeEach(module("chaperone.app"));
  beforeEach(inject(["System", function(System) {
    return spec_424610["System"] = System
  }]));
  it("Should be a map", function() {
    return expect(cljs.core.map_QMARK_.call(null, purnam.native$.aget_in.call(null, spec_424610, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["System"], null)))).toSatisfy(true, '(map? (purnam.native/aget-in spec ["System"]))', "true")
  });
  it("Should have a websocket key", function() {
    return expect(cljs.core.contains_QMARK_.call(null, purnam.native$.aget_in.call(null, spec_424610, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["System"], null)), new cljs.core.Keyword(null, "websocket", "websocket", 784338745))).toSatisfy(true, '(contains? (purnam.native/aget-in spec ["System"]) :websocket)', "true")
  });
  return null
});
goog.provide("chaperone.core_test");
goog.require("cljs.core");
goog.require("purnam.native$");
goog.require("chaperone.core");
goog.require("chaperone.core");
goog.require("purnam.native$");
var spec_424584 = function() {
  var obj424583 = {};
  return obj424583
}();
describe("Create the system", function() {
  it("Should return a map", function() {
    return expect(true).toSatisfy(cljs.core.map_QMARK_.call(null, chaperone.core.create_system.call(null, "localhost", 80)), "true", '(map? (create-system "localhost" 80))')
  });
  return null
});

//# sourceMappingURL=main.js.map